//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/functions/FunctionsBundle.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/ClassNotFoundException.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "org/oss/pdfreporter/engine/JRRuntimeException.h"
#include "org/oss/pdfreporter/engine/util/JRClassLoader.h"
#include "org/oss/pdfreporter/functions/FunctionsBundle.h"

@interface OrgOssPdfreporterFunctionsFunctionsBundle () {
 @public
  id<JavaUtilList> functionClasses_;
}

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterFunctionsFunctionsBundle, functionClasses_, id<JavaUtilList>)

@implementation OrgOssPdfreporterFunctionsFunctionsBundle

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)functionClassNames {
  OrgOssPdfreporterFunctionsFunctionsBundle_initWithJavaUtilList_(self, functionClassNames);
  return self;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterFunctionsFunctionsBundle_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)addFunctionClassWithIOSClass:(IOSClass *)clazz {
  [((id<JavaUtilList>) nil_chk(functionClasses_)) addWithId:clazz];
}

- (void)addFunctionClassWithNSString:(NSString *)className_ {
  @try {
    IOSClass *clazz = OrgOssPdfreporterEngineUtilJRClassLoader_loadClassForNameWithNSString_(className_);
    [self addFunctionClassWithIOSClass:clazz];
  }
  @catch (JavaLangClassNotFoundException *e) {
    @throw new_OrgOssPdfreporterEngineJRRuntimeException_initWithNSException_(e);
  }
}

- (id<JavaUtilList>)getFunctionClasses {
  return functionClasses_;
}

- (void)setFunctionClassesWithJavaUtilList:(id<JavaUtilList>)functionClasses {
  self->functionClasses_ = functionClasses;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaUtilList:", "FunctionsBundle", NULL, 0x1, NULL, "(Ljava/util/List<Ljava/lang/String;>;)V" },
    { "init", "FunctionsBundle", NULL, 0x1, NULL, NULL },
    { "addFunctionClassWithIOSClass:", "addFunctionClass", "V", 0x1, NULL, "(Ljava/lang/Class<*>;)V" },
    { "addFunctionClassWithNSString:", "addFunctionClass", "V", 0x1, NULL, NULL },
    { "getFunctionClasses", NULL, "Ljava.util.List;", 0x1, NULL, "()Ljava/util/List<Ljava/lang/Class<*>;>;" },
    { "setFunctionClassesWithJavaUtilList:", "setFunctionClasses", "V", 0x1, NULL, "(Ljava/util/List<Ljava/lang/Class<*>;>;)V" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "functionClasses_", NULL, 0x2, "Ljava.util.List;", NULL, "Ljava/util/List<Ljava/lang/Class<*>;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterFunctionsFunctionsBundle = { 2, "FunctionsBundle", "org.oss.pdfreporter.functions", NULL, 0x1, 6, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterFunctionsFunctionsBundle;
}

@end

void OrgOssPdfreporterFunctionsFunctionsBundle_initWithJavaUtilList_(OrgOssPdfreporterFunctionsFunctionsBundle *self, id<JavaUtilList> functionClassNames) {
  NSObject_init(self);
  self->functionClasses_ = new_JavaUtilArrayList_init();
  for (NSString * __strong className_ in nil_chk(functionClassNames)) {
    [self addFunctionClassWithNSString:className_];
  }
}

OrgOssPdfreporterFunctionsFunctionsBundle *new_OrgOssPdfreporterFunctionsFunctionsBundle_initWithJavaUtilList_(id<JavaUtilList> functionClassNames) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterFunctionsFunctionsBundle, initWithJavaUtilList_, functionClassNames)
}

OrgOssPdfreporterFunctionsFunctionsBundle *create_OrgOssPdfreporterFunctionsFunctionsBundle_initWithJavaUtilList_(id<JavaUtilList> functionClassNames) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterFunctionsFunctionsBundle, initWithJavaUtilList_, functionClassNames)
}

void OrgOssPdfreporterFunctionsFunctionsBundle_init(OrgOssPdfreporterFunctionsFunctionsBundle *self) {
  NSObject_init(self);
  self->functionClasses_ = new_JavaUtilArrayList_init();
}

OrgOssPdfreporterFunctionsFunctionsBundle *new_OrgOssPdfreporterFunctionsFunctionsBundle_init() {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterFunctionsFunctionsBundle, init)
}

OrgOssPdfreporterFunctionsFunctionsBundle *create_OrgOssPdfreporterFunctionsFunctionsBundle_init() {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterFunctionsFunctionsBundle, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterFunctionsFunctionsBundle)
