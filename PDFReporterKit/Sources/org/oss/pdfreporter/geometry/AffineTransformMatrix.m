//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-portable/src/org/oss/pdfreporter/geometry/AffineTransformMatrix.java
//

#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/oss/pdfreporter/geometry/AffineTransformMatrix.h"
#include "org/oss/pdfreporter/geometry/factory/IGeometryFactory.h"

@interface OrgOssPdfreporterGeometryAffineTransformMatrix () {
 @public
  IOSObjectArray *m_;
}

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterGeometryAffineTransformMatrix, m_, IOSObjectArray *)

@implementation OrgOssPdfreporterGeometryAffineTransformMatrix

- (instancetype)initWithFloat:(jfloat)m00
                    withFloat:(jfloat)m01
                    withFloat:(jfloat)m02
                    withFloat:(jfloat)m10
                    withFloat:(jfloat)m11
                    withFloat:(jfloat)m12 {
  OrgOssPdfreporterGeometryAffineTransformMatrix_initWithFloat_withFloat_withFloat_withFloat_withFloat_withFloat_(self, m00, m01, m02, m10, m11, m12);
  return self;
}

- (jfloat)getM00 {
  return IOSFloatArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(m_), 0)), 0);
}

- (jfloat)getM01 {
  return IOSFloatArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(m_), 0)), 1);
}

- (jfloat)getM02 {
  return IOSFloatArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(m_), 0)), 2);
}

- (jfloat)getM10 {
  return IOSFloatArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(m_), 1)), 0);
}

- (jfloat)getM11 {
  return IOSFloatArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(m_), 1)), 1);
}

- (jfloat)getM12 {
  return IOSFloatArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(m_), 1)), 2);
}

+ (OrgOssPdfreporterGeometryAffineTransformMatrix *)getInstanceWithFloat:(jfloat)x
                                                               withFloat:(jfloat)y
           withOrgOssPdfreporterGeometryFactoryIGeometryFactory_Rotate90:(OrgOssPdfreporterGeometryFactoryIGeometryFactory_Rotate90 *)angle {
  return OrgOssPdfreporterGeometryAffineTransformMatrix_getInstanceWithFloat_withFloat_withOrgOssPdfreporterGeometryFactoryIGeometryFactory_Rotate90_(x, y, angle);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithFloat:withFloat:withFloat:withFloat:withFloat:withFloat:", "AffineTransformMatrix", NULL, 0x0, NULL, NULL },
    { "getM00", NULL, "F", 0x1, NULL, NULL },
    { "getM01", NULL, "F", 0x1, NULL, NULL },
    { "getM02", NULL, "F", 0x1, NULL, NULL },
    { "getM10", NULL, "F", 0x1, NULL, NULL },
    { "getM11", NULL, "F", 0x1, NULL, NULL },
    { "getM12", NULL, "F", 0x1, NULL, NULL },
    { "getInstanceWithFloat:withFloat:withOrgOssPdfreporterGeometryFactoryIGeometryFactory_Rotate90:", "getInstance", "Lorg.oss.pdfreporter.geometry.AffineTransformMatrix;", 0x8, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "m_", NULL, 0x12, "[[F", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterGeometryAffineTransformMatrix = { 2, "AffineTransformMatrix", "org.oss.pdfreporter.geometry", NULL, 0x1, 8, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterGeometryAffineTransformMatrix;
}

@end

void OrgOssPdfreporterGeometryAffineTransformMatrix_initWithFloat_withFloat_withFloat_withFloat_withFloat_withFloat_(OrgOssPdfreporterGeometryAffineTransformMatrix *self, jfloat m00, jfloat m01, jfloat m02, jfloat m10, jfloat m11, jfloat m12) {
  NSObject_init(self);
  self->m_ = [IOSFloatArray newArrayWithDimensions:2 lengths:(jint[]){ 2, 3 }];
  *IOSFloatArray_GetRef(nil_chk(IOSObjectArray_Get(self->m_, 0)), 0) = m00;
  *IOSFloatArray_GetRef(nil_chk(IOSObjectArray_Get(self->m_, 0)), 1) = m01;
  *IOSFloatArray_GetRef(nil_chk(IOSObjectArray_Get(self->m_, 0)), 2) = m02;
  *IOSFloatArray_GetRef(nil_chk(IOSObjectArray_Get(self->m_, 1)), 0) = m10;
  *IOSFloatArray_GetRef(nil_chk(IOSObjectArray_Get(self->m_, 1)), 1) = m11;
  *IOSFloatArray_GetRef(nil_chk(IOSObjectArray_Get(self->m_, 1)), 2) = m12;
}

OrgOssPdfreporterGeometryAffineTransformMatrix *new_OrgOssPdfreporterGeometryAffineTransformMatrix_initWithFloat_withFloat_withFloat_withFloat_withFloat_withFloat_(jfloat m00, jfloat m01, jfloat m02, jfloat m10, jfloat m11, jfloat m12) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterGeometryAffineTransformMatrix, initWithFloat_withFloat_withFloat_withFloat_withFloat_withFloat_, m00, m01, m02, m10, m11, m12)
}

OrgOssPdfreporterGeometryAffineTransformMatrix *create_OrgOssPdfreporterGeometryAffineTransformMatrix_initWithFloat_withFloat_withFloat_withFloat_withFloat_withFloat_(jfloat m00, jfloat m01, jfloat m02, jfloat m10, jfloat m11, jfloat m12) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterGeometryAffineTransformMatrix, initWithFloat_withFloat_withFloat_withFloat_withFloat_withFloat_, m00, m01, m02, m10, m11, m12)
}

OrgOssPdfreporterGeometryAffineTransformMatrix *OrgOssPdfreporterGeometryAffineTransformMatrix_getInstanceWithFloat_withFloat_withOrgOssPdfreporterGeometryFactoryIGeometryFactory_Rotate90_(jfloat x, jfloat y, OrgOssPdfreporterGeometryFactoryIGeometryFactory_Rotate90 *angle) {
  OrgOssPdfreporterGeometryAffineTransformMatrix_initialize();
  jfloat m00 = 1;
  jfloat m01 = 0;
  jfloat m02 = x;
  jfloat m10 = 0;
  jfloat m11 = 1;
  jfloat m12 = y;
  jfloat M0 = m00;
  switch ([angle ordinal]) {
    case OrgOssPdfreporterGeometryFactoryIGeometryFactory_Rotate90_Enum_DEGREE_90:
    m00 = m01;
    m01 = -M0;
    M0 = m10;
    m10 = m11;
    m11 = -M0;
    m02 = -y * m01 + m02;
    m12 = -x * m10 + m12;
    break;
    case OrgOssPdfreporterGeometryFactoryIGeometryFactory_Rotate90_Enum_DEGREE_180:
    m00 = -m00;
    m11 = -m11;
    m02 = -x * m00 + m02;
    m12 = -y * m11 + m12;
    break;
    case OrgOssPdfreporterGeometryFactoryIGeometryFactory_Rotate90_Enum_DEGREE_270:
    m00 = -m01;
    m01 = M0;
    M0 = m10;
    m10 = -m11;
    m11 = M0;
    m02 = -y * m01 + m02;
    m12 = -x * m10 + m12;
    break;
    case OrgOssPdfreporterGeometryFactoryIGeometryFactory_Rotate90_Enum_DEGREE_360:
    ;
  }
  return new_OrgOssPdfreporterGeometryAffineTransformMatrix_initWithFloat_withFloat_withFloat_withFloat_withFloat_withFloat_(m00, m01, m02, m10, m11, m12);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterGeometryAffineTransformMatrix)
