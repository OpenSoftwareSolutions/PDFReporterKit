//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-portable/src/org/oss/pdfreporter/geometry/Stroke.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/oss/pdfreporter/geometry/Stroke.h"

@interface OrgOssPdfreporterGeometryStroke () {
 @public
  jfloat dashPhase_;
  IOSFloatArray *dashArray_;
  jfloat lineWidth_;
  jfloat miterLimit_;
  jint lineJoin_;
  jint endCap_;
}

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterGeometryStroke, dashArray_, IOSFloatArray *)

@implementation OrgOssPdfreporterGeometryStroke

- (instancetype)initWithFloat:(jfloat)width
                      withInt:(jint)cap
                      withInt:(jint)join
                    withFloat:(jfloat)miterlimit
               withFloatArray:(IOSFloatArray *)dash
                    withFloat:(jfloat)dash_phase {
  OrgOssPdfreporterGeometryStroke_initWithFloat_withInt_withInt_withFloat_withFloatArray_withFloat_(self, width, cap, join, miterlimit, dash, dash_phase);
  return self;
}

- (instancetype)initWithFloat:(jfloat)width
                      withInt:(jint)cap
                      withInt:(jint)join {
  OrgOssPdfreporterGeometryStroke_initWithFloat_withInt_withInt_(self, width, cap, join);
  return self;
}

- (jfloat)getDashPhase {
  return dashPhase_;
}

- (IOSFloatArray *)getDashArray {
  return dashArray_;
}

- (jfloat)getLineWidth {
  return lineWidth_;
}

- (jfloat)getMiterLimit {
  return miterLimit_;
}

- (jint)getLineJoin {
  return lineJoin_;
}

- (jint)getEndCap {
  return endCap_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithFloat:withInt:withInt:withFloat:withFloatArray:withFloat:", "Stroke", NULL, 0x1, NULL, NULL },
    { "initWithFloat:withInt:withInt:", "Stroke", NULL, 0x1, NULL, NULL },
    { "getDashPhase", NULL, "F", 0x1, NULL, NULL },
    { "getDashArray", NULL, "[F", 0x1, NULL, NULL },
    { "getLineWidth", NULL, "F", 0x1, NULL, NULL },
    { "getMiterLimit", NULL, "F", 0x1, NULL, NULL },
    { "getLineJoin", NULL, "I", 0x1, NULL, NULL },
    { "getEndCap", NULL, "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "dashPhase_", NULL, 0x12, "F", NULL, NULL, .constantValue.asLong = 0 },
    { "dashArray_", NULL, 0x12, "[F", NULL, NULL, .constantValue.asLong = 0 },
    { "lineWidth_", NULL, 0x12, "F", NULL, NULL, .constantValue.asLong = 0 },
    { "miterLimit_", NULL, 0x12, "F", NULL, NULL, .constantValue.asLong = 0 },
    { "lineJoin_", NULL, 0x12, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "endCap_", NULL, 0x12, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterGeometryStroke = { 2, "Stroke", "org.oss.pdfreporter.geometry", NULL, 0x1, 8, methods, 6, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterGeometryStroke;
}

@end

void OrgOssPdfreporterGeometryStroke_initWithFloat_withInt_withInt_withFloat_withFloatArray_withFloat_(OrgOssPdfreporterGeometryStroke *self, jfloat width, jint cap, jint join, jfloat miterlimit, IOSFloatArray *dash, jfloat dash_phase) {
  NSObject_init(self);
  self->lineWidth_ = width;
  self->endCap_ = cap;
  self->lineJoin_ = join;
  self->miterLimit_ = miterlimit;
  self->dashArray_ = dash;
  self->dashPhase_ = dash_phase;
}

OrgOssPdfreporterGeometryStroke *new_OrgOssPdfreporterGeometryStroke_initWithFloat_withInt_withInt_withFloat_withFloatArray_withFloat_(jfloat width, jint cap, jint join, jfloat miterlimit, IOSFloatArray *dash, jfloat dash_phase) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterGeometryStroke, initWithFloat_withInt_withInt_withFloat_withFloatArray_withFloat_, width, cap, join, miterlimit, dash, dash_phase)
}

OrgOssPdfreporterGeometryStroke *create_OrgOssPdfreporterGeometryStroke_initWithFloat_withInt_withInt_withFloat_withFloatArray_withFloat_(jfloat width, jint cap, jint join, jfloat miterlimit, IOSFloatArray *dash, jfloat dash_phase) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterGeometryStroke, initWithFloat_withInt_withInt_withFloat_withFloatArray_withFloat_, width, cap, join, miterlimit, dash, dash_phase)
}

void OrgOssPdfreporterGeometryStroke_initWithFloat_withInt_withInt_(OrgOssPdfreporterGeometryStroke *self, jfloat width, jint cap, jint join) {
  OrgOssPdfreporterGeometryStroke_initWithFloat_withInt_withInt_withFloat_withFloatArray_withFloat_(self, width, cap, join, 10.0f, nil, 0.0f);
}

OrgOssPdfreporterGeometryStroke *new_OrgOssPdfreporterGeometryStroke_initWithFloat_withInt_withInt_(jfloat width, jint cap, jint join) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterGeometryStroke, initWithFloat_withInt_withInt_, width, cap, join)
}

OrgOssPdfreporterGeometryStroke *create_OrgOssPdfreporterGeometryStroke_initWithFloat_withInt_withInt_(jfloat width, jint cap, jint join) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterGeometryStroke, initWithFloat_withInt_withInt_, width, cap, join)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterGeometryStroke)
