//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/sql/factory/DateUtil.java
//

#include "J2ObjC_source.h"
#include "java/util/Calendar.h"
#include "java/util/Date.h"
#include "org/oss/pdfreporter/sql/factory/DateUtil.h"

@interface OrgOssPdfreporterSqlFactoryDateUtil ()

+ (void)setTimeWithJavaUtilCalendar:(JavaUtilCalendar *)cal
                            withInt:(jint)hour
                            withInt:(jint)minute
                            withInt:(jint)second;

+ (void)setDateWithJavaUtilCalendar:(JavaUtilCalendar *)cal
                            withInt:(jint)year
                            withInt:(jint)month
                            withInt:(jint)day;

@end

__attribute__((unused)) static void OrgOssPdfreporterSqlFactoryDateUtil_setTimeWithJavaUtilCalendar_withInt_withInt_withInt_(JavaUtilCalendar *cal, jint hour, jint minute, jint second);

__attribute__((unused)) static void OrgOssPdfreporterSqlFactoryDateUtil_setDateWithJavaUtilCalendar_withInt_withInt_withInt_(JavaUtilCalendar *cal, jint year, jint month, jint day);

@implementation OrgOssPdfreporterSqlFactoryDateUtil

+ (JavaUtilCalendar *)getCalendarWithJavaUtilDate:(JavaUtilDate *)date {
  return OrgOssPdfreporterSqlFactoryDateUtil_getCalendarWithJavaUtilDate_(date);
}

+ (JavaUtilDate *)getTimeWithInt:(jint)hour
                         withInt:(jint)minute
                         withInt:(jint)second {
  return OrgOssPdfreporterSqlFactoryDateUtil_getTimeWithInt_withInt_withInt_(hour, minute, second);
}

+ (JavaUtilDate *)getDateWithInt:(jint)year
                         withInt:(jint)month
                         withInt:(jint)day {
  return OrgOssPdfreporterSqlFactoryDateUtil_getDateWithInt_withInt_withInt_(year, month, day);
}

+ (JavaUtilDate *)getDateTimeWithInt:(jint)year
                             withInt:(jint)month
                             withInt:(jint)day
                             withInt:(jint)hour
                             withInt:(jint)minute
                             withInt:(jint)second {
  return OrgOssPdfreporterSqlFactoryDateUtil_getDateTimeWithInt_withInt_withInt_withInt_withInt_withInt_(year, month, day, hour, minute, second);
}

+ (JavaUtilDate *)getTimestampWithInt:(jint)year
                              withInt:(jint)month
                              withInt:(jint)day
                              withInt:(jint)hour
                              withInt:(jint)minute
                              withInt:(jint)second
                              withInt:(jint)millisecond {
  return OrgOssPdfreporterSqlFactoryDateUtil_getTimestampWithInt_withInt_withInt_withInt_withInt_withInt_withInt_(year, month, day, hour, minute, second, millisecond);
}

+ (void)setTimeWithJavaUtilCalendar:(JavaUtilCalendar *)cal
                            withInt:(jint)hour
                            withInt:(jint)minute
                            withInt:(jint)second {
  OrgOssPdfreporterSqlFactoryDateUtil_setTimeWithJavaUtilCalendar_withInt_withInt_withInt_(cal, hour, minute, second);
}

+ (void)setDateWithJavaUtilCalendar:(JavaUtilCalendar *)cal
                            withInt:(jint)year
                            withInt:(jint)month
                            withInt:(jint)day {
  OrgOssPdfreporterSqlFactoryDateUtil_setDateWithJavaUtilCalendar_withInt_withInt_withInt_(cal, year, month, day);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterSqlFactoryDateUtil_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getCalendarWithJavaUtilDate:", "getCalendar", "Ljava.util.Calendar;", 0x8, NULL, NULL },
    { "getTimeWithInt:withInt:withInt:", "getTime", "Ljava.util.Date;", 0x8, NULL, NULL },
    { "getDateWithInt:withInt:withInt:", "getDate", "Ljava.util.Date;", 0x8, NULL, NULL },
    { "getDateTimeWithInt:withInt:withInt:withInt:withInt:withInt:", "getDateTime", "Ljava.util.Date;", 0x8, NULL, NULL },
    { "getTimestampWithInt:withInt:withInt:withInt:withInt:withInt:withInt:", "getTimestamp", "Ljava.util.Date;", 0x8, NULL, NULL },
    { "setTimeWithJavaUtilCalendar:withInt:withInt:withInt:", "setTime", "V", 0xa, NULL, NULL },
    { "setDateWithJavaUtilCalendar:withInt:withInt:withInt:", "setDate", "V", 0xa, NULL, NULL },
    { "init", "DateUtil", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterSqlFactoryDateUtil = { 2, "DateUtil", "org.oss.pdfreporter.sql.factory", NULL, 0x0, 8, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterSqlFactoryDateUtil;
}

@end

JavaUtilCalendar *OrgOssPdfreporterSqlFactoryDateUtil_getCalendarWithJavaUtilDate_(JavaUtilDate *date) {
  OrgOssPdfreporterSqlFactoryDateUtil_initialize();
  JavaUtilCalendar *cal = JavaUtilCalendar_getInstance();
  [((JavaUtilCalendar *) nil_chk(cal)) setTimeWithJavaUtilDate:date];
  return cal;
}

JavaUtilDate *OrgOssPdfreporterSqlFactoryDateUtil_getTimeWithInt_withInt_withInt_(jint hour, jint minute, jint second) {
  OrgOssPdfreporterSqlFactoryDateUtil_initialize();
  JavaUtilCalendar *cal = JavaUtilCalendar_getInstance();
  [((JavaUtilCalendar *) nil_chk(cal)) clear];
  OrgOssPdfreporterSqlFactoryDateUtil_setTimeWithJavaUtilCalendar_withInt_withInt_withInt_(cal, hour, minute, second);
  return [cal getTime];
}

JavaUtilDate *OrgOssPdfreporterSqlFactoryDateUtil_getDateWithInt_withInt_withInt_(jint year, jint month, jint day) {
  OrgOssPdfreporterSqlFactoryDateUtil_initialize();
  JavaUtilCalendar *cal = JavaUtilCalendar_getInstance();
  [((JavaUtilCalendar *) nil_chk(cal)) clear];
  OrgOssPdfreporterSqlFactoryDateUtil_setDateWithJavaUtilCalendar_withInt_withInt_withInt_(cal, year, month, day);
  return [cal getTime];
}

JavaUtilDate *OrgOssPdfreporterSqlFactoryDateUtil_getDateTimeWithInt_withInt_withInt_withInt_withInt_withInt_(jint year, jint month, jint day, jint hour, jint minute, jint second) {
  OrgOssPdfreporterSqlFactoryDateUtil_initialize();
  JavaUtilCalendar *cal = JavaUtilCalendar_getInstance();
  [((JavaUtilCalendar *) nil_chk(cal)) clear];
  OrgOssPdfreporterSqlFactoryDateUtil_setDateWithJavaUtilCalendar_withInt_withInt_withInt_(cal, year, month, day);
  OrgOssPdfreporterSqlFactoryDateUtil_setTimeWithJavaUtilCalendar_withInt_withInt_withInt_(cal, hour, minute, second);
  return [cal getTime];
}

JavaUtilDate *OrgOssPdfreporterSqlFactoryDateUtil_getTimestampWithInt_withInt_withInt_withInt_withInt_withInt_withInt_(jint year, jint month, jint day, jint hour, jint minute, jint second, jint millisecond) {
  OrgOssPdfreporterSqlFactoryDateUtil_initialize();
  JavaUtilCalendar *cal = JavaUtilCalendar_getInstance();
  [((JavaUtilCalendar *) nil_chk(cal)) clear];
  OrgOssPdfreporterSqlFactoryDateUtil_setDateWithJavaUtilCalendar_withInt_withInt_withInt_(cal, year, month, day);
  OrgOssPdfreporterSqlFactoryDateUtil_setTimeWithJavaUtilCalendar_withInt_withInt_withInt_(cal, hour, minute, second);
  [cal setWithInt:JavaUtilCalendar_MILLISECOND withInt:millisecond];
  return [cal getTime];
}

void OrgOssPdfreporterSqlFactoryDateUtil_setTimeWithJavaUtilCalendar_withInt_withInt_withInt_(JavaUtilCalendar *cal, jint hour, jint minute, jint second) {
  OrgOssPdfreporterSqlFactoryDateUtil_initialize();
  [((JavaUtilCalendar *) nil_chk(cal)) setWithInt:JavaUtilCalendar_HOUR_OF_DAY withInt:hour];
  [cal setWithInt:JavaUtilCalendar_MINUTE withInt:minute];
  [cal setWithInt:JavaUtilCalendar_SECOND withInt:second];
}

void OrgOssPdfreporterSqlFactoryDateUtil_setDateWithJavaUtilCalendar_withInt_withInt_withInt_(JavaUtilCalendar *cal, jint year, jint month, jint day) {
  OrgOssPdfreporterSqlFactoryDateUtil_initialize();
  [((JavaUtilCalendar *) nil_chk(cal)) setWithInt:JavaUtilCalendar_YEAR withInt:year];
  [cal setWithInt:JavaUtilCalendar_MONTH withInt:month - 1];
  [cal setWithInt:JavaUtilCalendar_DATE withInt:day];
}

void OrgOssPdfreporterSqlFactoryDateUtil_init(OrgOssPdfreporterSqlFactoryDateUtil *self) {
  NSObject_init(self);
}

OrgOssPdfreporterSqlFactoryDateUtil *new_OrgOssPdfreporterSqlFactoryDateUtil_init() {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterSqlFactoryDateUtil, init)
}

OrgOssPdfreporterSqlFactoryDateUtil *create_OrgOssPdfreporterSqlFactoryDateUtil_init() {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterSqlFactoryDateUtil, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterSqlFactoryDateUtil)
