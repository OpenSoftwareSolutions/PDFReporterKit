//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/sql/factory/DateImpl.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgOssPdfreporterSqlFactoryDateImpl")
#ifdef RESTRICT_OrgOssPdfreporterSqlFactoryDateImpl
#define INCLUDE_ALL_OrgOssPdfreporterSqlFactoryDateImpl 0
#else
#define INCLUDE_ALL_OrgOssPdfreporterSqlFactoryDateImpl 1
#endif
#undef RESTRICT_OrgOssPdfreporterSqlFactoryDateImpl

#if !defined (OrgOssPdfreporterSqlFactoryDateImpl_) && (INCLUDE_ALL_OrgOssPdfreporterSqlFactoryDateImpl || defined(INCLUDE_OrgOssPdfreporterSqlFactoryDateImpl))
#define OrgOssPdfreporterSqlFactoryDateImpl_

#define RESTRICT_OrgOssPdfreporterSqlIDate 1
#define INCLUDE_OrgOssPdfreporterSqlIDate 1
#include "org/oss/pdfreporter/sql/IDate.h"

@class JavaUtilCalendar;
@class JavaUtilDate;

@interface OrgOssPdfreporterSqlFactoryDateImpl : NSObject < OrgOssPdfreporterSqlIDate >

#pragma mark Public

- (JavaUtilDate *)getDate;

- (jint)getDay;

- (jint)getMonth;

- (jint)getYear;

#pragma mark Package-Private

- (instancetype)initWithJavaUtilCalendar:(JavaUtilCalendar *)date;

- (instancetype)initWithJavaUtilDate:(JavaUtilDate *)date;

- (instancetype)initWithInt:(jint)year
                    withInt:(jint)month
                    withInt:(jint)day;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgOssPdfreporterSqlFactoryDateImpl)

FOUNDATION_EXPORT void OrgOssPdfreporterSqlFactoryDateImpl_initWithInt_withInt_withInt_(OrgOssPdfreporterSqlFactoryDateImpl *self, jint year, jint month, jint day);

FOUNDATION_EXPORT OrgOssPdfreporterSqlFactoryDateImpl *new_OrgOssPdfreporterSqlFactoryDateImpl_initWithInt_withInt_withInt_(jint year, jint month, jint day) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgOssPdfreporterSqlFactoryDateImpl *create_OrgOssPdfreporterSqlFactoryDateImpl_initWithInt_withInt_withInt_(jint year, jint month, jint day);

FOUNDATION_EXPORT void OrgOssPdfreporterSqlFactoryDateImpl_initWithJavaUtilDate_(OrgOssPdfreporterSqlFactoryDateImpl *self, JavaUtilDate *date);

FOUNDATION_EXPORT OrgOssPdfreporterSqlFactoryDateImpl *new_OrgOssPdfreporterSqlFactoryDateImpl_initWithJavaUtilDate_(JavaUtilDate *date) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgOssPdfreporterSqlFactoryDateImpl *create_OrgOssPdfreporterSqlFactoryDateImpl_initWithJavaUtilDate_(JavaUtilDate *date);

FOUNDATION_EXPORT void OrgOssPdfreporterSqlFactoryDateImpl_initWithJavaUtilCalendar_(OrgOssPdfreporterSqlFactoryDateImpl *self, JavaUtilCalendar *date);

FOUNDATION_EXPORT OrgOssPdfreporterSqlFactoryDateImpl *new_OrgOssPdfreporterSqlFactoryDateImpl_initWithJavaUtilCalendar_(JavaUtilCalendar *date) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgOssPdfreporterSqlFactoryDateImpl *create_OrgOssPdfreporterSqlFactoryDateImpl_initWithJavaUtilCalendar_(JavaUtilCalendar *date);

J2OBJC_TYPE_LITERAL_HEADER(OrgOssPdfreporterSqlFactoryDateImpl)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgOssPdfreporterSqlFactoryDateImpl")
