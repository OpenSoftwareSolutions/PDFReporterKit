//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/sql/factory/TimestampImpl.java
//

#include "J2ObjC_source.h"
#include "java/util/Date.h"
#include "org/oss/pdfreporter/sql/factory/TimestampImpl.h"

@interface OrgOssPdfreporterSqlFactoryTimestampImpl () {
 @public
  jlong milliseconds_;
}

@end

@implementation OrgOssPdfreporterSqlFactoryTimestampImpl

- (instancetype)initWithLong:(jlong)milliseconds {
  OrgOssPdfreporterSqlFactoryTimestampImpl_initWithLong_(self, milliseconds);
  return self;
}

- (instancetype)initWithJavaUtilDate:(JavaUtilDate *)timestamp {
  OrgOssPdfreporterSqlFactoryTimestampImpl_initWithJavaUtilDate_(self, timestamp);
  return self;
}

- (jlong)getMilliseconds {
  return milliseconds_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithLong:", "TimestampImpl", NULL, 0x0, NULL, NULL },
    { "initWithJavaUtilDate:", "TimestampImpl", NULL, 0x0, NULL, NULL },
    { "getMilliseconds", NULL, "J", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "milliseconds_", NULL, 0x12, "J", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterSqlFactoryTimestampImpl = { 2, "TimestampImpl", "org.oss.pdfreporter.sql.factory", NULL, 0x1, 3, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterSqlFactoryTimestampImpl;
}

@end

void OrgOssPdfreporterSqlFactoryTimestampImpl_initWithLong_(OrgOssPdfreporterSqlFactoryTimestampImpl *self, jlong milliseconds) {
  NSObject_init(self);
  self->milliseconds_ = milliseconds;
}

OrgOssPdfreporterSqlFactoryTimestampImpl *new_OrgOssPdfreporterSqlFactoryTimestampImpl_initWithLong_(jlong milliseconds) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterSqlFactoryTimestampImpl, initWithLong_, milliseconds)
}

OrgOssPdfreporterSqlFactoryTimestampImpl *create_OrgOssPdfreporterSqlFactoryTimestampImpl_initWithLong_(jlong milliseconds) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterSqlFactoryTimestampImpl, initWithLong_, milliseconds)
}

void OrgOssPdfreporterSqlFactoryTimestampImpl_initWithJavaUtilDate_(OrgOssPdfreporterSqlFactoryTimestampImpl *self, JavaUtilDate *timestamp) {
  OrgOssPdfreporterSqlFactoryTimestampImpl_initWithLong_(self, [((JavaUtilDate *) nil_chk(timestamp)) getTime]);
}

OrgOssPdfreporterSqlFactoryTimestampImpl *new_OrgOssPdfreporterSqlFactoryTimestampImpl_initWithJavaUtilDate_(JavaUtilDate *timestamp) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterSqlFactoryTimestampImpl, initWithJavaUtilDate_, timestamp)
}

OrgOssPdfreporterSqlFactoryTimestampImpl *create_OrgOssPdfreporterSqlFactoryTimestampImpl_initWithJavaUtilDate_(JavaUtilDate *timestamp) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterSqlFactoryTimestampImpl, initWithJavaUtilDate_, timestamp)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterSqlFactoryTimestampImpl)
