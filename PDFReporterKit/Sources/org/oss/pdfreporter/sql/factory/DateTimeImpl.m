//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/sql/factory/DateTimeImpl.java
//

#include "J2ObjC_source.h"
#include "java/util/Calendar.h"
#include "java/util/Date.h"
#include "org/oss/pdfreporter/sql/factory/DateTimeImpl.h"
#include "org/oss/pdfreporter/sql/factory/DateUtil.h"

@interface OrgOssPdfreporterSqlFactoryDateTimeImpl () {
 @public
  jint year_, month_, day_;
  jint hour_, minute_, second_;
}

@end

@implementation OrgOssPdfreporterSqlFactoryDateTimeImpl

- (instancetype)initWithInt:(jint)year
                    withInt:(jint)month
                    withInt:(jint)day
                    withInt:(jint)hour
                    withInt:(jint)minute
                    withInt:(jint)second {
  OrgOssPdfreporterSqlFactoryDateTimeImpl_initWithInt_withInt_withInt_withInt_withInt_withInt_(self, year, month, day, hour, minute, second);
  return self;
}

- (instancetype)initWithJavaUtilDate:(JavaUtilDate *)timestamp {
  OrgOssPdfreporterSqlFactoryDateTimeImpl_initWithJavaUtilDate_(self, timestamp);
  return self;
}

- (instancetype)initWithJavaUtilCalendar:(JavaUtilCalendar *)timestamp {
  OrgOssPdfreporterSqlFactoryDateTimeImpl_initWithJavaUtilCalendar_(self, timestamp);
  return self;
}

- (jint)getYear {
  return year_;
}

- (jint)getMonth {
  return month_;
}

- (jint)getDay {
  return day_;
}

- (JavaUtilDate *)getDate {
  return OrgOssPdfreporterSqlFactoryDateUtil_getDateTimeWithInt_withInt_withInt_withInt_withInt_withInt_([self getYear], [self getMonth], [self getDay], [self getHours], [self getMinutes], [self getSeconds]);
}

- (jint)getHours {
  return hour_;
}

- (jint)getMinutes {
  return minute_;
}

- (jint)getSeconds {
  return second_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithInt:withInt:withInt:withInt:withInt:withInt:", "DateTimeImpl", NULL, 0x0, NULL, NULL },
    { "initWithJavaUtilDate:", "DateTimeImpl", NULL, 0x0, NULL, NULL },
    { "initWithJavaUtilCalendar:", "DateTimeImpl", NULL, 0x0, NULL, NULL },
    { "getYear", NULL, "I", 0x1, NULL, NULL },
    { "getMonth", NULL, "I", 0x1, NULL, NULL },
    { "getDay", NULL, "I", 0x1, NULL, NULL },
    { "getDate", NULL, "Ljava.util.Date;", 0x1, NULL, NULL },
    { "getHours", NULL, "I", 0x1, NULL, NULL },
    { "getMinutes", NULL, "I", 0x1, NULL, NULL },
    { "getSeconds", NULL, "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "year_", NULL, 0x12, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "month_", NULL, 0x12, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "day_", NULL, 0x12, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "hour_", NULL, 0x12, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "minute_", NULL, 0x12, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "second_", NULL, 0x12, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterSqlFactoryDateTimeImpl = { 2, "DateTimeImpl", "org.oss.pdfreporter.sql.factory", NULL, 0x1, 10, methods, 6, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterSqlFactoryDateTimeImpl;
}

@end

void OrgOssPdfreporterSqlFactoryDateTimeImpl_initWithInt_withInt_withInt_withInt_withInt_withInt_(OrgOssPdfreporterSqlFactoryDateTimeImpl *self, jint year, jint month, jint day, jint hour, jint minute, jint second) {
  NSObject_init(self);
  self->year_ = year;
  self->month_ = month;
  self->day_ = day;
  self->hour_ = hour;
  self->minute_ = minute;
  self->second_ = second;
}

OrgOssPdfreporterSqlFactoryDateTimeImpl *new_OrgOssPdfreporterSqlFactoryDateTimeImpl_initWithInt_withInt_withInt_withInt_withInt_withInt_(jint year, jint month, jint day, jint hour, jint minute, jint second) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterSqlFactoryDateTimeImpl, initWithInt_withInt_withInt_withInt_withInt_withInt_, year, month, day, hour, minute, second)
}

OrgOssPdfreporterSqlFactoryDateTimeImpl *create_OrgOssPdfreporterSqlFactoryDateTimeImpl_initWithInt_withInt_withInt_withInt_withInt_withInt_(jint year, jint month, jint day, jint hour, jint minute, jint second) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterSqlFactoryDateTimeImpl, initWithInt_withInt_withInt_withInt_withInt_withInt_, year, month, day, hour, minute, second)
}

void OrgOssPdfreporterSqlFactoryDateTimeImpl_initWithJavaUtilDate_(OrgOssPdfreporterSqlFactoryDateTimeImpl *self, JavaUtilDate *timestamp) {
  OrgOssPdfreporterSqlFactoryDateTimeImpl_initWithJavaUtilCalendar_(self, OrgOssPdfreporterSqlFactoryDateUtil_getCalendarWithJavaUtilDate_(timestamp));
}

OrgOssPdfreporterSqlFactoryDateTimeImpl *new_OrgOssPdfreporterSqlFactoryDateTimeImpl_initWithJavaUtilDate_(JavaUtilDate *timestamp) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterSqlFactoryDateTimeImpl, initWithJavaUtilDate_, timestamp)
}

OrgOssPdfreporterSqlFactoryDateTimeImpl *create_OrgOssPdfreporterSqlFactoryDateTimeImpl_initWithJavaUtilDate_(JavaUtilDate *timestamp) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterSqlFactoryDateTimeImpl, initWithJavaUtilDate_, timestamp)
}

void OrgOssPdfreporterSqlFactoryDateTimeImpl_initWithJavaUtilCalendar_(OrgOssPdfreporterSqlFactoryDateTimeImpl *self, JavaUtilCalendar *timestamp) {
  OrgOssPdfreporterSqlFactoryDateTimeImpl_initWithInt_withInt_withInt_withInt_withInt_withInt_(self, [((JavaUtilCalendar *) nil_chk(timestamp)) getWithInt:JavaUtilCalendar_YEAR], [timestamp getWithInt:JavaUtilCalendar_MONTH] + 1, [timestamp getWithInt:JavaUtilCalendar_DATE], [timestamp getWithInt:JavaUtilCalendar_HOUR_OF_DAY], [timestamp getWithInt:JavaUtilCalendar_MINUTE], [timestamp getWithInt:JavaUtilCalendar_SECOND]);
}

OrgOssPdfreporterSqlFactoryDateTimeImpl *new_OrgOssPdfreporterSqlFactoryDateTimeImpl_initWithJavaUtilCalendar_(JavaUtilCalendar *timestamp) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterSqlFactoryDateTimeImpl, initWithJavaUtilCalendar_, timestamp)
}

OrgOssPdfreporterSqlFactoryDateTimeImpl *create_OrgOssPdfreporterSqlFactoryDateTimeImpl_initWithJavaUtilCalendar_(JavaUtilCalendar *timestamp) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterSqlFactoryDateTimeImpl, initWithJavaUtilCalendar_, timestamp)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterSqlFactoryDateTimeImpl)
