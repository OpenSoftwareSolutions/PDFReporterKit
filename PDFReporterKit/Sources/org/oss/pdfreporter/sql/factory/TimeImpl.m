//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/sql/factory/TimeImpl.java
//

#include "J2ObjC_source.h"
#include "java/util/Calendar.h"
#include "java/util/Date.h"
#include "org/oss/pdfreporter/sql/factory/DateUtil.h"
#include "org/oss/pdfreporter/sql/factory/TimeImpl.h"

@interface OrgOssPdfreporterSqlFactoryTimeImpl () {
 @public
  jint hour_, minute_, second_;
}

@end

@implementation OrgOssPdfreporterSqlFactoryTimeImpl

- (instancetype)initWithInt:(jint)hour
                    withInt:(jint)minute
                    withInt:(jint)second {
  OrgOssPdfreporterSqlFactoryTimeImpl_initWithInt_withInt_withInt_(self, hour, minute, second);
  return self;
}

- (instancetype)initWithJavaUtilDate:(JavaUtilDate *)time {
  OrgOssPdfreporterSqlFactoryTimeImpl_initWithJavaUtilDate_(self, time);
  return self;
}

- (instancetype)initWithJavaUtilCalendar:(JavaUtilCalendar *)time {
  OrgOssPdfreporterSqlFactoryTimeImpl_initWithJavaUtilCalendar_(self, time);
  return self;
}

- (JavaUtilDate *)getDate {
  return OrgOssPdfreporterSqlFactoryDateUtil_getTimeWithInt_withInt_withInt_([self getHours], [self getMinutes], [self getSeconds]);
}

- (jint)getHours {
  return hour_;
}

- (jint)getMinutes {
  return minute_;
}

- (jint)getSeconds {
  return second_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithInt:withInt:withInt:", "TimeImpl", NULL, 0x0, NULL, NULL },
    { "initWithJavaUtilDate:", "TimeImpl", NULL, 0x0, NULL, NULL },
    { "initWithJavaUtilCalendar:", "TimeImpl", NULL, 0x0, NULL, NULL },
    { "getDate", NULL, "Ljava.util.Date;", 0x1, NULL, NULL },
    { "getHours", NULL, "I", 0x1, NULL, NULL },
    { "getMinutes", NULL, "I", 0x1, NULL, NULL },
    { "getSeconds", NULL, "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "hour_", NULL, 0x12, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "minute_", NULL, 0x12, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "second_", NULL, 0x12, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterSqlFactoryTimeImpl = { 2, "TimeImpl", "org.oss.pdfreporter.sql.factory", NULL, 0x0, 7, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterSqlFactoryTimeImpl;
}

@end

void OrgOssPdfreporterSqlFactoryTimeImpl_initWithInt_withInt_withInt_(OrgOssPdfreporterSqlFactoryTimeImpl *self, jint hour, jint minute, jint second) {
  NSObject_init(self);
  self->hour_ = hour;
  self->minute_ = minute;
  self->second_ = second;
}

OrgOssPdfreporterSqlFactoryTimeImpl *new_OrgOssPdfreporterSqlFactoryTimeImpl_initWithInt_withInt_withInt_(jint hour, jint minute, jint second) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterSqlFactoryTimeImpl, initWithInt_withInt_withInt_, hour, minute, second)
}

OrgOssPdfreporterSqlFactoryTimeImpl *create_OrgOssPdfreporterSqlFactoryTimeImpl_initWithInt_withInt_withInt_(jint hour, jint minute, jint second) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterSqlFactoryTimeImpl, initWithInt_withInt_withInt_, hour, minute, second)
}

void OrgOssPdfreporterSqlFactoryTimeImpl_initWithJavaUtilDate_(OrgOssPdfreporterSqlFactoryTimeImpl *self, JavaUtilDate *time) {
  OrgOssPdfreporterSqlFactoryTimeImpl_initWithJavaUtilCalendar_(self, OrgOssPdfreporterSqlFactoryDateUtil_getCalendarWithJavaUtilDate_(time));
}

OrgOssPdfreporterSqlFactoryTimeImpl *new_OrgOssPdfreporterSqlFactoryTimeImpl_initWithJavaUtilDate_(JavaUtilDate *time) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterSqlFactoryTimeImpl, initWithJavaUtilDate_, time)
}

OrgOssPdfreporterSqlFactoryTimeImpl *create_OrgOssPdfreporterSqlFactoryTimeImpl_initWithJavaUtilDate_(JavaUtilDate *time) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterSqlFactoryTimeImpl, initWithJavaUtilDate_, time)
}

void OrgOssPdfreporterSqlFactoryTimeImpl_initWithJavaUtilCalendar_(OrgOssPdfreporterSqlFactoryTimeImpl *self, JavaUtilCalendar *time) {
  OrgOssPdfreporterSqlFactoryTimeImpl_initWithInt_withInt_withInt_(self, [((JavaUtilCalendar *) nil_chk(time)) getWithInt:JavaUtilCalendar_HOUR_OF_DAY], [time getWithInt:JavaUtilCalendar_MINUTE], [time getWithInt:JavaUtilCalendar_SECOND]);
}

OrgOssPdfreporterSqlFactoryTimeImpl *new_OrgOssPdfreporterSqlFactoryTimeImpl_initWithJavaUtilCalendar_(JavaUtilCalendar *time) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterSqlFactoryTimeImpl, initWithJavaUtilCalendar_, time)
}

OrgOssPdfreporterSqlFactoryTimeImpl *create_OrgOssPdfreporterSqlFactoryTimeImpl_initWithJavaUtilCalendar_(JavaUtilCalendar *time) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterSqlFactoryTimeImpl, initWithJavaUtilCalendar_, time)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterSqlFactoryTimeImpl)
