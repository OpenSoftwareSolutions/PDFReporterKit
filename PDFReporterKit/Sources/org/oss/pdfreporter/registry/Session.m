//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/registry/Session.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/HashMap.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/logging/Logger.h"
#include "org/oss/pdfreporter/registry/ISessionListener.h"
#include "org/oss/pdfreporter/registry/ISessionObject.h"
#include "org/oss/pdfreporter/registry/Session.h"

@interface OrgOssPdfreporterRegistrySession () {
 @public
  id<JavaUtilMap> session_;
  id<JavaUtilList> listeners_;
}

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterRegistrySession, session_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterRegistrySession, listeners_, id<JavaUtilList>)

inline JavaUtilLoggingLogger *OrgOssPdfreporterRegistrySession_get_logger();
static JavaUtilLoggingLogger *OrgOssPdfreporterRegistrySession_logger;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterRegistrySession, logger, JavaUtilLoggingLogger *)

J2OBJC_INITIALIZED_DEFN(OrgOssPdfreporterRegistrySession)

@implementation OrgOssPdfreporterRegistrySession

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterRegistrySession_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)addListenerWithOrgOssPdfreporterRegistryISessionListener:(id<OrgOssPdfreporterRegistryISessionListener>)listener {
  [((id<JavaUtilList>) nil_chk(listeners_)) addWithId:listener];
}

- (void)removeListenerWithOrgOssPdfreporterRegistryISessionListener:(id<OrgOssPdfreporterRegistryISessionListener>)listener {
  [((id<JavaUtilList>) nil_chk(listeners_)) removeWithId:listener];
}

- (void)putWithNSString:(NSString *)key
withOrgOssPdfreporterRegistryISessionObject:(id<OrgOssPdfreporterRegistryISessionObject>)obj {
  [((JavaUtilLoggingLogger *) nil_chk(OrgOssPdfreporterRegistrySession_logger)) finestWithNSString:JreStrcat("$$$@", @"Set ", key, @" = ", obj)];
  (void) [((id<JavaUtilMap>) nil_chk(session_)) putWithId:key withId:obj];
  for (id<OrgOssPdfreporterRegistryISessionListener> __strong listener in nil_chk(listeners_)) {
    [((id<OrgOssPdfreporterRegistryISessionListener>) nil_chk(listener)) putWithNSString:key withOrgOssPdfreporterRegistryISessionObject:obj];
  }
}

- (void)removeWithNSString:(NSString *)key {
  [((JavaUtilLoggingLogger *) nil_chk(OrgOssPdfreporterRegistrySession_logger)) finestWithNSString:JreStrcat("$$", @"Remove ", key)];
  id<OrgOssPdfreporterRegistryISessionObject> removed = [((id<JavaUtilMap>) nil_chk(session_)) removeWithId:key];
  if (removed != nil) {
    [removed dispose];
  }
  for (id<OrgOssPdfreporterRegistryISessionListener> __strong listener in nil_chk(listeners_)) {
    [((id<OrgOssPdfreporterRegistryISessionListener>) nil_chk(listener)) removeWithNSString:key];
  }
}

- (id<OrgOssPdfreporterRegistryISessionObject>)getWithNSString:(NSString *)key {
  id<OrgOssPdfreporterRegistryISessionObject> obj = [((id<JavaUtilMap>) nil_chk(session_)) getWithId:key];
  for (id<OrgOssPdfreporterRegistryISessionListener> __strong listener in nil_chk(listeners_)) {
    [((id<OrgOssPdfreporterRegistryISessionListener>) nil_chk(listener)) getWithNSString:key];
  }
  [((JavaUtilLoggingLogger *) nil_chk(OrgOssPdfreporterRegistrySession_logger)) finestWithNSString:JreStrcat("$$$@", @"Get ", key, @" = ", obj)];
  return obj;
}

- (void)dispose {
  [((JavaUtilLoggingLogger *) nil_chk(OrgOssPdfreporterRegistrySession_logger)) finestWithNSString:JreStrcat("$@", @"Dispose ", self)];
  for (id<OrgOssPdfreporterRegistryISessionObject> __strong so in nil_chk([((id<JavaUtilMap>) nil_chk(session_)) values])) {
    [((id<OrgOssPdfreporterRegistryISessionObject>) nil_chk(so)) dispose];
  }
  [session_ clear];
  for (id<OrgOssPdfreporterRegistryISessionListener> __strong listener in nil_chk(listeners_)) {
    [((id<OrgOssPdfreporterRegistryISessionListener>) nil_chk(listener)) dispose];
  }
  [listeners_ clear];
}

+ (void)initialize {
  if (self == [OrgOssPdfreporterRegistrySession class]) {
    OrgOssPdfreporterRegistrySession_logger = JavaUtilLoggingLogger_getLoggerWithNSString_([OrgOssPdfreporterRegistrySession_class_() getName]);
    J2OBJC_SET_INITIALIZED(OrgOssPdfreporterRegistrySession)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "Session", NULL, 0x0, NULL, NULL },
    { "addListenerWithOrgOssPdfreporterRegistryISessionListener:", "addListener", "V", 0x1, NULL, NULL },
    { "removeListenerWithOrgOssPdfreporterRegistryISessionListener:", "removeListener", "V", 0x1, NULL, NULL },
    { "putWithNSString:withOrgOssPdfreporterRegistryISessionObject:", "put", "V", 0x1, NULL, NULL },
    { "removeWithNSString:", "remove", "V", 0x1, NULL, NULL },
    { "getWithNSString:", "get", "Lorg.oss.pdfreporter.registry.ISessionObject;", 0x1, NULL, NULL },
    { "dispose", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "logger", "logger", 0x1a, "Ljava.util.logging.Logger;", &OrgOssPdfreporterRegistrySession_logger, NULL, .constantValue.asLong = 0 },
    { "session_", NULL, 0x12, "Ljava.util.Map;", NULL, "Ljava/util/Map<Ljava/lang/String;Lorg/oss/pdfreporter/registry/ISessionObject;>;", .constantValue.asLong = 0 },
    { "listeners_", NULL, 0x12, "Ljava.util.List;", NULL, "Ljava/util/List<Lorg/oss/pdfreporter/registry/ISessionListener;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterRegistrySession = { 2, "Session", "org.oss.pdfreporter.registry", NULL, 0x1, 7, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterRegistrySession;
}

@end

void OrgOssPdfreporterRegistrySession_init(OrgOssPdfreporterRegistrySession *self) {
  NSObject_init(self);
  [((JavaUtilLoggingLogger *) nil_chk(OrgOssPdfreporterRegistrySession_logger)) finestWithNSString:JreStrcat("$@", @"Create Session: ", self)];
  self->session_ = new_JavaUtilHashMap_init();
  self->listeners_ = new_JavaUtilArrayList_init();
}

OrgOssPdfreporterRegistrySession *new_OrgOssPdfreporterRegistrySession_init() {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterRegistrySession, init)
}

OrgOssPdfreporterRegistrySession *create_OrgOssPdfreporterRegistrySession_init() {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterRegistrySession, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterRegistrySession)
