//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/crosstabs/xml/JRCrosstabCellFactory.java
//

#include "J2ObjC_source.h"
#include "java/lang/Integer.h"
#include "org/oss/pdfreporter/crosstabs/design/JRDesignCrosstabCell.h"
#include "org/oss/pdfreporter/crosstabs/xml/JRCrosstabCellFactory.h"
#include "org/oss/pdfreporter/engine/xml/JRBaseFactory.h"
#include "org/oss/pdfreporter/xml/parsers/IAttributes.h"

NSString *OrgOssPdfreporterCrosstabsXmlJRCrosstabCellFactory_ELEMENT_crosstabCell = @"crosstabCell";
NSString *OrgOssPdfreporterCrosstabsXmlJRCrosstabCellFactory_ATTRIBUTE_rowTotalGroup = @"rowTotalGroup";
NSString *OrgOssPdfreporterCrosstabsXmlJRCrosstabCellFactory_ATTRIBUTE_columnTotalGroup = @"columnTotalGroup";
NSString *OrgOssPdfreporterCrosstabsXmlJRCrosstabCellFactory_ATTRIBUTE_width = @"width";
NSString *OrgOssPdfreporterCrosstabsXmlJRCrosstabCellFactory_ATTRIBUTE_height = @"height";

@implementation OrgOssPdfreporterCrosstabsXmlJRCrosstabCellFactory

+ (NSString *)ELEMENT_crosstabCell {
  return OrgOssPdfreporterCrosstabsXmlJRCrosstabCellFactory_ELEMENT_crosstabCell;
}

+ (NSString *)ATTRIBUTE_rowTotalGroup {
  return OrgOssPdfreporterCrosstabsXmlJRCrosstabCellFactory_ATTRIBUTE_rowTotalGroup;
}

+ (NSString *)ATTRIBUTE_columnTotalGroup {
  return OrgOssPdfreporterCrosstabsXmlJRCrosstabCellFactory_ATTRIBUTE_columnTotalGroup;
}

+ (NSString *)ATTRIBUTE_width {
  return OrgOssPdfreporterCrosstabsXmlJRCrosstabCellFactory_ATTRIBUTE_width;
}

+ (NSString *)ATTRIBUTE_height {
  return OrgOssPdfreporterCrosstabsXmlJRCrosstabCellFactory_ATTRIBUTE_height;
}

- (id)createObjectWithOrgOssPdfreporterXmlParsersIAttributes:(id<OrgOssPdfreporterXmlParsersIAttributes>)attributes {
  OrgOssPdfreporterCrosstabsDesignJRDesignCrosstabCell *cell = new_OrgOssPdfreporterCrosstabsDesignJRDesignCrosstabCell_init();
  [cell setRowTotalGroupWithNSString:[((id<OrgOssPdfreporterXmlParsersIAttributes>) nil_chk(attributes)) getValueWithNSString:OrgOssPdfreporterCrosstabsXmlJRCrosstabCellFactory_ATTRIBUTE_rowTotalGroup]];
  [cell setColumnTotalGroupWithNSString:[attributes getValueWithNSString:OrgOssPdfreporterCrosstabsXmlJRCrosstabCellFactory_ATTRIBUTE_columnTotalGroup]];
  NSString *widthAttr = [attributes getValueWithNSString:OrgOssPdfreporterCrosstabsXmlJRCrosstabCellFactory_ATTRIBUTE_width];
  if (widthAttr != nil) {
    [cell setWidthWithJavaLangInteger:JavaLangInteger_valueOfWithNSString_(widthAttr)];
  }
  NSString *heightAttr = [attributes getValueWithNSString:OrgOssPdfreporterCrosstabsXmlJRCrosstabCellFactory_ATTRIBUTE_height];
  if (heightAttr != nil) {
    [cell setHeightWithJavaLangInteger:JavaLangInteger_valueOfWithNSString_(heightAttr)];
  }
  return cell;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterCrosstabsXmlJRCrosstabCellFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "createObjectWithOrgOssPdfreporterXmlParsersIAttributes:", "createObject", "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "init", "JRCrosstabCellFactory", NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "ELEMENT_crosstabCell", "ELEMENT_crosstabCell", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterCrosstabsXmlJRCrosstabCellFactory_ELEMENT_crosstabCell, NULL, .constantValue.asLong = 0 },
    { "ATTRIBUTE_rowTotalGroup", "ATTRIBUTE_rowTotalGroup", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterCrosstabsXmlJRCrosstabCellFactory_ATTRIBUTE_rowTotalGroup, NULL, .constantValue.asLong = 0 },
    { "ATTRIBUTE_columnTotalGroup", "ATTRIBUTE_columnTotalGroup", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterCrosstabsXmlJRCrosstabCellFactory_ATTRIBUTE_columnTotalGroup, NULL, .constantValue.asLong = 0 },
    { "ATTRIBUTE_width", "ATTRIBUTE_width", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterCrosstabsXmlJRCrosstabCellFactory_ATTRIBUTE_width, NULL, .constantValue.asLong = 0 },
    { "ATTRIBUTE_height", "ATTRIBUTE_height", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterCrosstabsXmlJRCrosstabCellFactory_ATTRIBUTE_height, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterCrosstabsXmlJRCrosstabCellFactory = { 2, "JRCrosstabCellFactory", "org.oss.pdfreporter.crosstabs.xml", NULL, 0x1, 2, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterCrosstabsXmlJRCrosstabCellFactory;
}

@end

void OrgOssPdfreporterCrosstabsXmlJRCrosstabCellFactory_init(OrgOssPdfreporterCrosstabsXmlJRCrosstabCellFactory *self) {
  OrgOssPdfreporterEngineXmlJRBaseFactory_init(self);
}

OrgOssPdfreporterCrosstabsXmlJRCrosstabCellFactory *new_OrgOssPdfreporterCrosstabsXmlJRCrosstabCellFactory_init() {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterCrosstabsXmlJRCrosstabCellFactory, init)
}

OrgOssPdfreporterCrosstabsXmlJRCrosstabCellFactory *create_OrgOssPdfreporterCrosstabsXmlJRCrosstabCellFactory_init() {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterCrosstabsXmlJRCrosstabCellFactory, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterCrosstabsXmlJRCrosstabCellFactory)
