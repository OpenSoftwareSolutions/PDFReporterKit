//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/crosstabs/base/JRBaseCellContents.java
//

#include "J2ObjC_source.h"
#include "org/oss/pdfreporter/crosstabs/JRCellContents.h"
#include "org/oss/pdfreporter/crosstabs/base/JRBaseCellContents.h"
#include "org/oss/pdfreporter/engine/JRConstants.h"
#include "org/oss/pdfreporter/engine/JRDefaultStyleProvider.h"
#include "org/oss/pdfreporter/engine/JRLineBox.h"
#include "org/oss/pdfreporter/engine/JRPropertiesHolder.h"
#include "org/oss/pdfreporter/engine/JRPropertiesMap.h"
#include "org/oss/pdfreporter/engine/JRStyle.h"
#include "org/oss/pdfreporter/engine/base/JRBaseElementGroup.h"
#include "org/oss/pdfreporter/engine/base/JRBaseObjectFactory.h"
#include "org/oss/pdfreporter/engine/type/ModeEnum.h"
#include "org/oss/pdfreporter/geometry/IColor.h"

@interface OrgOssPdfreporterCrosstabsBaseJRBaseCellContents () {
 @public
  OrgOssPdfreporterEngineJRPropertiesMap *propertiesMap_;
}

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterCrosstabsBaseJRBaseCellContents, propertiesMap_, OrgOssPdfreporterEngineJRPropertiesMap *)

inline jlong OrgOssPdfreporterCrosstabsBaseJRBaseCellContents_get_serialVersionUID();
#define OrgOssPdfreporterCrosstabsBaseJRBaseCellContents_serialVersionUID 10200LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgOssPdfreporterCrosstabsBaseJRBaseCellContents, serialVersionUID, jlong)

@implementation OrgOssPdfreporterCrosstabsBaseJRBaseCellContents

- (instancetype)initWithOrgOssPdfreporterCrosstabsJRCellContents:(id<OrgOssPdfreporterCrosstabsJRCellContents>)cell
              withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:(OrgOssPdfreporterEngineBaseJRBaseObjectFactory *)factory {
  OrgOssPdfreporterCrosstabsBaseJRBaseCellContents_initWithOrgOssPdfreporterCrosstabsJRCellContents_withOrgOssPdfreporterEngineBaseJRBaseObjectFactory_(self, cell, factory);
  return self;
}

- (id<OrgOssPdfreporterGeometryIColor>)getBackcolor {
  return backcolor_;
}

- (id<OrgOssPdfreporterEngineJRLineBox>)getLineBox {
  return lineBox_;
}

- (jint)getWidth {
  return width_;
}

- (jint)getHeight {
  return height_;
}

- (id<OrgOssPdfreporterEngineJRDefaultStyleProvider>)getDefaultStyleProvider {
  return defaultStyleProvider_;
}

- (id<OrgOssPdfreporterEngineJRStyle>)getStyle {
  return style_;
}

- (OrgOssPdfreporterEngineTypeModeEnum *)getModeValue {
  return modeValue_;
}

- (NSString *)getStyleNameReference {
  return styleNameReference_;
}

- (id<OrgOssPdfreporterGeometryIColor>)getDefaultLineColor {
  return JreLoadStatic(OrgOssPdfreporterGeometryIColor, black);
}

- (id)clone {
  OrgOssPdfreporterCrosstabsBaseJRBaseCellContents *clone = (OrgOssPdfreporterCrosstabsBaseJRBaseCellContents *) cast_chk([super clone], [OrgOssPdfreporterCrosstabsBaseJRBaseCellContents class]);
  ((OrgOssPdfreporterCrosstabsBaseJRBaseCellContents *) nil_chk(clone))->lineBox_ = lineBox_ == nil ? nil : [lineBox_ cloneWithOrgOssPdfreporterEngineJRBoxContainer:clone];
  clone->propertiesMap_ = OrgOssPdfreporterEngineJRPropertiesMap_getPropertiesCloneWithOrgOssPdfreporterEngineJRPropertiesHolder_(self);
  return clone;
}

- (jboolean)hasProperties {
  return propertiesMap_ != nil && [propertiesMap_ hasProperties];
}

- (OrgOssPdfreporterEngineJRPropertiesMap *)getPropertiesMap {
  if (propertiesMap_ == nil) {
    propertiesMap_ = new_OrgOssPdfreporterEngineJRPropertiesMap_init();
  }
  return propertiesMap_;
}

- (id<OrgOssPdfreporterEngineJRPropertiesHolder>)getParentProperties {
  return nil;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgOssPdfreporterCrosstabsJRCellContents:withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:", "JRBaseCellContents", NULL, 0x1, NULL, NULL },
    { "getBackcolor", NULL, "Lorg.oss.pdfreporter.geometry.IColor;", 0x1, NULL, NULL },
    { "getLineBox", NULL, "Lorg.oss.pdfreporter.engine.JRLineBox;", 0x1, NULL, NULL },
    { "getWidth", NULL, "I", 0x1, NULL, NULL },
    { "getHeight", NULL, "I", 0x1, NULL, NULL },
    { "getDefaultStyleProvider", NULL, "Lorg.oss.pdfreporter.engine.JRDefaultStyleProvider;", 0x1, NULL, NULL },
    { "getStyle", NULL, "Lorg.oss.pdfreporter.engine.JRStyle;", 0x1, NULL, NULL },
    { "getModeValue", NULL, "Lorg.oss.pdfreporter.engine.type.ModeEnum;", 0x1, NULL, NULL },
    { "getStyleNameReference", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getDefaultLineColor", NULL, "Lorg.oss.pdfreporter.geometry.IColor;", 0x1, NULL, NULL },
    { "clone", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "hasProperties", NULL, "Z", 0x1, NULL, NULL },
    { "getPropertiesMap", NULL, "Lorg.oss.pdfreporter.engine.JRPropertiesMap;", 0x1, NULL, NULL },
    { "getParentProperties", NULL, "Lorg.oss.pdfreporter.engine.JRPropertiesHolder;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "serialVersionUID", 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgOssPdfreporterCrosstabsBaseJRBaseCellContents_serialVersionUID },
    { "defaultStyleProvider_", NULL, 0x4, "Lorg.oss.pdfreporter.engine.JRDefaultStyleProvider;", NULL, NULL, .constantValue.asLong = 0 },
    { "style_", NULL, 0x4, "Lorg.oss.pdfreporter.engine.JRStyle;", NULL, NULL, .constantValue.asLong = 0 },
    { "styleNameReference_", NULL, 0x4, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "modeValue_", NULL, 0x4, "Lorg.oss.pdfreporter.engine.type.ModeEnum;", NULL, NULL, .constantValue.asLong = 0 },
    { "backcolor_", NULL, 0x4, "Lorg.oss.pdfreporter.geometry.IColor;", NULL, NULL, .constantValue.asLong = 0 },
    { "lineBox_", NULL, 0x4, "Lorg.oss.pdfreporter.engine.JRLineBox;", NULL, NULL, .constantValue.asLong = 0 },
    { "width_", NULL, 0x4, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "height_", NULL, 0x4, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "propertiesMap_", NULL, 0x2, "Lorg.oss.pdfreporter.engine.JRPropertiesMap;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterCrosstabsBaseJRBaseCellContents = { 2, "JRBaseCellContents", "org.oss.pdfreporter.crosstabs.base", NULL, 0x1, 14, methods, 10, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterCrosstabsBaseJRBaseCellContents;
}

@end

void OrgOssPdfreporterCrosstabsBaseJRBaseCellContents_initWithOrgOssPdfreporterCrosstabsJRCellContents_withOrgOssPdfreporterEngineBaseJRBaseObjectFactory_(OrgOssPdfreporterCrosstabsBaseJRBaseCellContents *self, id<OrgOssPdfreporterCrosstabsJRCellContents> cell, OrgOssPdfreporterEngineBaseJRBaseObjectFactory *factory) {
  OrgOssPdfreporterEngineBaseJRBaseElementGroup_initWithOrgOssPdfreporterEngineJRElementGroup_withOrgOssPdfreporterEngineBaseJRBaseObjectFactory_(self, cell, factory);
  self->defaultStyleProvider_ = [((OrgOssPdfreporterEngineBaseJRBaseObjectFactory *) nil_chk(factory)) getDefaultStyleProvider];
  self->style_ = [factory getStyleWithOrgOssPdfreporterEngineJRStyle:[((id<OrgOssPdfreporterCrosstabsJRCellContents>) nil_chk(cell)) getStyle]];
  self->styleNameReference_ = [cell getStyleNameReference];
  self->modeValue_ = [cell getModeValue];
  self->backcolor_ = [cell getBackcolor];
  self->lineBox_ = [((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk([cell getLineBox])) cloneWithOrgOssPdfreporterEngineJRBoxContainer:self];
  self->width_ = [cell getWidth];
  self->height_ = [cell getHeight];
  self->propertiesMap_ = OrgOssPdfreporterEngineJRPropertiesMap_getPropertiesCloneWithOrgOssPdfreporterEngineJRPropertiesHolder_(cell);
}

OrgOssPdfreporterCrosstabsBaseJRBaseCellContents *new_OrgOssPdfreporterCrosstabsBaseJRBaseCellContents_initWithOrgOssPdfreporterCrosstabsJRCellContents_withOrgOssPdfreporterEngineBaseJRBaseObjectFactory_(id<OrgOssPdfreporterCrosstabsJRCellContents> cell, OrgOssPdfreporterEngineBaseJRBaseObjectFactory *factory) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterCrosstabsBaseJRBaseCellContents, initWithOrgOssPdfreporterCrosstabsJRCellContents_withOrgOssPdfreporterEngineBaseJRBaseObjectFactory_, cell, factory)
}

OrgOssPdfreporterCrosstabsBaseJRBaseCellContents *create_OrgOssPdfreporterCrosstabsBaseJRBaseCellContents_initWithOrgOssPdfreporterCrosstabsJRCellContents_withOrgOssPdfreporterEngineBaseJRBaseObjectFactory_(id<OrgOssPdfreporterCrosstabsJRCellContents> cell, OrgOssPdfreporterEngineBaseJRBaseObjectFactory *factory) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterCrosstabsBaseJRBaseCellContents, initWithOrgOssPdfreporterCrosstabsJRCellContents_withOrgOssPdfreporterEngineBaseJRBaseObjectFactory_, cell, factory)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterCrosstabsBaseJRBaseCellContents)
