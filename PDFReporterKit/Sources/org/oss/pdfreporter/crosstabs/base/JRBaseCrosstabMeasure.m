//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/crosstabs/base/JRBaseCrosstabMeasure.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/ClassNotFoundException.h"
#include "java/lang/CloneNotSupportedException.h"
#include "org/oss/pdfreporter/crosstabs/JRCrosstabMeasure.h"
#include "org/oss/pdfreporter/crosstabs/base/JRBaseCrosstabMeasure.h"
#include "org/oss/pdfreporter/crosstabs/type/CrosstabPercentageEnum.h"
#include "org/oss/pdfreporter/engine/JRCloneable.h"
#include "org/oss/pdfreporter/engine/JRConstants.h"
#include "org/oss/pdfreporter/engine/JRExpression.h"
#include "org/oss/pdfreporter/engine/JRRuntimeException.h"
#include "org/oss/pdfreporter/engine/JRVariable.h"
#include "org/oss/pdfreporter/engine/base/JRBaseObjectFactory.h"
#include "org/oss/pdfreporter/engine/base/JRBaseVariable.h"
#include "org/oss/pdfreporter/engine/type/CalculationEnum.h"
#include "org/oss/pdfreporter/engine/util/JRClassLoader.h"
#include "org/oss/pdfreporter/engine/util/JRCloneUtils.h"

@interface OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabMeasure ()

- (NSString *)getIncrementerFactoryClassRealName;

- (NSString *)getValueClassRealName;

- (NSString *)getPercentageCalculatorClassRealName;

@end

inline jlong OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabMeasure_get_serialVersionUID();
#define OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabMeasure_serialVersionUID 10200LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabMeasure, serialVersionUID, jlong)

__attribute__((unused)) static NSString *OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabMeasure_getIncrementerFactoryClassRealName(OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabMeasure *self);

__attribute__((unused)) static NSString *OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabMeasure_getValueClassRealName(OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabMeasure *self);

__attribute__((unused)) static NSString *OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabMeasure_getPercentageCalculatorClassRealName(OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabMeasure *self);

@implementation OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabMeasure

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabMeasure_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithOrgOssPdfreporterCrosstabsJRCrosstabMeasure:(id<OrgOssPdfreporterCrosstabsJRCrosstabMeasure>)measure
                 withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:(OrgOssPdfreporterEngineBaseJRBaseObjectFactory *)factory {
  OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabMeasure_initWithOrgOssPdfreporterCrosstabsJRCrosstabMeasure_withOrgOssPdfreporterEngineBaseJRBaseObjectFactory_(self, measure, factory);
  return self;
}

- (NSString *)getName {
  return name_;
}

- (NSString *)getValueClassName {
  return valueClassName_;
}

- (id<OrgOssPdfreporterEngineJRExpression>)getValueExpression {
  return expression_;
}

- (OrgOssPdfreporterEngineTypeCalculationEnum *)getCalculationValue {
  return calculationValue_;
}

- (NSString *)getIncrementerFactoryClassName {
  return incrementerFactoryClassName_;
}

- (OrgOssPdfreporterCrosstabsTypeCrosstabPercentageEnum *)getPercentageType {
  return percentageType_;
}

- (IOSClass *)getIncrementerFactoryClass {
  if (incrementerFactoryClass_ == nil) {
    NSString *className_ = OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabMeasure_getIncrementerFactoryClassRealName(self);
    if (className_ != nil) {
      @try {
        incrementerFactoryClass_ = OrgOssPdfreporterEngineUtilJRClassLoader_loadClassForNameWithNSString_(className_);
      }
      @catch (JavaLangClassNotFoundException *e) {
        @throw new_OrgOssPdfreporterEngineJRRuntimeException_initWithNSString_withNSException_(@"Could not load measure incrementer class", e);
      }
    }
  }
  return incrementerFactoryClass_;
}

- (NSString *)getIncrementerFactoryClassRealName {
  return OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabMeasure_getIncrementerFactoryClassRealName(self);
}

- (IOSClass *)getValueClass {
  if (valueClass_ == nil) {
    NSString *className_ = OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabMeasure_getValueClassRealName(self);
    if (className_ != nil) {
      @try {
        valueClass_ = OrgOssPdfreporterEngineUtilJRClassLoader_loadClassForNameWithNSString_(className_);
      }
      @catch (JavaLangClassNotFoundException *e) {
        @throw new_OrgOssPdfreporterEngineJRRuntimeException_initWithNSString_withNSException_(@"Could not load measure value class", e);
      }
    }
  }
  return valueClass_;
}

- (NSString *)getValueClassRealName {
  return OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabMeasure_getValueClassRealName(self);
}

- (id<OrgOssPdfreporterEngineJRVariable>)getVariable {
  return variable_;
}

- (NSString *)getPercentageCalculatorClassName {
  return percentageCalculatorClassName_;
}

- (IOSClass *)getPercentageCalculatorClass {
  if (percentageCalculatorClass_ == nil) {
    NSString *className_ = OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabMeasure_getPercentageCalculatorClassRealName(self);
    if (className_ != nil) {
      @try {
        percentageCalculatorClass_ = OrgOssPdfreporterEngineUtilJRClassLoader_loadClassForNameWithNSString_(className_);
      }
      @catch (JavaLangClassNotFoundException *e) {
        @throw new_OrgOssPdfreporterEngineJRRuntimeException_initWithNSString_withNSException_(@"Could not load measure percentage calculator class", e);
      }
    }
  }
  return percentageCalculatorClass_;
}

- (NSString *)getPercentageCalculatorClassRealName {
  return OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabMeasure_getPercentageCalculatorClassRealName(self);
}

- (id)clone {
  OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabMeasure *clone = nil;
  @try {
    clone = (OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabMeasure *) cast_chk([super clone], [OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabMeasure class]);
  }
  @catch (JavaLangCloneNotSupportedException *e) {
    @throw new_OrgOssPdfreporterEngineJRRuntimeException_initWithNSException_(e);
  }
  ((OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabMeasure *) nil_chk(clone))->expression_ = OrgOssPdfreporterEngineUtilJRCloneUtils_nullSafeCloneWithOrgOssPdfreporterEngineJRCloneable_(expression_);
  clone->variable_ = OrgOssPdfreporterEngineUtilJRCloneUtils_nullSafeCloneWithOrgOssPdfreporterEngineJRCloneable_(variable_);
  return clone;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self clone];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "JRBaseCrosstabMeasure", NULL, 0x4, NULL, NULL },
    { "initWithOrgOssPdfreporterCrosstabsJRCrosstabMeasure:withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:", "JRBaseCrosstabMeasure", NULL, 0x1, NULL, NULL },
    { "getName", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getValueClassName", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getValueExpression", NULL, "Lorg.oss.pdfreporter.engine.JRExpression;", 0x1, NULL, NULL },
    { "getCalculationValue", NULL, "Lorg.oss.pdfreporter.engine.type.CalculationEnum;", 0x1, NULL, NULL },
    { "getIncrementerFactoryClassName", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getPercentageType", NULL, "Lorg.oss.pdfreporter.crosstabs.type.CrosstabPercentageEnum;", 0x1, NULL, NULL },
    { "getIncrementerFactoryClass", NULL, "Ljava.lang.Class;", 0x1, NULL, "()Ljava/lang/Class<*>;" },
    { "getIncrementerFactoryClassRealName", NULL, "Ljava.lang.String;", 0x2, NULL, NULL },
    { "getValueClass", NULL, "Ljava.lang.Class;", 0x1, NULL, "()Ljava/lang/Class<*>;" },
    { "getValueClassRealName", NULL, "Ljava.lang.String;", 0x2, NULL, NULL },
    { "getVariable", NULL, "Lorg.oss.pdfreporter.engine.JRVariable;", 0x1, NULL, NULL },
    { "getPercentageCalculatorClassName", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getPercentageCalculatorClass", NULL, "Ljava.lang.Class;", 0x1, NULL, "()Ljava/lang/Class<*>;" },
    { "getPercentageCalculatorClassRealName", NULL, "Ljava.lang.String;", 0x2, NULL, NULL },
    { "clone", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "serialVersionUID", 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabMeasure_serialVersionUID },
    { "name_", NULL, 0x4, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "valueClassName_", NULL, 0x4, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "valueClassRealName_", NULL, 0x4, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "valueClass_", NULL, 0x4, "Ljava.lang.Class;", NULL, "Ljava/lang/Class<*>;", .constantValue.asLong = 0 },
    { "expression_", NULL, 0x4, "Lorg.oss.pdfreporter.engine.JRExpression;", NULL, NULL, .constantValue.asLong = 0 },
    { "calculationValue_", NULL, 0x4, "Lorg.oss.pdfreporter.engine.type.CalculationEnum;", NULL, NULL, .constantValue.asLong = 0 },
    { "incrementerFactoryClassName_", NULL, 0x4, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "incrementerFactoryClassRealName_", NULL, 0x4, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "incrementerFactoryClass_", NULL, 0x4, "Ljava.lang.Class;", NULL, "Ljava/lang/Class<*>;", .constantValue.asLong = 0 },
    { "percentageType_", NULL, 0x4, "Lorg.oss.pdfreporter.crosstabs.type.CrosstabPercentageEnum;", NULL, NULL, .constantValue.asLong = 0 },
    { "percentageCalculatorClassName_", NULL, 0x4, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "percentageCalculatorClassRealName_", NULL, 0x4, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "percentageCalculatorClass_", NULL, 0x4, "Ljava.lang.Class;", NULL, "Ljava/lang/Class<*>;", .constantValue.asLong = 0 },
    { "variable_", NULL, 0x4, "Lorg.oss.pdfreporter.engine.JRVariable;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabMeasure = { 2, "JRBaseCrosstabMeasure", "org.oss.pdfreporter.crosstabs.base", NULL, 0x1, 17, methods, 15, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabMeasure;
}

@end

void OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabMeasure_init(OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabMeasure *self) {
  NSObject_init(self);
  self->calculationValue_ = JreLoadEnum(OrgOssPdfreporterEngineTypeCalculationEnum, COUNT);
  self->percentageType_ = JreLoadEnum(OrgOssPdfreporterCrosstabsTypeCrosstabPercentageEnum, NONE);
}

OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabMeasure *new_OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabMeasure_init() {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabMeasure, init)
}

OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabMeasure *create_OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabMeasure_init() {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabMeasure, init)
}

void OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabMeasure_initWithOrgOssPdfreporterCrosstabsJRCrosstabMeasure_withOrgOssPdfreporterEngineBaseJRBaseObjectFactory_(OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabMeasure *self, id<OrgOssPdfreporterCrosstabsJRCrosstabMeasure> measure, OrgOssPdfreporterEngineBaseJRBaseObjectFactory *factory) {
  NSObject_init(self);
  self->calculationValue_ = JreLoadEnum(OrgOssPdfreporterEngineTypeCalculationEnum, COUNT);
  self->percentageType_ = JreLoadEnum(OrgOssPdfreporterCrosstabsTypeCrosstabPercentageEnum, NONE);
  [((OrgOssPdfreporterEngineBaseJRBaseObjectFactory *) nil_chk(factory)) putWithId:measure withId:self];
  self->name_ = [((id<OrgOssPdfreporterCrosstabsJRCrosstabMeasure>) nil_chk(measure)) getName];
  self->valueClassName_ = [measure getValueClassName];
  self->expression_ = [factory getExpressionWithOrgOssPdfreporterEngineJRExpression:[measure getValueExpression]];
  self->calculationValue_ = [measure getCalculationValue];
  self->incrementerFactoryClassName_ = [measure getIncrementerFactoryClassName];
  self->percentageType_ = [measure getPercentageType];
  self->percentageCalculatorClassName_ = [measure getPercentageCalculatorClassName];
  self->variable_ = [factory getVariableWithOrgOssPdfreporterEngineJRVariable:[measure getVariable]];
}

OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabMeasure *new_OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabMeasure_initWithOrgOssPdfreporterCrosstabsJRCrosstabMeasure_withOrgOssPdfreporterEngineBaseJRBaseObjectFactory_(id<OrgOssPdfreporterCrosstabsJRCrosstabMeasure> measure, OrgOssPdfreporterEngineBaseJRBaseObjectFactory *factory) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabMeasure, initWithOrgOssPdfreporterCrosstabsJRCrosstabMeasure_withOrgOssPdfreporterEngineBaseJRBaseObjectFactory_, measure, factory)
}

OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabMeasure *create_OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabMeasure_initWithOrgOssPdfreporterCrosstabsJRCrosstabMeasure_withOrgOssPdfreporterEngineBaseJRBaseObjectFactory_(id<OrgOssPdfreporterCrosstabsJRCrosstabMeasure> measure, OrgOssPdfreporterEngineBaseJRBaseObjectFactory *factory) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabMeasure, initWithOrgOssPdfreporterCrosstabsJRCrosstabMeasure_withOrgOssPdfreporterEngineBaseJRBaseObjectFactory_, measure, factory)
}

NSString *OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabMeasure_getIncrementerFactoryClassRealName(OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabMeasure *self) {
  if (self->incrementerFactoryClassRealName_ == nil) {
    self->incrementerFactoryClassRealName_ = OrgOssPdfreporterEngineUtilJRClassLoader_getClassRealNameWithNSString_(self->incrementerFactoryClassName_);
  }
  return self->incrementerFactoryClassRealName_;
}

NSString *OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabMeasure_getValueClassRealName(OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabMeasure *self) {
  if (self->valueClassRealName_ == nil) {
    self->valueClassRealName_ = OrgOssPdfreporterEngineUtilJRClassLoader_getClassRealNameWithNSString_(self->valueClassName_);
  }
  return self->valueClassRealName_;
}

NSString *OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabMeasure_getPercentageCalculatorClassRealName(OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabMeasure *self) {
  if (self->percentageCalculatorClassRealName_ == nil) {
    self->percentageCalculatorClassRealName_ = OrgOssPdfreporterEngineUtilJRClassLoader_getClassRealNameWithNSString_(self->percentageCalculatorClassName_);
  }
  return self->percentageCalculatorClassRealName_;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabMeasure)
