//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/crosstabs/base/JRBaseCrosstabGroup.java
//

#include "J2ObjC_source.h"
#include "java/lang/CloneNotSupportedException.h"
#include "org/oss/pdfreporter/crosstabs/JRCellContents.h"
#include "org/oss/pdfreporter/crosstabs/JRCrosstabBucket.h"
#include "org/oss/pdfreporter/crosstabs/JRCrosstabGroup.h"
#include "org/oss/pdfreporter/crosstabs/base/JRBaseCellContents.h"
#include "org/oss/pdfreporter/crosstabs/base/JRBaseCrosstabBucket.h"
#include "org/oss/pdfreporter/crosstabs/base/JRBaseCrosstabGroup.h"
#include "org/oss/pdfreporter/crosstabs/type/CrosstabTotalPositionEnum.h"
#include "org/oss/pdfreporter/engine/JRCloneable.h"
#include "org/oss/pdfreporter/engine/JRRuntimeException.h"
#include "org/oss/pdfreporter/engine/JRVariable.h"
#include "org/oss/pdfreporter/engine/base/JRBaseObjectFactory.h"
#include "org/oss/pdfreporter/engine/base/JRBaseVariable.h"
#include "org/oss/pdfreporter/engine/util/JRCloneUtils.h"

inline jlong OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabGroup_get_serialVersionUID();
#define OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabGroup_serialVersionUID 7685014062058258277LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabGroup, serialVersionUID, jlong)

@implementation OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabGroup

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabGroup_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithOrgOssPdfreporterCrosstabsJRCrosstabGroup:(id<OrgOssPdfreporterCrosstabsJRCrosstabGroup>)group
               withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:(OrgOssPdfreporterEngineBaseJRBaseObjectFactory *)factory {
  OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabGroup_initWithOrgOssPdfreporterCrosstabsJRCrosstabGroup_withOrgOssPdfreporterEngineBaseJRBaseObjectFactory_(self, group, factory);
  return self;
}

- (NSString *)getName {
  return name_;
}

- (id<OrgOssPdfreporterCrosstabsJRCrosstabBucket>)getBucket {
  return bucket_;
}

- (OrgOssPdfreporterCrosstabsTypeCrosstabTotalPositionEnum *)getTotalPositionValue {
  return totalPositionValue_;
}

- (jboolean)hasTotal {
  return totalPositionValue_ != JreLoadEnum(OrgOssPdfreporterCrosstabsTypeCrosstabTotalPositionEnum, NONE);
}

- (id<OrgOssPdfreporterCrosstabsJRCellContents>)getHeader {
  return header_;
}

- (id<OrgOssPdfreporterCrosstabsJRCellContents>)getTotalHeader {
  return totalHeader_;
}

- (id<OrgOssPdfreporterEngineJRVariable>)getVariable {
  return variable_;
}

- (id)clone {
  OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabGroup *clone = nil;
  @try {
    clone = (OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabGroup *) cast_chk([super clone], [OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabGroup class]);
  }
  @catch (JavaLangCloneNotSupportedException *e) {
    @throw new_OrgOssPdfreporterEngineJRRuntimeException_initWithNSException_(e);
  }
  ((OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabGroup *) nil_chk(clone))->bucket_ = OrgOssPdfreporterEngineUtilJRCloneUtils_nullSafeCloneWithOrgOssPdfreporterEngineJRCloneable_(bucket_);
  clone->header_ = OrgOssPdfreporterEngineUtilJRCloneUtils_nullSafeCloneWithOrgOssPdfreporterEngineJRCloneable_(header_);
  clone->totalHeader_ = OrgOssPdfreporterEngineUtilJRCloneUtils_nullSafeCloneWithOrgOssPdfreporterEngineJRCloneable_(totalHeader_);
  clone->variable_ = OrgOssPdfreporterEngineUtilJRCloneUtils_nullSafeCloneWithOrgOssPdfreporterEngineJRCloneable_(variable_);
  return clone;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self clone];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "JRBaseCrosstabGroup", NULL, 0x4, NULL, NULL },
    { "initWithOrgOssPdfreporterCrosstabsJRCrosstabGroup:withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:", "JRBaseCrosstabGroup", NULL, 0x1, NULL, NULL },
    { "getName", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getBucket", NULL, "Lorg.oss.pdfreporter.crosstabs.JRCrosstabBucket;", 0x1, NULL, NULL },
    { "getTotalPositionValue", NULL, "Lorg.oss.pdfreporter.crosstabs.type.CrosstabTotalPositionEnum;", 0x1, NULL, NULL },
    { "hasTotal", NULL, "Z", 0x1, NULL, NULL },
    { "getHeader", NULL, "Lorg.oss.pdfreporter.crosstabs.JRCellContents;", 0x1, NULL, NULL },
    { "getTotalHeader", NULL, "Lorg.oss.pdfreporter.crosstabs.JRCellContents;", 0x1, NULL, NULL },
    { "getVariable", NULL, "Lorg.oss.pdfreporter.engine.JRVariable;", 0x1, NULL, NULL },
    { "clone", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "serialVersionUID", 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabGroup_serialVersionUID },
    { "name_", NULL, 0x4, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "totalPositionValue_", NULL, 0x4, "Lorg.oss.pdfreporter.crosstabs.type.CrosstabTotalPositionEnum;", NULL, NULL, .constantValue.asLong = 0 },
    { "bucket_", NULL, 0x4, "Lorg.oss.pdfreporter.crosstabs.JRCrosstabBucket;", NULL, NULL, .constantValue.asLong = 0 },
    { "header_", NULL, 0x4, "Lorg.oss.pdfreporter.crosstabs.JRCellContents;", NULL, NULL, .constantValue.asLong = 0 },
    { "totalHeader_", NULL, 0x4, "Lorg.oss.pdfreporter.crosstabs.JRCellContents;", NULL, NULL, .constantValue.asLong = 0 },
    { "variable_", NULL, 0x4, "Lorg.oss.pdfreporter.engine.JRVariable;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabGroup = { 2, "JRBaseCrosstabGroup", "org.oss.pdfreporter.crosstabs.base", NULL, 0x401, 10, methods, 7, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabGroup;
}

@end

void OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabGroup_init(OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabGroup *self) {
  NSObject_init(self);
  self->totalPositionValue_ = JreLoadEnum(OrgOssPdfreporterCrosstabsTypeCrosstabTotalPositionEnum, NONE);
}

void OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabGroup_initWithOrgOssPdfreporterCrosstabsJRCrosstabGroup_withOrgOssPdfreporterEngineBaseJRBaseObjectFactory_(OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabGroup *self, id<OrgOssPdfreporterCrosstabsJRCrosstabGroup> group, OrgOssPdfreporterEngineBaseJRBaseObjectFactory *factory) {
  NSObject_init(self);
  self->totalPositionValue_ = JreLoadEnum(OrgOssPdfreporterCrosstabsTypeCrosstabTotalPositionEnum, NONE);
  [((OrgOssPdfreporterEngineBaseJRBaseObjectFactory *) nil_chk(factory)) putWithId:group withId:self];
  self->name_ = [((id<OrgOssPdfreporterCrosstabsJRCrosstabGroup>) nil_chk(group)) getName];
  self->totalPositionValue_ = [group getTotalPositionValue];
  self->bucket_ = [factory getCrosstabBucketWithOrgOssPdfreporterCrosstabsJRCrosstabBucket:[group getBucket]];
  self->header_ = [factory getCellWithOrgOssPdfreporterCrosstabsJRCellContents:[group getHeader]];
  self->totalHeader_ = [factory getCellWithOrgOssPdfreporterCrosstabsJRCellContents:[group getTotalHeader]];
  self->variable_ = [factory getVariableWithOrgOssPdfreporterEngineJRVariable:[group getVariable]];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterCrosstabsBaseJRBaseCrosstabGroup)
