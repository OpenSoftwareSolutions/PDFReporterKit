//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/crosstabs/fill/JRFillCrosstabCell.java
//

#include "J2ObjC_source.h"
#include "java/lang/Integer.h"
#include "java/lang/UnsupportedOperationException.h"
#include "org/oss/pdfreporter/crosstabs/JRCellContents.h"
#include "org/oss/pdfreporter/crosstabs/JRCrosstabCell.h"
#include "org/oss/pdfreporter/crosstabs/fill/JRFillCrosstabCell.h"
#include "org/oss/pdfreporter/crosstabs/fill/JRFillCrosstabObjectFactory.h"
#include "org/oss/pdfreporter/engine/fill/JRFillCellContents.h"

@interface OrgOssPdfreporterCrosstabsFillJRFillCrosstabCell () {
 @public
  id<OrgOssPdfreporterCrosstabsJRCrosstabCell> parentCell_;
}

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterCrosstabsFillJRFillCrosstabCell, parentCell_, id<OrgOssPdfreporterCrosstabsJRCrosstabCell>)

@implementation OrgOssPdfreporterCrosstabsFillJRFillCrosstabCell

- (instancetype)initWithOrgOssPdfreporterCrosstabsJRCrosstabCell:(id<OrgOssPdfreporterCrosstabsJRCrosstabCell>)cell
   withOrgOssPdfreporterCrosstabsFillJRFillCrosstabObjectFactory:(OrgOssPdfreporterCrosstabsFillJRFillCrosstabObjectFactory *)factory {
  OrgOssPdfreporterCrosstabsFillJRFillCrosstabCell_initWithOrgOssPdfreporterCrosstabsJRCrosstabCell_withOrgOssPdfreporterCrosstabsFillJRFillCrosstabObjectFactory_(self, cell, factory);
  return self;
}

- (NSString *)getRowTotalGroup {
  return [((id<OrgOssPdfreporterCrosstabsJRCrosstabCell>) nil_chk(parentCell_)) getRowTotalGroup];
}

- (NSString *)getColumnTotalGroup {
  return [((id<OrgOssPdfreporterCrosstabsJRCrosstabCell>) nil_chk(parentCell_)) getColumnTotalGroup];
}

- (id<OrgOssPdfreporterCrosstabsJRCellContents>)getContents {
  return contents_;
}

- (OrgOssPdfreporterEngineFillJRFillCellContents *)getFillContents {
  return contents_;
}

- (JavaLangInteger *)getWidth {
  return [((id<OrgOssPdfreporterCrosstabsJRCrosstabCell>) nil_chk(parentCell_)) getWidth];
}

- (JavaLangInteger *)getHeight {
  return [((id<OrgOssPdfreporterCrosstabsJRCrosstabCell>) nil_chk(parentCell_)) getHeight];
}

- (id)clone {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (id)copyWithZone:(NSZone *)zone {
  return [self clone];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgOssPdfreporterCrosstabsJRCrosstabCell:withOrgOssPdfreporterCrosstabsFillJRFillCrosstabObjectFactory:", "JRFillCrosstabCell", NULL, 0x1, NULL, NULL },
    { "getRowTotalGroup", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getColumnTotalGroup", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getContents", NULL, "Lorg.oss.pdfreporter.crosstabs.JRCellContents;", 0x1, NULL, NULL },
    { "getFillContents", NULL, "Lorg.oss.pdfreporter.engine.fill.JRFillCellContents;", 0x1, NULL, NULL },
    { "getWidth", NULL, "Ljava.lang.Integer;", 0x1, NULL, NULL },
    { "getHeight", NULL, "Ljava.lang.Integer;", 0x1, NULL, NULL },
    { "clone", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "parentCell_", NULL, 0x2, "Lorg.oss.pdfreporter.crosstabs.JRCrosstabCell;", NULL, NULL, .constantValue.asLong = 0 },
    { "contents_", NULL, 0x4, "Lorg.oss.pdfreporter.engine.fill.JRFillCellContents;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterCrosstabsFillJRFillCrosstabCell = { 2, "JRFillCrosstabCell", "org.oss.pdfreporter.crosstabs.fill", NULL, 0x1, 8, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterCrosstabsFillJRFillCrosstabCell;
}

@end

void OrgOssPdfreporterCrosstabsFillJRFillCrosstabCell_initWithOrgOssPdfreporterCrosstabsJRCrosstabCell_withOrgOssPdfreporterCrosstabsFillJRFillCrosstabObjectFactory_(OrgOssPdfreporterCrosstabsFillJRFillCrosstabCell *self, id<OrgOssPdfreporterCrosstabsJRCrosstabCell> cell, OrgOssPdfreporterCrosstabsFillJRFillCrosstabObjectFactory *factory) {
  NSObject_init(self);
  [((OrgOssPdfreporterCrosstabsFillJRFillCrosstabObjectFactory *) nil_chk(factory)) putWithId:cell withId:self];
  self->parentCell_ = cell;
  self->contents_ = [factory getCellWithOrgOssPdfreporterCrosstabsJRCellContents:[((id<OrgOssPdfreporterCrosstabsJRCrosstabCell>) nil_chk(cell)) getContents] withNSString:OrgOssPdfreporterCrosstabsJRCellContents_TYPE_DATA];
}

OrgOssPdfreporterCrosstabsFillJRFillCrosstabCell *new_OrgOssPdfreporterCrosstabsFillJRFillCrosstabCell_initWithOrgOssPdfreporterCrosstabsJRCrosstabCell_withOrgOssPdfreporterCrosstabsFillJRFillCrosstabObjectFactory_(id<OrgOssPdfreporterCrosstabsJRCrosstabCell> cell, OrgOssPdfreporterCrosstabsFillJRFillCrosstabObjectFactory *factory) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterCrosstabsFillJRFillCrosstabCell, initWithOrgOssPdfreporterCrosstabsJRCrosstabCell_withOrgOssPdfreporterCrosstabsFillJRFillCrosstabObjectFactory_, cell, factory)
}

OrgOssPdfreporterCrosstabsFillJRFillCrosstabCell *create_OrgOssPdfreporterCrosstabsFillJRFillCrosstabCell_initWithOrgOssPdfreporterCrosstabsJRCrosstabCell_withOrgOssPdfreporterCrosstabsFillJRFillCrosstabObjectFactory_(id<OrgOssPdfreporterCrosstabsJRCrosstabCell> cell, OrgOssPdfreporterCrosstabsFillJRFillCrosstabObjectFactory *factory) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterCrosstabsFillJRFillCrosstabCell, initWithOrgOssPdfreporterCrosstabsJRCrosstabCell_withOrgOssPdfreporterCrosstabsFillJRFillCrosstabObjectFactory_, cell, factory)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterCrosstabsFillJRFillCrosstabCell)
