//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/compilers/ExpressionParseException.java
//

#include "J2ObjC_source.h"
#include "java/lang/Exception.h"
#include "org/oss/pdfreporter/compilers/ExpressionParseException.h"

inline jlong OrgOssPdfreporterCompilersExpressionParseException_get_serialVersionUID();
#define OrgOssPdfreporterCompilersExpressionParseException_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgOssPdfreporterCompilersExpressionParseException, serialVersionUID, jlong)

@implementation OrgOssPdfreporterCompilersExpressionParseException

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterCompilersExpressionParseException_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithNSString:(NSString *)message
                 withNSException:(NSException *)cause {
  OrgOssPdfreporterCompilersExpressionParseException_initWithNSString_withNSException_(self, message, cause);
  return self;
}

- (instancetype)initWithNSString:(NSString *)message {
  OrgOssPdfreporterCompilersExpressionParseException_initWithNSString_(self, message);
  return self;
}

- (instancetype)initWithNSException:(NSException *)cause {
  OrgOssPdfreporterCompilersExpressionParseException_initWithNSException_(self, cause);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "ExpressionParseException", NULL, 0x1, NULL, NULL },
    { "initWithNSString:withNSException:", "ExpressionParseException", NULL, 0x1, NULL, NULL },
    { "initWithNSString:", "ExpressionParseException", NULL, 0x1, NULL, NULL },
    { "initWithNSException:", "ExpressionParseException", NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "serialVersionUID", 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgOssPdfreporterCompilersExpressionParseException_serialVersionUID },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterCompilersExpressionParseException = { 2, "ExpressionParseException", "org.oss.pdfreporter.compilers", NULL, 0x1, 4, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterCompilersExpressionParseException;
}

@end

void OrgOssPdfreporterCompilersExpressionParseException_init(OrgOssPdfreporterCompilersExpressionParseException *self) {
  JavaLangException_init(self);
}

OrgOssPdfreporterCompilersExpressionParseException *new_OrgOssPdfreporterCompilersExpressionParseException_init() {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterCompilersExpressionParseException, init)
}

OrgOssPdfreporterCompilersExpressionParseException *create_OrgOssPdfreporterCompilersExpressionParseException_init() {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterCompilersExpressionParseException, init)
}

void OrgOssPdfreporterCompilersExpressionParseException_initWithNSString_withNSException_(OrgOssPdfreporterCompilersExpressionParseException *self, NSString *message, NSException *cause) {
  JavaLangException_initWithNSString_withNSException_(self, message, cause);
}

OrgOssPdfreporterCompilersExpressionParseException *new_OrgOssPdfreporterCompilersExpressionParseException_initWithNSString_withNSException_(NSString *message, NSException *cause) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterCompilersExpressionParseException, initWithNSString_withNSException_, message, cause)
}

OrgOssPdfreporterCompilersExpressionParseException *create_OrgOssPdfreporterCompilersExpressionParseException_initWithNSString_withNSException_(NSString *message, NSException *cause) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterCompilersExpressionParseException, initWithNSString_withNSException_, message, cause)
}

void OrgOssPdfreporterCompilersExpressionParseException_initWithNSString_(OrgOssPdfreporterCompilersExpressionParseException *self, NSString *message) {
  JavaLangException_initWithNSString_(self, message);
}

OrgOssPdfreporterCompilersExpressionParseException *new_OrgOssPdfreporterCompilersExpressionParseException_initWithNSString_(NSString *message) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterCompilersExpressionParseException, initWithNSString_, message)
}

OrgOssPdfreporterCompilersExpressionParseException *create_OrgOssPdfreporterCompilersExpressionParseException_initWithNSString_(NSString *message) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterCompilersExpressionParseException, initWithNSString_, message)
}

void OrgOssPdfreporterCompilersExpressionParseException_initWithNSException_(OrgOssPdfreporterCompilersExpressionParseException *self, NSException *cause) {
  JavaLangException_initWithNSException_(self, cause);
}

OrgOssPdfreporterCompilersExpressionParseException *new_OrgOssPdfreporterCompilersExpressionParseException_initWithNSException_(NSException *cause) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterCompilersExpressionParseException, initWithNSException_, cause)
}

OrgOssPdfreporterCompilersExpressionParseException *create_OrgOssPdfreporterCompilersExpressionParseException_initWithNSException_(NSException *cause) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterCompilersExpressionParseException, initWithNSException_, cause)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterCompilersExpressionParseException)
