//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/compilers/jeval/functions/MessageWithArg.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/text/MessageFormat.h"
#include "java/util/Arrays.h"
#include "org/oss/pdfreporter/compilers/jeval/functions/MessageWithArg.h"
#include "org/oss/pdfreporter/uses/net/sourceforge/jeval/Evaluator.h"
#include "org/oss/pdfreporter/uses/net/sourceforge/jeval/function/FunctionConstants.h"
#include "org/oss/pdfreporter/uses/net/sourceforge/jeval/function/FunctionException.h"
#include "org/oss/pdfreporter/uses/net/sourceforge/jeval/function/FunctionResult.h"

@implementation OrgOssPdfreporterCompilersJevalFunctionsMessageWithArg

- (NSString *)getName {
  return @"message";
}

- (OrgOssPdfreporterUsesNetSourceforgeJevalFunctionFunctionResult *)executeWithOrgOssPdfreporterUsesNetSourceforgeJevalEvaluator:(OrgOssPdfreporterUsesNetSourceforgeJevalEvaluator *)evaluator
                                                                                                                    withNSString:(NSString *)arguments {
  IOSObjectArray *params = [((NSString *) nil_chk(arguments)) split:@","];
  NSString *text = (NSString *) cast_chk(IOSObjectArray_Get(nil_chk(params), 0), [NSString class]);
  if (((jint) [((NSString *) nil_chk(text)) length]) == 2) {
    text = @"";
  }
  else {
    text = [text substring:1 endIndex:((jint) [text length]) - 2];
  }
  IOSObjectArray *args = JavaUtilArrays_copyOfRangeWithNSObjectArray_withInt_withInt_(params, 1, params->size_);
  NSString *result = JavaTextMessageFormat_formatWithNSString_withNSObjectArray_(text, args);
  return new_OrgOssPdfreporterUsesNetSourceforgeJevalFunctionFunctionResult_initWithNSString_withInt_(result, OrgOssPdfreporterUsesNetSourceforgeJevalFunctionFunctionConstants_FUNCTION_RESULT_TYPE_STRING);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterCompilersJevalFunctionsMessageWithArg_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getName", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "executeWithOrgOssPdfreporterUsesNetSourceforgeJevalEvaluator:withNSString:", "execute", "Lorg.oss.pdfreporter.uses.net.sourceforge.jeval.function.FunctionResult;", 0x1, "Lorg.oss.pdfreporter.uses.net.sourceforge.jeval.function.FunctionException;", NULL },
    { "init", "MessageWithArg", NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterCompilersJevalFunctionsMessageWithArg = { 2, "MessageWithArg", "org.oss.pdfreporter.compilers.jeval.functions", NULL, 0x1, 3, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterCompilersJevalFunctionsMessageWithArg;
}

@end

void OrgOssPdfreporterCompilersJevalFunctionsMessageWithArg_init(OrgOssPdfreporterCompilersJevalFunctionsMessageWithArg *self) {
  NSObject_init(self);
}

OrgOssPdfreporterCompilersJevalFunctionsMessageWithArg *new_OrgOssPdfreporterCompilersJevalFunctionsMessageWithArg_init() {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterCompilersJevalFunctionsMessageWithArg, init)
}

OrgOssPdfreporterCompilersJevalFunctionsMessageWithArg *create_OrgOssPdfreporterCompilersJevalFunctionsMessageWithArg_init() {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterCompilersJevalFunctionsMessageWithArg, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterCompilersJevalFunctionsMessageWithArg)
