//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/compilers/jeval/functions/DisplayName.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/util/Locale.h"
#include "org/oss/pdfreporter/compilers/jeval/functions/DisplayName.h"
#include "org/oss/pdfreporter/uses/net/sourceforge/jeval/Evaluator.h"
#include "org/oss/pdfreporter/uses/net/sourceforge/jeval/function/FunctionConstants.h"
#include "org/oss/pdfreporter/uses/net/sourceforge/jeval/function/FunctionException.h"
#include "org/oss/pdfreporter/uses/net/sourceforge/jeval/function/FunctionResult.h"

@implementation OrgOssPdfreporterCompilersJevalFunctionsDisplayName

- (NSString *)getName {
  return @"displayName";
}

- (OrgOssPdfreporterUsesNetSourceforgeJevalFunctionFunctionResult *)executeWithOrgOssPdfreporterUsesNetSourceforgeJevalEvaluator:(OrgOssPdfreporterUsesNetSourceforgeJevalEvaluator *)evaluator
                                                                                                                    withNSString:(NSString *)arguments {
  IOSObjectArray *parameter = [((NSString *) nil_chk(arguments)) split:@"'|_"];
  NSString *language = IOSObjectArray_Get(nil_chk(parameter), 1);
  NSString *country = IOSObjectArray_Get(parameter, 2);
  JavaUtilLocale *locale = new_JavaUtilLocale_initWithNSString_withNSString_(language, country);
  NSString *displayName = [locale getDisplayNameWithJavaUtilLocale:locale];
  return new_OrgOssPdfreporterUsesNetSourceforgeJevalFunctionFunctionResult_initWithNSString_withInt_(displayName, OrgOssPdfreporterUsesNetSourceforgeJevalFunctionFunctionConstants_FUNCTION_RESULT_TYPE_STRING);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterCompilersJevalFunctionsDisplayName_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getName", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "executeWithOrgOssPdfreporterUsesNetSourceforgeJevalEvaluator:withNSString:", "execute", "Lorg.oss.pdfreporter.uses.net.sourceforge.jeval.function.FunctionResult;", 0x1, "Lorg.oss.pdfreporter.uses.net.sourceforge.jeval.function.FunctionException;", NULL },
    { "init", "DisplayName", NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterCompilersJevalFunctionsDisplayName = { 2, "DisplayName", "org.oss.pdfreporter.compilers.jeval.functions", NULL, 0x1, 3, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterCompilersJevalFunctionsDisplayName;
}

@end

void OrgOssPdfreporterCompilersJevalFunctionsDisplayName_init(OrgOssPdfreporterCompilersJevalFunctionsDisplayName *self) {
  NSObject_init(self);
}

OrgOssPdfreporterCompilersJevalFunctionsDisplayName *new_OrgOssPdfreporterCompilersJevalFunctionsDisplayName_init() {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterCompilersJevalFunctionsDisplayName, init)
}

OrgOssPdfreporterCompilersJevalFunctionsDisplayName *create_OrgOssPdfreporterCompilersJevalFunctionsDisplayName_init() {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterCompilersJevalFunctionsDisplayName, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterCompilersJevalFunctionsDisplayName)
