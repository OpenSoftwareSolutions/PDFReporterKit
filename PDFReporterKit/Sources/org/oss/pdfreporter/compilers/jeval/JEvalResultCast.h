//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/compilers/jeval/JEvalResultCast.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgOssPdfreporterCompilersJevalJEvalResultCast")
#ifdef RESTRICT_OrgOssPdfreporterCompilersJevalJEvalResultCast
#define INCLUDE_ALL_OrgOssPdfreporterCompilersJevalJEvalResultCast 0
#else
#define INCLUDE_ALL_OrgOssPdfreporterCompilersJevalJEvalResultCast 1
#endif
#undef RESTRICT_OrgOssPdfreporterCompilersJevalJEvalResultCast

#if !defined (OrgOssPdfreporterCompilersJevalJEvalResultCast_) && (INCLUDE_ALL_OrgOssPdfreporterCompilersJevalJEvalResultCast || defined(INCLUDE_OrgOssPdfreporterCompilersJevalJEvalResultCast))
#define OrgOssPdfreporterCompilersJevalJEvalResultCast_

#define RESTRICT_OrgOssPdfreporterCompilersIExpressionElement 1
#define INCLUDE_OrgOssPdfreporterCompilersIExpressionElement 1
#include "org/oss/pdfreporter/compilers/IExpressionElement.h"

@class OrgOssPdfreporterCompilersJevalJEvalExpression;

@interface OrgOssPdfreporterCompilersJevalJEvalResultCast : NSObject < OrgOssPdfreporterCompilersIExpressionElement >

#pragma mark Public

- (instancetype)init;

- (void)assertResultTypeWithNSString:(NSString *)result;

- (id)getEsimatedValue;

+ (NSString *)getNextWithNSString:(NSString *)text;

- (id)getOldValue;

- (id)getValue;

+ (jboolean)isCastWithNSString:(NSString *)text;

+ (OrgOssPdfreporterCompilersJevalJEvalResultCast *)parseCastWithNSString:(NSString *)s;

- (void)setExpressionWithOrgOssPdfreporterCompilersJevalJEvalExpression:(OrgOssPdfreporterCompilersJevalJEvalExpression *)expression;

@end

J2OBJC_STATIC_INIT(OrgOssPdfreporterCompilersJevalJEvalResultCast)

FOUNDATION_EXPORT void OrgOssPdfreporterCompilersJevalJEvalResultCast_init(OrgOssPdfreporterCompilersJevalJEvalResultCast *self);

FOUNDATION_EXPORT OrgOssPdfreporterCompilersJevalJEvalResultCast *new_OrgOssPdfreporterCompilersJevalJEvalResultCast_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgOssPdfreporterCompilersJevalJEvalResultCast *create_OrgOssPdfreporterCompilersJevalJEvalResultCast_init();

FOUNDATION_EXPORT jboolean OrgOssPdfreporterCompilersJevalJEvalResultCast_isCastWithNSString_(NSString *text);

FOUNDATION_EXPORT NSString *OrgOssPdfreporterCompilersJevalJEvalResultCast_getNextWithNSString_(NSString *text);

FOUNDATION_EXPORT OrgOssPdfreporterCompilersJevalJEvalResultCast *OrgOssPdfreporterCompilersJevalJEvalResultCast_parseCastWithNSString_(NSString *s);

J2OBJC_TYPE_LITERAL_HEADER(OrgOssPdfreporterCompilersJevalJEvalResultCast)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgOssPdfreporterCompilersJevalJEvalResultCast")
