//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/compilers/expressionelements/ExpressionVariable.java
//

#include "J2ObjC_source.h"
#include "org/oss/pdfreporter/compilers/IDataHolder.h"
#include "org/oss/pdfreporter/compilers/IExpressionChunk.h"
#include "org/oss/pdfreporter/compilers/expressionelements/ExpressionVariable.h"
#include "org/oss/pdfreporter/engine/fill/JRFillVariable.h"

@interface OrgOssPdfreporterCompilersExpressionelementsExpressionVariable () {
 @public
  id<OrgOssPdfreporterCompilersIDataHolder> data_;
  NSString *name_;
}

- (OrgOssPdfreporterEngineFillJRFillVariable *)getVariable;

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterCompilersExpressionelementsExpressionVariable, data_, id<OrgOssPdfreporterCompilersIDataHolder>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterCompilersExpressionelementsExpressionVariable, name_, NSString *)

__attribute__((unused)) static OrgOssPdfreporterEngineFillJRFillVariable *OrgOssPdfreporterCompilersExpressionelementsExpressionVariable_getVariable(OrgOssPdfreporterCompilersExpressionelementsExpressionVariable *self);

@implementation OrgOssPdfreporterCompilersExpressionelementsExpressionVariable

- (instancetype)initWithOrgOssPdfreporterCompilersIDataHolder:(id<OrgOssPdfreporterCompilersIDataHolder>)data
                                                 withNSString:(NSString *)name {
  OrgOssPdfreporterCompilersExpressionelementsExpressionVariable_initWithOrgOssPdfreporterCompilersIDataHolder_withNSString_(self, data, name);
  return self;
}

- (id)getValue {
  return [((OrgOssPdfreporterEngineFillJRFillVariable *) nil_chk(OrgOssPdfreporterCompilersExpressionelementsExpressionVariable_getVariable(self))) getValue];
}

- (id)getOldValue {
  return [((OrgOssPdfreporterEngineFillJRFillVariable *) nil_chk(OrgOssPdfreporterCompilersExpressionelementsExpressionVariable_getVariable(self))) getOldValue];
}

- (id)getEsimatedValue {
  return [((OrgOssPdfreporterEngineFillJRFillVariable *) nil_chk(OrgOssPdfreporterCompilersExpressionelementsExpressionVariable_getVariable(self))) getEstimatedValue];
}

- (id)getVariableHolder {
  return OrgOssPdfreporterCompilersExpressionelementsExpressionVariable_getVariable(self);
}

- (OrgOssPdfreporterCompilersIExpressionChunk_ExpresionType *)getType {
  return JreLoadEnum(OrgOssPdfreporterCompilersIExpressionChunk_ExpresionType, TYPE_VARIABLE);
}

- (NSString *)getName {
  return name_;
}

- (OrgOssPdfreporterEngineFillJRFillVariable *)getVariable {
  return OrgOssPdfreporterCompilersExpressionelementsExpressionVariable_getVariable(self);
}

- (NSString *)description {
  return JreStrcat("$$C", @"ExpressionVariable [name=", name_, ']');
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgOssPdfreporterCompilersIDataHolder:withNSString:", "ExpressionVariable", NULL, 0x1, NULL, NULL },
    { "getValue", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "getOldValue", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "getEsimatedValue", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "getVariableHolder", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "getType", NULL, "Lorg.oss.pdfreporter.compilers.IExpressionChunk$ExpresionType;", 0x1, NULL, NULL },
    { "getName", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getVariable", NULL, "Lorg.oss.pdfreporter.engine.fill.JRFillVariable;", 0x2, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "data_", NULL, 0x12, "Lorg.oss.pdfreporter.compilers.IDataHolder;", NULL, NULL, .constantValue.asLong = 0 },
    { "name_", NULL, 0x12, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterCompilersExpressionelementsExpressionVariable = { 2, "ExpressionVariable", "org.oss.pdfreporter.compilers.expressionelements", NULL, 0x1, 9, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterCompilersExpressionelementsExpressionVariable;
}

@end

void OrgOssPdfreporterCompilersExpressionelementsExpressionVariable_initWithOrgOssPdfreporterCompilersIDataHolder_withNSString_(OrgOssPdfreporterCompilersExpressionelementsExpressionVariable *self, id<OrgOssPdfreporterCompilersIDataHolder> data, NSString *name) {
  NSObject_init(self);
  self->data_ = data;
  self->name_ = name;
}

OrgOssPdfreporterCompilersExpressionelementsExpressionVariable *new_OrgOssPdfreporterCompilersExpressionelementsExpressionVariable_initWithOrgOssPdfreporterCompilersIDataHolder_withNSString_(id<OrgOssPdfreporterCompilersIDataHolder> data, NSString *name) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterCompilersExpressionelementsExpressionVariable, initWithOrgOssPdfreporterCompilersIDataHolder_withNSString_, data, name)
}

OrgOssPdfreporterCompilersExpressionelementsExpressionVariable *create_OrgOssPdfreporterCompilersExpressionelementsExpressionVariable_initWithOrgOssPdfreporterCompilersIDataHolder_withNSString_(id<OrgOssPdfreporterCompilersIDataHolder> data, NSString *name) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterCompilersExpressionelementsExpressionVariable, initWithOrgOssPdfreporterCompilersIDataHolder_withNSString_, data, name)
}

OrgOssPdfreporterEngineFillJRFillVariable *OrgOssPdfreporterCompilersExpressionelementsExpressionVariable_getVariable(OrgOssPdfreporterCompilersExpressionelementsExpressionVariable *self) {
  return [((id<OrgOssPdfreporterCompilersIDataHolder>) nil_chk(self->data_)) getVariableWithNSString:[self getName]];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterCompilersExpressionelementsExpressionVariable)
