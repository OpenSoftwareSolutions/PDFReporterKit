//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/compilers/expressionelements/ExpressionParameter.java
//

#include "J2ObjC_source.h"
#include "org/oss/pdfreporter/compilers/IDataHolder.h"
#include "org/oss/pdfreporter/compilers/IExpressionChunk.h"
#include "org/oss/pdfreporter/compilers/expressionelements/AbstractExpressionElement.h"
#include "org/oss/pdfreporter/compilers/expressionelements/ExpressionParameter.h"
#include "org/oss/pdfreporter/engine/JRValueParameter.h"

@interface OrgOssPdfreporterCompilersExpressionelementsExpressionParameter () {
 @public
  id<OrgOssPdfreporterCompilersIDataHolder> data_;
  NSString *name_;
}

- (id<OrgOssPdfreporterEngineJRValueParameter>)getParameter;

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterCompilersExpressionelementsExpressionParameter, data_, id<OrgOssPdfreporterCompilersIDataHolder>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterCompilersExpressionelementsExpressionParameter, name_, NSString *)

__attribute__((unused)) static id<OrgOssPdfreporterEngineJRValueParameter> OrgOssPdfreporterCompilersExpressionelementsExpressionParameter_getParameter(OrgOssPdfreporterCompilersExpressionelementsExpressionParameter *self);

@implementation OrgOssPdfreporterCompilersExpressionelementsExpressionParameter

- (instancetype)initWithOrgOssPdfreporterCompilersIDataHolder:(id<OrgOssPdfreporterCompilersIDataHolder>)data
                                                 withNSString:(NSString *)name {
  OrgOssPdfreporterCompilersExpressionelementsExpressionParameter_initWithOrgOssPdfreporterCompilersIDataHolder_withNSString_(self, data, name);
  return self;
}

- (id)getValue {
  return [((id<OrgOssPdfreporterEngineJRValueParameter>) nil_chk(OrgOssPdfreporterCompilersExpressionelementsExpressionParameter_getParameter(self))) getValue];
}

- (id)getVariableHolder {
  return OrgOssPdfreporterCompilersExpressionelementsExpressionParameter_getParameter(self);
}

- (OrgOssPdfreporterCompilersIExpressionChunk_ExpresionType *)getType {
  return JreLoadEnum(OrgOssPdfreporterCompilersIExpressionChunk_ExpresionType, TYPE_PARAMETER);
}

- (NSString *)getName {
  return name_;
}

- (id<OrgOssPdfreporterEngineJRValueParameter>)getParameter {
  return OrgOssPdfreporterCompilersExpressionelementsExpressionParameter_getParameter(self);
}

- (NSString *)description {
  return JreStrcat("$$C", @"ExpressionParameter [name=", name_, ']');
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgOssPdfreporterCompilersIDataHolder:withNSString:", "ExpressionParameter", NULL, 0x1, NULL, NULL },
    { "getValue", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "getVariableHolder", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "getType", NULL, "Lorg.oss.pdfreporter.compilers.IExpressionChunk$ExpresionType;", 0x1, NULL, NULL },
    { "getName", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getParameter", NULL, "Lorg.oss.pdfreporter.engine.JRValueParameter;", 0x2, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "data_", NULL, 0x12, "Lorg.oss.pdfreporter.compilers.IDataHolder;", NULL, NULL, .constantValue.asLong = 0 },
    { "name_", NULL, 0x12, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterCompilersExpressionelementsExpressionParameter = { 2, "ExpressionParameter", "org.oss.pdfreporter.compilers.expressionelements", NULL, 0x1, 7, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterCompilersExpressionelementsExpressionParameter;
}

@end

void OrgOssPdfreporterCompilersExpressionelementsExpressionParameter_initWithOrgOssPdfreporterCompilersIDataHolder_withNSString_(OrgOssPdfreporterCompilersExpressionelementsExpressionParameter *self, id<OrgOssPdfreporterCompilersIDataHolder> data, NSString *name) {
  OrgOssPdfreporterCompilersExpressionelementsAbstractExpressionElement_init(self);
  self->data_ = data;
  self->name_ = name;
}

OrgOssPdfreporterCompilersExpressionelementsExpressionParameter *new_OrgOssPdfreporterCompilersExpressionelementsExpressionParameter_initWithOrgOssPdfreporterCompilersIDataHolder_withNSString_(id<OrgOssPdfreporterCompilersIDataHolder> data, NSString *name) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterCompilersExpressionelementsExpressionParameter, initWithOrgOssPdfreporterCompilersIDataHolder_withNSString_, data, name)
}

OrgOssPdfreporterCompilersExpressionelementsExpressionParameter *create_OrgOssPdfreporterCompilersExpressionelementsExpressionParameter_initWithOrgOssPdfreporterCompilersIDataHolder_withNSString_(id<OrgOssPdfreporterCompilersIDataHolder> data, NSString *name) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterCompilersExpressionelementsExpressionParameter, initWithOrgOssPdfreporterCompilersIDataHolder_withNSString_, data, name)
}

id<OrgOssPdfreporterEngineJRValueParameter> OrgOssPdfreporterCompilersExpressionelementsExpressionParameter_getParameter(OrgOssPdfreporterCompilersExpressionelementsExpressionParameter *self) {
  return [((id<OrgOssPdfreporterCompilersIDataHolder>) nil_chk(self->data_)) getParameterWithNSString:[self getName]];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterCompilersExpressionelementsExpressionParameter)
