//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/compilers/SingleChunkExpressionFactory.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/util/ResourceBundle.h"
#include "org/oss/pdfreporter/compilers/ExpressionEvaluationException.h"
#include "org/oss/pdfreporter/compilers/ExpressionParseException.h"
#include "org/oss/pdfreporter/compilers/IDataHolder.h"
#include "org/oss/pdfreporter/compilers/IExpressionElement.h"
#include "org/oss/pdfreporter/compilers/SingleChunkExpressionFactory.h"
#include "org/oss/pdfreporter/compilers/SingleChunkTextTypeFactory.h"
#include "org/oss/pdfreporter/engine/JRExpressionChunk.h"
#include "org/oss/pdfreporter/engine/JRParameter.h"
#include "org/oss/pdfreporter/engine/JRValueParameter.h"
#include "org/oss/pdfreporter/engine/fill/JRFillField.h"
#include "org/oss/pdfreporter/engine/fill/JRFillVariable.h"

#pragma clang diagnostic ignored "-Wprotocol"

@interface OrgOssPdfreporterCompilersSingleChunkExpressionFactory_AbstractElement : NSObject < OrgOssPdfreporterCompilersIExpressionElement > {
 @public
  id<OrgOssPdfreporterCompilersIDataHolder> dataholder_;
  NSString *key_;
}

- (instancetype)initWithOrgOssPdfreporterCompilersIDataHolder:(id<OrgOssPdfreporterCompilersIDataHolder>)dataholder
                                                 withNSString:(NSString *)key;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgOssPdfreporterCompilersSingleChunkExpressionFactory_AbstractElement)

J2OBJC_FIELD_SETTER(OrgOssPdfreporterCompilersSingleChunkExpressionFactory_AbstractElement, dataholder_, id<OrgOssPdfreporterCompilersIDataHolder>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterCompilersSingleChunkExpressionFactory_AbstractElement, key_, NSString *)

__attribute__((unused)) static void OrgOssPdfreporterCompilersSingleChunkExpressionFactory_AbstractElement_initWithOrgOssPdfreporterCompilersIDataHolder_withNSString_(OrgOssPdfreporterCompilersSingleChunkExpressionFactory_AbstractElement *self, id<OrgOssPdfreporterCompilersIDataHolder> dataholder, NSString *key);

J2OBJC_TYPE_LITERAL_HEADER(OrgOssPdfreporterCompilersSingleChunkExpressionFactory_AbstractElement)

@interface OrgOssPdfreporterCompilersSingleChunkExpressionFactory_ParameterElement : OrgOssPdfreporterCompilersSingleChunkExpressionFactory_AbstractElement

- (instancetype)initWithOrgOssPdfreporterCompilersIDataHolder:(id<OrgOssPdfreporterCompilersIDataHolder>)dataholder
                                                 withNSString:(NSString *)key;

- (id)getValue;

- (id)getOldValue;

- (id)getEsimatedValue;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgOssPdfreporterCompilersSingleChunkExpressionFactory_ParameterElement)

__attribute__((unused)) static void OrgOssPdfreporterCompilersSingleChunkExpressionFactory_ParameterElement_initWithOrgOssPdfreporterCompilersIDataHolder_withNSString_(OrgOssPdfreporterCompilersSingleChunkExpressionFactory_ParameterElement *self, id<OrgOssPdfreporterCompilersIDataHolder> dataholder, NSString *key);

__attribute__((unused)) static OrgOssPdfreporterCompilersSingleChunkExpressionFactory_ParameterElement *new_OrgOssPdfreporterCompilersSingleChunkExpressionFactory_ParameterElement_initWithOrgOssPdfreporterCompilersIDataHolder_withNSString_(id<OrgOssPdfreporterCompilersIDataHolder> dataholder, NSString *key) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgOssPdfreporterCompilersSingleChunkExpressionFactory_ParameterElement *create_OrgOssPdfreporterCompilersSingleChunkExpressionFactory_ParameterElement_initWithOrgOssPdfreporterCompilersIDataHolder_withNSString_(id<OrgOssPdfreporterCompilersIDataHolder> dataholder, NSString *key);

J2OBJC_TYPE_LITERAL_HEADER(OrgOssPdfreporterCompilersSingleChunkExpressionFactory_ParameterElement)

@interface OrgOssPdfreporterCompilersSingleChunkExpressionFactory_RessourceElement : OrgOssPdfreporterCompilersSingleChunkExpressionFactory_AbstractElement

- (instancetype)initWithOrgOssPdfreporterCompilersIDataHolder:(id<OrgOssPdfreporterCompilersIDataHolder>)dataholder
                                                 withNSString:(NSString *)key;

- (id)getValue;

- (id)getOldValue;

- (id)getEsimatedValue;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgOssPdfreporterCompilersSingleChunkExpressionFactory_RessourceElement)

__attribute__((unused)) static void OrgOssPdfreporterCompilersSingleChunkExpressionFactory_RessourceElement_initWithOrgOssPdfreporterCompilersIDataHolder_withNSString_(OrgOssPdfreporterCompilersSingleChunkExpressionFactory_RessourceElement *self, id<OrgOssPdfreporterCompilersIDataHolder> dataholder, NSString *key);

__attribute__((unused)) static OrgOssPdfreporterCompilersSingleChunkExpressionFactory_RessourceElement *new_OrgOssPdfreporterCompilersSingleChunkExpressionFactory_RessourceElement_initWithOrgOssPdfreporterCompilersIDataHolder_withNSString_(id<OrgOssPdfreporterCompilersIDataHolder> dataholder, NSString *key) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgOssPdfreporterCompilersSingleChunkExpressionFactory_RessourceElement *create_OrgOssPdfreporterCompilersSingleChunkExpressionFactory_RessourceElement_initWithOrgOssPdfreporterCompilersIDataHolder_withNSString_(id<OrgOssPdfreporterCompilersIDataHolder> dataholder, NSString *key);

J2OBJC_TYPE_LITERAL_HEADER(OrgOssPdfreporterCompilersSingleChunkExpressionFactory_RessourceElement)

@interface OrgOssPdfreporterCompilersSingleChunkExpressionFactory_FieldElement : OrgOssPdfreporterCompilersSingleChunkExpressionFactory_AbstractElement

- (instancetype)initWithOrgOssPdfreporterCompilersIDataHolder:(id<OrgOssPdfreporterCompilersIDataHolder>)dataholder
                                                 withNSString:(NSString *)key;

- (id)getValue;

- (id)getOldValue;

- (id)getEsimatedValue;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgOssPdfreporterCompilersSingleChunkExpressionFactory_FieldElement)

__attribute__((unused)) static void OrgOssPdfreporterCompilersSingleChunkExpressionFactory_FieldElement_initWithOrgOssPdfreporterCompilersIDataHolder_withNSString_(OrgOssPdfreporterCompilersSingleChunkExpressionFactory_FieldElement *self, id<OrgOssPdfreporterCompilersIDataHolder> dataholder, NSString *key);

__attribute__((unused)) static OrgOssPdfreporterCompilersSingleChunkExpressionFactory_FieldElement *new_OrgOssPdfreporterCompilersSingleChunkExpressionFactory_FieldElement_initWithOrgOssPdfreporterCompilersIDataHolder_withNSString_(id<OrgOssPdfreporterCompilersIDataHolder> dataholder, NSString *key) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgOssPdfreporterCompilersSingleChunkExpressionFactory_FieldElement *create_OrgOssPdfreporterCompilersSingleChunkExpressionFactory_FieldElement_initWithOrgOssPdfreporterCompilersIDataHolder_withNSString_(id<OrgOssPdfreporterCompilersIDataHolder> dataholder, NSString *key);

J2OBJC_TYPE_LITERAL_HEADER(OrgOssPdfreporterCompilersSingleChunkExpressionFactory_FieldElement)

@interface OrgOssPdfreporterCompilersSingleChunkExpressionFactory_VariableElement : OrgOssPdfreporterCompilersSingleChunkExpressionFactory_AbstractElement

- (instancetype)initWithOrgOssPdfreporterCompilersIDataHolder:(id<OrgOssPdfreporterCompilersIDataHolder>)dataholder
                                                 withNSString:(NSString *)key;

- (id)getValue;

- (id)getOldValue;

- (id)getEsimatedValue;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgOssPdfreporterCompilersSingleChunkExpressionFactory_VariableElement)

__attribute__((unused)) static void OrgOssPdfreporterCompilersSingleChunkExpressionFactory_VariableElement_initWithOrgOssPdfreporterCompilersIDataHolder_withNSString_(OrgOssPdfreporterCompilersSingleChunkExpressionFactory_VariableElement *self, id<OrgOssPdfreporterCompilersIDataHolder> dataholder, NSString *key);

__attribute__((unused)) static OrgOssPdfreporterCompilersSingleChunkExpressionFactory_VariableElement *new_OrgOssPdfreporterCompilersSingleChunkExpressionFactory_VariableElement_initWithOrgOssPdfreporterCompilersIDataHolder_withNSString_(id<OrgOssPdfreporterCompilersIDataHolder> dataholder, NSString *key) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgOssPdfreporterCompilersSingleChunkExpressionFactory_VariableElement *create_OrgOssPdfreporterCompilersSingleChunkExpressionFactory_VariableElement_initWithOrgOssPdfreporterCompilersIDataHolder_withNSString_(id<OrgOssPdfreporterCompilersIDataHolder> dataholder, NSString *key);

J2OBJC_TYPE_LITERAL_HEADER(OrgOssPdfreporterCompilersSingleChunkExpressionFactory_VariableElement)

@implementation OrgOssPdfreporterCompilersSingleChunkExpressionFactory

+ (id<OrgOssPdfreporterCompilersIExpressionElement>)buildExpressionWithOrgOssPdfreporterCompilersIDataHolder:(id<OrgOssPdfreporterCompilersIDataHolder>)dataholder
                                                                withOrgOssPdfreporterEngineJRExpressionChunk:(id<OrgOssPdfreporterEngineJRExpressionChunk>)chunk {
  return OrgOssPdfreporterCompilersSingleChunkExpressionFactory_buildExpressionWithOrgOssPdfreporterCompilersIDataHolder_withOrgOssPdfreporterEngineJRExpressionChunk_(dataholder, chunk);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterCompilersSingleChunkExpressionFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "buildExpressionWithOrgOssPdfreporterCompilersIDataHolder:withOrgOssPdfreporterEngineJRExpressionChunk:", "buildExpression", "Lorg.oss.pdfreporter.compilers.IExpressionElement;", 0x9, "Lorg.oss.pdfreporter.compilers.ExpressionParseException;", NULL },
    { "init", "SingleChunkExpressionFactory", NULL, 0x1, NULL, NULL },
  };
  static const char *inner_classes[] = {"Lorg.oss.pdfreporter.compilers.SingleChunkExpressionFactory$AbstractElement;", "Lorg.oss.pdfreporter.compilers.SingleChunkExpressionFactory$ParameterElement;", "Lorg.oss.pdfreporter.compilers.SingleChunkExpressionFactory$RessourceElement;", "Lorg.oss.pdfreporter.compilers.SingleChunkExpressionFactory$FieldElement;", "Lorg.oss.pdfreporter.compilers.SingleChunkExpressionFactory$VariableElement;"};
  static const J2ObjcClassInfo _OrgOssPdfreporterCompilersSingleChunkExpressionFactory = { 2, "SingleChunkExpressionFactory", "org.oss.pdfreporter.compilers", NULL, 0x1, 2, methods, 0, NULL, 0, NULL, 5, inner_classes, NULL, NULL };
  return &_OrgOssPdfreporterCompilersSingleChunkExpressionFactory;
}

@end

id<OrgOssPdfreporterCompilersIExpressionElement> OrgOssPdfreporterCompilersSingleChunkExpressionFactory_buildExpressionWithOrgOssPdfreporterCompilersIDataHolder_withOrgOssPdfreporterEngineJRExpressionChunk_(id<OrgOssPdfreporterCompilersIDataHolder> dataholder, id<OrgOssPdfreporterEngineJRExpressionChunk> chunk) {
  OrgOssPdfreporterCompilersSingleChunkExpressionFactory_initialize();
  NSString *chunkText = [((id<OrgOssPdfreporterEngineJRExpressionChunk>) nil_chk(chunk)) getText];
  if (chunkText == nil) {
    chunkText = @"";
  }
  switch ([chunk getType]) {
    case OrgOssPdfreporterEngineJRExpressionChunk_TYPE_TEXT:
    {
      return OrgOssPdfreporterCompilersSingleChunkTextTypeFactory_buildExpressionWithNSString_(chunkText);
    }
    case OrgOssPdfreporterEngineJRExpressionChunk_TYPE_PARAMETER:
    {
      return new_OrgOssPdfreporterCompilersSingleChunkExpressionFactory_ParameterElement_initWithOrgOssPdfreporterCompilersIDataHolder_withNSString_(dataholder, chunkText);
    }
    case OrgOssPdfreporterEngineJRExpressionChunk_TYPE_FIELD:
    {
      return new_OrgOssPdfreporterCompilersSingleChunkExpressionFactory_FieldElement_initWithOrgOssPdfreporterCompilersIDataHolder_withNSString_(dataholder, chunkText);
    }
    case OrgOssPdfreporterEngineJRExpressionChunk_TYPE_VARIABLE:
    {
      return new_OrgOssPdfreporterCompilersSingleChunkExpressionFactory_VariableElement_initWithOrgOssPdfreporterCompilersIDataHolder_withNSString_(dataholder, chunkText);
    }
    case OrgOssPdfreporterEngineJRExpressionChunk_TYPE_RESOURCE:
    {
      return new_OrgOssPdfreporterCompilersSingleChunkExpressionFactory_RessourceElement_initWithOrgOssPdfreporterCompilersIDataHolder_withNSString_(dataholder, chunkText);
    }
  }
  @throw new_OrgOssPdfreporterCompilersExpressionParseException_initWithNSString_(JreStrcat("$B$$", @"Unreachable type: ", [chunk getType], @", text: ", chunkText));
}

void OrgOssPdfreporterCompilersSingleChunkExpressionFactory_init(OrgOssPdfreporterCompilersSingleChunkExpressionFactory *self) {
  NSObject_init(self);
}

OrgOssPdfreporterCompilersSingleChunkExpressionFactory *new_OrgOssPdfreporterCompilersSingleChunkExpressionFactory_init() {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterCompilersSingleChunkExpressionFactory, init)
}

OrgOssPdfreporterCompilersSingleChunkExpressionFactory *create_OrgOssPdfreporterCompilersSingleChunkExpressionFactory_init() {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterCompilersSingleChunkExpressionFactory, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterCompilersSingleChunkExpressionFactory)

@implementation OrgOssPdfreporterCompilersSingleChunkExpressionFactory_AbstractElement

- (instancetype)initWithOrgOssPdfreporterCompilersIDataHolder:(id<OrgOssPdfreporterCompilersIDataHolder>)dataholder
                                                 withNSString:(NSString *)key {
  OrgOssPdfreporterCompilersSingleChunkExpressionFactory_AbstractElement_initWithOrgOssPdfreporterCompilersIDataHolder_withNSString_(self, dataholder, key);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgOssPdfreporterCompilersIDataHolder:withNSString:", "AbstractElement", NULL, 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "dataholder_", NULL, 0x14, "Lorg.oss.pdfreporter.compilers.IDataHolder;", NULL, NULL, .constantValue.asLong = 0 },
    { "key_", NULL, 0x14, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterCompilersSingleChunkExpressionFactory_AbstractElement = { 2, "AbstractElement", "org.oss.pdfreporter.compilers", "SingleChunkExpressionFactory", 0x40a, 1, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterCompilersSingleChunkExpressionFactory_AbstractElement;
}

@end

void OrgOssPdfreporterCompilersSingleChunkExpressionFactory_AbstractElement_initWithOrgOssPdfreporterCompilersIDataHolder_withNSString_(OrgOssPdfreporterCompilersSingleChunkExpressionFactory_AbstractElement *self, id<OrgOssPdfreporterCompilersIDataHolder> dataholder, NSString *key) {
  NSObject_init(self);
  self->dataholder_ = dataholder;
  self->key_ = key;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterCompilersSingleChunkExpressionFactory_AbstractElement)

@implementation OrgOssPdfreporterCompilersSingleChunkExpressionFactory_ParameterElement

- (instancetype)initWithOrgOssPdfreporterCompilersIDataHolder:(id<OrgOssPdfreporterCompilersIDataHolder>)dataholder
                                                 withNSString:(NSString *)key {
  OrgOssPdfreporterCompilersSingleChunkExpressionFactory_ParameterElement_initWithOrgOssPdfreporterCompilersIDataHolder_withNSString_(self, dataholder, key);
  return self;
}

- (id)getValue {
  return [((id<OrgOssPdfreporterEngineJRValueParameter>) nil_chk([((id<OrgOssPdfreporterCompilersIDataHolder>) nil_chk(dataholder_)) getParameterWithNSString:key_])) getValue];
}

- (id)getOldValue {
  return [self getValue];
}

- (id)getEsimatedValue {
  return [self getValue];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgOssPdfreporterCompilersIDataHolder:withNSString:", "ParameterElement", NULL, 0x2, NULL, NULL },
    { "getValue", NULL, "Ljava.lang.Object;", 0x1, "Lorg.oss.pdfreporter.compilers.ExpressionEvaluationException;", NULL },
    { "getOldValue", NULL, "Ljava.lang.Object;", 0x1, "Lorg.oss.pdfreporter.compilers.ExpressionEvaluationException;", NULL },
    { "getEsimatedValue", NULL, "Ljava.lang.Object;", 0x1, "Lorg.oss.pdfreporter.compilers.ExpressionEvaluationException;", NULL },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterCompilersSingleChunkExpressionFactory_ParameterElement = { 2, "ParameterElement", "org.oss.pdfreporter.compilers", "SingleChunkExpressionFactory", 0xa, 4, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterCompilersSingleChunkExpressionFactory_ParameterElement;
}

@end

void OrgOssPdfreporterCompilersSingleChunkExpressionFactory_ParameterElement_initWithOrgOssPdfreporterCompilersIDataHolder_withNSString_(OrgOssPdfreporterCompilersSingleChunkExpressionFactory_ParameterElement *self, id<OrgOssPdfreporterCompilersIDataHolder> dataholder, NSString *key) {
  OrgOssPdfreporterCompilersSingleChunkExpressionFactory_AbstractElement_initWithOrgOssPdfreporterCompilersIDataHolder_withNSString_(self, dataholder, key);
}

OrgOssPdfreporterCompilersSingleChunkExpressionFactory_ParameterElement *new_OrgOssPdfreporterCompilersSingleChunkExpressionFactory_ParameterElement_initWithOrgOssPdfreporterCompilersIDataHolder_withNSString_(id<OrgOssPdfreporterCompilersIDataHolder> dataholder, NSString *key) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterCompilersSingleChunkExpressionFactory_ParameterElement, initWithOrgOssPdfreporterCompilersIDataHolder_withNSString_, dataholder, key)
}

OrgOssPdfreporterCompilersSingleChunkExpressionFactory_ParameterElement *create_OrgOssPdfreporterCompilersSingleChunkExpressionFactory_ParameterElement_initWithOrgOssPdfreporterCompilersIDataHolder_withNSString_(id<OrgOssPdfreporterCompilersIDataHolder> dataholder, NSString *key) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterCompilersSingleChunkExpressionFactory_ParameterElement, initWithOrgOssPdfreporterCompilersIDataHolder_withNSString_, dataholder, key)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterCompilersSingleChunkExpressionFactory_ParameterElement)

@implementation OrgOssPdfreporterCompilersSingleChunkExpressionFactory_RessourceElement

- (instancetype)initWithOrgOssPdfreporterCompilersIDataHolder:(id<OrgOssPdfreporterCompilersIDataHolder>)dataholder
                                                 withNSString:(NSString *)key {
  OrgOssPdfreporterCompilersSingleChunkExpressionFactory_RessourceElement_initWithOrgOssPdfreporterCompilersIDataHolder_withNSString_(self, dataholder, key);
  return self;
}

- (id)getValue {
  id<OrgOssPdfreporterEngineJRValueParameter> parameter = [((id<OrgOssPdfreporterCompilersIDataHolder>) nil_chk(dataholder_)) getParameterWithNSString:OrgOssPdfreporterEngineJRParameter_REPORT_RESOURCE_BUNDLE];
  JavaUtilResourceBundle *resourceBundle = (JavaUtilResourceBundle *) cast_chk([((id<OrgOssPdfreporterEngineJRValueParameter>) nil_chk(parameter)) getValue], [JavaUtilResourceBundle class]);
  return [((JavaUtilResourceBundle *) nil_chk(resourceBundle)) getStringWithNSString:key_];
}

- (id)getOldValue {
  return [self getValue];
}

- (id)getEsimatedValue {
  return [self getValue];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgOssPdfreporterCompilersIDataHolder:withNSString:", "RessourceElement", NULL, 0x2, NULL, NULL },
    { "getValue", NULL, "Ljava.lang.Object;", 0x1, "Lorg.oss.pdfreporter.compilers.ExpressionEvaluationException;", NULL },
    { "getOldValue", NULL, "Ljava.lang.Object;", 0x1, "Lorg.oss.pdfreporter.compilers.ExpressionEvaluationException;", NULL },
    { "getEsimatedValue", NULL, "Ljava.lang.Object;", 0x1, "Lorg.oss.pdfreporter.compilers.ExpressionEvaluationException;", NULL },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterCompilersSingleChunkExpressionFactory_RessourceElement = { 2, "RessourceElement", "org.oss.pdfreporter.compilers", "SingleChunkExpressionFactory", 0xa, 4, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterCompilersSingleChunkExpressionFactory_RessourceElement;
}

@end

void OrgOssPdfreporterCompilersSingleChunkExpressionFactory_RessourceElement_initWithOrgOssPdfreporterCompilersIDataHolder_withNSString_(OrgOssPdfreporterCompilersSingleChunkExpressionFactory_RessourceElement *self, id<OrgOssPdfreporterCompilersIDataHolder> dataholder, NSString *key) {
  OrgOssPdfreporterCompilersSingleChunkExpressionFactory_AbstractElement_initWithOrgOssPdfreporterCompilersIDataHolder_withNSString_(self, dataholder, key);
}

OrgOssPdfreporterCompilersSingleChunkExpressionFactory_RessourceElement *new_OrgOssPdfreporterCompilersSingleChunkExpressionFactory_RessourceElement_initWithOrgOssPdfreporterCompilersIDataHolder_withNSString_(id<OrgOssPdfreporterCompilersIDataHolder> dataholder, NSString *key) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterCompilersSingleChunkExpressionFactory_RessourceElement, initWithOrgOssPdfreporterCompilersIDataHolder_withNSString_, dataholder, key)
}

OrgOssPdfreporterCompilersSingleChunkExpressionFactory_RessourceElement *create_OrgOssPdfreporterCompilersSingleChunkExpressionFactory_RessourceElement_initWithOrgOssPdfreporterCompilersIDataHolder_withNSString_(id<OrgOssPdfreporterCompilersIDataHolder> dataholder, NSString *key) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterCompilersSingleChunkExpressionFactory_RessourceElement, initWithOrgOssPdfreporterCompilersIDataHolder_withNSString_, dataholder, key)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterCompilersSingleChunkExpressionFactory_RessourceElement)

@implementation OrgOssPdfreporterCompilersSingleChunkExpressionFactory_FieldElement

- (instancetype)initWithOrgOssPdfreporterCompilersIDataHolder:(id<OrgOssPdfreporterCompilersIDataHolder>)dataholder
                                                 withNSString:(NSString *)key {
  OrgOssPdfreporterCompilersSingleChunkExpressionFactory_FieldElement_initWithOrgOssPdfreporterCompilersIDataHolder_withNSString_(self, dataholder, key);
  return self;
}

- (id)getValue {
  return [((OrgOssPdfreporterEngineFillJRFillField *) nil_chk([((id<OrgOssPdfreporterCompilersIDataHolder>) nil_chk(dataholder_)) getFieldWithNSString:key_])) getValue];
}

- (id)getOldValue {
  return [((OrgOssPdfreporterEngineFillJRFillField *) nil_chk([((id<OrgOssPdfreporterCompilersIDataHolder>) nil_chk(dataholder_)) getFieldWithNSString:key_])) getOldValue];
}

- (id)getEsimatedValue {
  return [self getValue];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgOssPdfreporterCompilersIDataHolder:withNSString:", "FieldElement", NULL, 0x2, NULL, NULL },
    { "getValue", NULL, "Ljava.lang.Object;", 0x1, "Lorg.oss.pdfreporter.compilers.ExpressionEvaluationException;", NULL },
    { "getOldValue", NULL, "Ljava.lang.Object;", 0x1, "Lorg.oss.pdfreporter.compilers.ExpressionEvaluationException;", NULL },
    { "getEsimatedValue", NULL, "Ljava.lang.Object;", 0x1, "Lorg.oss.pdfreporter.compilers.ExpressionEvaluationException;", NULL },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterCompilersSingleChunkExpressionFactory_FieldElement = { 2, "FieldElement", "org.oss.pdfreporter.compilers", "SingleChunkExpressionFactory", 0xa, 4, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterCompilersSingleChunkExpressionFactory_FieldElement;
}

@end

void OrgOssPdfreporterCompilersSingleChunkExpressionFactory_FieldElement_initWithOrgOssPdfreporterCompilersIDataHolder_withNSString_(OrgOssPdfreporterCompilersSingleChunkExpressionFactory_FieldElement *self, id<OrgOssPdfreporterCompilersIDataHolder> dataholder, NSString *key) {
  OrgOssPdfreporterCompilersSingleChunkExpressionFactory_AbstractElement_initWithOrgOssPdfreporterCompilersIDataHolder_withNSString_(self, dataholder, key);
}

OrgOssPdfreporterCompilersSingleChunkExpressionFactory_FieldElement *new_OrgOssPdfreporterCompilersSingleChunkExpressionFactory_FieldElement_initWithOrgOssPdfreporterCompilersIDataHolder_withNSString_(id<OrgOssPdfreporterCompilersIDataHolder> dataholder, NSString *key) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterCompilersSingleChunkExpressionFactory_FieldElement, initWithOrgOssPdfreporterCompilersIDataHolder_withNSString_, dataholder, key)
}

OrgOssPdfreporterCompilersSingleChunkExpressionFactory_FieldElement *create_OrgOssPdfreporterCompilersSingleChunkExpressionFactory_FieldElement_initWithOrgOssPdfreporterCompilersIDataHolder_withNSString_(id<OrgOssPdfreporterCompilersIDataHolder> dataholder, NSString *key) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterCompilersSingleChunkExpressionFactory_FieldElement, initWithOrgOssPdfreporterCompilersIDataHolder_withNSString_, dataholder, key)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterCompilersSingleChunkExpressionFactory_FieldElement)

@implementation OrgOssPdfreporterCompilersSingleChunkExpressionFactory_VariableElement

- (instancetype)initWithOrgOssPdfreporterCompilersIDataHolder:(id<OrgOssPdfreporterCompilersIDataHolder>)dataholder
                                                 withNSString:(NSString *)key {
  OrgOssPdfreporterCompilersSingleChunkExpressionFactory_VariableElement_initWithOrgOssPdfreporterCompilersIDataHolder_withNSString_(self, dataholder, key);
  return self;
}

- (id)getValue {
  return [((OrgOssPdfreporterEngineFillJRFillVariable *) nil_chk([((id<OrgOssPdfreporterCompilersIDataHolder>) nil_chk(dataholder_)) getVariableWithNSString:key_])) getValue];
}

- (id)getOldValue {
  return [((OrgOssPdfreporterEngineFillJRFillVariable *) nil_chk([((id<OrgOssPdfreporterCompilersIDataHolder>) nil_chk(dataholder_)) getVariableWithNSString:key_])) getOldValue];
}

- (id)getEsimatedValue {
  return [((OrgOssPdfreporterEngineFillJRFillVariable *) nil_chk([((id<OrgOssPdfreporterCompilersIDataHolder>) nil_chk(dataholder_)) getVariableWithNSString:key_])) getEstimatedValue];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgOssPdfreporterCompilersIDataHolder:withNSString:", "VariableElement", NULL, 0x2, NULL, NULL },
    { "getValue", NULL, "Ljava.lang.Object;", 0x1, "Lorg.oss.pdfreporter.compilers.ExpressionEvaluationException;", NULL },
    { "getOldValue", NULL, "Ljava.lang.Object;", 0x1, "Lorg.oss.pdfreporter.compilers.ExpressionEvaluationException;", NULL },
    { "getEsimatedValue", NULL, "Ljava.lang.Object;", 0x1, "Lorg.oss.pdfreporter.compilers.ExpressionEvaluationException;", NULL },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterCompilersSingleChunkExpressionFactory_VariableElement = { 2, "VariableElement", "org.oss.pdfreporter.compilers", "SingleChunkExpressionFactory", 0xa, 4, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterCompilersSingleChunkExpressionFactory_VariableElement;
}

@end

void OrgOssPdfreporterCompilersSingleChunkExpressionFactory_VariableElement_initWithOrgOssPdfreporterCompilersIDataHolder_withNSString_(OrgOssPdfreporterCompilersSingleChunkExpressionFactory_VariableElement *self, id<OrgOssPdfreporterCompilersIDataHolder> dataholder, NSString *key) {
  OrgOssPdfreporterCompilersSingleChunkExpressionFactory_AbstractElement_initWithOrgOssPdfreporterCompilersIDataHolder_withNSString_(self, dataholder, key);
}

OrgOssPdfreporterCompilersSingleChunkExpressionFactory_VariableElement *new_OrgOssPdfreporterCompilersSingleChunkExpressionFactory_VariableElement_initWithOrgOssPdfreporterCompilersIDataHolder_withNSString_(id<OrgOssPdfreporterCompilersIDataHolder> dataholder, NSString *key) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterCompilersSingleChunkExpressionFactory_VariableElement, initWithOrgOssPdfreporterCompilersIDataHolder_withNSString_, dataholder, key)
}

OrgOssPdfreporterCompilersSingleChunkExpressionFactory_VariableElement *create_OrgOssPdfreporterCompilersSingleChunkExpressionFactory_VariableElement_initWithOrgOssPdfreporterCompilersIDataHolder_withNSString_(id<OrgOssPdfreporterCompilersIDataHolder> dataholder, NSString *key) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterCompilersSingleChunkExpressionFactory_VariableElement, initWithOrgOssPdfreporterCompilersIDataHolder_withNSString_, dataholder, key)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterCompilersSingleChunkExpressionFactory_VariableElement)
