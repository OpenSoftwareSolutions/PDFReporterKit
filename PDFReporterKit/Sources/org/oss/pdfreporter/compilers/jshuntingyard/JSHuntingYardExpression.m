//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/compilers/jshuntingyard/JSHuntingYardExpression.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/StringBuffer.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/HashMap.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "java/util/logging/Level.h"
#include "java/util/logging/Logger.h"
#include "org/oss/pdfreporter/compilers/ExpressionEvaluationException.h"
#include "org/oss/pdfreporter/compilers/ExpressionParseException.h"
#include "org/oss/pdfreporter/compilers/IExpressionChunk.h"
#include "org/oss/pdfreporter/compilers/IVariable.h"
#include "org/oss/pdfreporter/compilers/IVariableExpressionChunk.h"
#include "org/oss/pdfreporter/compilers/jshuntingyard/JSHuntingYardExpression.h"
#include "org/oss/pdfreporter/compilers/jshuntingyard/functions/BooleanConverter.h"
#include "org/oss/pdfreporter/compilers/jshuntingyard/functions/BytesAsStream.h"
#include "org/oss/pdfreporter/compilers/jshuntingyard/functions/Conditional.h"
#include "org/oss/pdfreporter/compilers/jshuntingyard/functions/CurrentDate.h"
#include "org/oss/pdfreporter/compilers/jshuntingyard/functions/DateStringConverter.h"
#include "org/oss/pdfreporter/compilers/jshuntingyard/functions/DecodeBase64Bytes.h"
#include "org/oss/pdfreporter/compilers/jshuntingyard/functions/DecodeBase64String.h"
#include "org/oss/pdfreporter/compilers/jshuntingyard/functions/DisplayName.h"
#include "org/oss/pdfreporter/compilers/jshuntingyard/functions/DoubleStringConverter.h"
#include "org/oss/pdfreporter/compilers/jshuntingyard/functions/FloatStringConverter.h"
#include "org/oss/pdfreporter/compilers/jshuntingyard/functions/IntegerStringConverter.h"
#include "org/oss/pdfreporter/compilers/jshuntingyard/functions/IsNull.h"
#include "org/oss/pdfreporter/compilers/jshuntingyard/functions/LongStringConverter.h"
#include "org/oss/pdfreporter/compilers/jshuntingyard/functions/Message.h"
#include "org/oss/pdfreporter/compilers/jshuntingyard/functions/MessageWithArgs.h"
#include "org/oss/pdfreporter/compilers/jshuntingyard/functions/SubDataSource.h"
#include "org/oss/pdfreporter/compilers/jshuntingyard/functions/ToMilliseconds.h"
#include "org/oss/pdfreporter/compilers/jshuntingyard/functions/TruncateDateTo.h"
#include "org/oss/pdfreporter/compilers/util/ResultUtil.h"
#include "org/oss/pdfreporter/uses/org/oss/jshuntingyard/evaluator/FunctionElement.h"
#include "org/oss/pdfreporter/uses/org/oss/jshuntingyard/evaluator/FunctionElementArgument.h"
#include "org/oss/pdfreporter/uses/org/oss/jshuntingyard/evaluator/interpreter/Evaluator.h"
#include "org/oss/pdfreporter/uses/org/oss/jshuntingyard/evaluator/interpreter/Variable.h"

@interface OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression () {
 @public
  id<JavaUtilMap> variables_;
  id<JavaUtilCollection> userFunctions_;
  OrgOssPdfreporterUsesOrgOssJshuntingyardEvaluatorInterpreterEvaluator *newEval_;
  OrgOssPdfreporterUsesOrgOssJshuntingyardEvaluatorInterpreterEvaluator *oldEval_;
  NSString *expression_;
}

- (void)putFunctionWithOrgOssPdfreporterUsesOrgOssJshuntingyardEvaluatorFunctionElement:(id<OrgOssPdfreporterUsesOrgOssJshuntingyardEvaluatorFunctionElement>)function;

- (void)parseWithJavaUtilList:(id<JavaUtilList>)chunks;

- (NSString *)buildExpressionWithJavaUtilList:(id<JavaUtilList>)chunks;

- (NSString *)getKeyWithOrgOssPdfreporterCompilersIExpressionChunk_ExpresionType:(OrgOssPdfreporterCompilersIExpressionChunk_ExpresionType *)type
                                                                    withNSString:(NSString *)name;

- (void)bindVariablesWithOrgOssPdfreporterUsesOrgOssJshuntingyardEvaluatorInterpreterEvaluator:(OrgOssPdfreporterUsesOrgOssJshuntingyardEvaluatorInterpreterEvaluator *)evaluator
                                                                               withJavaUtilMap:(id<JavaUtilMap>)variables
                                                                                   withBoolean:(jboolean)oldValue;

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression, variables_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression, userFunctions_, id<JavaUtilCollection>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression, newEval_, OrgOssPdfreporterUsesOrgOssJshuntingyardEvaluatorInterpreterEvaluator *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression, oldEval_, OrgOssPdfreporterUsesOrgOssJshuntingyardEvaluatorInterpreterEvaluator *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression, expression_, NSString *)

inline JavaUtilLoggingLogger *OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_get_logger();
static JavaUtilLoggingLogger *OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_logger;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression, logger, JavaUtilLoggingLogger *)

__attribute__((unused)) static void OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_putFunctionWithOrgOssPdfreporterUsesOrgOssJshuntingyardEvaluatorFunctionElement_(OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression *self, id<OrgOssPdfreporterUsesOrgOssJshuntingyardEvaluatorFunctionElement> function);

__attribute__((unused)) static void OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_parseWithJavaUtilList_(OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression *self, id<JavaUtilList> chunks);

__attribute__((unused)) static NSString *OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_buildExpressionWithJavaUtilList_(OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression *self, id<JavaUtilList> chunks);

__attribute__((unused)) static NSString *OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_getKeyWithOrgOssPdfreporterCompilersIExpressionChunk_ExpresionType_withNSString_(OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression *self, OrgOssPdfreporterCompilersIExpressionChunk_ExpresionType *type, NSString *name);

__attribute__((unused)) static void OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_bindVariablesWithOrgOssPdfreporterUsesOrgOssJshuntingyardEvaluatorInterpreterEvaluator_withJavaUtilMap_withBoolean_(OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression *self, OrgOssPdfreporterUsesOrgOssJshuntingyardEvaluatorInterpreterEvaluator *evaluator, id<JavaUtilMap> variables, jboolean oldValue);

@interface OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_NewValue : NSObject < OrgOssPdfreporterUsesOrgOssJshuntingyardEvaluatorInterpreterVariable > {
 @public
  NSString *name_;
  id<OrgOssPdfreporterCompilersIVariable> delegate_;
}

- (instancetype)initWithNSString:(NSString *)name
withOrgOssPdfreporterCompilersIVariable:(id<OrgOssPdfreporterCompilersIVariable>)variable;

- (NSString *)getName;

- (id)getValue;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_NewValue)

J2OBJC_FIELD_SETTER(OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_NewValue, name_, NSString *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_NewValue, delegate_, id<OrgOssPdfreporterCompilersIVariable>)

__attribute__((unused)) static void OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_NewValue_initWithNSString_withOrgOssPdfreporterCompilersIVariable_(OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_NewValue *self, NSString *name, id<OrgOssPdfreporterCompilersIVariable> variable);

__attribute__((unused)) static OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_NewValue *new_OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_NewValue_initWithNSString_withOrgOssPdfreporterCompilersIVariable_(NSString *name, id<OrgOssPdfreporterCompilersIVariable> variable) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_NewValue *create_OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_NewValue_initWithNSString_withOrgOssPdfreporterCompilersIVariable_(NSString *name, id<OrgOssPdfreporterCompilersIVariable> variable);

J2OBJC_TYPE_LITERAL_HEADER(OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_NewValue)

@interface OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_OldValue : NSObject < OrgOssPdfreporterUsesOrgOssJshuntingyardEvaluatorInterpreterVariable > {
 @public
  NSString *name_;
  id<OrgOssPdfreporterCompilersIVariable> delegate_;
}

- (instancetype)initWithNSString:(NSString *)name
withOrgOssPdfreporterCompilersIVariable:(id<OrgOssPdfreporterCompilersIVariable>)variable;

- (NSString *)getName;

- (id)getValue;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_OldValue)

J2OBJC_FIELD_SETTER(OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_OldValue, name_, NSString *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_OldValue, delegate_, id<OrgOssPdfreporterCompilersIVariable>)

__attribute__((unused)) static void OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_OldValue_initWithNSString_withOrgOssPdfreporterCompilersIVariable_(OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_OldValue *self, NSString *name, id<OrgOssPdfreporterCompilersIVariable> variable);

__attribute__((unused)) static OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_OldValue *new_OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_OldValue_initWithNSString_withOrgOssPdfreporterCompilersIVariable_(NSString *name, id<OrgOssPdfreporterCompilersIVariable> variable) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_OldValue *create_OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_OldValue_initWithNSString_withOrgOssPdfreporterCompilersIVariable_(NSString *name, id<OrgOssPdfreporterCompilersIVariable> variable);

J2OBJC_TYPE_LITERAL_HEADER(OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_OldValue)

J2OBJC_INITIALIZED_DEFN(OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression)

@implementation OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression

+ (OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression *)newInstanceWithJavaUtilList:(id<JavaUtilList>)chunks {
  return OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_newInstanceWithJavaUtilList_(chunks);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)putFunctionWithOrgOssPdfreporterUsesOrgOssJshuntingyardEvaluatorFunctionElement:(id<OrgOssPdfreporterUsesOrgOssJshuntingyardEvaluatorFunctionElement>)function {
  OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_putFunctionWithOrgOssPdfreporterUsesOrgOssJshuntingyardEvaluatorFunctionElement_(self, function);
}

- (void)parseWithJavaUtilList:(id<JavaUtilList>)chunks {
  OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_parseWithJavaUtilList_(self, chunks);
}

- (NSString *)getExpression {
  return expression_;
}

- (NSString *)buildExpressionWithJavaUtilList:(id<JavaUtilList>)chunks {
  return OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_buildExpressionWithJavaUtilList_(self, chunks);
}

- (NSString *)getKeyWithOrgOssPdfreporterCompilersIExpressionChunk_ExpresionType:(OrgOssPdfreporterCompilersIExpressionChunk_ExpresionType *)type
                                                                    withNSString:(NSString *)name {
  return OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_getKeyWithOrgOssPdfreporterCompilersIExpressionChunk_ExpresionType_withNSString_(self, type, name);
}

- (id)evaluateValue {
  @try {
    id<OrgOssPdfreporterUsesOrgOssJshuntingyardEvaluatorFunctionElementArgument> evaluate = [((OrgOssPdfreporterUsesOrgOssJshuntingyardEvaluatorInterpreterEvaluator *) nil_chk(self->newEval_)) evaluate];
    [((JavaUtilLoggingLogger *) nil_chk(OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_logger)) logWithJavaUtilLoggingLevel:JreLoadStatic(JavaUtilLoggingLevel, FINER) withNSString:@"Evaluating new exprsseion: {0} to {1} of type: {2}" withNSObjectArray:[IOSObjectArray newArrayWithObjects:(id[]){ expression_, [((id<OrgOssPdfreporterUsesOrgOssJshuntingyardEvaluatorFunctionElementArgument>) nil_chk(evaluate)) getValue], [evaluate getType] } count:3 type:NSObject_class_()]];
    return [evaluate getValue];
  }
  @catch (JavaLangRuntimeException *e) {
    @throw new_OrgOssPdfreporterCompilersExpressionEvaluationException_initWithNSString_withNSException_(JreStrcat("$$$$", @"Error while evaluating '", expression_, @"' with variables: ", OrgOssPdfreporterCompilersUtilResultUtil_getDumpWithJavaUtilCollection_([((id<JavaUtilMap>) nil_chk(variables_)) values])), e);
  }
}

- (id)evaluateOldValue {
  @try {
    id<OrgOssPdfreporterUsesOrgOssJshuntingyardEvaluatorFunctionElementArgument> evaluate = [((OrgOssPdfreporterUsesOrgOssJshuntingyardEvaluatorInterpreterEvaluator *) nil_chk(self->oldEval_)) evaluate];
    [((JavaUtilLoggingLogger *) nil_chk(OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_logger)) logWithJavaUtilLoggingLevel:JreLoadStatic(JavaUtilLoggingLevel, FINER) withNSString:@"Evaluating old exprsseion: {0} to {1} of type: {2}" withNSObjectArray:[IOSObjectArray newArrayWithObjects:(id[]){ expression_, [((id<OrgOssPdfreporterUsesOrgOssJshuntingyardEvaluatorFunctionElementArgument>) nil_chk(evaluate)) getValue], [evaluate getType] } count:3 type:NSObject_class_()]];
    return [evaluate getValue];
  }
  @catch (JavaLangRuntimeException *e) {
    @throw new_OrgOssPdfreporterCompilersExpressionEvaluationException_initWithNSString_withNSException_(JreStrcat("$$$$", @"Error while evaluating '", expression_, @"' with variables: ", OrgOssPdfreporterCompilersUtilResultUtil_getDumpWithJavaUtilCollection_([((id<JavaUtilMap>) nil_chk(variables_)) values])), e);
  }
}

- (void)bindVariablesWithOrgOssPdfreporterUsesOrgOssJshuntingyardEvaluatorInterpreterEvaluator:(OrgOssPdfreporterUsesOrgOssJshuntingyardEvaluatorInterpreterEvaluator *)evaluator
                                                                               withJavaUtilMap:(id<JavaUtilMap>)variables
                                                                                   withBoolean:(jboolean)oldValue {
  OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_bindVariablesWithOrgOssPdfreporterUsesOrgOssJshuntingyardEvaluatorInterpreterEvaluator_withJavaUtilMap_withBoolean_(self, evaluator, variables, oldValue);
}

+ (void)initialize {
  if (self == [OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression class]) {
    OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_logger = JavaUtilLoggingLogger_getLoggerWithNSString_([OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_class_() getName]);
    J2OBJC_SET_INITIALIZED(OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "newInstanceWithJavaUtilList:", "newInstance", "Lorg.oss.pdfreporter.compilers.jshuntingyard.JSHuntingYardExpression;", 0x9, "Lorg.oss.pdfreporter.compilers.ExpressionParseException;Lorg.oss.pdfreporter.compilers.ExpressionEvaluationException;", "(Ljava/util/List<Lorg/oss/pdfreporter/compilers/IExpressionChunk;>;)Lorg/oss/pdfreporter/compilers/jshuntingyard/JSHuntingYardExpression;" },
    { "init", "JSHuntingYardExpression", NULL, 0x1, NULL, NULL },
    { "putFunctionWithOrgOssPdfreporterUsesOrgOssJshuntingyardEvaluatorFunctionElement:", "putFunction", "V", 0x2, NULL, NULL },
    { "parseWithJavaUtilList:", "parse", "V", 0x2, "Lorg.oss.pdfreporter.compilers.ExpressionParseException;Lorg.oss.pdfreporter.compilers.ExpressionEvaluationException;", "(Ljava/util/List<Lorg/oss/pdfreporter/compilers/IExpressionChunk;>;)V" },
    { "getExpression", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "buildExpressionWithJavaUtilList:", "buildExpression", "Ljava.lang.String;", 0x2, "Lorg.oss.pdfreporter.compilers.ExpressionEvaluationException;", "(Ljava/util/List<Lorg/oss/pdfreporter/compilers/IExpressionChunk;>;)Ljava/lang/String;" },
    { "getKeyWithOrgOssPdfreporterCompilersIExpressionChunk_ExpresionType:withNSString:", "getKey", "Ljava.lang.String;", 0x2, NULL, NULL },
    { "evaluateValue", NULL, "Ljava.lang.Object;", 0x1, "Lorg.oss.pdfreporter.compilers.ExpressionEvaluationException;", NULL },
    { "evaluateOldValue", NULL, "Ljava.lang.Object;", 0x1, "Lorg.oss.pdfreporter.compilers.ExpressionEvaluationException;", NULL },
    { "bindVariablesWithOrgOssPdfreporterUsesOrgOssJshuntingyardEvaluatorInterpreterEvaluator:withJavaUtilMap:withBoolean:", "bindVariables", "V", 0x2, NULL, "(Lorg/oss/pdfreporter/uses/org/oss/jshuntingyard/evaluator/interpreter/Evaluator;Ljava/util/Map<Ljava/lang/String;Lorg/oss/pdfreporter/compilers/IVariable;>;Z)V" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "logger", "logger", 0x1a, "Ljava.util.logging.Logger;", &OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_logger, NULL, .constantValue.asLong = 0 },
    { "variables_", NULL, 0x12, "Ljava.util.Map;", NULL, "Ljava/util/Map<Ljava/lang/String;Lorg/oss/pdfreporter/compilers/IVariable;>;", .constantValue.asLong = 0 },
    { "userFunctions_", NULL, 0x12, "Ljava.util.Collection;", NULL, "Ljava/util/Collection<Lorg/oss/pdfreporter/uses/org/oss/jshuntingyard/evaluator/FunctionElement;>;", .constantValue.asLong = 0 },
    { "newEval_", NULL, 0x2, "Lorg.oss.pdfreporter.uses.org.oss.jshuntingyard.evaluator.interpreter.Evaluator;", NULL, NULL, .constantValue.asLong = 0 },
    { "oldEval_", NULL, 0x2, "Lorg.oss.pdfreporter.uses.org.oss.jshuntingyard.evaluator.interpreter.Evaluator;", NULL, NULL, .constantValue.asLong = 0 },
    { "expression_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lorg.oss.pdfreporter.compilers.jshuntingyard.JSHuntingYardExpression$NewValue;", "Lorg.oss.pdfreporter.compilers.jshuntingyard.JSHuntingYardExpression$OldValue;"};
  static const J2ObjcClassInfo _OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression = { 2, "JSHuntingYardExpression", "org.oss.pdfreporter.compilers.jshuntingyard", NULL, 0x1, 10, methods, 6, fields, 0, NULL, 2, inner_classes, NULL, NULL };
  return &_OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression;
}

@end

OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression *OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_newInstanceWithJavaUtilList_(id<JavaUtilList> chunks) {
  OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_initialize();
  OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression *expression = new_OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_init();
  OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_parseWithJavaUtilList_(expression, chunks);
  return expression;
}

void OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_init(OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression *self) {
  NSObject_init(self);
  self->variables_ = new_JavaUtilHashMap_init();
  self->userFunctions_ = new_JavaUtilArrayList_init();
  OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_putFunctionWithOrgOssPdfreporterUsesOrgOssJshuntingyardEvaluatorFunctionElement_(self, new_OrgOssPdfreporterCompilersJshuntingyardFunctionsBooleanConverter_init());
  OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_putFunctionWithOrgOssPdfreporterUsesOrgOssJshuntingyardEvaluatorFunctionElement_(self, new_OrgOssPdfreporterCompilersJshuntingyardFunctionsIntegerStringConverter_init());
  OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_putFunctionWithOrgOssPdfreporterUsesOrgOssJshuntingyardEvaluatorFunctionElement_(self, new_OrgOssPdfreporterCompilersJshuntingyardFunctionsLongStringConverter_init());
  OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_putFunctionWithOrgOssPdfreporterUsesOrgOssJshuntingyardEvaluatorFunctionElement_(self, new_OrgOssPdfreporterCompilersJshuntingyardFunctionsFloatStringConverter_init());
  OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_putFunctionWithOrgOssPdfreporterUsesOrgOssJshuntingyardEvaluatorFunctionElement_(self, new_OrgOssPdfreporterCompilersJshuntingyardFunctionsDoubleStringConverter_init());
  OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_putFunctionWithOrgOssPdfreporterUsesOrgOssJshuntingyardEvaluatorFunctionElement_(self, new_OrgOssPdfreporterCompilersJshuntingyardFunctionsDateStringConverter_init());
  OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_putFunctionWithOrgOssPdfreporterUsesOrgOssJshuntingyardEvaluatorFunctionElement_(self, new_OrgOssPdfreporterCompilersJshuntingyardFunctionsTruncateDateTo_init());
  OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_putFunctionWithOrgOssPdfreporterUsesOrgOssJshuntingyardEvaluatorFunctionElement_(self, new_OrgOssPdfreporterCompilersJshuntingyardFunctionsConditional_init());
  OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_putFunctionWithOrgOssPdfreporterUsesOrgOssJshuntingyardEvaluatorFunctionElement_(self, new_OrgOssPdfreporterCompilersJshuntingyardFunctionsCurrentDate_init());
  OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_putFunctionWithOrgOssPdfreporterUsesOrgOssJshuntingyardEvaluatorFunctionElement_(self, new_OrgOssPdfreporterCompilersJshuntingyardFunctionsIsNull_init());
  OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_putFunctionWithOrgOssPdfreporterUsesOrgOssJshuntingyardEvaluatorFunctionElement_(self, new_OrgOssPdfreporterCompilersJshuntingyardFunctionsMessage_init());
  OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_putFunctionWithOrgOssPdfreporterUsesOrgOssJshuntingyardEvaluatorFunctionElement_(self, new_OrgOssPdfreporterCompilersJshuntingyardFunctionsMessageWithArgs_init());
  OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_putFunctionWithOrgOssPdfreporterUsesOrgOssJshuntingyardEvaluatorFunctionElement_(self, new_OrgOssPdfreporterCompilersJshuntingyardFunctionsDisplayName_init());
  OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_putFunctionWithOrgOssPdfreporterUsesOrgOssJshuntingyardEvaluatorFunctionElement_(self, new_OrgOssPdfreporterCompilersJshuntingyardFunctionsToMilliseconds_init());
  OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_putFunctionWithOrgOssPdfreporterUsesOrgOssJshuntingyardEvaluatorFunctionElement_(self, new_OrgOssPdfreporterCompilersJshuntingyardFunctionsSubDataSource_init());
  OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_putFunctionWithOrgOssPdfreporterUsesOrgOssJshuntingyardEvaluatorFunctionElement_(self, new_OrgOssPdfreporterCompilersJshuntingyardFunctionsBytesAsStream_init());
  OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_putFunctionWithOrgOssPdfreporterUsesOrgOssJshuntingyardEvaluatorFunctionElement_(self, new_OrgOssPdfreporterCompilersJshuntingyardFunctionsDecodeBase64Bytes_init());
  OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_putFunctionWithOrgOssPdfreporterUsesOrgOssJshuntingyardEvaluatorFunctionElement_(self, new_OrgOssPdfreporterCompilersJshuntingyardFunctionsDecodeBase64String_init());
}

OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression *new_OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_init() {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression, init)
}

OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression *create_OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_init() {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression, init)
}

void OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_putFunctionWithOrgOssPdfreporterUsesOrgOssJshuntingyardEvaluatorFunctionElement_(OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression *self, id<OrgOssPdfreporterUsesOrgOssJshuntingyardEvaluatorFunctionElement> function) {
  [((id<JavaUtilCollection>) nil_chk(self->userFunctions_)) addWithId:function];
}

void OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_parseWithJavaUtilList_(OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression *self, id<JavaUtilList> chunks) {
  self->expression_ = OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_buildExpressionWithJavaUtilList_(self, chunks);
  self->newEval_ = new_OrgOssPdfreporterUsesOrgOssJshuntingyardEvaluatorInterpreterEvaluator_init();
  [self->newEval_ addFunctionsWithJavaUtilCollection:self->userFunctions_];
  [((OrgOssPdfreporterUsesOrgOssJshuntingyardEvaluatorInterpreterEvaluator *) nil_chk(self->newEval_)) parseWithNSString:self->expression_];
  OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_bindVariablesWithOrgOssPdfreporterUsesOrgOssJshuntingyardEvaluatorInterpreterEvaluator_withJavaUtilMap_withBoolean_(self, self->newEval_, self->variables_, false);
  self->oldEval_ = new_OrgOssPdfreporterUsesOrgOssJshuntingyardEvaluatorInterpreterEvaluator_init();
  [self->oldEval_ addFunctionsWithJavaUtilCollection:self->userFunctions_];
  [((OrgOssPdfreporterUsesOrgOssJshuntingyardEvaluatorInterpreterEvaluator *) nil_chk(self->oldEval_)) parseWithNSString:self->expression_];
  OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_bindVariablesWithOrgOssPdfreporterUsesOrgOssJshuntingyardEvaluatorInterpreterEvaluator_withJavaUtilMap_withBoolean_(self, self->oldEval_, self->variables_, true);
}

NSString *OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_buildExpressionWithJavaUtilList_(OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression *self, id<JavaUtilList> chunks) {
  JavaLangStringBuffer *sb = new_JavaLangStringBuffer_init();
  NSString *name;
  id<OrgOssPdfreporterCompilersIVariable> variable;
  for (id<OrgOssPdfreporterCompilersIExpressionChunk> __strong chunk in nil_chk(chunks)) {
    switch ([[((id<OrgOssPdfreporterCompilersIExpressionChunk>) nil_chk(chunk)) getType] ordinal]) {
      case OrgOssPdfreporterCompilersIExpressionChunk_ExpresionType_Enum_TYPE_FIELD:
      case OrgOssPdfreporterCompilersIExpressionChunk_ExpresionType_Enum_TYPE_PARAMETER:
      case OrgOssPdfreporterCompilersIExpressionChunk_ExpresionType_Enum_TYPE_VARIABLE:
      name = OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_getKeyWithOrgOssPdfreporterCompilersIExpressionChunk_ExpresionType_withNSString_(self, [chunk getType], [chunk getText]);
      (void) [sb appendWithNSString:@"$"];
      (void) [sb appendWithNSString:name];
      variable = [((id<OrgOssPdfreporterCompilersIVariableExpressionChunk>) cast_check(chunk, OrgOssPdfreporterCompilersIVariableExpressionChunk_class_())) getVariable];
      (void) [((id<JavaUtilMap>) nil_chk(self->variables_)) putWithId:name withId:variable];
      break;
      case OrgOssPdfreporterCompilersIExpressionChunk_ExpresionType_Enum_TYPE_TEXT:
      case OrgOssPdfreporterCompilersIExpressionChunk_ExpresionType_Enum_TYPE_RESOURCE:
      (void) [sb appendWithNSString:[chunk getText]];
      break;
    }
  }
  return [sb description];
}

NSString *OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_getKeyWithOrgOssPdfreporterCompilersIExpressionChunk_ExpresionType_withNSString_(OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression *self, OrgOssPdfreporterCompilersIExpressionChunk_ExpresionType *type, NSString *name) {
  switch ([((OrgOssPdfreporterCompilersIExpressionChunk_ExpresionType *) nil_chk(type)) ordinal]) {
    case 1:
    return JreStrcat("$$", @"P_", name);
    case 2:
    return JreStrcat("$$", @"F_", name);
    case 3:
    return JreStrcat("$$", @"V_", name);
    case 4:
    return JreStrcat("$$", @"R_", name);
    default:
    return JreStrcat("$$", @"T_", name);
  }
}

void OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_bindVariablesWithOrgOssPdfreporterUsesOrgOssJshuntingyardEvaluatorInterpreterEvaluator_withJavaUtilMap_withBoolean_(OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression *self, OrgOssPdfreporterUsesOrgOssJshuntingyardEvaluatorInterpreterEvaluator *evaluator, id<JavaUtilMap> variables, jboolean oldValue) {
  for (id<JavaUtilMap_Entry> __strong entry_ in nil_chk([((id<JavaUtilMap>) nil_chk(variables)) entrySet])) {
    if (oldValue) {
      [((OrgOssPdfreporterUsesOrgOssJshuntingyardEvaluatorInterpreterEvaluator *) nil_chk(evaluator)) bindVariableWithOrgOssPdfreporterUsesOrgOssJshuntingyardEvaluatorInterpreterVariable:new_OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_OldValue_initWithNSString_withOrgOssPdfreporterCompilersIVariable_([((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey], [entry_ getValue])];
    }
    else {
      [((OrgOssPdfreporterUsesOrgOssJshuntingyardEvaluatorInterpreterEvaluator *) nil_chk(evaluator)) bindVariableWithOrgOssPdfreporterUsesOrgOssJshuntingyardEvaluatorInterpreterVariable:new_OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_NewValue_initWithNSString_withOrgOssPdfreporterCompilersIVariable_([((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey], [entry_ getValue])];
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression)

@implementation OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_NewValue

- (instancetype)initWithNSString:(NSString *)name
withOrgOssPdfreporterCompilersIVariable:(id<OrgOssPdfreporterCompilersIVariable>)variable {
  OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_NewValue_initWithNSString_withOrgOssPdfreporterCompilersIVariable_(self, name, variable);
  return self;
}

- (NSString *)getName {
  return name_;
}

- (id)getValue {
  @try {
    id value = [((id<OrgOssPdfreporterCompilersIVariable>) nil_chk(delegate_)) getValue];
    return value == nil ? [delegate_ getEsimatedValue] : value;
  }
  @catch (OrgOssPdfreporterCompilersExpressionEvaluationException *e) {
    @throw new_JavaLangRuntimeException_initWithNSException_(e);
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withOrgOssPdfreporterCompilersIVariable:", "NewValue", NULL, 0x0, NULL, NULL },
    { "getName", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getValue", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "name_", NULL, 0x12, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "delegate_", NULL, 0x12, "Lorg.oss.pdfreporter.compilers.IVariable;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_NewValue = { 2, "NewValue", "org.oss.pdfreporter.compilers.jshuntingyard", "JSHuntingYardExpression", 0xa, 3, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_NewValue;
}

@end

void OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_NewValue_initWithNSString_withOrgOssPdfreporterCompilersIVariable_(OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_NewValue *self, NSString *name, id<OrgOssPdfreporterCompilersIVariable> variable) {
  NSObject_init(self);
  self->name_ = name;
  self->delegate_ = variable;
}

OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_NewValue *new_OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_NewValue_initWithNSString_withOrgOssPdfreporterCompilersIVariable_(NSString *name, id<OrgOssPdfreporterCompilersIVariable> variable) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_NewValue, initWithNSString_withOrgOssPdfreporterCompilersIVariable_, name, variable)
}

OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_NewValue *create_OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_NewValue_initWithNSString_withOrgOssPdfreporterCompilersIVariable_(NSString *name, id<OrgOssPdfreporterCompilersIVariable> variable) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_NewValue, initWithNSString_withOrgOssPdfreporterCompilersIVariable_, name, variable)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_NewValue)

@implementation OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_OldValue

- (instancetype)initWithNSString:(NSString *)name
withOrgOssPdfreporterCompilersIVariable:(id<OrgOssPdfreporterCompilersIVariable>)variable {
  OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_OldValue_initWithNSString_withOrgOssPdfreporterCompilersIVariable_(self, name, variable);
  return self;
}

- (NSString *)getName {
  return name_;
}

- (id)getValue {
  @try {
    id value = [((id<OrgOssPdfreporterCompilersIVariable>) nil_chk(delegate_)) getOldValue];
    return value == nil ? [delegate_ getEsimatedValue] : value;
  }
  @catch (OrgOssPdfreporterCompilersExpressionEvaluationException *e) {
    @throw new_JavaLangRuntimeException_initWithNSException_(e);
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withOrgOssPdfreporterCompilersIVariable:", "OldValue", NULL, 0x0, NULL, NULL },
    { "getName", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getValue", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "name_", NULL, 0x12, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "delegate_", NULL, 0x12, "Lorg.oss.pdfreporter.compilers.IVariable;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_OldValue = { 2, "OldValue", "org.oss.pdfreporter.compilers.jshuntingyard", "JSHuntingYardExpression", 0xa, 3, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_OldValue;
}

@end

void OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_OldValue_initWithNSString_withOrgOssPdfreporterCompilersIVariable_(OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_OldValue *self, NSString *name, id<OrgOssPdfreporterCompilersIVariable> variable) {
  NSObject_init(self);
  self->name_ = name;
  self->delegate_ = variable;
}

OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_OldValue *new_OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_OldValue_initWithNSString_withOrgOssPdfreporterCompilersIVariable_(NSString *name, id<OrgOssPdfreporterCompilersIVariable> variable) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_OldValue, initWithNSString_withOrgOssPdfreporterCompilersIVariable_, name, variable)
}

OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_OldValue *create_OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_OldValue_initWithNSString_withOrgOssPdfreporterCompilersIVariable_(NSString *name, id<OrgOssPdfreporterCompilersIVariable> variable) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_OldValue, initWithNSString_withOrgOssPdfreporterCompilersIVariable_, name, variable)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardExpression_OldValue)
