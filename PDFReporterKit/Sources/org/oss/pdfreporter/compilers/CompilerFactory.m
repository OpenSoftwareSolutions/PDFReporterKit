//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/compilers/CompilerFactory.java
//

#include "J2ObjC_source.h"
#include "org/oss/pdfreporter/compilers/CompilerFactory.h"
#include "org/oss/pdfreporter/compilers/factory/DefaultCompilerFactory.h"
#include "org/oss/pdfreporter/compilers/javascript/JavaScriptClassCompiler.h"
#include "org/oss/pdfreporter/engine/JRReport.h"
#include "org/oss/pdfreporter/engine/JasperReportsContext.h"
#include "org/oss/pdfreporter/engine/design/JRCompiler.h"
#include "org/oss/pdfreporter/registry/ApiRegistry.h"

@interface OrgOssPdfreporterCompilersCompilerFactory ()

- (instancetype)init;

@end

__attribute__((unused)) static void OrgOssPdfreporterCompilersCompilerFactory_init(OrgOssPdfreporterCompilersCompilerFactory *self);

__attribute__((unused)) static OrgOssPdfreporterCompilersCompilerFactory *new_OrgOssPdfreporterCompilersCompilerFactory_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgOssPdfreporterCompilersCompilerFactory *create_OrgOssPdfreporterCompilersCompilerFactory_init();

@implementation OrgOssPdfreporterCompilersCompilerFactory

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterCompilersCompilerFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)registerFactory {
  OrgOssPdfreporterCompilersCompilerFactory_registerFactory();
}

- (id<OrgOssPdfreporterEngineDesignJRCompiler>)getCompilerByNameWithOrgOssPdfreporterEngineJasperReportsContext:(id<OrgOssPdfreporterEngineJasperReportsContext>)jasperReportsContext
                                                                                                   withNSString:(NSString *)language {
  if ([((NSString *) nil_chk(OrgOssPdfreporterEngineJRReport_LANGUAGE_JAVASCIPT)) isEqual:language]) {
    return new_OrgOssPdfreporterCompilersJavascriptJavaScriptClassCompiler_initWithOrgOssPdfreporterEngineJasperReportsContext_(jasperReportsContext);
  }
  return [super getCompilerByNameWithOrgOssPdfreporterEngineJasperReportsContext:jasperReportsContext withNSString:language];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "CompilerFactory", NULL, 0x2, NULL, NULL },
    { "registerFactory", NULL, "V", 0x9, NULL, NULL },
    { "getCompilerByNameWithOrgOssPdfreporterEngineJasperReportsContext:withNSString:", "getCompilerByName", "Lorg.oss.pdfreporter.engine.design.JRCompiler;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterCompilersCompilerFactory = { 2, "CompilerFactory", "org.oss.pdfreporter.compilers", NULL, 0x1, 3, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterCompilersCompilerFactory;
}

@end

void OrgOssPdfreporterCompilersCompilerFactory_init(OrgOssPdfreporterCompilersCompilerFactory *self) {
  OrgOssPdfreporterCompilersFactoryDefaultCompilerFactory_init(self);
}

OrgOssPdfreporterCompilersCompilerFactory *new_OrgOssPdfreporterCompilersCompilerFactory_init() {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterCompilersCompilerFactory, init)
}

OrgOssPdfreporterCompilersCompilerFactory *create_OrgOssPdfreporterCompilersCompilerFactory_init() {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterCompilersCompilerFactory, init)
}

void OrgOssPdfreporterCompilersCompilerFactory_registerFactory() {
  OrgOssPdfreporterCompilersCompilerFactory_initialize();
  OrgOssPdfreporterRegistryApiRegistry_register__WithOrgOssPdfreporterCompilersFactoryICompilerFactory_(new_OrgOssPdfreporterCompilersCompilerFactory_init());
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterCompilersCompilerFactory)
