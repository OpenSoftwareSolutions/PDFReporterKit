//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/compilers/util/NumberConstant.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/Byte.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/Short.h"
#include "java/util/regex/Matcher.h"
#include "java/util/regex/Pattern.h"
#include "org/oss/pdfreporter/compilers/ExpressionEvaluationException.h"
#include "org/oss/pdfreporter/compilers/ExpressionParseException.h"
#include "org/oss/pdfreporter/compilers/expressionelements/AbstractExpressionElement.h"
#include "org/oss/pdfreporter/compilers/util/NumberConstant.h"

@interface OrgOssPdfreporterCompilersUtilNumberConstant () {
 @public
  NSNumber *number_;
}

+ (NSString *)extractWithJavaUtilRegexPattern:(JavaUtilRegexPattern *)p
                                 withNSString:(NSString *)text;

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterCompilersUtilNumberConstant, number_, NSNumber *)

inline NSString *OrgOssPdfreporterCompilersUtilNumberConstant_get_INTEGER_MATCH();
inline NSString *OrgOssPdfreporterCompilersUtilNumberConstant_set_INTEGER_MATCH(NSString *value);
static NSString *OrgOssPdfreporterCompilersUtilNumberConstant_INTEGER_MATCH = @"new java\\.lang\\.Integer\\(-?\\d+\\)";
J2OBJC_STATIC_FIELD_OBJ(OrgOssPdfreporterCompilersUtilNumberConstant, INTEGER_MATCH, NSString *)

inline NSString *OrgOssPdfreporterCompilersUtilNumberConstant_get_LONG_MATCH();
inline NSString *OrgOssPdfreporterCompilersUtilNumberConstant_set_LONG_MATCH(NSString *value);
static NSString *OrgOssPdfreporterCompilersUtilNumberConstant_LONG_MATCH = @"new java\\.lang\\.Long\\(-?\\d+\\)";
J2OBJC_STATIC_FIELD_OBJ(OrgOssPdfreporterCompilersUtilNumberConstant, LONG_MATCH, NSString *)

inline NSString *OrgOssPdfreporterCompilersUtilNumberConstant_get_SHORT_MATCH();
inline NSString *OrgOssPdfreporterCompilersUtilNumberConstant_set_SHORT_MATCH(NSString *value);
static NSString *OrgOssPdfreporterCompilersUtilNumberConstant_SHORT_MATCH = @"new java\\.lang\\.Short\\(-?\\d+\\)";
J2OBJC_STATIC_FIELD_OBJ(OrgOssPdfreporterCompilersUtilNumberConstant, SHORT_MATCH, NSString *)

inline NSString *OrgOssPdfreporterCompilersUtilNumberConstant_get_NUMBER_MATCH();
inline NSString *OrgOssPdfreporterCompilersUtilNumberConstant_set_NUMBER_MATCH(NSString *value);
static NSString *OrgOssPdfreporterCompilersUtilNumberConstant_NUMBER_MATCH = @"new java\\.lang\\.Number\\(-?\\d+\\)";
J2OBJC_STATIC_FIELD_OBJ(OrgOssPdfreporterCompilersUtilNumberConstant, NUMBER_MATCH, NSString *)

inline NSString *OrgOssPdfreporterCompilersUtilNumberConstant_get_BYTE_MATCH();
inline NSString *OrgOssPdfreporterCompilersUtilNumberConstant_set_BYTE_MATCH(NSString *value);
static NSString *OrgOssPdfreporterCompilersUtilNumberConstant_BYTE_MATCH = @"new java\\.lang\\.Byte\\(-?\\d+\\)";
J2OBJC_STATIC_FIELD_OBJ(OrgOssPdfreporterCompilersUtilNumberConstant, BYTE_MATCH, NSString *)

inline JavaUtilRegexPattern *OrgOssPdfreporterCompilersUtilNumberConstant_get_NUMBER_SPLIT();
inline JavaUtilRegexPattern *OrgOssPdfreporterCompilersUtilNumberConstant_set_NUMBER_SPLIT(JavaUtilRegexPattern *value);
static JavaUtilRegexPattern *OrgOssPdfreporterCompilersUtilNumberConstant_NUMBER_SPLIT;
J2OBJC_STATIC_FIELD_OBJ(OrgOssPdfreporterCompilersUtilNumberConstant, NUMBER_SPLIT, JavaUtilRegexPattern *)

__attribute__((unused)) static NSString *OrgOssPdfreporterCompilersUtilNumberConstant_extractWithJavaUtilRegexPattern_withNSString_(JavaUtilRegexPattern *p, NSString *text);

J2OBJC_INITIALIZED_DEFN(OrgOssPdfreporterCompilersUtilNumberConstant)

@implementation OrgOssPdfreporterCompilersUtilNumberConstant

+ (jboolean)isNumberWithNSString:(NSString *)text {
  return OrgOssPdfreporterCompilersUtilNumberConstant_isNumberWithNSString_(text);
}

+ (OrgOssPdfreporterCompilersUtilNumberConstant *)parseNumberWithNSString:(NSString *)s {
  return OrgOssPdfreporterCompilersUtilNumberConstant_parseNumberWithNSString_(s);
}

+ (NSString *)extractWithJavaUtilRegexPattern:(JavaUtilRegexPattern *)p
                                 withNSString:(NSString *)text {
  return OrgOssPdfreporterCompilersUtilNumberConstant_extractWithJavaUtilRegexPattern_withNSString_(p, text);
}

- (instancetype)initWithNSNumber:(NSNumber *)number {
  OrgOssPdfreporterCompilersUtilNumberConstant_initWithNSNumber_(self, number);
  return self;
}

- (id)getValue {
  return number_;
}

+ (void)initialize {
  if (self == [OrgOssPdfreporterCompilersUtilNumberConstant class]) {
    OrgOssPdfreporterCompilersUtilNumberConstant_NUMBER_SPLIT = JavaUtilRegexPattern_compileWithNSString_(@"-?\\d+");
    J2OBJC_SET_INITIALIZED(OrgOssPdfreporterCompilersUtilNumberConstant)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "isNumberWithNSString:", "isNumber", "Z", 0x9, NULL, NULL },
    { "parseNumberWithNSString:", "parseNumber", "Lorg.oss.pdfreporter.compilers.util.NumberConstant;", 0x9, "Lorg.oss.pdfreporter.compilers.ExpressionParseException;", NULL },
    { "extractWithJavaUtilRegexPattern:withNSString:", "extract", "Ljava.lang.String;", 0xa, "Lorg.oss.pdfreporter.compilers.ExpressionParseException;", NULL },
    { "initWithNSNumber:", "NumberConstant", NULL, 0x1, NULL, NULL },
    { "getValue", NULL, "Ljava.lang.Object;", 0x1, "Lorg.oss.pdfreporter.compilers.ExpressionEvaluationException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "INTEGER_MATCH", "INTEGER_MATCH", 0xa, "Ljava.lang.String;", &OrgOssPdfreporterCompilersUtilNumberConstant_INTEGER_MATCH, NULL, .constantValue.asLong = 0 },
    { "LONG_MATCH", "LONG_MATCH", 0xa, "Ljava.lang.String;", &OrgOssPdfreporterCompilersUtilNumberConstant_LONG_MATCH, NULL, .constantValue.asLong = 0 },
    { "SHORT_MATCH", "SHORT_MATCH", 0xa, "Ljava.lang.String;", &OrgOssPdfreporterCompilersUtilNumberConstant_SHORT_MATCH, NULL, .constantValue.asLong = 0 },
    { "NUMBER_MATCH", "NUMBER_MATCH", 0xa, "Ljava.lang.String;", &OrgOssPdfreporterCompilersUtilNumberConstant_NUMBER_MATCH, NULL, .constantValue.asLong = 0 },
    { "BYTE_MATCH", "BYTE_MATCH", 0xa, "Ljava.lang.String;", &OrgOssPdfreporterCompilersUtilNumberConstant_BYTE_MATCH, NULL, .constantValue.asLong = 0 },
    { "NUMBER_SPLIT", "NUMBER_SPLIT", 0xa, "Ljava.util.regex.Pattern;", &OrgOssPdfreporterCompilersUtilNumberConstant_NUMBER_SPLIT, NULL, .constantValue.asLong = 0 },
    { "number_", NULL, 0x12, "Ljava.lang.Number;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterCompilersUtilNumberConstant = { 2, "NumberConstant", "org.oss.pdfreporter.compilers.util", NULL, 0x1, 5, methods, 7, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterCompilersUtilNumberConstant;
}

@end

jboolean OrgOssPdfreporterCompilersUtilNumberConstant_isNumberWithNSString_(NSString *text) {
  OrgOssPdfreporterCompilersUtilNumberConstant_initialize();
  return [((NSString *) nil_chk(text)) matches:OrgOssPdfreporterCompilersUtilNumberConstant_INTEGER_MATCH] || [text matches:OrgOssPdfreporterCompilersUtilNumberConstant_LONG_MATCH] || [text matches:OrgOssPdfreporterCompilersUtilNumberConstant_SHORT_MATCH] || [text matches:OrgOssPdfreporterCompilersUtilNumberConstant_BYTE_MATCH] || [text matches:OrgOssPdfreporterCompilersUtilNumberConstant_NUMBER_MATCH];
}

OrgOssPdfreporterCompilersUtilNumberConstant *OrgOssPdfreporterCompilersUtilNumberConstant_parseNumberWithNSString_(NSString *s) {
  OrgOssPdfreporterCompilersUtilNumberConstant_initialize();
  if ([((NSString *) nil_chk(s)) matches:OrgOssPdfreporterCompilersUtilNumberConstant_INTEGER_MATCH]) {
    return new_OrgOssPdfreporterCompilersUtilNumberConstant_initWithNSNumber_(JavaLangInteger_valueOfWithNSString_(OrgOssPdfreporterCompilersUtilNumberConstant_extractWithJavaUtilRegexPattern_withNSString_(OrgOssPdfreporterCompilersUtilNumberConstant_NUMBER_SPLIT, s)));
  }
  else if ([s matches:OrgOssPdfreporterCompilersUtilNumberConstant_LONG_MATCH]) {
    return new_OrgOssPdfreporterCompilersUtilNumberConstant_initWithNSNumber_(JavaLangLong_valueOfWithNSString_(OrgOssPdfreporterCompilersUtilNumberConstant_extractWithJavaUtilRegexPattern_withNSString_(OrgOssPdfreporterCompilersUtilNumberConstant_NUMBER_SPLIT, s)));
  }
  else if ([s matches:OrgOssPdfreporterCompilersUtilNumberConstant_SHORT_MATCH]) {
    return new_OrgOssPdfreporterCompilersUtilNumberConstant_initWithNSNumber_(JavaLangShort_valueOfWithNSString_(OrgOssPdfreporterCompilersUtilNumberConstant_extractWithJavaUtilRegexPattern_withNSString_(OrgOssPdfreporterCompilersUtilNumberConstant_NUMBER_SPLIT, s)));
  }
  else if ([s matches:OrgOssPdfreporterCompilersUtilNumberConstant_BYTE_MATCH]) {
    return new_OrgOssPdfreporterCompilersUtilNumberConstant_initWithNSNumber_(JavaLangByte_valueOfWithNSString_(OrgOssPdfreporterCompilersUtilNumberConstant_extractWithJavaUtilRegexPattern_withNSString_(OrgOssPdfreporterCompilersUtilNumberConstant_NUMBER_SPLIT, s)));
  }
  else if ([s matches:OrgOssPdfreporterCompilersUtilNumberConstant_NUMBER_MATCH]) {
    return new_OrgOssPdfreporterCompilersUtilNumberConstant_initWithNSNumber_(JavaLangInteger_valueOfWithNSString_(OrgOssPdfreporterCompilersUtilNumberConstant_extractWithJavaUtilRegexPattern_withNSString_(OrgOssPdfreporterCompilersUtilNumberConstant_NUMBER_SPLIT, s)));
  }
  @throw new_OrgOssPdfreporterCompilersExpressionParseException_initWithNSString_(JreStrcat("$$", @"Unsupported Numberconstant ", s));
}

NSString *OrgOssPdfreporterCompilersUtilNumberConstant_extractWithJavaUtilRegexPattern_withNSString_(JavaUtilRegexPattern *p, NSString *text) {
  OrgOssPdfreporterCompilersUtilNumberConstant_initialize();
  JavaUtilRegexMatcher *m = [((JavaUtilRegexPattern *) nil_chk(p)) matcherWithJavaLangCharSequence:text];
  if ([((JavaUtilRegexMatcher *) nil_chk(m)) find]) {
    return [m group];
  }
  @throw new_OrgOssPdfreporterCompilersExpressionParseException_initWithNSString_(JreStrcat("$@$$", @"Pattern: ", p, @" does not match: ", text));
}

void OrgOssPdfreporterCompilersUtilNumberConstant_initWithNSNumber_(OrgOssPdfreporterCompilersUtilNumberConstant *self, NSNumber *number) {
  OrgOssPdfreporterCompilersExpressionelementsAbstractExpressionElement_init(self);
  self->number_ = number;
}

OrgOssPdfreporterCompilersUtilNumberConstant *new_OrgOssPdfreporterCompilersUtilNumberConstant_initWithNSNumber_(NSNumber *number) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterCompilersUtilNumberConstant, initWithNSNumber_, number)
}

OrgOssPdfreporterCompilersUtilNumberConstant *create_OrgOssPdfreporterCompilersUtilNumberConstant_initWithNSNumber_(NSNumber *number) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterCompilersUtilNumberConstant, initWithNSNumber_, number)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterCompilersUtilNumberConstant)
