//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/compilers/util/ResultUtil.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgOssPdfreporterCompilersUtilResultUtil")
#ifdef RESTRICT_OrgOssPdfreporterCompilersUtilResultUtil
#define INCLUDE_ALL_OrgOssPdfreporterCompilersUtilResultUtil 0
#else
#define INCLUDE_ALL_OrgOssPdfreporterCompilersUtilResultUtil 1
#endif
#undef RESTRICT_OrgOssPdfreporterCompilersUtilResultUtil

#if !defined (OrgOssPdfreporterCompilersUtilResultUtil_) && (INCLUDE_ALL_OrgOssPdfreporterCompilersUtilResultUtil || defined(INCLUDE_OrgOssPdfreporterCompilersUtilResultUtil))
#define OrgOssPdfreporterCompilersUtilResultUtil_

@class JavaLangBoolean;
@class JavaLangDouble;
@class JavaLangFloat;
@class JavaLangInteger;
@class JavaLangLong;
@class JavaUtilDate;
@class OrgOssPdfreporterCompilersExpressionelementsExpressionType;
@protocol JavaUtilCollection;

@interface OrgOssPdfreporterCompilersUtilResultUtil : NSObject

#pragma mark Public

- (instancetype)init;

+ (void)assertResultTypeWithOrgOssPdfreporterCompilersExpressionelementsExpressionType:(OrgOssPdfreporterCompilersExpressionelementsExpressionType *)expectedType
                                                                                withId:(id)result;

+ (JavaUtilDate *)geDateResultWithNSString:(NSString *)result;

+ (JavaLangBoolean *)getBooleanResultWithNSString:(NSString *)result;

+ (JavaLangDouble *)getDoubleResultWithNSString:(NSString *)result;

+ (NSString *)getDumpWithJavaUtilCollection:(id<JavaUtilCollection>)variables;

+ (JavaLangFloat *)getFloatResultWithNSString:(NSString *)result;

+ (JavaLangInteger *)getIntResultWithNSString:(NSString *)result;

+ (JavaLangLong *)getLongResultWithNSString:(NSString *)result;

+ (NSString *)getStringResultWithNSString:(NSString *)result;

+ (jboolean)isNullWithNSString:(NSString *)result;

+ (jboolean)isStringWithNSString:(NSString *)result
                        withChar:(jchar)quotedChar;

+ (NSNumber *)numberCastWithOrgOssPdfreporterCompilersExpressionelementsExpressionType:(OrgOssPdfreporterCompilersExpressionelementsExpressionType *)expectedType
                                                                          withNSNumber:(NSNumber *)result;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgOssPdfreporterCompilersUtilResultUtil)

FOUNDATION_EXPORT jboolean OrgOssPdfreporterCompilersUtilResultUtil_isStringWithNSString_withChar_(NSString *result, jchar quotedChar);

FOUNDATION_EXPORT jboolean OrgOssPdfreporterCompilersUtilResultUtil_isNullWithNSString_(NSString *result);

FOUNDATION_EXPORT NSString *OrgOssPdfreporterCompilersUtilResultUtil_getStringResultWithNSString_(NSString *result);

FOUNDATION_EXPORT JavaLangDouble *OrgOssPdfreporterCompilersUtilResultUtil_getDoubleResultWithNSString_(NSString *result);

FOUNDATION_EXPORT JavaLangFloat *OrgOssPdfreporterCompilersUtilResultUtil_getFloatResultWithNSString_(NSString *result);

FOUNDATION_EXPORT JavaLangInteger *OrgOssPdfreporterCompilersUtilResultUtil_getIntResultWithNSString_(NSString *result);

FOUNDATION_EXPORT JavaLangLong *OrgOssPdfreporterCompilersUtilResultUtil_getLongResultWithNSString_(NSString *result);

FOUNDATION_EXPORT JavaUtilDate *OrgOssPdfreporterCompilersUtilResultUtil_geDateResultWithNSString_(NSString *result);

FOUNDATION_EXPORT JavaLangBoolean *OrgOssPdfreporterCompilersUtilResultUtil_getBooleanResultWithNSString_(NSString *result);

FOUNDATION_EXPORT void OrgOssPdfreporterCompilersUtilResultUtil_assertResultTypeWithOrgOssPdfreporterCompilersExpressionelementsExpressionType_withId_(OrgOssPdfreporterCompilersExpressionelementsExpressionType *expectedType, id result);

FOUNDATION_EXPORT NSNumber *OrgOssPdfreporterCompilersUtilResultUtil_numberCastWithOrgOssPdfreporterCompilersExpressionelementsExpressionType_withNSNumber_(OrgOssPdfreporterCompilersExpressionelementsExpressionType *expectedType, NSNumber *result);

FOUNDATION_EXPORT NSString *OrgOssPdfreporterCompilersUtilResultUtil_getDumpWithJavaUtilCollection_(id<JavaUtilCollection> variables);

FOUNDATION_EXPORT void OrgOssPdfreporterCompilersUtilResultUtil_init(OrgOssPdfreporterCompilersUtilResultUtil *self);

FOUNDATION_EXPORT OrgOssPdfreporterCompilersUtilResultUtil *new_OrgOssPdfreporterCompilersUtilResultUtil_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgOssPdfreporterCompilersUtilResultUtil *create_OrgOssPdfreporterCompilersUtilResultUtil_init();

J2OBJC_TYPE_LITERAL_HEADER(OrgOssPdfreporterCompilersUtilResultUtil)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgOssPdfreporterCompilersUtilResultUtil")
