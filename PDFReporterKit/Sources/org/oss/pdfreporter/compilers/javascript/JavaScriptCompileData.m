//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/compilers/javascript/JavaScriptCompileData.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "org/oss/pdfreporter/compilers/javascript/JavaScriptCompileData.h"
#include "org/oss/pdfreporter/engine/JRConstants.h"
#include "org/oss/pdfreporter/engine/JRRuntimeException.h"

@interface OrgOssPdfreporterCompilersJavascriptJavaScriptCompileData () {
 @public
  id<JavaUtilList> expressions_;
}

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterCompilersJavascriptJavaScriptCompileData, expressions_, id<JavaUtilList>)

inline jlong OrgOssPdfreporterCompilersJavascriptJavaScriptCompileData_get_serialVersionUID();
#define OrgOssPdfreporterCompilersJavascriptJavaScriptCompileData_serialVersionUID 10200LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgOssPdfreporterCompilersJavascriptJavaScriptCompileData, serialVersionUID, jlong)

@interface OrgOssPdfreporterCompilersJavascriptJavaScriptCompileData_Expression () {
 @public
  NSString *defaultExpression_;
  NSString *oldExpression_;
  NSString *estimatedExpression_;
}

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterCompilersJavascriptJavaScriptCompileData_Expression, defaultExpression_, NSString *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterCompilersJavascriptJavaScriptCompileData_Expression, oldExpression_, NSString *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterCompilersJavascriptJavaScriptCompileData_Expression, estimatedExpression_, NSString *)

inline jlong OrgOssPdfreporterCompilersJavascriptJavaScriptCompileData_Expression_get_serialVersionUID();
#define OrgOssPdfreporterCompilersJavascriptJavaScriptCompileData_Expression_serialVersionUID 10200LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgOssPdfreporterCompilersJavascriptJavaScriptCompileData_Expression, serialVersionUID, jlong)

NSString *OrgOssPdfreporterCompilersJavascriptJavaScriptCompileData_EXCEPTION_MESSAGE_KEY_EXPRESSION_NOT_FOUND = @"compilers.javascript.expression.not.found";

@implementation OrgOssPdfreporterCompilersJavascriptJavaScriptCompileData

+ (NSString *)EXCEPTION_MESSAGE_KEY_EXPRESSION_NOT_FOUND {
  return OrgOssPdfreporterCompilersJavascriptJavaScriptCompileData_EXCEPTION_MESSAGE_KEY_EXPRESSION_NOT_FOUND;
}

- (void)addExpressionWithInt:(jint)expressionId
withOrgOssPdfreporterCompilersJavascriptJavaScriptCompileData_Expression:(OrgOssPdfreporterCompilersJavascriptJavaScriptCompileData_Expression *)expression {
  for (jint idx = [((id<JavaUtilList>) nil_chk(expressions_)) size]; idx <= expressionId; ++idx) {
    [expressions_ addWithInt:idx withId:nil];
  }
  (void) [expressions_ setWithInt:expressionId withId:expression];
}

- (void)addExpressionWithInt:(jint)expressionId
                withNSString:(NSString *)defaultExpression
                withNSString:(NSString *)estimatedExpression
                withNSString:(NSString *)oldExpression {
  OrgOssPdfreporterCompilersJavascriptJavaScriptCompileData_Expression *expression = new_OrgOssPdfreporterCompilersJavascriptJavaScriptCompileData_Expression_initWithNSString_withNSString_withNSString_(defaultExpression, estimatedExpression, oldExpression);
  [self addExpressionWithInt:expressionId withOrgOssPdfreporterCompilersJavascriptJavaScriptCompileData_Expression:expression];
}

- (OrgOssPdfreporterCompilersJavascriptJavaScriptCompileData_Expression *)getExpressionWithInt:(jint)id_ {
  if (id_ >= [((id<JavaUtilList>) nil_chk(expressions_)) size]) {
    @throw new_OrgOssPdfreporterEngineJRRuntimeException_initWithNSString_(JreStrcat("$I", @"No expression for id ", id_));
  }
  OrgOssPdfreporterCompilersJavascriptJavaScriptCompileData_Expression *expr = [expressions_ getWithInt:id_];
  if (expr == nil) {
    @throw new_OrgOssPdfreporterEngineJRRuntimeException_initWithNSString_(JreStrcat("$I", @"No expression for id ", id_));
  }
  return expr;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterCompilersJavascriptJavaScriptCompileData_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "addExpressionWithInt:withOrgOssPdfreporterCompilersJavascriptJavaScriptCompileData_Expression:", "addExpression", "V", 0x1, NULL, NULL },
    { "addExpressionWithInt:withNSString:withNSString:withNSString:", "addExpression", "V", 0x1, NULL, NULL },
    { "getExpressionWithInt:", "getExpression", "Lorg.oss.pdfreporter.compilers.javascript.JavaScriptCompileData$Expression;", 0x1, NULL, NULL },
    { "init", "JavaScriptCompileData", NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "serialVersionUID", 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgOssPdfreporterCompilersJavascriptJavaScriptCompileData_serialVersionUID },
    { "EXCEPTION_MESSAGE_KEY_EXPRESSION_NOT_FOUND", "EXCEPTION_MESSAGE_KEY_EXPRESSION_NOT_FOUND", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterCompilersJavascriptJavaScriptCompileData_EXCEPTION_MESSAGE_KEY_EXPRESSION_NOT_FOUND, NULL, .constantValue.asLong = 0 },
    { "expressions_", NULL, 0x12, "Ljava.util.List;", NULL, "Ljava/util/List<Lorg/oss/pdfreporter/compilers/javascript/JavaScriptCompileData$Expression;>;", .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lorg.oss.pdfreporter.compilers.javascript.JavaScriptCompileData$Expression;"};
  static const J2ObjcClassInfo _OrgOssPdfreporterCompilersJavascriptJavaScriptCompileData = { 2, "JavaScriptCompileData", "org.oss.pdfreporter.compilers.javascript", NULL, 0x1, 4, methods, 3, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_OrgOssPdfreporterCompilersJavascriptJavaScriptCompileData;
}

@end

void OrgOssPdfreporterCompilersJavascriptJavaScriptCompileData_init(OrgOssPdfreporterCompilersJavascriptJavaScriptCompileData *self) {
  NSObject_init(self);
  self->expressions_ = new_JavaUtilArrayList_init();
}

OrgOssPdfreporterCompilersJavascriptJavaScriptCompileData *new_OrgOssPdfreporterCompilersJavascriptJavaScriptCompileData_init() {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterCompilersJavascriptJavaScriptCompileData, init)
}

OrgOssPdfreporterCompilersJavascriptJavaScriptCompileData *create_OrgOssPdfreporterCompilersJavascriptJavaScriptCompileData_init() {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterCompilersJavascriptJavaScriptCompileData, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterCompilersJavascriptJavaScriptCompileData)

@implementation OrgOssPdfreporterCompilersJavascriptJavaScriptCompileData_Expression

- (instancetype)initWithNSString:(NSString *)defaultExpression
                    withNSString:(NSString *)estimatedExpression
                    withNSString:(NSString *)oldExpression {
  OrgOssPdfreporterCompilersJavascriptJavaScriptCompileData_Expression_initWithNSString_withNSString_withNSString_(self, defaultExpression, estimatedExpression, oldExpression);
  return self;
}

- (NSString *)getDefaultExpression {
  return defaultExpression_;
}

- (NSString *)getOldExpression {
  return oldExpression_;
}

- (NSString *)getEstimatedExpression {
  return estimatedExpression_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withNSString:withNSString:", "Expression", NULL, 0x1, NULL, NULL },
    { "getDefaultExpression", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getOldExpression", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getEstimatedExpression", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "serialVersionUID", 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgOssPdfreporterCompilersJavascriptJavaScriptCompileData_Expression_serialVersionUID },
    { "defaultExpression_", NULL, 0x12, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "oldExpression_", NULL, 0x12, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "estimatedExpression_", NULL, 0x12, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterCompilersJavascriptJavaScriptCompileData_Expression = { 2, "Expression", "org.oss.pdfreporter.compilers.javascript", "JavaScriptCompileData", 0xc, 4, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterCompilersJavascriptJavaScriptCompileData_Expression;
}

@end

void OrgOssPdfreporterCompilersJavascriptJavaScriptCompileData_Expression_initWithNSString_withNSString_withNSString_(OrgOssPdfreporterCompilersJavascriptJavaScriptCompileData_Expression *self, NSString *defaultExpression, NSString *estimatedExpression, NSString *oldExpression) {
  NSObject_init(self);
  self->defaultExpression_ = defaultExpression;
  self->estimatedExpression_ = estimatedExpression;
  self->oldExpression_ = oldExpression;
}

OrgOssPdfreporterCompilersJavascriptJavaScriptCompileData_Expression *new_OrgOssPdfreporterCompilersJavascriptJavaScriptCompileData_Expression_initWithNSString_withNSString_withNSString_(NSString *defaultExpression, NSString *estimatedExpression, NSString *oldExpression) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterCompilersJavascriptJavaScriptCompileData_Expression, initWithNSString_withNSString_withNSString_, defaultExpression, estimatedExpression, oldExpression)
}

OrgOssPdfreporterCompilersJavascriptJavaScriptCompileData_Expression *create_OrgOssPdfreporterCompilersJavascriptJavaScriptCompileData_Expression_initWithNSString_withNSString_withNSString_(NSString *defaultExpression, NSString *estimatedExpression, NSString *oldExpression) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterCompilersJavascriptJavaScriptCompileData_Expression, initWithNSString_withNSString_withNSString_, defaultExpression, estimatedExpression, oldExpression)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterCompilersJavascriptJavaScriptCompileData_Expression)
