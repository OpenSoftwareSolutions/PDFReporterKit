//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-ios/src/org/oss/pdfreporter/compilers/javascript/interpreter/JavaScriptValue.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Double.h"
#include "java/lang/Integer.h"
#include "org/oss/pdfreporter/compilers/javascript/interpreter/IScriptValue.h"
#include "org/oss/pdfreporter/compilers/javascript/interpreter/JavaScriptValue.h"

#import <JavaScriptCore/JavaScriptCore.h>

@implementation OrgOssPdfreporterCompilersJavascriptInterpreterJavaScriptValue

{
  JSValue *_value;
}

- (instancetype)initWithId:(id)nativeValue {
  OrgOssPdfreporterCompilersJavascriptInterpreterJavaScriptValue_initWithId_(self, nativeValue);
  return self;
}

- (void)setNativeValueWithId:(id)nativeValue {
  _value = nativeValue;
}

- (id)getNativeValue {
  return _value;
}

- (id)toObjectValue {
  return [_value toObject];
}

- (jboolean)toBooleanValue {
  return [_value toBool];
}

- (JavaLangDouble *)toDoubleValue {
  return [[JavaLangDouble alloc] initWithDouble:[_value toDouble]];
}

- (JavaLangInteger *)toIntegerValue {
  return [[JavaLangInteger alloc] initWithInt:[_value toInt32]];
}

- (NSString *)toStringValue {
  return [nil_chk([self toObjectValue]) description];
}

- (jboolean)isUndefined {
  return [_value isUndefined];
}

- (jboolean)isNull {
  return [_value isNull];
}

- (jboolean)isBoolean {
  return [_value isBoolean];
}

- (jboolean)isNumber {
  return [_value isNumber];
}

- (jboolean)isString {
  return [_value isString];
}

- (jboolean)isObject {
  return [_value isObject];
}

- (jboolean)isEqualToWithId:(id)other {
  return [_value isEqualToObject:other];
}

- (jboolean)isInstanceOfWithId:(id)other {
  return [_value isInstanceOf:other];
}

- (id<OrgOssPdfreporterCompilersJavascriptInterpreterIScriptValue>)callWithOrgOssPdfreporterCompilersJavascriptInterpreterIScriptValueArray:(IOSObjectArray *)args {
  int capacity = [args length];
  NSMutableArray *arguments = [[NSMutableArray alloc] initWithCapacity:capacity];
  for (id arg in args) {
    [arguments addObject:[arg getNativeValue]];
  }
  id value = [_value callWithArguments:arguments];
  return [[OrgOssPdfreporterCompilersJavascriptInterpreterJavaScriptValue alloc] initWithId:value];
}

- (id<OrgOssPdfreporterCompilersJavascriptInterpreterIScriptValue>)constructWithOrgOssPdfreporterCompilersJavascriptInterpreterIScriptValueArray:(IOSObjectArray *)args {
  int capacity = [args length];
  NSMutableArray *arguments = [[NSMutableArray alloc] initWithCapacity:capacity];
  for (id arg in args) {
    [arguments addObject:[arg getNativeValue]];
  }
  id value = [_value constructWithArguments: arguments];
  return [[OrgOssPdfreporterCompilersJavascriptInterpreterJavaScriptValue alloc] initWithId:value];
}

- (id<OrgOssPdfreporterCompilersJavascriptInterpreterIScriptValue>)invokeWithNSString:(NSString *)method
                 withOrgOssPdfreporterCompilersJavascriptInterpreterIScriptValueArray:(IOSObjectArray *)args {
  int capacity = [args length];
  NSMutableArray *arguments = [[NSMutableArray alloc] initWithCapacity:capacity];
  for (id arg in args) {
    [arguments addObject:[arg getNativeValue]];
  }
  id value = [_value invokeMethod:method withArguments:arguments];
  return [[OrgOssPdfreporterCompilersJavascriptInterpreterJavaScriptValue alloc] initWithId:value];
}

- (NSString *)description {
  return [self isNull] ? @"<null>" : [self toStringValue];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithId:", "JavaScriptValue", NULL, 0x0, NULL, NULL },
    { "setNativeValueWithId:", "setNativeValue", "V", 0x101, NULL, NULL },
    { "getNativeValue", NULL, "Ljava.lang.Object;", 0x101, NULL, NULL },
    { "toObjectValue", NULL, "Ljava.lang.Object;", 0x101, NULL, NULL },
    { "toBooleanValue", NULL, "Z", 0x101, NULL, NULL },
    { "toDoubleValue", NULL, "Ljava.lang.Double;", 0x101, NULL, NULL },
    { "toIntegerValue", NULL, "Ljava.lang.Integer;", 0x101, NULL, NULL },
    { "toStringValue", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "isUndefined", NULL, "Z", 0x101, NULL, NULL },
    { "isNull", NULL, "Z", 0x101, NULL, NULL },
    { "isBoolean", NULL, "Z", 0x101, NULL, NULL },
    { "isNumber", NULL, "Z", 0x101, NULL, NULL },
    { "isString", NULL, "Z", 0x101, NULL, NULL },
    { "isObject", NULL, "Z", 0x101, NULL, NULL },
    { "isEqualToWithId:", "isEqualTo", "Z", 0x101, NULL, NULL },
    { "isInstanceOfWithId:", "isInstanceOf", "Z", 0x101, NULL, NULL },
    { "callWithOrgOssPdfreporterCompilersJavascriptInterpreterIScriptValueArray:", "call", "Lorg.oss.pdfreporter.compilers.javascript.interpreter.IScriptValue;", 0x101, NULL, NULL },
    { "constructWithOrgOssPdfreporterCompilersJavascriptInterpreterIScriptValueArray:", "construct", "Lorg.oss.pdfreporter.compilers.javascript.interpreter.IScriptValue;", 0x101, NULL, NULL },
    { "invokeWithNSString:withOrgOssPdfreporterCompilersJavascriptInterpreterIScriptValueArray:", "invoke", "Lorg.oss.pdfreporter.compilers.javascript.interpreter.IScriptValue;", 0x101, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterCompilersJavascriptInterpreterJavaScriptValue = { 2, "JavaScriptValue", "org.oss.pdfreporter.compilers.javascript.interpreter", NULL, 0x1, 20, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterCompilersJavascriptInterpreterJavaScriptValue;
}

@end

void OrgOssPdfreporterCompilersJavascriptInterpreterJavaScriptValue_initWithId_(OrgOssPdfreporterCompilersJavascriptInterpreterJavaScriptValue *self, id nativeValue) {
  NSObject_init(self);
  [self setNativeValueWithId:nativeValue];
}

OrgOssPdfreporterCompilersJavascriptInterpreterJavaScriptValue *new_OrgOssPdfreporterCompilersJavascriptInterpreterJavaScriptValue_initWithId_(id nativeValue) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterCompilersJavascriptInterpreterJavaScriptValue, initWithId_, nativeValue)
}

OrgOssPdfreporterCompilersJavascriptInterpreterJavaScriptValue *create_OrgOssPdfreporterCompilersJavascriptInterpreterJavaScriptValue_initWithId_(id nativeValue) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterCompilersJavascriptInterpreterJavaScriptValue, initWithId_, nativeValue)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterCompilersJavascriptInterpreterJavaScriptValue)
