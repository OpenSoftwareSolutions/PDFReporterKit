//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-ios/src/org/oss/pdfreporter/compilers/javascript/interpreter/JavaScriptEngine.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Exception.h"
#include "java/util/logging/Level.h"
#include "java/util/logging/Logger.h"
#include "org/oss/pdfreporter/compilers/javascript/interpreter/AbstractLoggingScriptEngine.h"
#include "org/oss/pdfreporter/compilers/javascript/interpreter/IScriptValue.h"
#include "org/oss/pdfreporter/compilers/javascript/interpreter/JavaScriptEngine.h"
#include "org/oss/pdfreporter/compilers/javascript/interpreter/KeySetCachingScriptContextDelegate.h"
#include "org/oss/pdfreporter/compilers/javascript/interpreter/ScriptValueMarshaller.h"
#include "org/oss/pdfreporter/compilers/javascript/interpreter/factory/EvaluatorException.h"
#include "org/oss/pdfreporter/compilers/javascript/interpreter/factory/IScriptContext.h"

#import <JavaScriptCore/JavaScriptCore.h>
#include "JavaScriptContext.h"
#include "JavaScriptValue.h"

@interface OrgOssPdfreporterCompilersJavascriptInterpreterJavaScriptEngine ()

- (id<OrgOssPdfreporterCompilersJavascriptInterpreterFactoryIScriptContext>)getContextNativeWithOrgOssPdfreporterCompilersJavascriptInterpreterFactoryIScriptContext_Scope:(OrgOssPdfreporterCompilersJavascriptInterpreterFactoryIScriptContext_Scope *)scope;

@end

inline JavaUtilLoggingLogger *OrgOssPdfreporterCompilersJavascriptInterpreterJavaScriptEngine_get_logger();
static JavaUtilLoggingLogger *OrgOssPdfreporterCompilersJavascriptInterpreterJavaScriptEngine_logger;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterCompilersJavascriptInterpreterJavaScriptEngine, logger, JavaUtilLoggingLogger *)

__attribute__((unused)) static id<OrgOssPdfreporterCompilersJavascriptInterpreterFactoryIScriptContext> OrgOssPdfreporterCompilersJavascriptInterpreterJavaScriptEngine_getContextNativeWithOrgOssPdfreporterCompilersJavascriptInterpreterFactoryIScriptContext_Scope_(OrgOssPdfreporterCompilersJavascriptInterpreterJavaScriptEngine *self, OrgOssPdfreporterCompilersJavascriptInterpreterFactoryIScriptContext_Scope *scope);

J2OBJC_INITIALIZED_DEFN(OrgOssPdfreporterCompilersJavascriptInterpreterJavaScriptEngine)

@implementation OrgOssPdfreporterCompilersJavascriptInterpreterJavaScriptEngine

{
  JSContext *_context;
  NSString *_name;
  NSString *_functionName;
}

- (instancetype)initWithNSString:(NSString *)name
                    withNSString:(NSString *)functionSource
                    withNSString:(NSString *)functionName {
  OrgOssPdfreporterCompilersJavascriptInterpreterJavaScriptEngine_initWithNSString_withNSString_withNSString_(self, name, functionSource, functionName);
  return self;
}

- (void)initialize__WithNSString:(NSString *)name
                    withNSString:(NSString *)functionSource
                    withNSString:(NSString *)functionName {
  _name = name;
  _functionName = functionName;
  _context = [[JSContext alloc] init];
  [_context evaluateScript: functionSource];
}

- (id)getNativeContext {
  return _context;
}

- (NSString *)getName {
  return [_name copy];
}

- (NSString *)getFunctionName {
  return [_functionName copy];
}

- (id<OrgOssPdfreporterCompilersJavascriptInterpreterFactoryIScriptContext>)getContextWithOrgOssPdfreporterCompilersJavascriptInterpreterFactoryIScriptContext_Scope:(OrgOssPdfreporterCompilersJavascriptInterpreterFactoryIScriptContext_Scope *)scope {
  return new_OrgOssPdfreporterCompilersJavascriptInterpreterKeySetCachingScriptContextDelegate_initWithOrgOssPdfreporterCompilersJavascriptInterpreterFactoryIScriptContext_([self getContextInternalWithOrgOssPdfreporterCompilersJavascriptInterpreterFactoryIScriptContext_Scope:scope]);
}

- (id<OrgOssPdfreporterCompilersJavascriptInterpreterFactoryIScriptContext>)getContextNativeWithOrgOssPdfreporterCompilersJavascriptInterpreterFactoryIScriptContext_Scope:(OrgOssPdfreporterCompilersJavascriptInterpreterFactoryIScriptContext_Scope *)scope {
  return OrgOssPdfreporterCompilersJavascriptInterpreterJavaScriptEngine_getContextNativeWithOrgOssPdfreporterCompilersJavascriptInterpreterFactoryIScriptContext_Scope_(self, scope);
}

- (id<OrgOssPdfreporterCompilersJavascriptInterpreterIScriptValue>)evaluateNativeWithOrgOssPdfreporterCompilersJavascriptInterpreterIScriptValueArray:(IOSObjectArray *)args {
  JSValue *function = _context[_functionName];
  int capacity = [args length];
  NSMutableArray *arguments = [[NSMutableArray alloc] initWithCapacity:capacity];
  for (id arg in args) {
    [arguments addObject:[arg getNativeValue]];
  }
  id value = [function callWithArguments: arguments];
  return [[OrgOssPdfreporterCompilersJavascriptInterpreterJavaScriptValue alloc] initWithId:value];
}

- (id<OrgOssPdfreporterCompilersJavascriptInterpreterFactoryIScriptContext>)getContextInternalWithOrgOssPdfreporterCompilersJavascriptInterpreterFactoryIScriptContext_Scope:(OrgOssPdfreporterCompilersJavascriptInterpreterFactoryIScriptContext_Scope *)scope {
  return OrgOssPdfreporterCompilersJavascriptInterpreterJavaScriptEngine_getContextNativeWithOrgOssPdfreporterCompilersJavascriptInterpreterFactoryIScriptContext_Scope_(self, scope);
}

- (id)evaluateInternalWithNSObjectArray:(IOSObjectArray *)args {
  IOSObjectArray *scriptArgs = [IOSObjectArray newArrayWithLength:((IOSObjectArray *) nil_chk(args))->size_ type:OrgOssPdfreporterCompilersJavascriptInterpreterIScriptValue_class_()];
  jint index = 0;
  {
    IOSObjectArray *a__ = args;
    id const *b__ = a__->buffer_;
    id const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      id arg = *b__++;
      (void) IOSObjectArray_Set(scriptArgs, index++, OrgOssPdfreporterCompilersJavascriptInterpreterScriptValueMarshaller_marshallWithId_(arg));
    }
  }
  @try {
    return [self evaluateNativeWithOrgOssPdfreporterCompilersJavascriptInterpreterIScriptValueArray:scriptArgs];
  }
  @catch (JavaLangException *e) {
    [((JavaUtilLoggingLogger *) nil_chk(OrgOssPdfreporterCompilersJavascriptInterpreterJavaScriptEngine_logger)) logWithJavaUtilLoggingLevel:JreLoadStatic(JavaUtilLoggingLevel, INFO) withNSString:[((JavaLangException *) nil_chk(e)) getMessage] withNSException:e];
    @throw new_OrgOssPdfreporterCompilersJavascriptInterpreterFactoryEvaluatorException_initWithNSString_withNSException_([e getMessage], e);
  }
}

+ (void)initialize {
  if (self == [OrgOssPdfreporterCompilersJavascriptInterpreterJavaScriptEngine class]) {
    OrgOssPdfreporterCompilersJavascriptInterpreterJavaScriptEngine_logger = JavaUtilLoggingLogger_getLoggerWithNSString_([OrgOssPdfreporterCompilersJavascriptInterpreterJavaScriptEngine_class_() getName]);
    J2OBJC_SET_INITIALIZED(OrgOssPdfreporterCompilersJavascriptInterpreterJavaScriptEngine)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withNSString:withNSString:", "JavaScriptEngine", NULL, 0x0, NULL, NULL },
    { "initialize__WithNSString:withNSString:withNSString:", "initialize", "V", 0x101, NULL, NULL },
    { "getNativeContext", NULL, "Ljava.lang.Object;", 0x101, NULL, NULL },
    { "getName", NULL, "Ljava.lang.String;", 0x101, NULL, NULL },
    { "getFunctionName", NULL, "Ljava.lang.String;", 0x101, NULL, NULL },
    { "getContextWithOrgOssPdfreporterCompilersJavascriptInterpreterFactoryIScriptContext_Scope:", "getContext", "Lorg.oss.pdfreporter.compilers.javascript.interpreter.factory.IScriptContext;", 0x1, NULL, NULL },
    { "getContextNativeWithOrgOssPdfreporterCompilersJavascriptInterpreterFactoryIScriptContext_Scope:", "getContextNative", "Lorg.oss.pdfreporter.compilers.javascript.interpreter.factory.IScriptContext;", 0x102, NULL, NULL },
    { "evaluateNativeWithOrgOssPdfreporterCompilersJavascriptInterpreterIScriptValueArray:", "evaluateNative", "Lorg.oss.pdfreporter.compilers.javascript.interpreter.IScriptValue;", 0x181, "Lorg.oss.pdfreporter.compilers.javascript.interpreter.factory.EvaluatorException;", NULL },
    { "getContextInternalWithOrgOssPdfreporterCompilersJavascriptInterpreterFactoryIScriptContext_Scope:", "getContextInternal", "Lorg.oss.pdfreporter.compilers.javascript.interpreter.factory.IScriptContext;", 0x4, NULL, NULL },
    { "evaluateInternalWithNSObjectArray:", "evaluateInternal", "Ljava.lang.Object;", 0x84, "Lorg.oss.pdfreporter.compilers.javascript.interpreter.factory.EvaluatorException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "logger", "logger", 0x1a, "Ljava.util.logging.Logger;", &OrgOssPdfreporterCompilersJavascriptInterpreterJavaScriptEngine_logger, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterCompilersJavascriptInterpreterJavaScriptEngine = { 2, "JavaScriptEngine", "org.oss.pdfreporter.compilers.javascript.interpreter", NULL, 0x1, 10, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterCompilersJavascriptInterpreterJavaScriptEngine;
}

@end

void OrgOssPdfreporterCompilersJavascriptInterpreterJavaScriptEngine_initWithNSString_withNSString_withNSString_(OrgOssPdfreporterCompilersJavascriptInterpreterJavaScriptEngine *self, NSString *name, NSString *functionSource, NSString *functionName) {
  OrgOssPdfreporterCompilersJavascriptInterpreterAbstractLoggingScriptEngine_initWithNSString_withNSString_(self, name, functionName);
  [self initialize__WithNSString:name withNSString:functionSource withNSString:functionName];
}

OrgOssPdfreporterCompilersJavascriptInterpreterJavaScriptEngine *new_OrgOssPdfreporterCompilersJavascriptInterpreterJavaScriptEngine_initWithNSString_withNSString_withNSString_(NSString *name, NSString *functionSource, NSString *functionName) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterCompilersJavascriptInterpreterJavaScriptEngine, initWithNSString_withNSString_withNSString_, name, functionSource, functionName)
}

OrgOssPdfreporterCompilersJavascriptInterpreterJavaScriptEngine *create_OrgOssPdfreporterCompilersJavascriptInterpreterJavaScriptEngine_initWithNSString_withNSString_withNSString_(NSString *name, NSString *functionSource, NSString *functionName) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterCompilersJavascriptInterpreterJavaScriptEngine, initWithNSString_withNSString_withNSString_, name, functionSource, functionName)
}

id<OrgOssPdfreporterCompilersJavascriptInterpreterFactoryIScriptContext> OrgOssPdfreporterCompilersJavascriptInterpreterJavaScriptEngine_getContextNativeWithOrgOssPdfreporterCompilersJavascriptInterpreterFactoryIScriptContext_Scope_(OrgOssPdfreporterCompilersJavascriptInterpreterJavaScriptEngine *self, OrgOssPdfreporterCompilersJavascriptInterpreterFactoryIScriptContext_Scope *scope) {
  OrgOssPdfreporterCompilersJavascriptInterpreterJavaScriptContext *context = [OrgOssPdfreporterCompilersJavascriptInterpreterJavaScriptContext new];
  [context setJSContextWithId:[self getNativeContext]];
  return context;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterCompilersJavascriptInterpreterJavaScriptEngine)
