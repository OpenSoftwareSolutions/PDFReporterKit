//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/compilers/javascript/interpreter/TypeMetadata.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Boolean.h"
#include "java/lang/Byte.h"
#include "java/lang/Character.h"
#include "java/lang/Double.h"
#include "java/lang/Exception.h"
#include "java/lang/Float.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/Short.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/Void.h"
#include "java/lang/reflect/Method.h"
#include "java/lang/reflect/Modifier.h"
#include "java/util/Date.h"
#include "java/util/HashSet.h"
#include "java/util/Set.h"
#include "org/oss/pdfreporter/compilers/javascript/interpreter/TypeMetadata.h"

@interface OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata ()

- (instancetype)init;

+ (NSString *)toArgumentStringWithNSObjectArray:(IOSObjectArray *)args;

+ (NSString *)toParameterStringWithIOSClassArray:(IOSObjectArray *)types;

+ (id<JavaUtilSet>)getWrapperTypes;

@end

inline id<JavaUtilSet> OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata_get_WRAPPER_TYPES();
static id<JavaUtilSet> OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata_WRAPPER_TYPES;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata, WRAPPER_TYPES, id<JavaUtilSet>)

__attribute__((unused)) static void OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata_init(OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata *self);

__attribute__((unused)) static OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata *new_OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata *create_OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata_init();

__attribute__((unused)) static NSString *OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata_toArgumentStringWithNSObjectArray_(IOSObjectArray *args);

__attribute__((unused)) static NSString *OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata_toParameterStringWithIOSClassArray_(IOSObjectArray *types);

__attribute__((unused)) static id<JavaUtilSet> OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata_getWrapperTypes();

J2OBJC_INITIALIZED_DEFN(OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata)

@implementation OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (jboolean)isPrimitiveWithIOSClass:(IOSClass *)clazz {
  return OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata_isPrimitiveWithIOSClass_(clazz);
}

+ (jboolean)isPrimitiveWithId:(id)obj {
  return OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata_isPrimitiveWithId_(obj);
}

+ (jboolean)isPrimitiveWithNSString:(NSString *)primitiveName
                       withIOSClass:(IOSClass *)type {
  return OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata_isPrimitiveWithNSString_withIOSClass_(primitiveName, type);
}

+ (NSString *)toMemberNameWithJavaLangReflectMethod:(JavaLangReflectMethod *)m {
  return OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata_toMemberNameWithJavaLangReflectMethod_(m);
}

+ (jboolean)isVoidSingleParameterSetterWithJavaLangReflectMethod:(JavaLangReflectMethod *)s {
  return OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata_isVoidSingleParameterSetterWithJavaLangReflectMethod_(s);
}

+ (jboolean)isParameterlessGetterWithJavaLangReflectMethod:(JavaLangReflectMethod *)m {
  return OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata_isParameterlessGetterWithJavaLangReflectMethod_(m);
}

+ (jboolean)isPublicWithIOSClass:(IOSClass *)clazz {
  return OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata_isPublicWithIOSClass_(clazz);
}

+ (id)castNumberValueWithId:(id)value
               withIOSClass:(IOSClass *)requestedType {
  return OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata_castNumberValueWithId_withIOSClass_(value, requestedType);
}

+ (id)invokeMethodWithJavaLangReflectMethod:(JavaLangReflectMethod *)m
                                     withId:(id)obj
                          withNSObjectArray:(IOSObjectArray *)args {
  return OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata_invokeMethodWithJavaLangReflectMethod_withId_withNSObjectArray_(m, obj, args);
}

+ (NSString *)toArgumentStringWithNSObjectArray:(IOSObjectArray *)args {
  return OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata_toArgumentStringWithNSObjectArray_(args);
}

+ (NSString *)toParameterStringWithIOSClassArray:(IOSObjectArray *)types {
  return OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata_toParameterStringWithIOSClassArray_(types);
}

+ (id<JavaUtilSet>)getWrapperTypes {
  return OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata_getWrapperTypes();
}

+ (void)initialize {
  if (self == [OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata class]) {
    OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata_WRAPPER_TYPES = OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata_getWrapperTypes();
    J2OBJC_SET_INITIALIZED(OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "TypeMetadata", NULL, 0x2, NULL, NULL },
    { "isPrimitiveWithIOSClass:", "isPrimitive", "Z", 0x9, NULL, "(Ljava/lang/Class<*>;)Z" },
    { "isPrimitiveWithId:", "isPrimitive", "Z", 0x9, NULL, NULL },
    { "isPrimitiveWithNSString:withIOSClass:", "isPrimitive", "Z", 0x9, NULL, "(Ljava/lang/String;Ljava/lang/Class<*>;)Z" },
    { "toMemberNameWithJavaLangReflectMethod:", "toMemberName", "Ljava.lang.String;", 0x9, NULL, NULL },
    { "isVoidSingleParameterSetterWithJavaLangReflectMethod:", "isVoidSingleParameterSetter", "Z", 0x9, NULL, NULL },
    { "isParameterlessGetterWithJavaLangReflectMethod:", "isParameterlessGetter", "Z", 0x9, NULL, NULL },
    { "isPublicWithIOSClass:", "isPublic", "Z", 0x9, NULL, "(Ljava/lang/Class<*>;)Z" },
    { "castNumberValueWithId:withIOSClass:", "castNumberValue", "Ljava.lang.Object;", 0x9, NULL, "(Ljava/lang/Object;Ljava/lang/Class<*>;)Ljava/lang/Object;" },
    { "invokeMethodWithJavaLangReflectMethod:withId:withNSObjectArray:", "invokeMethod", "Ljava.lang.Object;", 0x89, NULL, NULL },
    { "toArgumentStringWithNSObjectArray:", "toArgumentString", "Ljava.lang.String;", 0x8a, NULL, NULL },
    { "toParameterStringWithIOSClassArray:", "toParameterString", "Ljava.lang.String;", 0x8a, NULL, NULL },
    { "getWrapperTypes", NULL, "Ljava.util.Set;", 0xa, NULL, "()Ljava/util/Set<Ljava/lang/Class<*>;>;" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "WRAPPER_TYPES", "WRAPPER_TYPES", 0x1a, "Ljava.util.Set;", &OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata_WRAPPER_TYPES, "Ljava/util/Set<Ljava/lang/Class<*>;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata = { 2, "TypeMetadata", "org.oss.pdfreporter.compilers.javascript.interpreter", NULL, 0x1, 13, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata;
}

@end

void OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata_init(OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata *self) {
  NSObject_init(self);
}

OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata *new_OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata_init() {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata, init)
}

OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata *create_OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata_init() {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata, init)
}

jboolean OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata_isPrimitiveWithIOSClass_(IOSClass *clazz) {
  OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata_initialize();
  return [((id<JavaUtilSet>) nil_chk(OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata_WRAPPER_TYPES)) containsWithId:clazz];
}

jboolean OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata_isPrimitiveWithId_(id obj) {
  OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata_initialize();
  return obj == nil ? true : OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata_isPrimitiveWithIOSClass_([obj getClass]);
}

jboolean OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata_isPrimitiveWithNSString_withIOSClass_(NSString *primitiveName, IOSClass *type) {
  OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata_initialize();
  return [((NSString *) nil_chk(primitiveName)) isEqual:[((IOSClass *) nil_chk(type)) description]];
}

NSString *OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata_toMemberNameWithJavaLangReflectMethod_(JavaLangReflectMethod *m) {
  OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata_initialize();
  NSString *memberName = [((NSString *) nil_chk([((JavaLangReflectMethod *) nil_chk(m)) getName])) substring:3];
  return JreStrcat("$$", [[NSString stringWithCharacters:[IOSCharArray newArrayWithChars:(jchar[]){ [((NSString *) nil_chk(memberName)) charAtWithInt:0] } count:1]] lowercaseString], [memberName substring:1]);
}

jboolean OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata_isVoidSingleParameterSetterWithJavaLangReflectMethod_(JavaLangReflectMethod *s) {
  OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata_initialize();
  return [((NSString *) nil_chk([((JavaLangReflectMethod *) nil_chk(s)) getName])) hasPrefix:@"set"] && [((IOSClass *) nil_chk([s getReturnType])) isEqual:[IOSClass voidClass]] && ((IOSObjectArray *) nil_chk([s getParameterTypes]))->size_ == 1;
}

jboolean OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata_isParameterlessGetterWithJavaLangReflectMethod_(JavaLangReflectMethod *m) {
  OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata_initialize();
  return [((NSString *) nil_chk([((JavaLangReflectMethod *) nil_chk(m)) getName])) hasPrefix:@"get"] && ((IOSObjectArray *) nil_chk([m getParameterTypes]))->size_ == 0 && ![((IOSClass *) nil_chk([m getReturnType])) isEqual:JavaLangVoid_class_()];
}

jboolean OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata_isPublicWithIOSClass_(IOSClass *clazz) {
  OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata_initialize();
  return JavaLangReflectModifier_isPublicWithInt_([((IOSClass *) nil_chk(clazz)) getModifiers]);
}

id OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata_castNumberValueWithId_withIOSClass_(id value, IOSClass *requestedType) {
  OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata_initialize();
  if (value == nil) {
    return nil;
  }
  else if (requestedType == [value getClass]) {
    return value;
  }
  if ([value isKindOfClass:[NSNumber class]]) {
    NSNumber *numberValue = [NSNumber_class_() cast:value];
    if (requestedType == JavaLangByte_class_() || OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata_isPrimitiveWithNSString_withIOSClass_(@"byte", requestedType)) {
      return JavaLangByte_valueOfWithByte_([((NSNumber *) nil_chk(numberValue)) charValue]);
    }
    else if (requestedType == JavaLangDouble_class_() || OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata_isPrimitiveWithNSString_withIOSClass_(@"double", requestedType)) {
      return JavaLangDouble_valueOfWithDouble_([((NSNumber *) nil_chk(numberValue)) doubleValue]);
    }
    else if (requestedType == JavaLangFloat_class_() || OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata_isPrimitiveWithNSString_withIOSClass_(@"float", requestedType)) {
      return JavaLangFloat_valueOfWithFloat_([((NSNumber *) nil_chk(numberValue)) floatValue]);
    }
    else if (requestedType == JavaLangInteger_class_() || OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata_isPrimitiveWithNSString_withIOSClass_(@"int", requestedType)) {
      return JavaLangInteger_valueOfWithInt_([((NSNumber *) nil_chk(numberValue)) intValue]);
    }
    else if (requestedType == JavaLangLong_class_() || OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata_isPrimitiveWithNSString_withIOSClass_(@"long", requestedType)) {
      return JavaLangLong_valueOfWithLong_([((NSNumber *) nil_chk(numberValue)) longLongValue]);
    }
    else if (requestedType == JavaLangShort_class_() || OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata_isPrimitiveWithNSString_withIOSClass_(@"short", requestedType)) {
      return JavaLangShort_valueOfWithShort_([((NSNumber *) nil_chk(numberValue)) shortValue]);
    }
  }
  @throw new_JavaLangIllegalArgumentException_initWithNSString_(NSString_formatWithNSString_withNSObjectArray_(@"Can not cast %s (%s) to %s", [IOSObjectArray newArrayWithObjects:(id[]){ value, [[value getClass] getSimpleName], [((IOSClass *) nil_chk(requestedType)) getSimpleName] } count:3 type:NSObject_class_()]));
}

id OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata_invokeMethodWithJavaLangReflectMethod_withId_withNSObjectArray_(JavaLangReflectMethod *m, id obj, IOSObjectArray *args) {
  OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata_initialize();
  @try {
    return [((JavaLangReflectMethod *) nil_chk(m)) invokeWithId:obj withNSObjectArray:args];
  }
  @catch (JavaLangException *e) {
    NSString *argsString = OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata_toArgumentStringWithNSObjectArray_(args);
    NSString *paramString = OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata_toParameterStringWithIOSClassArray_([m getParameterTypes]);
    @throw new_JavaLangRuntimeException_initWithNSString_withNSException_(NSString_formatWithNSString_withNSObjectArray_(@"Failed to invoke method %s on class %s with arguments %s for parameter types %s.", [IOSObjectArray newArrayWithObjects:(id[]){ [m getName], [[nil_chk(obj) getClass] getSimpleName], argsString, paramString } count:4 type:NSObject_class_()]), e);
  }
}

NSString *OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata_toArgumentStringWithNSObjectArray_(IOSObjectArray *args) {
  OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata_initialize();
  JavaLangStringBuilder *argsString = new_JavaLangStringBuilder_init();
  (void) [argsString appendWithNSString:@"["];
  jboolean isFirst = true;
  {
    IOSObjectArray *a__ = args;
    id const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    id const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      id arg = *b__++;
      if (isFirst) {
        isFirst = false;
      }
      else {
        (void) [argsString appendWithNSString:@", "];
      }
      if (arg == nil) {
        (void) [argsString appendWithNSString:@"null"];
      }
      else {
        (void) [argsString appendWithId:arg];
        (void) [argsString appendWithNSString:@" ("];
        (void) [argsString appendWithNSString:[[arg getClass] getSimpleName]];
        (void) [argsString appendWithNSString:@")"];
      }
      (void) [argsString appendWithNSString:@"]"];
    }
  }
  return [argsString description];
}

NSString *OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata_toParameterStringWithIOSClassArray_(IOSObjectArray *types) {
  OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata_initialize();
  JavaLangStringBuilder *argsString = new_JavaLangStringBuilder_init();
  (void) [argsString appendWithNSString:@"["];
  jboolean isFirst = true;
  {
    IOSObjectArray *a__ = types;
    IOSClass * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    IOSClass * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      IOSClass *type = *b__++;
      if (isFirst) {
        isFirst = false;
      }
      else {
        (void) [argsString appendWithNSString:@", "];
      }
      if (type == nil) {
        (void) [argsString appendWithNSString:@"null"];
      }
      else {
        (void) [argsString appendWithNSString:[type getSimpleName]];
      }
      (void) [argsString appendWithNSString:@"]"];
    }
  }
  return [argsString description];
}

id<JavaUtilSet> OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata_getWrapperTypes() {
  OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata_initialize();
  id<JavaUtilSet> ret = new_JavaUtilHashSet_init();
  [ret addWithId:JavaLangBoolean_class_()];
  [ret addWithId:JavaLangCharacter_class_()];
  [ret addWithId:JavaLangByte_class_()];
  [ret addWithId:JavaLangShort_class_()];
  [ret addWithId:JavaLangInteger_class_()];
  [ret addWithId:JavaLangLong_class_()];
  [ret addWithId:JavaLangFloat_class_()];
  [ret addWithId:JavaLangDouble_class_()];
  [ret addWithId:JavaLangVoid_class_()];
  [ret addWithId:NSString_class_()];
  [ret addWithId:JavaUtilDate_class_()];
  return ret;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterCompilersJavascriptInterpreterTypeMetadata)
