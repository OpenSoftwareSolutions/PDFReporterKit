//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/compilers/javascript/JavaScriptCompiledData.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgOssPdfreporterCompilersJavascriptJavaScriptCompiledData")
#ifdef RESTRICT_OrgOssPdfreporterCompilersJavascriptJavaScriptCompiledData
#define INCLUDE_ALL_OrgOssPdfreporterCompilersJavascriptJavaScriptCompiledData 0
#else
#define INCLUDE_ALL_OrgOssPdfreporterCompilersJavascriptJavaScriptCompiledData 1
#endif
#undef RESTRICT_OrgOssPdfreporterCompilersJavascriptJavaScriptCompiledData

#if !defined (OrgOssPdfreporterCompilersJavascriptJavaScriptCompiledData_) && (INCLUDE_ALL_OrgOssPdfreporterCompilersJavascriptJavaScriptCompiledData || defined(INCLUDE_OrgOssPdfreporterCompilersJavascriptJavaScriptCompiledData))
#define OrgOssPdfreporterCompilersJavascriptJavaScriptCompiledData_

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class IOSByteArray;
@class OrgOssPdfreporterCompilersJavascriptJavaScriptCompiledData_CompiledClass;
@class OrgOssPdfreporterCompilersJavascriptJavaScriptCompiledData_ExpressionIndexes;

@interface OrgOssPdfreporterCompilersJavascriptJavaScriptCompiledData : NSObject < JavaIoSerializable >

+ (NSString *)EXCEPTION_MESSAGE_KEY_TOO_MANY_EXPRESSIONs;

#pragma mark Public

- (instancetype)init;

- (void)addClassWithNSString:(NSString *)className_
               withByteArray:(IOSByteArray *)data;

- (void)addExpressionWithInt:(jint)expressionId
                     withInt:(jint)defaultExpressionIdx
                     withInt:(jint)oldExpressionIdx
                     withInt:(jint)estimatedExpressionIdx;

- (OrgOssPdfreporterCompilersJavascriptJavaScriptCompiledData_CompiledClass *)getCompiledClassWithInt:(jint)classIndex;

- (OrgOssPdfreporterCompilersJavascriptJavaScriptCompiledData_ExpressionIndexes *)getExpressionWithInt:(jint)id_;

#pragma mark Protected

+ (jint)expressionIdWithInt:(jint)expressionIndex;

+ (jint)makeExpressionIndexWithInt:(jint)scriptIndex
                           withInt:(jint)expressionId;

+ (jint)scriptIndexWithInt:(jint)expressionIndex;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgOssPdfreporterCompilersJavascriptJavaScriptCompiledData)

inline NSString *OrgOssPdfreporterCompilersJavascriptJavaScriptCompiledData_get_EXCEPTION_MESSAGE_KEY_TOO_MANY_EXPRESSIONs();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgOssPdfreporterCompilersJavascriptJavaScriptCompiledData_EXCEPTION_MESSAGE_KEY_TOO_MANY_EXPRESSIONs;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterCompilersJavascriptJavaScriptCompiledData, EXCEPTION_MESSAGE_KEY_TOO_MANY_EXPRESSIONs, NSString *)

FOUNDATION_EXPORT jint OrgOssPdfreporterCompilersJavascriptJavaScriptCompiledData_makeExpressionIndexWithInt_withInt_(jint scriptIndex, jint expressionId);

FOUNDATION_EXPORT jint OrgOssPdfreporterCompilersJavascriptJavaScriptCompiledData_scriptIndexWithInt_(jint expressionIndex);

FOUNDATION_EXPORT jint OrgOssPdfreporterCompilersJavascriptJavaScriptCompiledData_expressionIdWithInt_(jint expressionIndex);

FOUNDATION_EXPORT void OrgOssPdfreporterCompilersJavascriptJavaScriptCompiledData_init(OrgOssPdfreporterCompilersJavascriptJavaScriptCompiledData *self);

FOUNDATION_EXPORT OrgOssPdfreporterCompilersJavascriptJavaScriptCompiledData *new_OrgOssPdfreporterCompilersJavascriptJavaScriptCompiledData_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgOssPdfreporterCompilersJavascriptJavaScriptCompiledData *create_OrgOssPdfreporterCompilersJavascriptJavaScriptCompiledData_init();

J2OBJC_TYPE_LITERAL_HEADER(OrgOssPdfreporterCompilersJavascriptJavaScriptCompiledData)

#endif

#if !defined (OrgOssPdfreporterCompilersJavascriptJavaScriptCompiledData_ExpressionIndexes_) && (INCLUDE_ALL_OrgOssPdfreporterCompilersJavascriptJavaScriptCompiledData || defined(INCLUDE_OrgOssPdfreporterCompilersJavascriptJavaScriptCompiledData_ExpressionIndexes))
#define OrgOssPdfreporterCompilersJavascriptJavaScriptCompiledData_ExpressionIndexes_

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@interface OrgOssPdfreporterCompilersJavascriptJavaScriptCompiledData_ExpressionIndexes : NSObject < JavaIoSerializable >

#pragma mark Public

- (instancetype)initWithInt:(jint)defaultExpressionIdx
                    withInt:(jint)oldExpressionIdx
                    withInt:(jint)estimatedExpressionIdx;

- (jint)getDefaultExpressionIndex;

- (jint)getEstimatedExpressionIndex;

- (jint)getOldExpressionIndex;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgOssPdfreporterCompilersJavascriptJavaScriptCompiledData_ExpressionIndexes)

FOUNDATION_EXPORT void OrgOssPdfreporterCompilersJavascriptJavaScriptCompiledData_ExpressionIndexes_initWithInt_withInt_withInt_(OrgOssPdfreporterCompilersJavascriptJavaScriptCompiledData_ExpressionIndexes *self, jint defaultExpressionIdx, jint oldExpressionIdx, jint estimatedExpressionIdx);

FOUNDATION_EXPORT OrgOssPdfreporterCompilersJavascriptJavaScriptCompiledData_ExpressionIndexes *new_OrgOssPdfreporterCompilersJavascriptJavaScriptCompiledData_ExpressionIndexes_initWithInt_withInt_withInt_(jint defaultExpressionIdx, jint oldExpressionIdx, jint estimatedExpressionIdx) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgOssPdfreporterCompilersJavascriptJavaScriptCompiledData_ExpressionIndexes *create_OrgOssPdfreporterCompilersJavascriptJavaScriptCompiledData_ExpressionIndexes_initWithInt_withInt_withInt_(jint defaultExpressionIdx, jint oldExpressionIdx, jint estimatedExpressionIdx);

J2OBJC_TYPE_LITERAL_HEADER(OrgOssPdfreporterCompilersJavascriptJavaScriptCompiledData_ExpressionIndexes)

#endif

#if !defined (OrgOssPdfreporterCompilersJavascriptJavaScriptCompiledData_CompiledClass_) && (INCLUDE_ALL_OrgOssPdfreporterCompilersJavascriptJavaScriptCompiledData || defined(INCLUDE_OrgOssPdfreporterCompilersJavascriptJavaScriptCompiledData_CompiledClass))
#define OrgOssPdfreporterCompilersJavascriptJavaScriptCompiledData_CompiledClass_

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class IOSByteArray;

@interface OrgOssPdfreporterCompilersJavascriptJavaScriptCompiledData_CompiledClass : NSObject < JavaIoSerializable >

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)className_
                   withByteArray:(IOSByteArray *)classBytes;

- (IOSByteArray *)getClassBytes;

- (NSString *)getClassName;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgOssPdfreporterCompilersJavascriptJavaScriptCompiledData_CompiledClass)

FOUNDATION_EXPORT void OrgOssPdfreporterCompilersJavascriptJavaScriptCompiledData_CompiledClass_initWithNSString_withByteArray_(OrgOssPdfreporterCompilersJavascriptJavaScriptCompiledData_CompiledClass *self, NSString *className_, IOSByteArray *classBytes);

FOUNDATION_EXPORT OrgOssPdfreporterCompilersJavascriptJavaScriptCompiledData_CompiledClass *new_OrgOssPdfreporterCompilersJavascriptJavaScriptCompiledData_CompiledClass_initWithNSString_withByteArray_(NSString *className_, IOSByteArray *classBytes) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgOssPdfreporterCompilersJavascriptJavaScriptCompiledData_CompiledClass *create_OrgOssPdfreporterCompilersJavascriptJavaScriptCompiledData_CompiledClass_initWithNSString_withByteArray_(NSString *className_, IOSByteArray *classBytes);

J2OBJC_TYPE_LITERAL_HEADER(OrgOssPdfreporterCompilersJavascriptJavaScriptCompiledData_CompiledClass)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgOssPdfreporterCompilersJavascriptJavaScriptCompiledData")
