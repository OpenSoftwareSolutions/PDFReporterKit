//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/base/JRBaseVariable.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/ClassNotFoundException.h"
#include "java/lang/CloneNotSupportedException.h"
#include "org/oss/pdfreporter/engine/JRCloneable.h"
#include "org/oss/pdfreporter/engine/JRConstants.h"
#include "org/oss/pdfreporter/engine/JRExpression.h"
#include "org/oss/pdfreporter/engine/JRGroup.h"
#include "org/oss/pdfreporter/engine/JRRuntimeException.h"
#include "org/oss/pdfreporter/engine/JRVariable.h"
#include "org/oss/pdfreporter/engine/base/JRBaseGroup.h"
#include "org/oss/pdfreporter/engine/base/JRBaseObjectFactory.h"
#include "org/oss/pdfreporter/engine/base/JRBaseVariable.h"
#include "org/oss/pdfreporter/engine/type/CalculationEnum.h"
#include "org/oss/pdfreporter/engine/type/IncrementTypeEnum.h"
#include "org/oss/pdfreporter/engine/type/ResetTypeEnum.h"
#include "org/oss/pdfreporter/engine/util/JRClassLoader.h"
#include "org/oss/pdfreporter/engine/util/JRCloneUtils.h"

@interface OrgOssPdfreporterEngineBaseJRBaseVariable ()

- (NSString *)getValueClassRealName;

- (NSString *)getIncrementerFactoryClassRealName;

@end

inline jlong OrgOssPdfreporterEngineBaseJRBaseVariable_get_serialVersionUID();
#define OrgOssPdfreporterEngineBaseJRBaseVariable_serialVersionUID 10200LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgOssPdfreporterEngineBaseJRBaseVariable, serialVersionUID, jlong)

__attribute__((unused)) static NSString *OrgOssPdfreporterEngineBaseJRBaseVariable_getValueClassRealName(OrgOssPdfreporterEngineBaseJRBaseVariable *self);

__attribute__((unused)) static NSString *OrgOssPdfreporterEngineBaseJRBaseVariable_getIncrementerFactoryClassRealName(OrgOssPdfreporterEngineBaseJRBaseVariable *self);

@implementation OrgOssPdfreporterEngineBaseJRBaseVariable

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterEngineBaseJRBaseVariable_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithOrgOssPdfreporterEngineJRVariable:(id<OrgOssPdfreporterEngineJRVariable>)variable
       withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:(OrgOssPdfreporterEngineBaseJRBaseObjectFactory *)factory {
  OrgOssPdfreporterEngineBaseJRBaseVariable_initWithOrgOssPdfreporterEngineJRVariable_withOrgOssPdfreporterEngineBaseJRBaseObjectFactory_(self, variable, factory);
  return self;
}

- (NSString *)getName {
  return self->name_;
}

- (IOSClass *)getValueClass {
  if (valueClass_ == nil) {
    NSString *className_ = OrgOssPdfreporterEngineBaseJRBaseVariable_getValueClassRealName(self);
    if (className_ != nil) {
      @try {
        valueClass_ = OrgOssPdfreporterEngineUtilJRClassLoader_loadClassForNameWithNSString_(className_);
      }
      @catch (JavaLangClassNotFoundException *e) {
        @throw new_OrgOssPdfreporterEngineJRRuntimeException_initWithNSException_(e);
      }
    }
  }
  return valueClass_;
}

- (NSString *)getValueClassName {
  return valueClassName_;
}

- (NSString *)getValueClassRealName {
  return OrgOssPdfreporterEngineBaseJRBaseVariable_getValueClassRealName(self);
}

- (IOSClass *)getIncrementerFactoryClass {
  if (incrementerFactoryClass_ == nil) {
    NSString *className_ = OrgOssPdfreporterEngineBaseJRBaseVariable_getIncrementerFactoryClassRealName(self);
    if (className_ != nil) {
      @try {
        incrementerFactoryClass_ = OrgOssPdfreporterEngineUtilJRClassLoader_loadClassForNameWithNSString_(className_);
      }
      @catch (JavaLangClassNotFoundException *e) {
        @throw new_OrgOssPdfreporterEngineJRRuntimeException_initWithNSException_(e);
      }
    }
  }
  return incrementerFactoryClass_;
}

- (NSString *)getIncrementerFactoryClassName {
  return incrementerFactoryClassName_;
}

- (NSString *)getIncrementerFactoryClassRealName {
  return OrgOssPdfreporterEngineBaseJRBaseVariable_getIncrementerFactoryClassRealName(self);
}

- (OrgOssPdfreporterEngineTypeResetTypeEnum *)getResetTypeValue {
  return self->resetTypeValue_;
}

- (OrgOssPdfreporterEngineTypeIncrementTypeEnum *)getIncrementTypeValue {
  return self->incrementTypeValue_;
}

- (OrgOssPdfreporterEngineTypeCalculationEnum *)getCalculationValue {
  return self->calculationValue_;
}

- (jboolean)isSystemDefined {
  return self->isSystemDefined_;
}

- (id<OrgOssPdfreporterEngineJRExpression>)getExpression {
  return self->expression_;
}

- (id<OrgOssPdfreporterEngineJRExpression>)getInitialValueExpression {
  return self->initialValueExpression_;
}

- (id<OrgOssPdfreporterEngineJRGroup>)getResetGroup {
  return self->resetGroup_;
}

- (id<OrgOssPdfreporterEngineJRGroup>)getIncrementGroup {
  return self->incrementGroup_;
}

- (id)clone {
  OrgOssPdfreporterEngineBaseJRBaseVariable *clone = nil;
  @try {
    clone = (OrgOssPdfreporterEngineBaseJRBaseVariable *) cast_chk([super clone], [OrgOssPdfreporterEngineBaseJRBaseVariable class]);
  }
  @catch (JavaLangCloneNotSupportedException *e) {
    @throw new_OrgOssPdfreporterEngineJRRuntimeException_initWithNSException_(e);
  }
  ((OrgOssPdfreporterEngineBaseJRBaseVariable *) nil_chk(clone))->expression_ = OrgOssPdfreporterEngineUtilJRCloneUtils_nullSafeCloneWithOrgOssPdfreporterEngineJRCloneable_(expression_);
  clone->initialValueExpression_ = OrgOssPdfreporterEngineUtilJRCloneUtils_nullSafeCloneWithOrgOssPdfreporterEngineJRCloneable_(initialValueExpression_);
  return clone;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self clone];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "JRBaseVariable", NULL, 0x4, NULL, NULL },
    { "initWithOrgOssPdfreporterEngineJRVariable:withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:", "JRBaseVariable", NULL, 0x4, NULL, NULL },
    { "getName", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getValueClass", NULL, "Ljava.lang.Class;", 0x1, NULL, "()Ljava/lang/Class<*>;" },
    { "getValueClassName", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getValueClassRealName", NULL, "Ljava.lang.String;", 0x2, NULL, NULL },
    { "getIncrementerFactoryClass", NULL, "Ljava.lang.Class;", 0x1, NULL, "()Ljava/lang/Class<*>;" },
    { "getIncrementerFactoryClassName", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getIncrementerFactoryClassRealName", NULL, "Ljava.lang.String;", 0x2, NULL, NULL },
    { "getResetTypeValue", NULL, "Lorg.oss.pdfreporter.engine.type.ResetTypeEnum;", 0x1, NULL, NULL },
    { "getIncrementTypeValue", NULL, "Lorg.oss.pdfreporter.engine.type.IncrementTypeEnum;", 0x1, NULL, NULL },
    { "getCalculationValue", NULL, "Lorg.oss.pdfreporter.engine.type.CalculationEnum;", 0x1, NULL, NULL },
    { "isSystemDefined", NULL, "Z", 0x1, NULL, NULL },
    { "getExpression", NULL, "Lorg.oss.pdfreporter.engine.JRExpression;", 0x1, NULL, NULL },
    { "getInitialValueExpression", NULL, "Lorg.oss.pdfreporter.engine.JRExpression;", 0x1, NULL, NULL },
    { "getResetGroup", NULL, "Lorg.oss.pdfreporter.engine.JRGroup;", 0x1, NULL, NULL },
    { "getIncrementGroup", NULL, "Lorg.oss.pdfreporter.engine.JRGroup;", 0x1, NULL, NULL },
    { "clone", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "serialVersionUID", 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgOssPdfreporterEngineBaseJRBaseVariable_serialVersionUID },
    { "name_", NULL, 0x4, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "valueClassName_", NULL, 0x4, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "valueClassRealName_", NULL, 0x4, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "incrementerFactoryClassName_", NULL, 0x4, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "incrementerFactoryClassRealName_", NULL, 0x4, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "resetTypeValue_", NULL, 0x4, "Lorg.oss.pdfreporter.engine.type.ResetTypeEnum;", NULL, NULL, .constantValue.asLong = 0 },
    { "incrementTypeValue_", NULL, 0x4, "Lorg.oss.pdfreporter.engine.type.IncrementTypeEnum;", NULL, NULL, .constantValue.asLong = 0 },
    { "calculationValue_", NULL, 0x4, "Lorg.oss.pdfreporter.engine.type.CalculationEnum;", NULL, NULL, .constantValue.asLong = 0 },
    { "isSystemDefined_", NULL, 0x4, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "valueClass_", NULL, 0x84, "Ljava.lang.Class;", NULL, "Ljava/lang/Class<*>;", .constantValue.asLong = 0 },
    { "incrementerFactoryClass_", NULL, 0x84, "Ljava.lang.Class;", NULL, "Ljava/lang/Class<*>;", .constantValue.asLong = 0 },
    { "expression_", NULL, 0x4, "Lorg.oss.pdfreporter.engine.JRExpression;", NULL, NULL, .constantValue.asLong = 0 },
    { "initialValueExpression_", NULL, 0x4, "Lorg.oss.pdfreporter.engine.JRExpression;", NULL, NULL, .constantValue.asLong = 0 },
    { "resetGroup_", NULL, 0x4, "Lorg.oss.pdfreporter.engine.JRGroup;", NULL, NULL, .constantValue.asLong = 0 },
    { "incrementGroup_", NULL, 0x4, "Lorg.oss.pdfreporter.engine.JRGroup;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineBaseJRBaseVariable = { 2, "JRBaseVariable", "org.oss.pdfreporter.engine.base", NULL, 0x1, 18, methods, 16, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineBaseJRBaseVariable;
}

@end

void OrgOssPdfreporterEngineBaseJRBaseVariable_init(OrgOssPdfreporterEngineBaseJRBaseVariable *self) {
  NSObject_init(self);
  self->valueClassName_ = [NSString_class_() getName];
  self->resetTypeValue_ = JreLoadEnum(OrgOssPdfreporterEngineTypeResetTypeEnum, REPORT);
  self->incrementTypeValue_ = JreLoadEnum(OrgOssPdfreporterEngineTypeIncrementTypeEnum, NONE);
  self->calculationValue_ = JreLoadEnum(OrgOssPdfreporterEngineTypeCalculationEnum, NOTHING);
}

OrgOssPdfreporterEngineBaseJRBaseVariable *new_OrgOssPdfreporterEngineBaseJRBaseVariable_init() {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineBaseJRBaseVariable, init)
}

OrgOssPdfreporterEngineBaseJRBaseVariable *create_OrgOssPdfreporterEngineBaseJRBaseVariable_init() {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineBaseJRBaseVariable, init)
}

void OrgOssPdfreporterEngineBaseJRBaseVariable_initWithOrgOssPdfreporterEngineJRVariable_withOrgOssPdfreporterEngineBaseJRBaseObjectFactory_(OrgOssPdfreporterEngineBaseJRBaseVariable *self, id<OrgOssPdfreporterEngineJRVariable> variable, OrgOssPdfreporterEngineBaseJRBaseObjectFactory *factory) {
  NSObject_init(self);
  self->valueClassName_ = [NSString_class_() getName];
  self->resetTypeValue_ = JreLoadEnum(OrgOssPdfreporterEngineTypeResetTypeEnum, REPORT);
  self->incrementTypeValue_ = JreLoadEnum(OrgOssPdfreporterEngineTypeIncrementTypeEnum, NONE);
  self->calculationValue_ = JreLoadEnum(OrgOssPdfreporterEngineTypeCalculationEnum, NOTHING);
  [((OrgOssPdfreporterEngineBaseJRBaseObjectFactory *) nil_chk(factory)) putWithId:variable withId:self];
  self->name_ = [((id<OrgOssPdfreporterEngineJRVariable>) nil_chk(variable)) getName];
  self->valueClassName_ = [variable getValueClassName];
  self->incrementerFactoryClassName_ = [variable getIncrementerFactoryClassName];
  self->resetTypeValue_ = [variable getResetTypeValue];
  self->incrementTypeValue_ = [variable getIncrementTypeValue];
  self->calculationValue_ = [variable getCalculationValue];
  self->isSystemDefined_ = [variable isSystemDefined];
  self->expression_ = [factory getExpressionWithOrgOssPdfreporterEngineJRExpression:[variable getExpression]];
  self->initialValueExpression_ = [factory getExpressionWithOrgOssPdfreporterEngineJRExpression:[variable getInitialValueExpression]];
  self->resetGroup_ = [factory getGroupWithOrgOssPdfreporterEngineJRGroup:[variable getResetGroup]];
  self->incrementGroup_ = [factory getGroupWithOrgOssPdfreporterEngineJRGroup:[variable getIncrementGroup]];
}

OrgOssPdfreporterEngineBaseJRBaseVariable *new_OrgOssPdfreporterEngineBaseJRBaseVariable_initWithOrgOssPdfreporterEngineJRVariable_withOrgOssPdfreporterEngineBaseJRBaseObjectFactory_(id<OrgOssPdfreporterEngineJRVariable> variable, OrgOssPdfreporterEngineBaseJRBaseObjectFactory *factory) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineBaseJRBaseVariable, initWithOrgOssPdfreporterEngineJRVariable_withOrgOssPdfreporterEngineBaseJRBaseObjectFactory_, variable, factory)
}

OrgOssPdfreporterEngineBaseJRBaseVariable *create_OrgOssPdfreporterEngineBaseJRBaseVariable_initWithOrgOssPdfreporterEngineJRVariable_withOrgOssPdfreporterEngineBaseJRBaseObjectFactory_(id<OrgOssPdfreporterEngineJRVariable> variable, OrgOssPdfreporterEngineBaseJRBaseObjectFactory *factory) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineBaseJRBaseVariable, initWithOrgOssPdfreporterEngineJRVariable_withOrgOssPdfreporterEngineBaseJRBaseObjectFactory_, variable, factory)
}

NSString *OrgOssPdfreporterEngineBaseJRBaseVariable_getValueClassRealName(OrgOssPdfreporterEngineBaseJRBaseVariable *self) {
  if (self->valueClassRealName_ == nil) {
    self->valueClassRealName_ = OrgOssPdfreporterEngineUtilJRClassLoader_getClassRealNameWithNSString_(self->valueClassName_);
  }
  return self->valueClassRealName_;
}

NSString *OrgOssPdfreporterEngineBaseJRBaseVariable_getIncrementerFactoryClassRealName(OrgOssPdfreporterEngineBaseJRBaseVariable *self) {
  if (self->incrementerFactoryClassRealName_ == nil) {
    self->incrementerFactoryClassRealName_ = OrgOssPdfreporterEngineUtilJRClassLoader_getClassRealNameWithNSString_(self->incrementerFactoryClassName_);
  }
  return self->incrementerFactoryClassRealName_;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineBaseJRBaseVariable)
