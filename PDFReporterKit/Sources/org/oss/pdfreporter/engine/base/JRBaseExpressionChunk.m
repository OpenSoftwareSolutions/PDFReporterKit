//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/base/JRBaseExpressionChunk.java
//

#include "J2ObjC_source.h"
#include "java/lang/CloneNotSupportedException.h"
#include "org/oss/pdfreporter/engine/JRConstants.h"
#include "org/oss/pdfreporter/engine/JRExpressionChunk.h"
#include "org/oss/pdfreporter/engine/JRRuntimeException.h"
#include "org/oss/pdfreporter/engine/base/JRBaseExpressionChunk.h"
#include "org/oss/pdfreporter/engine/base/JRBaseObjectFactory.h"

inline jlong OrgOssPdfreporterEngineBaseJRBaseExpressionChunk_get_serialVersionUID();
#define OrgOssPdfreporterEngineBaseJRBaseExpressionChunk_serialVersionUID 10200LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgOssPdfreporterEngineBaseJRBaseExpressionChunk, serialVersionUID, jlong)

@implementation OrgOssPdfreporterEngineBaseJRBaseExpressionChunk

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterEngineBaseJRBaseExpressionChunk_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithOrgOssPdfreporterEngineJRExpressionChunk:(id<OrgOssPdfreporterEngineJRExpressionChunk>)queryChunk
              withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:(OrgOssPdfreporterEngineBaseJRBaseObjectFactory *)factory {
  OrgOssPdfreporterEngineBaseJRBaseExpressionChunk_initWithOrgOssPdfreporterEngineJRExpressionChunk_withOrgOssPdfreporterEngineBaseJRBaseObjectFactory_(self, queryChunk, factory);
  return self;
}

- (jbyte)getType {
  return self->type_;
}

- (NSString *)getText {
  return self->text_;
}

- (id)clone {
  @try {
    return [super clone];
  }
  @catch (JavaLangCloneNotSupportedException *e) {
    @throw new_OrgOssPdfreporterEngineJRRuntimeException_initWithNSException_(e);
  }
}

- (id)copyWithZone:(NSZone *)zone {
  return [self clone];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "JRBaseExpressionChunk", NULL, 0x4, NULL, NULL },
    { "initWithOrgOssPdfreporterEngineJRExpressionChunk:withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:", "JRBaseExpressionChunk", NULL, 0x4, NULL, NULL },
    { "getType", NULL, "B", 0x1, NULL, NULL },
    { "getText", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "clone", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "serialVersionUID", 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgOssPdfreporterEngineBaseJRBaseExpressionChunk_serialVersionUID },
    { "type_", NULL, 0x4, "B", NULL, NULL, .constantValue.asLong = 0 },
    { "text_", NULL, 0x4, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineBaseJRBaseExpressionChunk = { 2, "JRBaseExpressionChunk", "org.oss.pdfreporter.engine.base", NULL, 0x1, 5, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineBaseJRBaseExpressionChunk;
}

@end

void OrgOssPdfreporterEngineBaseJRBaseExpressionChunk_init(OrgOssPdfreporterEngineBaseJRBaseExpressionChunk *self) {
  NSObject_init(self);
  self->type_ = OrgOssPdfreporterEngineJRExpressionChunk_TYPE_TEXT;
}

OrgOssPdfreporterEngineBaseJRBaseExpressionChunk *new_OrgOssPdfreporterEngineBaseJRBaseExpressionChunk_init() {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineBaseJRBaseExpressionChunk, init)
}

OrgOssPdfreporterEngineBaseJRBaseExpressionChunk *create_OrgOssPdfreporterEngineBaseJRBaseExpressionChunk_init() {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineBaseJRBaseExpressionChunk, init)
}

void OrgOssPdfreporterEngineBaseJRBaseExpressionChunk_initWithOrgOssPdfreporterEngineJRExpressionChunk_withOrgOssPdfreporterEngineBaseJRBaseObjectFactory_(OrgOssPdfreporterEngineBaseJRBaseExpressionChunk *self, id<OrgOssPdfreporterEngineJRExpressionChunk> queryChunk, OrgOssPdfreporterEngineBaseJRBaseObjectFactory *factory) {
  NSObject_init(self);
  self->type_ = OrgOssPdfreporterEngineJRExpressionChunk_TYPE_TEXT;
  [((OrgOssPdfreporterEngineBaseJRBaseObjectFactory *) nil_chk(factory)) putWithId:queryChunk withId:self];
  self->type_ = [((id<OrgOssPdfreporterEngineJRExpressionChunk>) nil_chk(queryChunk)) getType];
  self->text_ = [queryChunk getText];
}

OrgOssPdfreporterEngineBaseJRBaseExpressionChunk *new_OrgOssPdfreporterEngineBaseJRBaseExpressionChunk_initWithOrgOssPdfreporterEngineJRExpressionChunk_withOrgOssPdfreporterEngineBaseJRBaseObjectFactory_(id<OrgOssPdfreporterEngineJRExpressionChunk> queryChunk, OrgOssPdfreporterEngineBaseJRBaseObjectFactory *factory) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineBaseJRBaseExpressionChunk, initWithOrgOssPdfreporterEngineJRExpressionChunk_withOrgOssPdfreporterEngineBaseJRBaseObjectFactory_, queryChunk, factory)
}

OrgOssPdfreporterEngineBaseJRBaseExpressionChunk *create_OrgOssPdfreporterEngineBaseJRBaseExpressionChunk_initWithOrgOssPdfreporterEngineJRExpressionChunk_withOrgOssPdfreporterEngineBaseJRBaseObjectFactory_(id<OrgOssPdfreporterEngineJRExpressionChunk> queryChunk, OrgOssPdfreporterEngineBaseJRBaseObjectFactory *factory) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineBaseJRBaseExpressionChunk, initWithOrgOssPdfreporterEngineJRExpressionChunk_withOrgOssPdfreporterEngineBaseJRBaseObjectFactory_, queryChunk, factory)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineBaseJRBaseExpressionChunk)
