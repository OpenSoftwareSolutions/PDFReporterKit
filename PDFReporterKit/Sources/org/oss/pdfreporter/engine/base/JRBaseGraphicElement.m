//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/base/JRBaseGraphicElement.java
//

#include "J2ObjC_source.h"
#include "java/lang/Float.h"
#include "org/oss/pdfreporter/engine/JRConstants.h"
#include "org/oss/pdfreporter/engine/JRGraphicElement.h"
#include "org/oss/pdfreporter/engine/JRPen.h"
#include "org/oss/pdfreporter/engine/base/JRBaseElement.h"
#include "org/oss/pdfreporter/engine/base/JRBaseGraphicElement.h"
#include "org/oss/pdfreporter/engine/base/JRBaseObjectFactory.h"
#include "org/oss/pdfreporter/engine/base/JRBaseStyle.h"
#include "org/oss/pdfreporter/engine/design/events/JRPropertyChangeSupport.h"
#include "org/oss/pdfreporter/engine/type/FillEnum.h"
#include "org/oss/pdfreporter/engine/util/JRStyleResolver.h"
#include "org/oss/pdfreporter/geometry/IColor.h"

#pragma clang diagnostic ignored "-Wprotocol"

inline jlong OrgOssPdfreporterEngineBaseJRBaseGraphicElement_get_serialVersionUID();
#define OrgOssPdfreporterEngineBaseJRBaseGraphicElement_serialVersionUID 10200LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgOssPdfreporterEngineBaseJRBaseGraphicElement, serialVersionUID, jlong)

@implementation OrgOssPdfreporterEngineBaseJRBaseGraphicElement

- (instancetype)initWithOrgOssPdfreporterEngineJRGraphicElement:(id<OrgOssPdfreporterEngineJRGraphicElement>)graphicElement
             withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:(OrgOssPdfreporterEngineBaseJRBaseObjectFactory *)factory {
  OrgOssPdfreporterEngineBaseJRBaseGraphicElement_initWithOrgOssPdfreporterEngineJRGraphicElement_withOrgOssPdfreporterEngineBaseJRBaseObjectFactory_(self, graphicElement, factory);
  return self;
}

- (id<OrgOssPdfreporterEngineJRPen>)getLinePen {
  return linePen_;
}

- (OrgOssPdfreporterEngineTypeFillEnum *)getFillValue {
  return OrgOssPdfreporterEngineUtilJRStyleResolver_getFillValueWithOrgOssPdfreporterEngineJRCommonGraphicElement_(self);
}

- (OrgOssPdfreporterEngineTypeFillEnum *)getOwnFillValue {
  return self->fillValue_;
}

- (void)setFillWithOrgOssPdfreporterEngineTypeFillEnum:(OrgOssPdfreporterEngineTypeFillEnum *)fillValue {
  OrgOssPdfreporterEngineTypeFillEnum *old = self->fillValue_;
  self->fillValue_ = fillValue;
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) firePropertyChangeWithNSString:OrgOssPdfreporterEngineBaseJRBaseStyle_PROPERTY_FILL withId:old withId:self->fillValue_];
}

- (JavaLangFloat *)getDefaultLineWidth {
  return JreLoadStatic(OrgOssPdfreporterEngineJRPen, LINE_WIDTH_1);
}

- (id<OrgOssPdfreporterGeometryIColor>)getDefaultLineColor {
  return [self getForecolor];
}

- (id)clone {
  OrgOssPdfreporterEngineBaseJRBaseGraphicElement *clone = (OrgOssPdfreporterEngineBaseJRBaseGraphicElement *) cast_chk([super clone], [OrgOssPdfreporterEngineBaseJRBaseGraphicElement class]);
  ((OrgOssPdfreporterEngineBaseJRBaseGraphicElement *) nil_chk(clone))->linePen_ = [((id<OrgOssPdfreporterEngineJRPen>) nil_chk(linePen_)) cloneWithOrgOssPdfreporterEngineJRPenContainer:clone];
  return clone;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgOssPdfreporterEngineJRGraphicElement:withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:", "JRBaseGraphicElement", NULL, 0x4, NULL, NULL },
    { "getLinePen", NULL, "Lorg.oss.pdfreporter.engine.JRPen;", 0x1, NULL, NULL },
    { "getFillValue", NULL, "Lorg.oss.pdfreporter.engine.type.FillEnum;", 0x1, NULL, NULL },
    { "getOwnFillValue", NULL, "Lorg.oss.pdfreporter.engine.type.FillEnum;", 0x1, NULL, NULL },
    { "setFillWithOrgOssPdfreporterEngineTypeFillEnum:", "setFill", "V", 0x1, NULL, NULL },
    { "getDefaultLineWidth", NULL, "Ljava.lang.Float;", 0x1, NULL, NULL },
    { "getDefaultLineColor", NULL, "Lorg.oss.pdfreporter.geometry.IColor;", 0x1, NULL, NULL },
    { "clone", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "serialVersionUID", 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgOssPdfreporterEngineBaseJRBaseGraphicElement_serialVersionUID },
    { "linePen_", NULL, 0x4, "Lorg.oss.pdfreporter.engine.JRPen;", NULL, NULL, .constantValue.asLong = 0 },
    { "fillValue_", NULL, 0x4, "Lorg.oss.pdfreporter.engine.type.FillEnum;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineBaseJRBaseGraphicElement = { 2, "JRBaseGraphicElement", "org.oss.pdfreporter.engine.base", NULL, 0x401, 8, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineBaseJRBaseGraphicElement;
}

@end

void OrgOssPdfreporterEngineBaseJRBaseGraphicElement_initWithOrgOssPdfreporterEngineJRGraphicElement_withOrgOssPdfreporterEngineBaseJRBaseObjectFactory_(OrgOssPdfreporterEngineBaseJRBaseGraphicElement *self, id<OrgOssPdfreporterEngineJRGraphicElement> graphicElement, OrgOssPdfreporterEngineBaseJRBaseObjectFactory *factory) {
  OrgOssPdfreporterEngineBaseJRBaseElement_initWithOrgOssPdfreporterEngineJRElement_withOrgOssPdfreporterEngineBaseJRBaseObjectFactory_(self, graphicElement, factory);
  self->linePen_ = [((id<OrgOssPdfreporterEngineJRPen>) nil_chk([((id<OrgOssPdfreporterEngineJRGraphicElement>) nil_chk(graphicElement)) getLinePen])) cloneWithOrgOssPdfreporterEngineJRPenContainer:self];
  self->fillValue_ = [graphicElement getOwnFillValue];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineBaseJRBaseGraphicElement)
