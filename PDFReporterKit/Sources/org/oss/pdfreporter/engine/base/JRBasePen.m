//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/base/JRBasePen.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/CloneNotSupportedException.h"
#include "java/lang/Float.h"
#include "org/oss/pdfreporter/engine/JRConstants.h"
#include "org/oss/pdfreporter/engine/JRPen.h"
#include "org/oss/pdfreporter/engine/JRPenContainer.h"
#include "org/oss/pdfreporter/engine/JRRuntimeException.h"
#include "org/oss/pdfreporter/engine/JRStyleContainer.h"
#include "org/oss/pdfreporter/engine/base/JRBasePen.h"
#include "org/oss/pdfreporter/engine/design/events/JRPropertyChangeSupport.h"
#include "org/oss/pdfreporter/engine/type/LineStyleEnum.h"
#include "org/oss/pdfreporter/engine/util/JRStyleResolver.h"
#include "org/oss/pdfreporter/engine/util/ObjectUtils.h"
#include "org/oss/pdfreporter/geometry/IColor.h"

@interface OrgOssPdfreporterEngineBaseJRBasePen () {
 @public
  OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *eventSupport_;
}

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineBaseJRBasePen, eventSupport_, OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *)

inline jlong OrgOssPdfreporterEngineBaseJRBasePen_get_serialVersionUID();
#define OrgOssPdfreporterEngineBaseJRBasePen_serialVersionUID 10200LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgOssPdfreporterEngineBaseJRBasePen, serialVersionUID, jlong)

NSString *OrgOssPdfreporterEngineBaseJRBasePen_PROPERTY_LINE_WIDTH = @"lineWidth";
NSString *OrgOssPdfreporterEngineBaseJRBasePen_PROPERTY_LINE_STYLE = @"lineStyle";
NSString *OrgOssPdfreporterEngineBaseJRBasePen_PROPERTY_LINE_COLOR = @"lineColor";

@implementation OrgOssPdfreporterEngineBaseJRBasePen

+ (NSString *)PROPERTY_LINE_WIDTH {
  return OrgOssPdfreporterEngineBaseJRBasePen_PROPERTY_LINE_WIDTH;
}

+ (NSString *)PROPERTY_LINE_STYLE {
  return OrgOssPdfreporterEngineBaseJRBasePen_PROPERTY_LINE_STYLE;
}

+ (NSString *)PROPERTY_LINE_COLOR {
  return OrgOssPdfreporterEngineBaseJRBasePen_PROPERTY_LINE_COLOR;
}

- (instancetype)initWithOrgOssPdfreporterEngineJRPenContainer:(id<OrgOssPdfreporterEngineJRPenContainer>)penContainer {
  OrgOssPdfreporterEngineBaseJRBasePen_initWithOrgOssPdfreporterEngineJRPenContainer_(self, penContainer);
  return self;
}

- (id<OrgOssPdfreporterEngineJRStyleContainer>)getStyleContainer {
  return penContainer_;
}

- (JavaLangFloat *)getLineWidth {
  return OrgOssPdfreporterEngineUtilJRStyleResolver_getLineWidthWithOrgOssPdfreporterEngineJRPen_withJavaLangFloat_(self, [((id<OrgOssPdfreporterEngineJRPenContainer>) nil_chk(penContainer_)) getDefaultLineWidth]);
}

- (JavaLangFloat *)getOwnLineWidth {
  return lineWidth_;
}

- (void)setLineWidthWithFloat:(jfloat)lineWidth {
  [self setLineWidthWithJavaLangFloat:new_JavaLangFloat_initWithFloat_(lineWidth)];
}

- (void)setLineWidthWithJavaLangFloat:(JavaLangFloat *)lineWidth {
  id old = self->lineWidth_;
  self->lineWidth_ = lineWidth;
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) firePropertyChangeWithNSString:OrgOssPdfreporterEngineBaseJRBasePen_PROPERTY_LINE_WIDTH withId:old withId:self->lineWidth_];
}

- (OrgOssPdfreporterEngineTypeLineStyleEnum *)getLineStyleValue {
  return OrgOssPdfreporterEngineUtilJRStyleResolver_getLineStyleValueWithOrgOssPdfreporterEngineJRPen_(self);
}

- (OrgOssPdfreporterEngineTypeLineStyleEnum *)getOwnLineStyleValue {
  return lineStyleValue_;
}

- (void)setLineStyleWithOrgOssPdfreporterEngineTypeLineStyleEnum:(OrgOssPdfreporterEngineTypeLineStyleEnum *)lineStyleValue {
  id old = self->lineStyleValue_;
  self->lineStyleValue_ = lineStyleValue;
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) firePropertyChangeWithNSString:OrgOssPdfreporterEngineBaseJRBasePen_PROPERTY_LINE_STYLE withId:old withId:self->lineStyleValue_];
}

- (id<OrgOssPdfreporterGeometryIColor>)getLineColor {
  return OrgOssPdfreporterEngineUtilJRStyleResolver_getLineColorWithOrgOssPdfreporterEngineJRPen_withOrgOssPdfreporterGeometryIColor_(self, [((id<OrgOssPdfreporterEngineJRPenContainer>) nil_chk(penContainer_)) getDefaultLineColor]);
}

- (id<OrgOssPdfreporterGeometryIColor>)getOwnLineColor {
  return lineColor_;
}

- (void)setLineColorWithOrgOssPdfreporterGeometryIColor:(id<OrgOssPdfreporterGeometryIColor>)lineColor {
  id old = self->lineColor_;
  self->lineColor_ = lineColor;
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) firePropertyChangeWithNSString:OrgOssPdfreporterEngineBaseJRBasePen_PROPERTY_LINE_COLOR withId:old withId:self->lineColor_];
}

- (NSString *)getStyleNameReference {
  return nil;
}

- (id<OrgOssPdfreporterEngineJRPen>)cloneWithOrgOssPdfreporterEngineJRPenContainer:(id<OrgOssPdfreporterEngineJRPenContainer>)penContainer {
  OrgOssPdfreporterEngineBaseJRBasePen *clone = nil;
  @try {
    clone = (OrgOssPdfreporterEngineBaseJRBasePen *) cast_chk([super clone], [OrgOssPdfreporterEngineBaseJRBasePen class]);
  }
  @catch (JavaLangCloneNotSupportedException *e) {
    @throw new_OrgOssPdfreporterEngineJRRuntimeException_initWithNSException_(e);
  }
  ((OrgOssPdfreporterEngineBaseJRBasePen *) nil_chk(clone))->penContainer_ = penContainer;
  clone->eventSupport_ = nil;
  return clone;
}

- (OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *)getEventSupport {
  @synchronized(self) {
    if (eventSupport_ == nil) {
      eventSupport_ = new_OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport_initWithId_(self);
    }
  }
  return eventSupport_;
}

- (jint)getHashCode {
  OrgOssPdfreporterEngineUtilObjectUtils_HashCode *hash_ = OrgOssPdfreporterEngineUtilObjectUtils_hash__();
  [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) addWithId:lineWidth_];
  [hash_ addWithId:lineStyleValue_];
  [hash_ addWithId:lineColor_];
  return [hash_ getHashCode];
}

- (jboolean)isIdenticalWithId:(id)object {
  if (self == object) {
    return true;
  }
  if (!([object isKindOfClass:[OrgOssPdfreporterEngineBaseJRBasePen class]])) {
    return false;
  }
  OrgOssPdfreporterEngineBaseJRBasePen *pen = (OrgOssPdfreporterEngineBaseJRBasePen *) cast_chk(object, [OrgOssPdfreporterEngineBaseJRBasePen class]);
  return OrgOssPdfreporterEngineUtilObjectUtils_equalsWithId_withId_(lineWidth_, ((OrgOssPdfreporterEngineBaseJRBasePen *) nil_chk(pen))->lineWidth_) && OrgOssPdfreporterEngineUtilObjectUtils_equalsWithJavaLangEnum_withJavaLangEnum_(lineStyleValue_, pen->lineStyleValue_) && OrgOssPdfreporterEngineUtilObjectUtils_equalsWithId_withId_(lineColor_, pen->lineColor_);
}

- (id)copyWithZone:(NSZone *)zone {
  return [self clone];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgOssPdfreporterEngineJRPenContainer:", "JRBasePen", NULL, 0x1, NULL, NULL },
    { "getStyleContainer", NULL, "Lorg.oss.pdfreporter.engine.JRStyleContainer;", 0x1, NULL, NULL },
    { "getLineWidth", NULL, "Ljava.lang.Float;", 0x1, NULL, NULL },
    { "getOwnLineWidth", NULL, "Ljava.lang.Float;", 0x1, NULL, NULL },
    { "setLineWidthWithFloat:", "setLineWidth", "V", 0x1, NULL, NULL },
    { "setLineWidthWithJavaLangFloat:", "setLineWidth", "V", 0x1, NULL, NULL },
    { "getLineStyleValue", NULL, "Lorg.oss.pdfreporter.engine.type.LineStyleEnum;", 0x1, NULL, NULL },
    { "getOwnLineStyleValue", NULL, "Lorg.oss.pdfreporter.engine.type.LineStyleEnum;", 0x1, NULL, NULL },
    { "setLineStyleWithOrgOssPdfreporterEngineTypeLineStyleEnum:", "setLineStyle", "V", 0x1, NULL, NULL },
    { "getLineColor", NULL, "Lorg.oss.pdfreporter.geometry.IColor;", 0x1, NULL, NULL },
    { "getOwnLineColor", NULL, "Lorg.oss.pdfreporter.geometry.IColor;", 0x1, NULL, NULL },
    { "setLineColorWithOrgOssPdfreporterGeometryIColor:", "setLineColor", "V", 0x1, NULL, NULL },
    { "getStyleNameReference", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "cloneWithOrgOssPdfreporterEngineJRPenContainer:", "clone", "Lorg.oss.pdfreporter.engine.JRPen;", 0x1, NULL, NULL },
    { "getEventSupport", NULL, "Lorg.oss.pdfreporter.engine.design.events.JRPropertyChangeSupport;", 0x1, NULL, NULL },
    { "getHashCode", NULL, "I", 0x1, NULL, NULL },
    { "isIdenticalWithId:", "isIdentical", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "serialVersionUID", 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgOssPdfreporterEngineBaseJRBasePen_serialVersionUID },
    { "PROPERTY_LINE_WIDTH", "PROPERTY_LINE_WIDTH", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineBaseJRBasePen_PROPERTY_LINE_WIDTH, NULL, .constantValue.asLong = 0 },
    { "PROPERTY_LINE_STYLE", "PROPERTY_LINE_STYLE", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineBaseJRBasePen_PROPERTY_LINE_STYLE, NULL, .constantValue.asLong = 0 },
    { "PROPERTY_LINE_COLOR", "PROPERTY_LINE_COLOR", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineBaseJRBasePen_PROPERTY_LINE_COLOR, NULL, .constantValue.asLong = 0 },
    { "penContainer_", NULL, 0x4, "Lorg.oss.pdfreporter.engine.JRPenContainer;", NULL, NULL, .constantValue.asLong = 0 },
    { "lineWidth_", NULL, 0x4, "Ljava.lang.Float;", NULL, NULL, .constantValue.asLong = 0 },
    { "lineStyleValue_", NULL, 0x4, "Lorg.oss.pdfreporter.engine.type.LineStyleEnum;", NULL, NULL, .constantValue.asLong = 0 },
    { "lineColor_", NULL, 0x4, "Lorg.oss.pdfreporter.geometry.IColor;", NULL, NULL, .constantValue.asLong = 0 },
    { "eventSupport_", NULL, 0x82, "Lorg.oss.pdfreporter.engine.design.events.JRPropertyChangeSupport;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineBaseJRBasePen = { 2, "JRBasePen", "org.oss.pdfreporter.engine.base", NULL, 0x1, 17, methods, 9, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineBaseJRBasePen;
}

@end

void OrgOssPdfreporterEngineBaseJRBasePen_initWithOrgOssPdfreporterEngineJRPenContainer_(OrgOssPdfreporterEngineBaseJRBasePen *self, id<OrgOssPdfreporterEngineJRPenContainer> penContainer) {
  NSObject_init(self);
  self->penContainer_ = penContainer;
}

OrgOssPdfreporterEngineBaseJRBasePen *new_OrgOssPdfreporterEngineBaseJRBasePen_initWithOrgOssPdfreporterEngineJRPenContainer_(id<OrgOssPdfreporterEngineJRPenContainer> penContainer) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineBaseJRBasePen, initWithOrgOssPdfreporterEngineJRPenContainer_, penContainer)
}

OrgOssPdfreporterEngineBaseJRBasePen *create_OrgOssPdfreporterEngineBaseJRBasePen_initWithOrgOssPdfreporterEngineJRPenContainer_(id<OrgOssPdfreporterEngineJRPenContainer> penContainer) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineBaseJRBasePen, initWithOrgOssPdfreporterEngineJRPenContainer_, penContainer)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineBaseJRBasePen)
