//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/base/JRBaseExpression.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/ClassNotFoundException.h"
#include "java/lang/CloneNotSupportedException.h"
#include "java/lang/Integer.h"
#include "java/lang/StringBuffer.h"
#include "java/util/logging/Logger.h"
#include "org/oss/pdfreporter/engine/JRConstants.h"
#include "org/oss/pdfreporter/engine/JRExpression.h"
#include "org/oss/pdfreporter/engine/JRExpressionChunk.h"
#include "org/oss/pdfreporter/engine/JRRuntimeException.h"
#include "org/oss/pdfreporter/engine/base/JRBaseExpression.h"
#include "org/oss/pdfreporter/engine/base/JRBaseExpressionChunk.h"
#include "org/oss/pdfreporter/engine/base/JRBaseObjectFactory.h"
#include "org/oss/pdfreporter/engine/util/JRClassLoader.h"
#include "org/oss/pdfreporter/engine/util/JRCloneUtils.h"
#include "org/oss/pdfreporter/uses/java/util/StringTokenizer.h"

@interface OrgOssPdfreporterEngineBaseJRBaseExpression () {
 @public
  IOSObjectArray *chunks_;
}

+ (jint)getNextId;

- (NSString *)getValueClassRealName;

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineBaseJRBaseExpression, chunks_, IOSObjectArray *)

inline JavaUtilLoggingLogger *OrgOssPdfreporterEngineBaseJRBaseExpression_get_logger();
static JavaUtilLoggingLogger *OrgOssPdfreporterEngineBaseJRBaseExpression_logger;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterEngineBaseJRBaseExpression, logger, JavaUtilLoggingLogger *)

inline jlong OrgOssPdfreporterEngineBaseJRBaseExpression_get_serialVersionUID();
#define OrgOssPdfreporterEngineBaseJRBaseExpression_serialVersionUID 10200LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgOssPdfreporterEngineBaseJRBaseExpression, serialVersionUID, jlong)

inline jint OrgOssPdfreporterEngineBaseJRBaseExpression_get_lastId();
inline jint OrgOssPdfreporterEngineBaseJRBaseExpression_set_lastId(jint value);
inline jint *OrgOssPdfreporterEngineBaseJRBaseExpression_getRef_lastId();
static jint OrgOssPdfreporterEngineBaseJRBaseExpression_lastId;
J2OBJC_STATIC_FIELD_PRIMITIVE(OrgOssPdfreporterEngineBaseJRBaseExpression, lastId, jint)

__attribute__((unused)) static jint OrgOssPdfreporterEngineBaseJRBaseExpression_getNextId();

__attribute__((unused)) static NSString *OrgOssPdfreporterEngineBaseJRBaseExpression_getValueClassRealName(OrgOssPdfreporterEngineBaseJRBaseExpression *self);

J2OBJC_INITIALIZED_DEFN(OrgOssPdfreporterEngineBaseJRBaseExpression)

@implementation OrgOssPdfreporterEngineBaseJRBaseExpression

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterEngineBaseJRBaseExpression_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithOrgOssPdfreporterEngineJRExpression:(id<OrgOssPdfreporterEngineJRExpression>)expression
         withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:(OrgOssPdfreporterEngineBaseJRBaseObjectFactory *)factory
                                        withJavaLangInteger:(JavaLangInteger *)expressionId {
  OrgOssPdfreporterEngineBaseJRBaseExpression_initWithOrgOssPdfreporterEngineJRExpression_withOrgOssPdfreporterEngineBaseJRBaseObjectFactory_withJavaLangInteger_(self, expression, factory, expressionId);
  return self;
}

- (instancetype)initWithOrgOssPdfreporterEngineJRExpression:(id<OrgOssPdfreporterEngineJRExpression>)expression
         withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:(OrgOssPdfreporterEngineBaseJRBaseObjectFactory *)factory {
  OrgOssPdfreporterEngineBaseJRBaseExpression_initWithOrgOssPdfreporterEngineJRExpression_withOrgOssPdfreporterEngineBaseJRBaseObjectFactory_(self, expression, factory);
  return self;
}

+ (jint)getNextId {
  return OrgOssPdfreporterEngineBaseJRBaseExpression_getNextId();
}

- (void)regenerateId {
  id__ = OrgOssPdfreporterEngineBaseJRBaseExpression_getNextId();
}

- (IOSClass *)getValueClass {
  if (valueClass_ == nil) {
    NSString *className_ = OrgOssPdfreporterEngineBaseJRBaseExpression_getValueClassRealName(self);
    if (className_ != nil) {
      @try {
        valueClass_ = OrgOssPdfreporterEngineUtilJRClassLoader_loadClassForNameWithNSString_(className_);
      }
      @catch (JavaLangClassNotFoundException *e) {
        @throw new_OrgOssPdfreporterEngineJRRuntimeException_initWithNSException_(e);
      }
    }
  }
  return valueClass_;
}

- (NSString *)getValueClassName {
  return valueClassName_;
}

- (NSString *)getValueClassRealName {
  return OrgOssPdfreporterEngineBaseJRBaseExpression_getValueClassRealName(self);
}

- (jint)getId {
  return id__;
}

- (IOSObjectArray *)getChunks {
  return chunks_;
}

- (NSString *)getText {
  NSString *text = @"";
  chunks_ = [self getChunks];
  if (chunks_ != nil && chunks_->size_ > 0) {
    JavaLangStringBuffer *sbuffer = new_JavaLangStringBuffer_init();
    for (jint i = 0; i < ((IOSObjectArray *) nil_chk(chunks_))->size_; i++) {
      switch ([((id<OrgOssPdfreporterEngineJRExpressionChunk>) nil_chk(IOSObjectArray_Get(chunks_, i))) getType]) {
        case OrgOssPdfreporterEngineJRExpressionChunk_TYPE_PARAMETER:
        {
          (void) [sbuffer appendWithNSString:@"$P{"];
          (void) [sbuffer appendWithNSString:[((id<OrgOssPdfreporterEngineJRExpressionChunk>) nil_chk(IOSObjectArray_Get(nil_chk(chunks_), i))) getText]];
          (void) [sbuffer appendWithNSString:@"}"];
          break;
        }
        case OrgOssPdfreporterEngineJRExpressionChunk_TYPE_FIELD:
        {
          (void) [sbuffer appendWithNSString:@"$F{"];
          (void) [sbuffer appendWithNSString:[((id<OrgOssPdfreporterEngineJRExpressionChunk>) nil_chk(IOSObjectArray_Get(nil_chk(chunks_), i))) getText]];
          (void) [sbuffer appendWithNSString:@"}"];
          break;
        }
        case OrgOssPdfreporterEngineJRExpressionChunk_TYPE_VARIABLE:
        {
          (void) [sbuffer appendWithNSString:@"$V{"];
          (void) [sbuffer appendWithNSString:[((id<OrgOssPdfreporterEngineJRExpressionChunk>) nil_chk(IOSObjectArray_Get(nil_chk(chunks_), i))) getText]];
          (void) [sbuffer appendWithNSString:@"}"];
          break;
        }
        case OrgOssPdfreporterEngineJRExpressionChunk_TYPE_RESOURCE:
        {
          (void) [sbuffer appendWithNSString:@"$R{"];
          (void) [sbuffer appendWithNSString:[((id<OrgOssPdfreporterEngineJRExpressionChunk>) nil_chk(IOSObjectArray_Get(nil_chk(chunks_), i))) getText]];
          (void) [sbuffer appendWithNSString:@"}"];
          break;
        }
        case OrgOssPdfreporterEngineJRExpressionChunk_TYPE_TEXT:
        default:
        {
          NSString *textChunk = [((id<OrgOssPdfreporterEngineJRExpressionChunk>) nil_chk(IOSObjectArray_Get(nil_chk(chunks_), i))) getText];
          NSString *escapedText = [self escapeTextChunkWithNSString:textChunk];
          (void) [sbuffer appendWithNSString:escapedText];
          break;
        }
      }
    }
    text = [sbuffer description];
  }
  return text;
}

- (NSString *)escapeTextChunkWithNSString:(NSString *)text {
  if (text == nil || [text indexOf:'$'] < 0) {
    return text;
  }
  JavaLangStringBuffer *sb = new_JavaLangStringBuffer_initWithInt_(((jint) [text length]) + 4);
  OrgOssPdfreporterUsesJavaUtilStringTokenizer *tkzer = new_OrgOssPdfreporterUsesJavaUtilStringTokenizer_initWithNSString_withNSString_withBoolean_(text, @"$", true);
  jboolean wasDelim = false;
  while ([tkzer hasMoreElements]) {
    NSString *token = [tkzer nextToken];
    if (wasDelim && ([((NSString *) nil_chk(token)) hasPrefix:@"P{"] || [token hasPrefix:@"F{"] || [token hasPrefix:@"V{"] || [token hasPrefix:@"R{"]) && [token indexOf:'}'] > 0) {
      (void) [sb appendWithChar:'$'];
    }
    (void) [sb appendWithNSString:token];
    wasDelim = [((NSString *) nil_chk(token)) isEqual:@"$"];
  }
  return [sb description];
}

- (id)clone {
  OrgOssPdfreporterEngineBaseJRBaseExpression *clone = nil;
  @try {
    clone = (OrgOssPdfreporterEngineBaseJRBaseExpression *) cast_chk([super clone], [OrgOssPdfreporterEngineBaseJRBaseExpression class]);
  }
  @catch (JavaLangCloneNotSupportedException *e) {
    @throw new_OrgOssPdfreporterEngineJRRuntimeException_initWithNSException_(e);
  }
  ((OrgOssPdfreporterEngineBaseJRBaseExpression *) nil_chk(clone))->chunks_ = OrgOssPdfreporterEngineUtilJRCloneUtils_cloneArrayWithOrgOssPdfreporterEngineJRCloneableArray_(chunks_);
  return clone;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self clone];
}

+ (void)initialize {
  if (self == [OrgOssPdfreporterEngineBaseJRBaseExpression class]) {
    OrgOssPdfreporterEngineBaseJRBaseExpression_logger = JavaUtilLoggingLogger_getLoggerWithNSString_([OrgOssPdfreporterEngineBaseJRBaseExpression_class_() getName]);
    J2OBJC_SET_INITIALIZED(OrgOssPdfreporterEngineBaseJRBaseExpression)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "JRBaseExpression", NULL, 0x4, NULL, NULL },
    { "initWithOrgOssPdfreporterEngineJRExpression:withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:withJavaLangInteger:", "JRBaseExpression", NULL, 0x4, NULL, NULL },
    { "initWithOrgOssPdfreporterEngineJRExpression:withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:", "JRBaseExpression", NULL, 0x4, NULL, NULL },
    { "getNextId", NULL, "I", 0x2a, NULL, NULL },
    { "regenerateId", NULL, "V", 0x1, NULL, NULL },
    { "getValueClass", NULL, "Ljava.lang.Class;", 0x1, NULL, "()Ljava/lang/Class<*>;" },
    { "getValueClassName", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getValueClassRealName", NULL, "Ljava.lang.String;", 0x2, NULL, NULL },
    { "getId", NULL, "I", 0x1, NULL, NULL },
    { "getChunks", NULL, "[Lorg.oss.pdfreporter.engine.JRExpressionChunk;", 0x1, NULL, NULL },
    { "getText", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "escapeTextChunkWithNSString:", "escapeTextChunk", "Ljava.lang.String;", 0x4, NULL, NULL },
    { "clone", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "logger", "logger", 0x1a, "Ljava.util.logging.Logger;", &OrgOssPdfreporterEngineBaseJRBaseExpression_logger, NULL, .constantValue.asLong = 0 },
    { "serialVersionUID", "serialVersionUID", 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgOssPdfreporterEngineBaseJRBaseExpression_serialVersionUID },
    { "valueClassName_", NULL, 0x4, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "valueClassRealName_", NULL, 0x4, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "id__", "id", 0x4, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "valueClass_", NULL, 0x84, "Ljava.lang.Class;", NULL, "Ljava/lang/Class<*>;", .constantValue.asLong = 0 },
    { "chunks_", NULL, 0x2, "[Lorg.oss.pdfreporter.engine.JRExpressionChunk;", NULL, NULL, .constantValue.asLong = 0 },
    { "lastId", "lastId", 0xa, "I", &OrgOssPdfreporterEngineBaseJRBaseExpression_lastId, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineBaseJRBaseExpression = { 2, "JRBaseExpression", "org.oss.pdfreporter.engine.base", NULL, 0x1, 13, methods, 8, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineBaseJRBaseExpression;
}

@end

void OrgOssPdfreporterEngineBaseJRBaseExpression_init(OrgOssPdfreporterEngineBaseJRBaseExpression *self) {
  NSObject_init(self);
}

OrgOssPdfreporterEngineBaseJRBaseExpression *new_OrgOssPdfreporterEngineBaseJRBaseExpression_init() {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineBaseJRBaseExpression, init)
}

OrgOssPdfreporterEngineBaseJRBaseExpression *create_OrgOssPdfreporterEngineBaseJRBaseExpression_init() {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineBaseJRBaseExpression, init)
}

void OrgOssPdfreporterEngineBaseJRBaseExpression_initWithOrgOssPdfreporterEngineJRExpression_withOrgOssPdfreporterEngineBaseJRBaseObjectFactory_withJavaLangInteger_(OrgOssPdfreporterEngineBaseJRBaseExpression *self, id<OrgOssPdfreporterEngineJRExpression> expression, OrgOssPdfreporterEngineBaseJRBaseObjectFactory *factory, JavaLangInteger *expressionId) {
  NSObject_init(self);
  [((OrgOssPdfreporterEngineBaseJRBaseObjectFactory *) nil_chk(factory)) putWithId:expression withId:self];
  if (expressionId == nil) {
    self->id__ = [((id<OrgOssPdfreporterEngineJRExpression>) nil_chk(expression)) getId];
  }
  else {
    self->id__ = [expressionId intValue];
  }
  [((JavaUtilLoggingLogger *) nil_chk(OrgOssPdfreporterEngineBaseJRBaseExpression_logger)) finestWithNSString:JreStrcat("$$$I", @"Add Expression: ", [((id<OrgOssPdfreporterEngineJRExpression>) nil_chk(expression)) getText], @", Id=", self->id__)];
  IOSObjectArray *jrChunks = [expression getChunks];
  if (jrChunks != nil && jrChunks->size_ > 0) {
    self->chunks_ = [IOSObjectArray newArrayWithLength:jrChunks->size_ type:OrgOssPdfreporterEngineJRExpressionChunk_class_()];
    for (jint i = 0; i < ((IOSObjectArray *) nil_chk(self->chunks_))->size_; i++) {
      (void) IOSObjectArray_Set(self->chunks_, i, [factory getExpressionChunkWithOrgOssPdfreporterEngineJRExpressionChunk:IOSObjectArray_Get(jrChunks, i)]);
    }
  }
}

OrgOssPdfreporterEngineBaseJRBaseExpression *new_OrgOssPdfreporterEngineBaseJRBaseExpression_initWithOrgOssPdfreporterEngineJRExpression_withOrgOssPdfreporterEngineBaseJRBaseObjectFactory_withJavaLangInteger_(id<OrgOssPdfreporterEngineJRExpression> expression, OrgOssPdfreporterEngineBaseJRBaseObjectFactory *factory, JavaLangInteger *expressionId) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineBaseJRBaseExpression, initWithOrgOssPdfreporterEngineJRExpression_withOrgOssPdfreporterEngineBaseJRBaseObjectFactory_withJavaLangInteger_, expression, factory, expressionId)
}

OrgOssPdfreporterEngineBaseJRBaseExpression *create_OrgOssPdfreporterEngineBaseJRBaseExpression_initWithOrgOssPdfreporterEngineJRExpression_withOrgOssPdfreporterEngineBaseJRBaseObjectFactory_withJavaLangInteger_(id<OrgOssPdfreporterEngineJRExpression> expression, OrgOssPdfreporterEngineBaseJRBaseObjectFactory *factory, JavaLangInteger *expressionId) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineBaseJRBaseExpression, initWithOrgOssPdfreporterEngineJRExpression_withOrgOssPdfreporterEngineBaseJRBaseObjectFactory_withJavaLangInteger_, expression, factory, expressionId)
}

void OrgOssPdfreporterEngineBaseJRBaseExpression_initWithOrgOssPdfreporterEngineJRExpression_withOrgOssPdfreporterEngineBaseJRBaseObjectFactory_(OrgOssPdfreporterEngineBaseJRBaseExpression *self, id<OrgOssPdfreporterEngineJRExpression> expression, OrgOssPdfreporterEngineBaseJRBaseObjectFactory *factory) {
  OrgOssPdfreporterEngineBaseJRBaseExpression_initWithOrgOssPdfreporterEngineJRExpression_withOrgOssPdfreporterEngineBaseJRBaseObjectFactory_withJavaLangInteger_(self, expression, factory, nil);
}

OrgOssPdfreporterEngineBaseJRBaseExpression *new_OrgOssPdfreporterEngineBaseJRBaseExpression_initWithOrgOssPdfreporterEngineJRExpression_withOrgOssPdfreporterEngineBaseJRBaseObjectFactory_(id<OrgOssPdfreporterEngineJRExpression> expression, OrgOssPdfreporterEngineBaseJRBaseObjectFactory *factory) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineBaseJRBaseExpression, initWithOrgOssPdfreporterEngineJRExpression_withOrgOssPdfreporterEngineBaseJRBaseObjectFactory_, expression, factory)
}

OrgOssPdfreporterEngineBaseJRBaseExpression *create_OrgOssPdfreporterEngineBaseJRBaseExpression_initWithOrgOssPdfreporterEngineJRExpression_withOrgOssPdfreporterEngineBaseJRBaseObjectFactory_(id<OrgOssPdfreporterEngineJRExpression> expression, OrgOssPdfreporterEngineBaseJRBaseObjectFactory *factory) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineBaseJRBaseExpression, initWithOrgOssPdfreporterEngineJRExpression_withOrgOssPdfreporterEngineBaseJRBaseObjectFactory_, expression, factory)
}

jint OrgOssPdfreporterEngineBaseJRBaseExpression_getNextId() {
  OrgOssPdfreporterEngineBaseJRBaseExpression_initialize();
  @synchronized(OrgOssPdfreporterEngineBaseJRBaseExpression_class_()) {
    return OrgOssPdfreporterEngineBaseJRBaseExpression_lastId++;
  }
}

NSString *OrgOssPdfreporterEngineBaseJRBaseExpression_getValueClassRealName(OrgOssPdfreporterEngineBaseJRBaseExpression *self) {
  if (self->valueClassRealName_ == nil) {
    self->valueClassRealName_ = OrgOssPdfreporterEngineUtilJRClassLoader_getClassRealNameWithNSString_(self->valueClassName_);
  }
  return self->valueClassRealName_;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineBaseJRBaseExpression)
