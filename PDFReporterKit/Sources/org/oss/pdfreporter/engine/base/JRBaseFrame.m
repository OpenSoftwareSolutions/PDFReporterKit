//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/base/JRBaseFrame.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/util/ArrayList.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "org/oss/pdfreporter/engine/JRChild.h"
#include "org/oss/pdfreporter/engine/JRConstants.h"
#include "org/oss/pdfreporter/engine/JRElement.h"
#include "org/oss/pdfreporter/engine/JRExpressionCollector.h"
#include "org/oss/pdfreporter/engine/JRFrame.h"
#include "org/oss/pdfreporter/engine/JRLineBox.h"
#include "org/oss/pdfreporter/engine/JRVisitor.h"
#include "org/oss/pdfreporter/engine/base/JRBaseElement.h"
#include "org/oss/pdfreporter/engine/base/JRBaseElementGroup.h"
#include "org/oss/pdfreporter/engine/base/JRBaseFrame.h"
#include "org/oss/pdfreporter/engine/base/JRBaseObjectFactory.h"
#include "org/oss/pdfreporter/engine/type/ModeEnum.h"
#include "org/oss/pdfreporter/engine/util/JRStyleResolver.h"
#include "org/oss/pdfreporter/geometry/IColor.h"

inline jlong OrgOssPdfreporterEngineBaseJRBaseFrame_get_serialVersionUID();
#define OrgOssPdfreporterEngineBaseJRBaseFrame_serialVersionUID 10200LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgOssPdfreporterEngineBaseJRBaseFrame, serialVersionUID, jlong)

@implementation OrgOssPdfreporterEngineBaseJRBaseFrame

- (instancetype)initWithOrgOssPdfreporterEngineJRFrame:(id<OrgOssPdfreporterEngineJRFrame>)frame
    withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:(OrgOssPdfreporterEngineBaseJRBaseObjectFactory *)factory {
  OrgOssPdfreporterEngineBaseJRBaseFrame_initWithOrgOssPdfreporterEngineJRFrame_withOrgOssPdfreporterEngineBaseJRBaseObjectFactory_(self, frame, factory);
  return self;
}

- (IOSObjectArray *)getElements {
  return OrgOssPdfreporterEngineBaseJRBaseElementGroup_getElementsWithJavaUtilList_(children_);
}

- (void)collectExpressionsWithOrgOssPdfreporterEngineJRExpressionCollector:(OrgOssPdfreporterEngineJRExpressionCollector *)collector {
  [((OrgOssPdfreporterEngineJRExpressionCollector *) nil_chk(collector)) collectWithOrgOssPdfreporterEngineJRFrame:self];
}

- (void)visitWithOrgOssPdfreporterEngineJRVisitor:(id<OrgOssPdfreporterEngineJRVisitor>)visitor {
  [((id<OrgOssPdfreporterEngineJRVisitor>) nil_chk(visitor)) visitFrameWithOrgOssPdfreporterEngineJRFrame:self];
}

- (id<JavaUtilList>)getChildren {
  return children_;
}

- (id<OrgOssPdfreporterEngineJRElement>)getElementByKeyWithNSString:(NSString *)elementKey {
  return OrgOssPdfreporterEngineBaseJRBaseElementGroup_getElementByKeyWithOrgOssPdfreporterEngineJRElementArray_withNSString_([self getElements], elementKey);
}

- (OrgOssPdfreporterEngineTypeModeEnum *)getModeValue {
  return OrgOssPdfreporterEngineUtilJRStyleResolver_getModeWithOrgOssPdfreporterEngineJRCommonElement_withOrgOssPdfreporterEngineTypeModeEnum_(self, JreLoadEnum(OrgOssPdfreporterEngineTypeModeEnum, TRANSPARENT));
}

- (id<OrgOssPdfreporterEngineJRLineBox>)getLineBox {
  return lineBox_;
}

- (id<OrgOssPdfreporterGeometryIColor>)getDefaultLineColor {
  return [self getForecolor];
}

- (id)clone {
  OrgOssPdfreporterEngineBaseJRBaseFrame *clone = (OrgOssPdfreporterEngineBaseJRBaseFrame *) cast_chk([super clone], [OrgOssPdfreporterEngineBaseJRBaseFrame class]);
  if (children_ != nil) {
    ((OrgOssPdfreporterEngineBaseJRBaseFrame *) nil_chk(clone))->children_ = new_JavaUtilArrayList_initWithInt_([children_ size]);
    for (jint i = 0; i < [((id<JavaUtilList>) nil_chk(children_)) size]; i++) {
      [((id<JavaUtilList>) nil_chk(clone->children_)) addWithId:(id<OrgOssPdfreporterEngineJRChild>) cast_check(([((id<OrgOssPdfreporterEngineJRChild>) nil_chk([children_ getWithInt:i])) cloneWithOrgOssPdfreporterEngineJRElementGroup:clone]), OrgOssPdfreporterEngineJRChild_class_())];
    }
  }
  return clone;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgOssPdfreporterEngineJRFrame:withOrgOssPdfreporterEngineBaseJRBaseObjectFactory:", "JRBaseFrame", NULL, 0x1, NULL, NULL },
    { "getElements", NULL, "[Lorg.oss.pdfreporter.engine.JRElement;", 0x1, NULL, NULL },
    { "collectExpressionsWithOrgOssPdfreporterEngineJRExpressionCollector:", "collectExpressions", "V", 0x1, NULL, NULL },
    { "visitWithOrgOssPdfreporterEngineJRVisitor:", "visit", "V", 0x1, NULL, NULL },
    { "getChildren", NULL, "Ljava.util.List;", 0x1, NULL, "()Ljava/util/List<Lorg/oss/pdfreporter/engine/JRChild;>;" },
    { "getElementByKeyWithNSString:", "getElementByKey", "Lorg.oss.pdfreporter.engine.JRElement;", 0x1, NULL, NULL },
    { "getModeValue", NULL, "Lorg.oss.pdfreporter.engine.type.ModeEnum;", 0x1, NULL, NULL },
    { "getLineBox", NULL, "Lorg.oss.pdfreporter.engine.JRLineBox;", 0x1, NULL, NULL },
    { "getDefaultLineColor", NULL, "Lorg.oss.pdfreporter.geometry.IColor;", 0x1, NULL, NULL },
    { "clone", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "serialVersionUID", 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgOssPdfreporterEngineBaseJRBaseFrame_serialVersionUID },
    { "children_", NULL, 0x4, "Ljava.util.List;", NULL, "Ljava/util/List<Lorg/oss/pdfreporter/engine/JRChild;>;", .constantValue.asLong = 0 },
    { "lineBox_", NULL, 0x4, "Lorg.oss.pdfreporter.engine.JRLineBox;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineBaseJRBaseFrame = { 2, "JRBaseFrame", "org.oss.pdfreporter.engine.base", NULL, 0x1, 10, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineBaseJRBaseFrame;
}

@end

void OrgOssPdfreporterEngineBaseJRBaseFrame_initWithOrgOssPdfreporterEngineJRFrame_withOrgOssPdfreporterEngineBaseJRBaseObjectFactory_(OrgOssPdfreporterEngineBaseJRBaseFrame *self, id<OrgOssPdfreporterEngineJRFrame> frame, OrgOssPdfreporterEngineBaseJRBaseObjectFactory *factory) {
  OrgOssPdfreporterEngineBaseJRBaseElement_initWithOrgOssPdfreporterEngineJRElement_withOrgOssPdfreporterEngineBaseJRBaseObjectFactory_(self, frame, factory);
  id<JavaUtilList> frameChildren = [((id<OrgOssPdfreporterEngineJRFrame>) nil_chk(frame)) getChildren];
  if (frameChildren != nil) {
    self->children_ = new_JavaUtilArrayList_initWithInt_([frameChildren size]);
    for (id<JavaUtilIterator> it = [frameChildren iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
      id<OrgOssPdfreporterEngineJRChild> child = [it next];
      [((id<JavaUtilList>) nil_chk(self->children_)) addWithId:(id<OrgOssPdfreporterEngineJRChild>) cast_check([((OrgOssPdfreporterEngineBaseJRBaseObjectFactory *) nil_chk(factory)) getVisitResultWithOrgOssPdfreporterEngineJRVisitable:child], OrgOssPdfreporterEngineJRChild_class_())];
    }
  }
  self->lineBox_ = [((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk([frame getLineBox])) cloneWithOrgOssPdfreporterEngineJRBoxContainer:self];
}

OrgOssPdfreporterEngineBaseJRBaseFrame *new_OrgOssPdfreporterEngineBaseJRBaseFrame_initWithOrgOssPdfreporterEngineJRFrame_withOrgOssPdfreporterEngineBaseJRBaseObjectFactory_(id<OrgOssPdfreporterEngineJRFrame> frame, OrgOssPdfreporterEngineBaseJRBaseObjectFactory *factory) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineBaseJRBaseFrame, initWithOrgOssPdfreporterEngineJRFrame_withOrgOssPdfreporterEngineBaseJRBaseObjectFactory_, frame, factory)
}

OrgOssPdfreporterEngineBaseJRBaseFrame *create_OrgOssPdfreporterEngineBaseJRBaseFrame_initWithOrgOssPdfreporterEngineJRFrame_withOrgOssPdfreporterEngineBaseJRBaseObjectFactory_(id<OrgOssPdfreporterEngineJRFrame> frame, OrgOssPdfreporterEngineBaseJRBaseObjectFactory *factory) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineBaseJRBaseFrame, initWithOrgOssPdfreporterEngineJRFrame_withOrgOssPdfreporterEngineBaseJRBaseObjectFactory_, frame, factory)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineBaseJRBaseFrame)
