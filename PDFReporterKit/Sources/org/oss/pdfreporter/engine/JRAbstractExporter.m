//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/JRAbstractExporter.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/File.h"
#include "java/io/InputStream.h"
#include "java/lang/Boolean.h"
#include "java/lang/Byte.h"
#include "java/lang/Character.h"
#include "java/lang/ClassLoader.h"
#include "java/lang/ClassNotFoundException.h"
#include "java/lang/Double.h"
#include "java/lang/Float.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/NumberFormatException.h"
#include "java/lang/Short.h"
#include "java/math/BigDecimal.h"
#include "java/math/BigInteger.h"
#include "java/text/ParseException.h"
#include "java/util/ArrayList.h"
#include "java/util/Date.h"
#include "java/util/HashMap.h"
#include "java/util/LinkedList.h"
#include "java/util/List.h"
#include "java/util/Locale.h"
#include "java/util/Map.h"
#include "java/util/TimeZone.h"
#include "org/oss/pdfreporter/engine/DefaultJasperReportsContext.h"
#include "org/oss/pdfreporter/engine/JRAbstractExporter.h"
#include "org/oss/pdfreporter/engine/JRException.h"
#include "org/oss/pdfreporter/engine/JRExporter.h"
#include "org/oss/pdfreporter/engine/JRExporterParameter.h"
#include "org/oss/pdfreporter/engine/JRLineBox.h"
#include "org/oss/pdfreporter/engine/JRPrintFrame.h"
#include "org/oss/pdfreporter/engine/JRPrintHyperlink.h"
#include "org/oss/pdfreporter/engine/JRPrintText.h"
#include "org/oss/pdfreporter/engine/JRPropertiesMap.h"
#include "org/oss/pdfreporter/engine/JRPropertiesUtil.h"
#include "org/oss/pdfreporter/engine/JRStyledTextAttributeSelector.h"
#include "org/oss/pdfreporter/engine/JasperPrint.h"
#include "org/oss/pdfreporter/engine/JasperReportsContext.h"
#include "org/oss/pdfreporter/engine/ReportContext.h"
#include "org/oss/pdfreporter/engine/export/DefaultHyperlinkProducerFactory.h"
#include "org/oss/pdfreporter/engine/export/ExporterFilter.h"
#include "org/oss/pdfreporter/engine/export/ExporterFilterFactory.h"
#include "org/oss/pdfreporter/engine/export/ExporterFilterFactoryUtil.h"
#include "org/oss/pdfreporter/engine/export/JRExporterContext.h"
#include "org/oss/pdfreporter/engine/export/JRHyperlinkProducer.h"
#include "org/oss/pdfreporter/engine/export/JRHyperlinkProducerFactory.h"
#include "org/oss/pdfreporter/engine/export/data/BooleanTextValue.h"
#include "org/oss/pdfreporter/engine/export/data/DateTextValue.h"
#include "org/oss/pdfreporter/engine/export/data/NumberTextValue.h"
#include "org/oss/pdfreporter/engine/export/data/StringTextValue.h"
#include "org/oss/pdfreporter/engine/export/data/TextValue.h"
#include "org/oss/pdfreporter/engine/util/FileResolver.h"
#include "org/oss/pdfreporter/engine/util/JRClassLoader.h"
#include "org/oss/pdfreporter/engine/util/JRDataUtils.h"
#include "org/oss/pdfreporter/engine/util/JRLoader.h"
#include "org/oss/pdfreporter/engine/util/JRStyledText.h"
#include "org/oss/pdfreporter/engine/util/JRStyledTextParser.h"
#include "org/oss/pdfreporter/engine/util/JRStyledTextUtil.h"
#include "org/oss/pdfreporter/engine/util/LocalJasperReportsContext.h"
#include "org/oss/pdfreporter/net/IURL.h"
#include "org/oss/pdfreporter/registry/ApiRegistry.h"
#include "org/oss/pdfreporter/text/bundle/StringLocale.h"
#include "org/oss/pdfreporter/text/format/IDateFormat.h"
#include "org/oss/pdfreporter/text/format/INumberFormat.h"
#include "org/oss/pdfreporter/text/format/factory/IFormatFactory.h"

#pragma clang diagnostic ignored "-Wprotocol"

@interface OrgOssPdfreporterEngineJRAbstractExporter () {
 @public
  id<OrgOssPdfreporterEngineJRAbstractExporter_ParameterResolver> parameterResolver_;
  JavaUtilLinkedList *elementOffsetStack_;
  jint elementOffsetX_;
  jint elementOffsetY_;
  id<OrgOssPdfreporterEngineReportContext> reportContext_;
}

- (void)setElementOffsetsWithInt:(jint)offsetX
                         withInt:(jint)offsetY;

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineJRAbstractExporter, parameterResolver_, id<OrgOssPdfreporterEngineJRAbstractExporter_ParameterResolver>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineJRAbstractExporter, elementOffsetStack_, JavaUtilLinkedList *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineJRAbstractExporter, reportContext_, id<OrgOssPdfreporterEngineReportContext>)

__attribute__((unused)) static void OrgOssPdfreporterEngineJRAbstractExporter_setElementOffsetsWithInt_withInt_(OrgOssPdfreporterEngineJRAbstractExporter *self, jint offsetX, jint offsetY);

@interface OrgOssPdfreporterEngineJRAbstractExporter_BaseExporterContext () {
 @public
  OrgOssPdfreporterEngineJRAbstractExporter *this$0_;
}

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineJRAbstractExporter_BaseExporterContext, this$0_, OrgOssPdfreporterEngineJRAbstractExporter *)

@interface OrgOssPdfreporterEngineJRAbstractExporter_ParameterResolver : NSObject

@end

@interface OrgOssPdfreporterEngineJRAbstractExporter_ParameterOverrideResolver () {
 @public
  OrgOssPdfreporterEngineJRAbstractExporter *this$0_;
}

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineJRAbstractExporter_ParameterOverrideResolver, this$0_, OrgOssPdfreporterEngineJRAbstractExporter *)

@interface OrgOssPdfreporterEngineJRAbstractExporter_ParameterOverriddenResolver () {
 @public
  OrgOssPdfreporterEngineJRAbstractExporter *this$0_;
}

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineJRAbstractExporter_ParameterOverriddenResolver, this$0_, OrgOssPdfreporterEngineJRAbstractExporter *)

@interface OrgOssPdfreporterEngineJRAbstractExporter_$1 : OrgOssPdfreporterEngineJRAbstractExporter_BaseExporterContext {
 @public
  NSString *val$exportPropertyPrefix_;
}

- (NSString *)getExportPropertiesPrefix;

- (instancetype)initWithOrgOssPdfreporterEngineJRAbstractExporter:(OrgOssPdfreporterEngineJRAbstractExporter *)outer$
                                                     withNSString:(NSString *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgOssPdfreporterEngineJRAbstractExporter_$1)

J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineJRAbstractExporter_$1, val$exportPropertyPrefix_, NSString *)

__attribute__((unused)) static void OrgOssPdfreporterEngineJRAbstractExporter_$1_initWithOrgOssPdfreporterEngineJRAbstractExporter_withNSString_(OrgOssPdfreporterEngineJRAbstractExporter_$1 *self, OrgOssPdfreporterEngineJRAbstractExporter *outer$, NSString *capture$0);

__attribute__((unused)) static OrgOssPdfreporterEngineJRAbstractExporter_$1 *new_OrgOssPdfreporterEngineJRAbstractExporter_$1_initWithOrgOssPdfreporterEngineJRAbstractExporter_withNSString_(OrgOssPdfreporterEngineJRAbstractExporter *outer$, NSString *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgOssPdfreporterEngineJRAbstractExporter_$1 *create_OrgOssPdfreporterEngineJRAbstractExporter_$1_initWithOrgOssPdfreporterEngineJRAbstractExporter_withNSString_(OrgOssPdfreporterEngineJRAbstractExporter *outer$, NSString *capture$0);

J2OBJC_TYPE_LITERAL_HEADER(OrgOssPdfreporterEngineJRAbstractExporter_$1)

NSString *OrgOssPdfreporterEngineJRAbstractExporter_PROPERTY_DEFAULT_FILTER_FACTORY = @"net.sf.jasperreports.export.default.filter.factory";
NSString *OrgOssPdfreporterEngineJRAbstractExporter_PROPERTY_SUFFIX_DEFAULT_FILTER_FACTORY = @"default.filter.factory";

@implementation OrgOssPdfreporterEngineJRAbstractExporter

+ (NSString *)PROPERTY_DEFAULT_FILTER_FACTORY {
  return OrgOssPdfreporterEngineJRAbstractExporter_PROPERTY_DEFAULT_FILTER_FACTORY;
}

+ (NSString *)PROPERTY_SUFFIX_DEFAULT_FILTER_FACTORY {
  return OrgOssPdfreporterEngineJRAbstractExporter_PROPERTY_SUFFIX_DEFAULT_FILTER_FACTORY;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterEngineJRAbstractExporter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithOrgOssPdfreporterEngineJasperReportsContext:(id<OrgOssPdfreporterEngineJasperReportsContext>)jasperReportsContext {
  OrgOssPdfreporterEngineJRAbstractExporter_initWithOrgOssPdfreporterEngineJasperReportsContext_(self, jasperReportsContext);
  return self;
}

- (void)reset {
  parameters_ = new_JavaUtilHashMap_init();
  elementOffsetStack_ = new_JavaUtilLinkedList_init();
}

- (void)setParameterWithOrgOssPdfreporterEngineJRExporterParameter:(OrgOssPdfreporterEngineJRExporterParameter *)parameter
                                                            withId:(id)value {
  (void) [((id<JavaUtilMap>) nil_chk(parameters_)) putWithId:parameter withId:value];
}

- (id)getParameterWithOrgOssPdfreporterEngineJRExporterParameter:(OrgOssPdfreporterEngineJRExporterParameter *)parameter {
  return [((id<JavaUtilMap>) nil_chk(parameters_)) getWithId:parameter];
}

- (void)setParametersWithJavaUtilMap:(id<JavaUtilMap>)parameters {
  self->parameters_ = parameters;
}

- (id<JavaUtilMap>)getParameters {
  return parameters_;
}

- (id<OrgOssPdfreporterEngineJRAbstractExporter_ParameterResolver>)getParameterResolver {
  if (parameterResolver_ == nil) {
    jboolean parametersOverrideHints;
    JavaLangBoolean *param = (JavaLangBoolean *) cast_chk([((id<JavaUtilMap>) nil_chk(parameters_)) getWithId:JreLoadStatic(OrgOssPdfreporterEngineJRExporterParameter, PARAMETERS_OVERRIDE_REPORT_HINTS)], [JavaLangBoolean class]);
    if (param == nil) {
      parametersOverrideHints = [((OrgOssPdfreporterEngineJRPropertiesUtil *) nil_chk([self getPropertiesUtil])) getBooleanPropertyWithNSString:OrgOssPdfreporterEngineJRExporterParameter_PROPERTY_EXPORT_PARAMETERS_OVERRIDE_REPORT_HINTS];
    }
    else {
      parametersOverrideHints = [param booleanValue];
    }
    if (parametersOverrideHints) {
      parameterResolver_ = new_OrgOssPdfreporterEngineJRAbstractExporter_ParameterOverrideResolver_initWithOrgOssPdfreporterEngineJRAbstractExporter_(self);
    }
    else {
      parameterResolver_ = new_OrgOssPdfreporterEngineJRAbstractExporter_ParameterOverriddenResolver_initWithOrgOssPdfreporterEngineJRAbstractExporter_(self);
    }
  }
  return parameterResolver_;
}

- (NSString *)getStringParameterWithOrgOssPdfreporterEngineJRExporterParameter:(OrgOssPdfreporterEngineJRExporterParameter *)parameter
                                                                  withNSString:(NSString *)property {
  return [((id<OrgOssPdfreporterEngineJRAbstractExporter_ParameterResolver>) nil_chk([self getParameterResolver])) getStringParameterWithOrgOssPdfreporterEngineJRExporterParameter:parameter withNSString:property];
}

- (IOSObjectArray *)getStringArrayParameterWithOrgOssPdfreporterEngineJRExporterParameter:(OrgOssPdfreporterEngineJRExporterParameter *)parameter
                                                                             withNSString:(NSString *)property {
  return [((id<OrgOssPdfreporterEngineJRAbstractExporter_ParameterResolver>) nil_chk([self getParameterResolver])) getStringArrayParameterWithOrgOssPdfreporterEngineJRExporterParameter:parameter withNSString:property];
}

- (NSString *)getStringParameterOrDefaultWithOrgOssPdfreporterEngineJRExporterParameter:(OrgOssPdfreporterEngineJRExporterParameter *)parameter
                                                                           withNSString:(NSString *)property {
  return [((id<OrgOssPdfreporterEngineJRAbstractExporter_ParameterResolver>) nil_chk([self getParameterResolver])) getStringParameterOrDefaultWithOrgOssPdfreporterEngineJRExporterParameter:parameter withNSString:property];
}

- (jboolean)getBooleanParameterWithOrgOssPdfreporterEngineJRExporterParameter:(OrgOssPdfreporterEngineJRExporterParameter *)parameter
                                                                 withNSString:(NSString *)property
                                                                  withBoolean:(jboolean)defaultValue {
  return [((id<OrgOssPdfreporterEngineJRAbstractExporter_ParameterResolver>) nil_chk([self getParameterResolver])) getBooleanParameterWithOrgOssPdfreporterEngineJRExporterParameter:parameter withNSString:property withBoolean:defaultValue];
}

- (jint)getIntegerParameterWithOrgOssPdfreporterEngineJRExporterParameter:(OrgOssPdfreporterEngineJRExporterParameter *)parameter
                                                             withNSString:(NSString *)property
                                                                  withInt:(jint)defaultValue {
  return [((id<OrgOssPdfreporterEngineJRAbstractExporter_ParameterResolver>) nil_chk([self getParameterResolver])) getIntegerParameterWithOrgOssPdfreporterEngineJRExporterParameter:parameter withNSString:property withInt:defaultValue];
}

- (jfloat)getFloatParameterWithOrgOssPdfreporterEngineJRExporterParameter:(OrgOssPdfreporterEngineJRExporterParameter *)parameter
                                                             withNSString:(NSString *)property
                                                                withFloat:(jfloat)defaultValue {
  return [((id<OrgOssPdfreporterEngineJRAbstractExporter_ParameterResolver>) nil_chk([self getParameterResolver])) getFloatParameterWithOrgOssPdfreporterEngineJRExporterParameter:parameter withNSString:property withFloat:defaultValue];
}

- (JavaLangCharacter *)getCharacterParameterWithOrgOssPdfreporterEngineJRExporterParameter:(OrgOssPdfreporterEngineJRExporterParameter *)parameter
                                                                              withNSString:(NSString *)property {
  return [((id<OrgOssPdfreporterEngineJRAbstractExporter_ParameterResolver>) nil_chk([self getParameterResolver])) getCharacterParameterWithOrgOssPdfreporterEngineJRExporterParameter:parameter withNSString:property];
}

- (id<OrgOssPdfreporterEngineJasperReportsContext>)getJasperReportsContext {
  return jasperReportsContext_;
}

- (void)setJasperReportsContextWithOrgOssPdfreporterEngineJasperReportsContext:(id<OrgOssPdfreporterEngineJasperReportsContext>)jasperReportsContext {
  self->jasperReportsContext_ = jasperReportsContext;
  self->propertiesUtil_ = OrgOssPdfreporterEngineJRPropertiesUtil_getInstanceWithOrgOssPdfreporterEngineJasperReportsContext_(jasperReportsContext);
  self->allSelector_ = OrgOssPdfreporterEngineJRStyledTextAttributeSelector_getAllSelectorWithOrgOssPdfreporterEngineJasperReportsContext_(jasperReportsContext);
  self->noBackcolorSelector_ = OrgOssPdfreporterEngineJRStyledTextAttributeSelector_getNoBackcolorSelectorWithOrgOssPdfreporterEngineJasperReportsContext_(jasperReportsContext);
  self->noneSelector_ = OrgOssPdfreporterEngineJRStyledTextAttributeSelector_getNoneSelectorWithOrgOssPdfreporterEngineJasperReportsContext_(jasperReportsContext);
  self->styledTextUtil_ = OrgOssPdfreporterEngineUtilJRStyledTextUtil_getInstanceWithOrgOssPdfreporterEngineJasperReportsContext_(jasperReportsContext);
}

- (void)setReportContextWithOrgOssPdfreporterEngineReportContext:(id<OrgOssPdfreporterEngineReportContext>)reportContext {
  self->reportContext_ = reportContext;
}

- (id<OrgOssPdfreporterEngineReportContext>)getReportContext {
  return reportContext_;
}

- (OrgOssPdfreporterEngineJRPropertiesUtil *)getPropertiesUtil {
  return propertiesUtil_;
}

- (void)exportReport {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)setOffset {
  [self setOffsetWithBoolean:true];
}

- (void)setOffsetWithBoolean:(jboolean)setElementOffsets {
  JavaLangInteger *offsetX = (JavaLangInteger *) cast_chk([((id<JavaUtilMap>) nil_chk(parameters_)) getWithId:JreLoadStatic(OrgOssPdfreporterEngineJRExporterParameter, OFFSET_X)], [JavaLangInteger class]);
  if (offsetX != nil) {
    globalOffsetX_ = [offsetX intValue];
  }
  else {
    globalOffsetX_ = 0;
  }
  JavaLangInteger *offsetY = (JavaLangInteger *) cast_chk([((id<JavaUtilMap>) nil_chk(parameters_)) getWithId:JreLoadStatic(OrgOssPdfreporterEngineJRExporterParameter, OFFSET_Y)], [JavaLangInteger class]);
  if (offsetY != nil) {
    globalOffsetY_ = [offsetY intValue];
  }
  else {
    globalOffsetY_ = 0;
  }
  if (setElementOffsets) {
    elementOffsetX_ = globalOffsetX_;
    elementOffsetY_ = globalOffsetY_;
  }
}

- (void)setExportContext {
  if ([((id<JavaUtilMap>) nil_chk(parameters_)) containsKeyWithId:JreLoadStatic(OrgOssPdfreporterEngineJRExporterParameter, CLASS_LOADER)] || [((id<JavaUtilMap>) nil_chk(parameters_)) containsKeyWithId:JreLoadStatic(OrgOssPdfreporterEngineJRExporterParameter, URL_HANDLER_FACTORY)] || [((id<JavaUtilMap>) nil_chk(parameters_)) containsKeyWithId:JreLoadStatic(OrgOssPdfreporterEngineJRExporterParameter, FILE_RESOLVER)]) {
    OrgOssPdfreporterEngineUtilLocalJasperReportsContext *localJasperReportsContext = new_OrgOssPdfreporterEngineUtilLocalJasperReportsContext_initWithOrgOssPdfreporterEngineJasperReportsContext_(jasperReportsContext_);
    if ([((id<JavaUtilMap>) nil_chk(parameters_)) containsKeyWithId:JreLoadStatic(OrgOssPdfreporterEngineJRExporterParameter, CLASS_LOADER)]) {
      [localJasperReportsContext setClassLoaderWithJavaLangClassLoader:(JavaLangClassLoader *) cast_chk([((id<JavaUtilMap>) nil_chk(parameters_)) getWithId:JreLoadStatic(OrgOssPdfreporterEngineJRExporterParameter, CLASS_LOADER)], [JavaLangClassLoader class])];
    }
    if ([((id<JavaUtilMap>) nil_chk(parameters_)) containsKeyWithId:JreLoadStatic(OrgOssPdfreporterEngineJRExporterParameter, FILE_RESOLVER)]) {
      [localJasperReportsContext setFileResolverWithOrgOssPdfreporterEngineUtilFileResolver:(id<OrgOssPdfreporterEngineUtilFileResolver>) cast_check([((id<JavaUtilMap>) nil_chk(parameters_)) getWithId:JreLoadStatic(OrgOssPdfreporterEngineJRExporterParameter, FILE_RESOLVER)], OrgOssPdfreporterEngineUtilFileResolver_class_())];
    }
    [self setJasperReportsContextWithOrgOssPdfreporterEngineJasperReportsContext:localJasperReportsContext];
  }
}

- (void)resetExportContext {
}

- (void)setClassLoader {
  [self setExportContext];
}

- (void)resetClassLoader {
  [self resetExportContext];
}

- (void)setJasperPrintWithOrgOssPdfreporterEngineJasperPrint:(OrgOssPdfreporterEngineJasperPrint *)jasperPrint {
  self->jasperPrint_ = jasperPrint;
  NSString *localeCode = [((OrgOssPdfreporterEngineJasperPrint *) nil_chk(jasperPrint)) getLocaleCode];
  OrgOssPdfreporterEngineUtilJRStyledTextParser_setLocaleWithOrgOssPdfreporterTextBundleStringLocale_(localeCode == nil ? nil : OrgOssPdfreporterEngineUtilJRDataUtils_getLocaleWithNSString_(localeCode));
}

- (void)setInput {
  jasperPrintList_ = (id<JavaUtilList>) cast_check([((id<JavaUtilMap>) nil_chk(parameters_)) getWithId:JreLoadStatic(OrgOssPdfreporterEngineJRExporterParameter, JASPER_PRINT_LIST)], JavaUtilList_class_());
  if (jasperPrintList_ == nil) {
    isModeBatch_ = false;
    jasperPrint_ = (OrgOssPdfreporterEngineJasperPrint *) cast_chk([((id<JavaUtilMap>) nil_chk(parameters_)) getWithId:JreLoadStatic(OrgOssPdfreporterEngineJRExporterParameter, JASPER_PRINT)], [OrgOssPdfreporterEngineJasperPrint class]);
    if (jasperPrint_ == nil) {
      JavaIoInputStream *is = (JavaIoInputStream *) cast_chk([((id<JavaUtilMap>) nil_chk(parameters_)) getWithId:JreLoadStatic(OrgOssPdfreporterEngineJRExporterParameter, INPUT_STREAM)], [JavaIoInputStream class]);
      if (is != nil) {
        jasperPrint_ = (OrgOssPdfreporterEngineJasperPrint *) cast_chk(OrgOssPdfreporterEngineUtilJRLoader_loadObjectWithJavaIoInputStream_(is), [OrgOssPdfreporterEngineJasperPrint class]);
      }
      else {
        id<OrgOssPdfreporterNetIURL> url = (id<OrgOssPdfreporterNetIURL>) cast_check([((id<JavaUtilMap>) nil_chk(parameters_)) getWithId:JreLoadStatic(OrgOssPdfreporterEngineJRExporterParameter, INPUT_URL)], OrgOssPdfreporterNetIURL_class_());
        if (url != nil) {
          jasperPrint_ = (OrgOssPdfreporterEngineJasperPrint *) cast_chk(OrgOssPdfreporterEngineUtilJRLoader_loadObjectWithOrgOssPdfreporterNetIURL_(url), [OrgOssPdfreporterEngineJasperPrint class]);
        }
        else {
          JavaIoFile *file = (JavaIoFile *) cast_chk([((id<JavaUtilMap>) nil_chk(parameters_)) getWithId:JreLoadStatic(OrgOssPdfreporterEngineJRExporterParameter, INPUT_FILE)], [JavaIoFile class]);
          if (file != nil) {
            jasperPrint_ = (OrgOssPdfreporterEngineJasperPrint *) cast_chk(OrgOssPdfreporterEngineUtilJRLoader_loadObjectWithJavaIoFile_(file), [OrgOssPdfreporterEngineJasperPrint class]);
          }
          else {
            NSString *fileName = (NSString *) cast_chk([((id<JavaUtilMap>) nil_chk(parameters_)) getWithId:JreLoadStatic(OrgOssPdfreporterEngineJRExporterParameter, INPUT_FILE_NAME)], [NSString class]);
            if (fileName != nil) {
              jasperPrint_ = (OrgOssPdfreporterEngineJasperPrint *) cast_chk(OrgOssPdfreporterEngineUtilJRLoader_loadObjectFromFileWithNSString_(fileName), [OrgOssPdfreporterEngineJasperPrint class]);
            }
            else {
              @throw new_OrgOssPdfreporterEngineJRException_initWithNSString_(@"No input source supplied to the exporter.");
            }
          }
        }
      }
    }
    jasperPrintList_ = new_JavaUtilArrayList_init();
    [jasperPrintList_ addWithId:jasperPrint_];
  }
  else {
    isModeBatch_ = true;
    if ([jasperPrintList_ size] == 0) {
      @throw new_OrgOssPdfreporterEngineJRException_initWithNSString_(@"Empty input source supplied to the exporter in batch mode.");
    }
    jasperPrint_ = [((id<JavaUtilList>) nil_chk(jasperPrintList_)) getWithInt:0];
  }
  [self setJasperPrintWithOrgOssPdfreporterEngineJasperPrint:jasperPrint_];
  filter_ = (id<OrgOssPdfreporterEngineExportExporterFilter>) cast_check([((id<JavaUtilMap>) nil_chk(parameters_)) getWithId:JreLoadStatic(OrgOssPdfreporterEngineJRExporterParameter, FILTER)], OrgOssPdfreporterEngineExportExporterFilter_class_());
}

- (void)setPageRange {
  jint lastPageIndex = -1;
  if ([((OrgOssPdfreporterEngineJasperPrint *) nil_chk(jasperPrint_)) getPages] != nil) {
    lastPageIndex = [((id<JavaUtilList>) nil_chk([((OrgOssPdfreporterEngineJasperPrint *) nil_chk(jasperPrint_)) getPages])) size] - 1;
  }
  JavaLangInteger *start = (JavaLangInteger *) cast_chk([((id<JavaUtilMap>) nil_chk(parameters_)) getWithId:JreLoadStatic(OrgOssPdfreporterEngineJRExporterParameter, START_PAGE_INDEX)], [JavaLangInteger class]);
  if (start == nil) {
    startPageIndex_ = 0;
  }
  else {
    startPageIndex_ = [start intValue];
    if (startPageIndex_ < 0 || startPageIndex_ > lastPageIndex) {
      @throw new_OrgOssPdfreporterEngineJRException_initWithNSString_(JreStrcat("$I$I", @"Start page index out of range : ", startPageIndex_, @" of ", lastPageIndex));
    }
  }
  JavaLangInteger *end = (JavaLangInteger *) cast_chk([((id<JavaUtilMap>) nil_chk(parameters_)) getWithId:JreLoadStatic(OrgOssPdfreporterEngineJRExporterParameter, END_PAGE_INDEX)], [JavaLangInteger class]);
  if (end == nil) {
    endPageIndex_ = lastPageIndex;
  }
  else {
    endPageIndex_ = [end intValue];
    if (endPageIndex_ < startPageIndex_ || endPageIndex_ > lastPageIndex) {
      @throw new_OrgOssPdfreporterEngineJRException_initWithNSString_(JreStrcat("$I$I$IC", @"End page index out of range : ", endPageIndex_, @" (", startPageIndex_, @" : ", lastPageIndex, ')'));
    }
  }
  JavaLangInteger *index = (JavaLangInteger *) cast_chk([((id<JavaUtilMap>) nil_chk(parameters_)) getWithId:JreLoadStatic(OrgOssPdfreporterEngineJRExporterParameter, PAGE_INDEX)], [JavaLangInteger class]);
  if (index != nil) {
    jint pageIndex = [index intValue];
    if (pageIndex < 0 || pageIndex > lastPageIndex) {
      @throw new_OrgOssPdfreporterEngineJRException_initWithNSString_(JreStrcat("$I$I", @"Page index out of range : ", pageIndex, @" of ", lastPageIndex));
    }
    startPageIndex_ = pageIndex;
    endPageIndex_ = pageIndex;
  }
}

- (OrgOssPdfreporterEngineUtilJRStyledText *)getStyledTextWithOrgOssPdfreporterEngineJRPrintText:(id<OrgOssPdfreporterEngineJRPrintText>)textElement
                                                                                     withBoolean:(jboolean)setBackcolor {
  return [((OrgOssPdfreporterEngineUtilJRStyledTextUtil *) nil_chk(styledTextUtil_)) getStyledTextWithOrgOssPdfreporterEngineJRPrintText:textElement withOrgOssPdfreporterEngineJRStyledTextAttributeSelector:setBackcolor ? allSelector_ : noBackcolorSelector_];
}

- (OrgOssPdfreporterEngineUtilJRStyledText *)getStyledTextWithOrgOssPdfreporterEngineJRPrintText:(id<OrgOssPdfreporterEngineJRPrintText>)textElement {
  return [self getStyledTextWithOrgOssPdfreporterEngineJRPrintText:textElement withBoolean:true];
}

- (void)setOutput {
}

- (jint)getOffsetX {
  return elementOffsetX_;
}

- (jint)getOffsetY {
  return elementOffsetY_;
}

- (void)setFrameElementsOffsetWithOrgOssPdfreporterEngineJRPrintFrame:(id<OrgOssPdfreporterEngineJRPrintFrame>)frame
                                                          withBoolean:(jboolean)relative {
  if (relative) {
    OrgOssPdfreporterEngineJRAbstractExporter_setElementOffsetsWithInt_withInt_(self, 0, 0);
  }
  else {
    jint topPadding = [((JavaLangInteger *) nil_chk([((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk([((id<OrgOssPdfreporterEngineJRPrintFrame>) nil_chk(frame)) getLineBox])) getTopPadding])) intValue];
    jint leftPadding = [((JavaLangInteger *) nil_chk([((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk([frame getLineBox])) getLeftPadding])) intValue];
    OrgOssPdfreporterEngineJRAbstractExporter_setElementOffsetsWithInt_withInt_(self, [self getOffsetX] + [frame getX] + leftPadding, [self getOffsetY] + [frame getY] + topPadding);
  }
}

- (void)setElementOffsetsWithInt:(jint)offsetX
                         withInt:(jint)offsetY {
  OrgOssPdfreporterEngineJRAbstractExporter_setElementOffsetsWithInt_withInt_(self, offsetX, offsetY);
}

- (void)restoreElementOffsets {
  IOSIntArray *offsets = [((JavaUtilLinkedList *) nil_chk(elementOffsetStack_)) removeLast];
  elementOffsetX_ = IOSIntArray_Get(nil_chk(offsets), 0);
  elementOffsetY_ = IOSIntArray_Get(offsets, 1);
}

- (NSString *)getTextFormatFactoryClassWithOrgOssPdfreporterEngineJRPrintText:(id<OrgOssPdfreporterEngineJRPrintText>)text {
  NSString *formatFactoryClass = [((id<OrgOssPdfreporterEngineJRPrintText>) nil_chk(text)) getFormatFactoryClass];
  if (formatFactoryClass == nil) {
    formatFactoryClass = [((OrgOssPdfreporterEngineJasperPrint *) nil_chk(jasperPrint_)) getFormatFactoryClass];
  }
  return formatFactoryClass;
}

- (OrgOssPdfreporterTextBundleStringLocale *)getLocale {
  NSString *localeCode = [((OrgOssPdfreporterEngineJasperPrint *) nil_chk(jasperPrint_)) getLocaleCode];
  return localeCode == nil ? nil : OrgOssPdfreporterEngineUtilJRDataUtils_getLocaleWithNSString_(localeCode);
}

- (OrgOssPdfreporterTextBundleStringLocale *)getTextLocaleWithOrgOssPdfreporterEngineJRPrintText:(id<OrgOssPdfreporterEngineJRPrintText>)text {
  NSString *localeCode = [((id<OrgOssPdfreporterEngineJRPrintText>) nil_chk(text)) getLocaleCode];
  if (localeCode == nil) {
    localeCode = [((OrgOssPdfreporterEngineJasperPrint *) nil_chk(jasperPrint_)) getLocaleCode];
  }
  return localeCode == nil ? nil : OrgOssPdfreporterEngineUtilJRDataUtils_getLocaleWithNSString_(localeCode);
}

- (JavaUtilTimeZone *)getTextTimeZoneWithOrgOssPdfreporterEngineJRPrintText:(id<OrgOssPdfreporterEngineJRPrintText>)text {
  NSString *tzId = [((id<OrgOssPdfreporterEngineJRPrintText>) nil_chk(text)) getTimeZoneId];
  if (tzId == nil) {
    tzId = [((OrgOssPdfreporterEngineJasperPrint *) nil_chk(jasperPrint_)) getTimeZoneId];
  }
  return tzId == nil ? nil : OrgOssPdfreporterEngineUtilJRDataUtils_getTimeZoneWithNSString_(tzId);
}

- (OrgOssPdfreporterEngineExportDataTextValue *)getTextValueWithOrgOssPdfreporterEngineJRPrintText:(id<OrgOssPdfreporterEngineJRPrintText>)text
                                                                                      withNSString:(NSString *)textStr {
  OrgOssPdfreporterEngineExportDataTextValue *textValue;
  if ([((id<OrgOssPdfreporterEngineJRPrintText>) nil_chk(text)) getValueClassName] == nil) {
    textValue = [self getTextValueStringWithOrgOssPdfreporterEngineJRPrintText:text withNSString:textStr];
  }
  else {
    @try {
      IOSClass *valueClass = OrgOssPdfreporterEngineUtilJRClassLoader_loadClassForRealNameWithNSString_([text getValueClassName]);
      if ([NSNumber_class_() isAssignableFrom:valueClass]) {
        textValue = [self getNumberCellValueWithOrgOssPdfreporterEngineJRPrintText:text withNSString:textStr];
      }
      else if ([JavaUtilDate_class_() isAssignableFrom:valueClass]) {
        textValue = [self getDateCellValueWithOrgOssPdfreporterEngineJRPrintText:text withNSString:textStr];
      }
      else if ([JavaLangBoolean_class_() isEqual:valueClass]) {
        textValue = [self getBooleanCellValueWithOrgOssPdfreporterEngineJRPrintText:text withNSString:textStr];
      }
      else {
        textValue = [self getTextValueStringWithOrgOssPdfreporterEngineJRPrintText:text withNSString:textStr];
      }
    }
    @catch (JavaTextParseException *e) {
      textValue = [self getTextValueStringWithOrgOssPdfreporterEngineJRPrintText:text withNSString:textStr];
    }
    @catch (JavaLangClassNotFoundException *e) {
      textValue = [self getTextValueStringWithOrgOssPdfreporterEngineJRPrintText:text withNSString:textStr];
    }
  }
  return textValue;
}

- (OrgOssPdfreporterEngineExportDataTextValue *)getTextValueStringWithOrgOssPdfreporterEngineJRPrintText:(id<OrgOssPdfreporterEngineJRPrintText>)text
                                                                                            withNSString:(NSString *)textStr {
  return new_OrgOssPdfreporterEngineExportDataStringTextValue_initWithNSString_(textStr);
}

- (OrgOssPdfreporterEngineExportDataTextValue *)getDateCellValueWithOrgOssPdfreporterEngineJRPrintText:(id<OrgOssPdfreporterEngineJRPrintText>)text
                                                                                          withNSString:(NSString *)textStr {
  return new_OrgOssPdfreporterEngineExportDataDateTextValue_initWithNSString_withJavaUtilDate_withNSString_(textStr, (JavaUtilDate *) cast_chk([((id<OrgOssPdfreporterEngineJRPrintText>) nil_chk(text)) getValue], [JavaUtilDate class]), [text getPattern]);
}

- (OrgOssPdfreporterEngineExportDataTextValue *)getNumberCellValueWithOrgOssPdfreporterEngineJRPrintText:(id<OrgOssPdfreporterEngineJRPrintText>)text
                                                                                            withNSString:(NSString *)textStr {
  return new_OrgOssPdfreporterEngineExportDataNumberTextValue_initWithNSString_withNSNumber_withNSString_(textStr, (NSNumber *) cast_chk([((id<OrgOssPdfreporterEngineJRPrintText>) nil_chk(text)) getValue], [NSNumber class]), [text getPattern]);
}

- (NSNumber *)defaultParseNumberWithNSString:(NSString *)textStr
                                withIOSClass:(IOSClass *)valueClass {
  NSNumber *value = nil;
  @try {
    if ([((IOSClass *) nil_chk(valueClass)) isEqual:JavaLangByte_class_()]) {
      value = JavaLangByte_valueOfWithNSString_(textStr);
    }
    else if ([valueClass isEqual:JavaLangShort_class_()]) {
      value = JavaLangShort_valueOfWithNSString_(textStr);
    }
    else if ([valueClass isEqual:JavaLangInteger_class_()]) {
      value = JavaLangInteger_valueOfWithNSString_(textStr);
    }
    else if ([valueClass isEqual:JavaLangLong_class_()]) {
      value = JavaLangLong_valueOfWithNSString_(textStr);
    }
    else if ([valueClass isEqual:JavaLangFloat_class_()]) {
      value = JavaLangFloat_valueOfWithNSString_(textStr);
    }
    else if ([valueClass isEqual:JavaLangDouble_class_()]) {
      value = JavaLangDouble_valueOfWithNSString_(textStr);
    }
    else if ([valueClass isEqual:JavaMathBigInteger_class_()]) {
      value = new_JavaMathBigInteger_initWithNSString_(textStr);
    }
    else if ([valueClass isEqual:JavaMathBigDecimal_class_()]) {
      value = new_JavaMathBigDecimal_initWithNSString_(textStr);
    }
  }
  @catch (JavaLangNumberFormatException *e) {
  }
  return value;
}

- (OrgOssPdfreporterEngineExportDataTextValue *)getBooleanCellValueWithOrgOssPdfreporterEngineJRPrintText:(id<OrgOssPdfreporterEngineJRPrintText>)text
                                                                                             withNSString:(NSString *)textStr {
  JavaLangBoolean *value = nil;
  if (textStr != nil && ((jint) [textStr length]) > 0) {
    value = JavaLangBoolean_valueOfWithNSString_(textStr);
  }
  return new_OrgOssPdfreporterEngineExportDataBooleanTextValue_initWithNSString_withJavaLangBoolean_(textStr, value);
}

- (id<OrgOssPdfreporterTextFormatIDateFormat>)getDateFormatWithNSString:(NSString *)formatFactoryClass
                                                           withNSString:(NSString *)pattern
                            withOrgOssPdfreporterTextBundleStringLocale:(OrgOssPdfreporterTextBundleStringLocale *)lc
                                                   withJavaUtilTimeZone:(JavaUtilTimeZone *)tz {
  NSString *key = JreStrcat("$C$C$C$", formatFactoryClass, '|', pattern, '|', (lc == nil ? @"" : OrgOssPdfreporterEngineUtilJRDataUtils_getLocaleCodeWithOrgOssPdfreporterTextBundleStringLocale_(lc)), '|', (tz == nil ? @"" : OrgOssPdfreporterEngineUtilJRDataUtils_getTimeZoneIdWithJavaUtilTimeZone_(tz)));
  id<OrgOssPdfreporterTextFormatIDateFormat> dateFormat = [((id<JavaUtilMap>) nil_chk(dateFormatCache_)) getWithId:key];
  if (dateFormat == nil) {
    id<OrgOssPdfreporterTextFormatFactoryIFormatFactory> formatFactory = OrgOssPdfreporterRegistryApiRegistry_getIFormatFactoryWithOrgOssPdfreporterTextFormatFactoryIFormatFactory_FormatType_(JreLoadEnum(OrgOssPdfreporterTextFormatFactoryIFormatFactory_FormatType, DEFAULT));
    dateFormat = [((id<OrgOssPdfreporterTextFormatFactoryIFormatFactory>) nil_chk(formatFactory)) newDateFormatWithNSString:pattern withJavaUtilLocale:[((OrgOssPdfreporterTextBundleStringLocale *) nil_chk(lc)) toLocale] withJavaUtilTimeZone:tz];
    (void) [((id<JavaUtilMap>) nil_chk(dateFormatCache_)) putWithId:key withId:dateFormat];
  }
  return dateFormat;
}

- (id<OrgOssPdfreporterTextFormatINumberFormat>)getNumberFormatWithNSString:(NSString *)formatFactoryClass
                                                               withNSString:(NSString *)pattern
                                withOrgOssPdfreporterTextBundleStringLocale:(OrgOssPdfreporterTextBundleStringLocale *)lc {
  NSString *key = JreStrcat("$C$C$", formatFactoryClass, '|', pattern, '|', (lc == nil ? @"" : OrgOssPdfreporterEngineUtilJRDataUtils_getLocaleCodeWithOrgOssPdfreporterTextBundleStringLocale_(lc)));
  id<OrgOssPdfreporterTextFormatINumberFormat> numberFormat = [((id<JavaUtilMap>) nil_chk(numberFormatCache_)) getWithId:key];
  if (numberFormat == nil) {
    id<OrgOssPdfreporterTextFormatFactoryIFormatFactory> formatFactory = OrgOssPdfreporterRegistryApiRegistry_getIFormatFactoryWithOrgOssPdfreporterTextFormatFactoryIFormatFactory_FormatType_(JreLoadEnum(OrgOssPdfreporterTextFormatFactoryIFormatFactory_FormatType, DEFAULT));
    numberFormat = [((id<OrgOssPdfreporterTextFormatFactoryIFormatFactory>) nil_chk(formatFactory)) newNumberFormatWithNSString:pattern withJavaUtilLocale:[((OrgOssPdfreporterTextBundleStringLocale *) nil_chk(lc)) toLocale]];
    (void) [((id<JavaUtilMap>) nil_chk(numberFormatCache_)) putWithId:key withId:numberFormat];
  }
  return numberFormat;
}

- (id<OrgOssPdfreporterEngineExportExporterFilter>)createFilterWithNSString:(NSString *)exportPropertyPrefix {
  NSString *exportDefaultFactoryProperty = JreStrcat("$$", exportPropertyPrefix, OrgOssPdfreporterEngineJRAbstractExporter_PROPERTY_SUFFIX_DEFAULT_FILTER_FACTORY);
  NSString *defaultFilterClassName = nil;
  if ([((OrgOssPdfreporterEngineJasperPrint *) nil_chk(jasperPrint_)) hasProperties]) {
    defaultFilterClassName = [((OrgOssPdfreporterEngineJRPropertiesMap *) nil_chk([((OrgOssPdfreporterEngineJasperPrint *) nil_chk(jasperPrint_)) getPropertiesMap])) getPropertyWithNSString:exportDefaultFactoryProperty];
    if (defaultFilterClassName == nil) {
      defaultFilterClassName = [((OrgOssPdfreporterEngineJRPropertiesMap *) nil_chk([((OrgOssPdfreporterEngineJasperPrint *) nil_chk(jasperPrint_)) getPropertiesMap])) getPropertyWithNSString:OrgOssPdfreporterEngineJRAbstractExporter_PROPERTY_DEFAULT_FILTER_FACTORY];
    }
  }
  if (defaultFilterClassName == nil) {
    defaultFilterClassName = [((OrgOssPdfreporterEngineJRPropertiesUtil *) nil_chk([self getPropertiesUtil])) getPropertyWithNSString:exportDefaultFactoryProperty];
  }
  if (defaultFilterClassName == nil) {
    defaultFilterClassName = [((OrgOssPdfreporterEngineJRPropertiesUtil *) nil_chk([self getPropertiesUtil])) getPropertyWithNSString:OrgOssPdfreporterEngineJRAbstractExporter_PROPERTY_DEFAULT_FILTER_FACTORY];
  }
  id<OrgOssPdfreporterEngineExportExporterFilterFactory> defaultFactory = OrgOssPdfreporterEngineExportExporterFilterFactoryUtil_getFilterFactoryWithNSString_(defaultFilterClassName);
  id<OrgOssPdfreporterEngineExportJRExporterContext> context = new_OrgOssPdfreporterEngineJRAbstractExporter_$1_initWithOrgOssPdfreporterEngineJRAbstractExporter_withNSString_(self, exportPropertyPrefix);
  return [((id<OrgOssPdfreporterEngineExportExporterFilterFactory>) nil_chk(defaultFactory)) getFilterWithOrgOssPdfreporterEngineExportJRExporterContext:context];
}

- (void)setFontMap {
  fontMap_ = (id<JavaUtilMap>) cast_check([((id<JavaUtilMap>) nil_chk(parameters_)) getWithId:JreLoadStatic(OrgOssPdfreporterEngineJRExporterParameter, FONT_MAP)], JavaUtilMap_class_());
}

- (void)setHyperlinkProducerFactory {
  hyperlinkProducerFactory_ = (OrgOssPdfreporterEngineExportJRHyperlinkProducerFactory *) cast_chk([((id<JavaUtilMap>) nil_chk(parameters_)) getWithId:JreLoadStatic(OrgOssPdfreporterEngineJRExporterParameter, HYPERLINK_PRODUCER_FACTORY)], [OrgOssPdfreporterEngineExportJRHyperlinkProducerFactory class]);
  if (hyperlinkProducerFactory_ == nil) {
    hyperlinkProducerFactory_ = new_OrgOssPdfreporterEngineExportDefaultHyperlinkProducerFactory_initWithOrgOssPdfreporterEngineJasperReportsContext_(jasperReportsContext_);
  }
}

- (id<OrgOssPdfreporterEngineExportJRHyperlinkProducer>)getHyperlinkProducerWithOrgOssPdfreporterEngineJRPrintHyperlink:(id<OrgOssPdfreporterEngineJRPrintHyperlink>)link {
  return hyperlinkProducerFactory_ == nil ? nil : [hyperlinkProducerFactory_ getHandlerWithNSString:[((id<OrgOssPdfreporterEngineJRPrintHyperlink>) nil_chk(link)) getLinkType]];
}

- (id<OrgOssPdfreporterEngineExportJRHyperlinkProducer>)getCustomHandlerWithOrgOssPdfreporterEngineJRPrintHyperlink:(id<OrgOssPdfreporterEngineJRPrintHyperlink>)link {
  return [self getHyperlinkProducerWithOrgOssPdfreporterEngineJRPrintHyperlink:link];
}

- (NSString *)getExporterKey {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "JRAbstractExporter", NULL, 0x4, NULL, NULL },
    { "initWithOrgOssPdfreporterEngineJasperReportsContext:", "JRAbstractExporter", NULL, 0x4, NULL, NULL },
    { "reset", NULL, "V", 0x1, NULL, NULL },
    { "setParameterWithOrgOssPdfreporterEngineJRExporterParameter:withId:", "setParameter", "V", 0x1, NULL, NULL },
    { "getParameterWithOrgOssPdfreporterEngineJRExporterParameter:", "getParameter", "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "setParametersWithJavaUtilMap:", "setParameters", "V", 0x1, NULL, "(Ljava/util/Map<Lorg/oss/pdfreporter/engine/JRExporterParameter;Ljava/lang/Object;>;)V" },
    { "getParameters", NULL, "Ljava.util.Map;", 0x1, NULL, "()Ljava/util/Map<Lorg/oss/pdfreporter/engine/JRExporterParameter;Ljava/lang/Object;>;" },
    { "getParameterResolver", NULL, "Lorg.oss.pdfreporter.engine.JRAbstractExporter$ParameterResolver;", 0x4, NULL, NULL },
    { "getStringParameterWithOrgOssPdfreporterEngineJRExporterParameter:withNSString:", "getStringParameter", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getStringArrayParameterWithOrgOssPdfreporterEngineJRExporterParameter:withNSString:", "getStringArrayParameter", "[Ljava.lang.String;", 0x1, NULL, NULL },
    { "getStringParameterOrDefaultWithOrgOssPdfreporterEngineJRExporterParameter:withNSString:", "getStringParameterOrDefault", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getBooleanParameterWithOrgOssPdfreporterEngineJRExporterParameter:withNSString:withBoolean:", "getBooleanParameter", "Z", 0x1, NULL, NULL },
    { "getIntegerParameterWithOrgOssPdfreporterEngineJRExporterParameter:withNSString:withInt:", "getIntegerParameter", "I", 0x1, NULL, NULL },
    { "getFloatParameterWithOrgOssPdfreporterEngineJRExporterParameter:withNSString:withFloat:", "getFloatParameter", "F", 0x1, NULL, NULL },
    { "getCharacterParameterWithOrgOssPdfreporterEngineJRExporterParameter:withNSString:", "getCharacterParameter", "Ljava.lang.Character;", 0x1, NULL, NULL },
    { "getJasperReportsContext", NULL, "Lorg.oss.pdfreporter.engine.JasperReportsContext;", 0x1, NULL, NULL },
    { "setJasperReportsContextWithOrgOssPdfreporterEngineJasperReportsContext:", "setJasperReportsContext", "V", 0x1, NULL, NULL },
    { "setReportContextWithOrgOssPdfreporterEngineReportContext:", "setReportContext", "V", 0x1, NULL, NULL },
    { "getReportContext", NULL, "Lorg.oss.pdfreporter.engine.ReportContext;", 0x1, NULL, NULL },
    { "getPropertiesUtil", NULL, "Lorg.oss.pdfreporter.engine.JRPropertiesUtil;", 0x1, NULL, NULL },
    { "exportReport", NULL, "V", 0x401, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "setOffset", NULL, "V", 0x4, NULL, NULL },
    { "setOffsetWithBoolean:", "setOffset", "V", 0x4, NULL, NULL },
    { "setExportContext", NULL, "V", 0x4, NULL, NULL },
    { "resetExportContext", NULL, "V", 0x4, NULL, NULL },
    { "setClassLoader", NULL, "V", 0x4, NULL, NULL },
    { "resetClassLoader", NULL, "V", 0x4, NULL, NULL },
    { "setJasperPrintWithOrgOssPdfreporterEngineJasperPrint:", "setJasperPrint", "V", 0x4, NULL, NULL },
    { "setInput", NULL, "V", 0x4, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "setPageRange", NULL, "V", 0x4, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "getStyledTextWithOrgOssPdfreporterEngineJRPrintText:withBoolean:", "getStyledText", "Lorg.oss.pdfreporter.engine.util.JRStyledText;", 0x4, NULL, NULL },
    { "getStyledTextWithOrgOssPdfreporterEngineJRPrintText:", "getStyledText", "Lorg.oss.pdfreporter.engine.util.JRStyledText;", 0x4, NULL, NULL },
    { "setOutput", NULL, "V", 0x4, NULL, NULL },
    { "getOffsetX", NULL, "I", 0x4, NULL, NULL },
    { "getOffsetY", NULL, "I", 0x4, NULL, NULL },
    { "setFrameElementsOffsetWithOrgOssPdfreporterEngineJRPrintFrame:withBoolean:", "setFrameElementsOffset", "V", 0x4, NULL, NULL },
    { "setElementOffsetsWithInt:withInt:", "setElementOffsets", "V", 0x2, NULL, NULL },
    { "restoreElementOffsets", NULL, "V", 0x4, NULL, NULL },
    { "getTextFormatFactoryClassWithOrgOssPdfreporterEngineJRPrintText:", "getTextFormatFactoryClass", "Ljava.lang.String;", 0x4, NULL, NULL },
    { "getLocale", NULL, "Lorg.oss.pdfreporter.text.bundle.StringLocale;", 0x4, NULL, NULL },
    { "getTextLocaleWithOrgOssPdfreporterEngineJRPrintText:", "getTextLocale", "Lorg.oss.pdfreporter.text.bundle.StringLocale;", 0x4, NULL, NULL },
    { "getTextTimeZoneWithOrgOssPdfreporterEngineJRPrintText:", "getTextTimeZone", "Ljava.util.TimeZone;", 0x4, NULL, NULL },
    { "getTextValueWithOrgOssPdfreporterEngineJRPrintText:withNSString:", "getTextValue", "Lorg.oss.pdfreporter.engine.export.data.TextValue;", 0x4, NULL, NULL },
    { "getTextValueStringWithOrgOssPdfreporterEngineJRPrintText:withNSString:", "getTextValueString", "Lorg.oss.pdfreporter.engine.export.data.TextValue;", 0x4, NULL, NULL },
    { "getDateCellValueWithOrgOssPdfreporterEngineJRPrintText:withNSString:", "getDateCellValue", "Lorg.oss.pdfreporter.engine.export.data.TextValue;", 0x4, "Ljava.text.ParseException;", NULL },
    { "getNumberCellValueWithOrgOssPdfreporterEngineJRPrintText:withNSString:", "getNumberCellValue", "Lorg.oss.pdfreporter.engine.export.data.TextValue;", 0x4, "Ljava.text.ParseException;Ljava.lang.ClassNotFoundException;", NULL },
    { "defaultParseNumberWithNSString:withIOSClass:", "defaultParseNumber", "Ljava.lang.Number;", 0x4, NULL, "(Ljava/lang/String;Ljava/lang/Class<*>;)Ljava/lang/Number;" },
    { "getBooleanCellValueWithOrgOssPdfreporterEngineJRPrintText:withNSString:", "getBooleanCellValue", "Lorg.oss.pdfreporter.engine.export.data.TextValue;", 0x4, NULL, NULL },
    { "getDateFormatWithNSString:withNSString:withOrgOssPdfreporterTextBundleStringLocale:withJavaUtilTimeZone:", "getDateFormat", "Lorg.oss.pdfreporter.text.format.IDateFormat;", 0x4, NULL, NULL },
    { "getNumberFormatWithNSString:withNSString:withOrgOssPdfreporterTextBundleStringLocale:", "getNumberFormat", "Lorg.oss.pdfreporter.text.format.INumberFormat;", 0x4, NULL, NULL },
    { "createFilterWithNSString:", "createFilter", "Lorg.oss.pdfreporter.engine.export.ExporterFilter;", 0x4, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "setFontMap", NULL, "V", 0x4, NULL, NULL },
    { "setHyperlinkProducerFactory", NULL, "V", 0x4, NULL, NULL },
    { "getHyperlinkProducerWithOrgOssPdfreporterEngineJRPrintHyperlink:", "getHyperlinkProducer", "Lorg.oss.pdfreporter.engine.export.JRHyperlinkProducer;", 0x4, NULL, NULL },
    { "getCustomHandlerWithOrgOssPdfreporterEngineJRPrintHyperlink:", "getCustomHandler", "Lorg.oss.pdfreporter.engine.export.JRHyperlinkProducer;", 0x4, NULL, NULL },
    { "getExporterKey", NULL, "Ljava.lang.String;", 0x404, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "PROPERTY_DEFAULT_FILTER_FACTORY", "PROPERTY_DEFAULT_FILTER_FACTORY", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineJRAbstractExporter_PROPERTY_DEFAULT_FILTER_FACTORY, NULL, .constantValue.asLong = 0 },
    { "PROPERTY_SUFFIX_DEFAULT_FILTER_FACTORY", "PROPERTY_SUFFIX_DEFAULT_FILTER_FACTORY", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineJRAbstractExporter_PROPERTY_SUFFIX_DEFAULT_FILTER_FACTORY, NULL, .constantValue.asLong = 0 },
    { "jasperReportsContext_", NULL, 0x4, "Lorg.oss.pdfreporter.engine.JasperReportsContext;", NULL, NULL, .constantValue.asLong = 0 },
    { "propertiesUtil_", NULL, 0x4, "Lorg.oss.pdfreporter.engine.JRPropertiesUtil;", NULL, NULL, .constantValue.asLong = 0 },
    { "allSelector_", NULL, 0x4, "Lorg.oss.pdfreporter.engine.JRStyledTextAttributeSelector;", NULL, NULL, .constantValue.asLong = 0 },
    { "noBackcolorSelector_", NULL, 0x4, "Lorg.oss.pdfreporter.engine.JRStyledTextAttributeSelector;", NULL, NULL, .constantValue.asLong = 0 },
    { "noneSelector_", NULL, 0x4, "Lorg.oss.pdfreporter.engine.JRStyledTextAttributeSelector;", NULL, NULL, .constantValue.asLong = 0 },
    { "styledTextUtil_", NULL, 0x4, "Lorg.oss.pdfreporter.engine.util.JRStyledTextUtil;", NULL, NULL, .constantValue.asLong = 0 },
    { "parameterResolver_", NULL, 0x2, "Lorg.oss.pdfreporter.engine.JRAbstractExporter$ParameterResolver;", NULL, NULL, .constantValue.asLong = 0 },
    { "parameters_", NULL, 0x4, "Ljava.util.Map;", NULL, "Ljava/util/Map<Lorg/oss/pdfreporter/engine/JRExporterParameter;Ljava/lang/Object;>;", .constantValue.asLong = 0 },
    { "jasperPrintList_", NULL, 0x4, "Ljava.util.List;", NULL, "Ljava/util/List<Lorg/oss/pdfreporter/engine/JasperPrint;>;", .constantValue.asLong = 0 },
    { "jasperPrint_", NULL, 0x4, "Lorg.oss.pdfreporter.engine.JasperPrint;", NULL, NULL, .constantValue.asLong = 0 },
    { "isModeBatch_", NULL, 0x4, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "startPageIndex_", NULL, 0x4, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "endPageIndex_", NULL, 0x4, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "globalOffsetX_", NULL, 0x4, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "globalOffsetY_", NULL, 0x4, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "filter_", NULL, 0x4, "Lorg.oss.pdfreporter.engine.export.ExporterFilter;", NULL, NULL, .constantValue.asLong = 0 },
    { "fontMap_", NULL, 0x4, "Ljava.util.Map;", NULL, "Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;", .constantValue.asLong = 0 },
    { "elementOffsetStack_", NULL, 0x2, "Ljava.util.LinkedList;", NULL, "Ljava/util/LinkedList<[LI;>;", .constantValue.asLong = 0 },
    { "elementOffsetX_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "elementOffsetY_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "dateFormatCache_", NULL, 0x4, "Ljava.util.Map;", NULL, "Ljava/util/Map<Ljava/lang/String;Lorg/oss/pdfreporter/text/format/IDateFormat;>;", .constantValue.asLong = 0 },
    { "numberFormatCache_", NULL, 0x4, "Ljava.util.Map;", NULL, "Ljava/util/Map<Ljava/lang/String;Lorg/oss/pdfreporter/text/format/INumberFormat;>;", .constantValue.asLong = 0 },
    { "hyperlinkProducerFactory_", NULL, 0x4, "Lorg.oss.pdfreporter.engine.export.JRHyperlinkProducerFactory;", NULL, NULL, .constantValue.asLong = 0 },
    { "reportContext_", NULL, 0x2, "Lorg.oss.pdfreporter.engine.ReportContext;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lorg.oss.pdfreporter.engine.JRAbstractExporter$BaseExporterContext;", "Lorg.oss.pdfreporter.engine.JRAbstractExporter$ParameterResolver;", "Lorg.oss.pdfreporter.engine.JRAbstractExporter$ParameterOverrideResolver;", "Lorg.oss.pdfreporter.engine.JRAbstractExporter$ParameterOverriddenResolver;"};
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineJRAbstractExporter = { 2, "JRAbstractExporter", "org.oss.pdfreporter.engine", NULL, 0x401, 56, methods, 26, fields, 0, NULL, 4, inner_classes, NULL, NULL };
  return &_OrgOssPdfreporterEngineJRAbstractExporter;
}

@end

void OrgOssPdfreporterEngineJRAbstractExporter_init(OrgOssPdfreporterEngineJRAbstractExporter *self) {
  OrgOssPdfreporterEngineJRAbstractExporter_initWithOrgOssPdfreporterEngineJasperReportsContext_(self, OrgOssPdfreporterEngineDefaultJasperReportsContext_getInstance());
}

void OrgOssPdfreporterEngineJRAbstractExporter_initWithOrgOssPdfreporterEngineJasperReportsContext_(OrgOssPdfreporterEngineJRAbstractExporter *self, id<OrgOssPdfreporterEngineJasperReportsContext> jasperReportsContext) {
  NSObject_init(self);
  self->parameters_ = new_JavaUtilHashMap_init();
  self->isModeBatch_ = true;
  self->elementOffsetStack_ = new_JavaUtilLinkedList_init();
  self->elementOffsetX_ = self->globalOffsetX_;
  self->elementOffsetY_ = self->globalOffsetY_;
  self->dateFormatCache_ = new_JavaUtilHashMap_init();
  self->numberFormatCache_ = new_JavaUtilHashMap_init();
  [self setJasperReportsContextWithOrgOssPdfreporterEngineJasperReportsContext:jasperReportsContext];
}

void OrgOssPdfreporterEngineJRAbstractExporter_setElementOffsetsWithInt_withInt_(OrgOssPdfreporterEngineJRAbstractExporter *self, jint offsetX, jint offsetY) {
  [((JavaUtilLinkedList *) nil_chk(self->elementOffsetStack_)) addLastWithId:[IOSIntArray newArrayWithInts:(jint[]){ self->elementOffsetX_, self->elementOffsetY_ } count:2]];
  self->elementOffsetX_ = offsetX;
  self->elementOffsetY_ = offsetY;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineJRAbstractExporter)

@implementation OrgOssPdfreporterEngineJRAbstractExporter_BaseExporterContext

- (id<OrgOssPdfreporterEngineJRExporter>)getExporter {
  return this$0_;
}

- (id<OrgOssPdfreporterEngineJasperReportsContext>)getJasperReportsContext {
  return this$0_->jasperReportsContext_;
}

- (OrgOssPdfreporterEngineJasperPrint *)getExportedReport {
  return this$0_->jasperPrint_;
}

- (id<JavaUtilMap>)getExportParameters {
  return this$0_->parameters_;
}

- (jint)getOffsetX {
  return [this$0_ getOffsetX];
}

- (jint)getOffsetY {
  return [this$0_ getOffsetY];
}

- (instancetype)initWithOrgOssPdfreporterEngineJRAbstractExporter:(OrgOssPdfreporterEngineJRAbstractExporter *)outer$ {
  OrgOssPdfreporterEngineJRAbstractExporter_BaseExporterContext_initWithOrgOssPdfreporterEngineJRAbstractExporter_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getExporter", NULL, "Lorg.oss.pdfreporter.engine.JRExporter;", 0x1, NULL, NULL },
    { "getJasperReportsContext", NULL, "Lorg.oss.pdfreporter.engine.JasperReportsContext;", 0x1, NULL, NULL },
    { "getExportedReport", NULL, "Lorg.oss.pdfreporter.engine.JasperPrint;", 0x1, NULL, NULL },
    { "getExportParameters", NULL, "Ljava.util.Map;", 0x1, NULL, "()Ljava/util/Map<Lorg/oss/pdfreporter/engine/JRExporterParameter;Ljava/lang/Object;>;" },
    { "getOffsetX", NULL, "I", 0x1, NULL, NULL },
    { "getOffsetY", NULL, "I", 0x1, NULL, NULL },
    { "initWithOrgOssPdfreporterEngineJRAbstractExporter:", "BaseExporterContext", NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.oss.pdfreporter.engine.JRAbstractExporter;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineJRAbstractExporter_BaseExporterContext = { 2, "BaseExporterContext", "org.oss.pdfreporter.engine", "JRAbstractExporter", 0x401, 7, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineJRAbstractExporter_BaseExporterContext;
}

@end

void OrgOssPdfreporterEngineJRAbstractExporter_BaseExporterContext_initWithOrgOssPdfreporterEngineJRAbstractExporter_(OrgOssPdfreporterEngineJRAbstractExporter_BaseExporterContext *self, OrgOssPdfreporterEngineJRAbstractExporter *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineJRAbstractExporter_BaseExporterContext)

@implementation OrgOssPdfreporterEngineJRAbstractExporter_ParameterResolver

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getStringParameterWithOrgOssPdfreporterEngineJRExporterParameter:withNSString:", "getStringParameter", "Ljava.lang.String;", 0x401, NULL, NULL },
    { "getStringArrayParameterWithOrgOssPdfreporterEngineJRExporterParameter:withNSString:", "getStringArrayParameter", "[Ljava.lang.String;", 0x401, NULL, NULL },
    { "getStringParameterOrDefaultWithOrgOssPdfreporterEngineJRExporterParameter:withNSString:", "getStringParameterOrDefault", "Ljava.lang.String;", 0x401, NULL, NULL },
    { "getBooleanParameterWithOrgOssPdfreporterEngineJRExporterParameter:withNSString:withBoolean:", "getBooleanParameter", "Z", 0x401, NULL, NULL },
    { "getIntegerParameterWithOrgOssPdfreporterEngineJRExporterParameter:withNSString:withInt:", "getIntegerParameter", "I", 0x401, NULL, NULL },
    { "getFloatParameterWithOrgOssPdfreporterEngineJRExporterParameter:withNSString:withFloat:", "getFloatParameter", "F", 0x401, NULL, NULL },
    { "getCharacterParameterWithOrgOssPdfreporterEngineJRExporterParameter:withNSString:", "getCharacterParameter", "Ljava.lang.Character;", 0x401, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineJRAbstractExporter_ParameterResolver = { 2, "ParameterResolver", "org.oss.pdfreporter.engine", "JRAbstractExporter", 0x60c, 7, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineJRAbstractExporter_ParameterResolver;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineJRAbstractExporter_ParameterResolver)

@implementation OrgOssPdfreporterEngineJRAbstractExporter_ParameterOverrideResolver

- (NSString *)getStringParameterWithOrgOssPdfreporterEngineJRExporterParameter:(OrgOssPdfreporterEngineJRExporterParameter *)parameter
                                                                  withNSString:(NSString *)property {
  if ([((id<JavaUtilMap>) nil_chk(this$0_->parameters_)) containsKeyWithId:parameter]) {
    return (NSString *) cast_chk([((id<JavaUtilMap>) nil_chk(this$0_->parameters_)) getWithId:parameter], [NSString class]);
  }
  else {
    return [((OrgOssPdfreporterEngineJRPropertiesUtil *) nil_chk([this$0_ getPropertiesUtil])) getPropertyWithOrgOssPdfreporterEngineJRPropertiesMap:[((OrgOssPdfreporterEngineJasperPrint *) nil_chk(this$0_->jasperPrint_)) getPropertiesMap] withNSString:property];
  }
}

- (IOSObjectArray *)getStringArrayParameterWithOrgOssPdfreporterEngineJRExporterParameter:(OrgOssPdfreporterEngineJRExporterParameter *)parameter
                                                                             withNSString:(NSString *)propertyPrefix {
  IOSObjectArray *values = nil;
  if ([((id<JavaUtilMap>) nil_chk(this$0_->parameters_)) containsKeyWithId:parameter]) {
    values = (IOSObjectArray *) cast_check([((id<JavaUtilMap>) nil_chk(this$0_->parameters_)) getWithId:parameter], IOSClass_arrayType(NSString_class_(), 1));
  }
  else {
    id<JavaUtilList> properties = OrgOssPdfreporterEngineJRPropertiesUtil_getPropertiesWithOrgOssPdfreporterEngineJRPropertiesMap_withNSString_([((OrgOssPdfreporterEngineJasperPrint *) nil_chk(this$0_->jasperPrint_)) getPropertiesMap], propertyPrefix);
    if (properties != nil) {
      values = [IOSObjectArray newArrayWithLength:[properties size] type:NSString_class_()];
      for (jint i = 0; i < values->size_; i++) {
        (void) IOSObjectArray_Set(values, i, [((OrgOssPdfreporterEngineJRPropertiesUtil_PropertySuffix *) nil_chk([properties getWithInt:i])) getValue]);
      }
    }
  }
  return values;
}

- (NSString *)getStringParameterOrDefaultWithOrgOssPdfreporterEngineJRExporterParameter:(OrgOssPdfreporterEngineJRExporterParameter *)parameter
                                                                           withNSString:(NSString *)property {
  if ([((id<JavaUtilMap>) nil_chk(this$0_->parameters_)) containsKeyWithId:parameter]) {
    NSString *value = (NSString *) cast_chk([((id<JavaUtilMap>) nil_chk(this$0_->parameters_)) getWithId:parameter], [NSString class]);
    if (value == nil) {
      return [((OrgOssPdfreporterEngineJRPropertiesUtil *) nil_chk([this$0_ getPropertiesUtil])) getPropertyWithNSString:property];
    }
    else {
      return value;
    }
  }
  else {
    return [((OrgOssPdfreporterEngineJRPropertiesUtil *) nil_chk([this$0_ getPropertiesUtil])) getPropertyWithOrgOssPdfreporterEngineJRPropertiesMap:[((OrgOssPdfreporterEngineJasperPrint *) nil_chk(this$0_->jasperPrint_)) getPropertiesMap] withNSString:property];
  }
}

- (jboolean)getBooleanParameterWithOrgOssPdfreporterEngineJRExporterParameter:(OrgOssPdfreporterEngineJRExporterParameter *)parameter
                                                                 withNSString:(NSString *)property
                                                                  withBoolean:(jboolean)defaultValue {
  if ([((id<JavaUtilMap>) nil_chk(this$0_->parameters_)) containsKeyWithId:parameter]) {
    JavaLangBoolean *booleanValue = (JavaLangBoolean *) cast_chk([((id<JavaUtilMap>) nil_chk(this$0_->parameters_)) getWithId:parameter], [JavaLangBoolean class]);
    if (booleanValue == nil) {
      return [((OrgOssPdfreporterEngineJRPropertiesUtil *) nil_chk([this$0_ getPropertiesUtil])) getBooleanPropertyWithNSString:property];
    }
    else {
      return [booleanValue booleanValue];
    }
  }
  else {
    return [((OrgOssPdfreporterEngineJRPropertiesUtil *) nil_chk([this$0_ getPropertiesUtil])) getBooleanPropertyWithOrgOssPdfreporterEngineJRPropertiesMap:[((OrgOssPdfreporterEngineJasperPrint *) nil_chk(this$0_->jasperPrint_)) getPropertiesMap] withNSString:property withBoolean:defaultValue];
  }
}

- (jint)getIntegerParameterWithOrgOssPdfreporterEngineJRExporterParameter:(OrgOssPdfreporterEngineJRExporterParameter *)parameter
                                                             withNSString:(NSString *)property
                                                                  withInt:(jint)defaultValue {
  if ([((id<JavaUtilMap>) nil_chk(this$0_->parameters_)) containsKeyWithId:parameter]) {
    JavaLangInteger *integerValue = (JavaLangInteger *) cast_chk([((id<JavaUtilMap>) nil_chk(this$0_->parameters_)) getWithId:parameter], [JavaLangInteger class]);
    if (integerValue == nil) {
      return [((OrgOssPdfreporterEngineJRPropertiesUtil *) nil_chk([this$0_ getPropertiesUtil])) getIntegerPropertyWithNSString:property];
    }
    else {
      return [integerValue intValue];
    }
  }
  else {
    return [((OrgOssPdfreporterEngineJRPropertiesUtil *) nil_chk([this$0_ getPropertiesUtil])) getIntegerPropertyWithOrgOssPdfreporterEngineJRPropertiesMap:[((OrgOssPdfreporterEngineJasperPrint *) nil_chk(this$0_->jasperPrint_)) getPropertiesMap] withNSString:property withInt:defaultValue];
  }
}

- (jfloat)getFloatParameterWithOrgOssPdfreporterEngineJRExporterParameter:(OrgOssPdfreporterEngineJRExporterParameter *)parameter
                                                             withNSString:(NSString *)property
                                                                withFloat:(jfloat)defaultValue {
  if ([((id<JavaUtilMap>) nil_chk(this$0_->parameters_)) containsKeyWithId:parameter]) {
    JavaLangFloat *floatValue = (JavaLangFloat *) cast_chk([((id<JavaUtilMap>) nil_chk(this$0_->parameters_)) getWithId:parameter], [JavaLangFloat class]);
    if (floatValue == nil) {
      return [((OrgOssPdfreporterEngineJRPropertiesUtil *) nil_chk([this$0_ getPropertiesUtil])) getFloatPropertyWithNSString:property];
    }
    else {
      return [floatValue floatValue];
    }
  }
  else {
    return [((OrgOssPdfreporterEngineJRPropertiesUtil *) nil_chk([this$0_ getPropertiesUtil])) getFloatPropertyWithOrgOssPdfreporterEngineJRPropertiesMap:[((OrgOssPdfreporterEngineJasperPrint *) nil_chk(this$0_->jasperPrint_)) getPropertiesMap] withNSString:property withFloat:defaultValue];
  }
}

- (JavaLangCharacter *)getCharacterParameterWithOrgOssPdfreporterEngineJRExporterParameter:(OrgOssPdfreporterEngineJRExporterParameter *)parameter
                                                                              withNSString:(NSString *)property {
  if ([((id<JavaUtilMap>) nil_chk(this$0_->parameters_)) containsKeyWithId:parameter]) {
    return (JavaLangCharacter *) cast_chk([((id<JavaUtilMap>) nil_chk(this$0_->parameters_)) getWithId:parameter], [JavaLangCharacter class]);
  }
  else {
    return [((OrgOssPdfreporterEngineJRPropertiesUtil *) nil_chk([this$0_ getPropertiesUtil])) getCharacterPropertyWithOrgOssPdfreporterEngineJRPropertiesMap:[((OrgOssPdfreporterEngineJasperPrint *) nil_chk(this$0_->jasperPrint_)) getPropertiesMap] withNSString:property];
  }
}

- (instancetype)initWithOrgOssPdfreporterEngineJRAbstractExporter:(OrgOssPdfreporterEngineJRAbstractExporter *)outer$ {
  OrgOssPdfreporterEngineJRAbstractExporter_ParameterOverrideResolver_initWithOrgOssPdfreporterEngineJRAbstractExporter_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getStringParameterWithOrgOssPdfreporterEngineJRExporterParameter:withNSString:", "getStringParameter", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getStringArrayParameterWithOrgOssPdfreporterEngineJRExporterParameter:withNSString:", "getStringArrayParameter", "[Ljava.lang.String;", 0x1, NULL, NULL },
    { "getStringParameterOrDefaultWithOrgOssPdfreporterEngineJRExporterParameter:withNSString:", "getStringParameterOrDefault", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getBooleanParameterWithOrgOssPdfreporterEngineJRExporterParameter:withNSString:withBoolean:", "getBooleanParameter", "Z", 0x1, NULL, NULL },
    { "getIntegerParameterWithOrgOssPdfreporterEngineJRExporterParameter:withNSString:withInt:", "getIntegerParameter", "I", 0x1, NULL, NULL },
    { "getFloatParameterWithOrgOssPdfreporterEngineJRExporterParameter:withNSString:withFloat:", "getFloatParameter", "F", 0x1, NULL, NULL },
    { "getCharacterParameterWithOrgOssPdfreporterEngineJRExporterParameter:withNSString:", "getCharacterParameter", "Ljava.lang.Character;", 0x1, NULL, NULL },
    { "initWithOrgOssPdfreporterEngineJRAbstractExporter:", "ParameterOverrideResolver", NULL, 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.oss.pdfreporter.engine.JRAbstractExporter;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineJRAbstractExporter_ParameterOverrideResolver = { 2, "ParameterOverrideResolver", "org.oss.pdfreporter.engine", "JRAbstractExporter", 0x4, 8, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineJRAbstractExporter_ParameterOverrideResolver;
}

@end

void OrgOssPdfreporterEngineJRAbstractExporter_ParameterOverrideResolver_initWithOrgOssPdfreporterEngineJRAbstractExporter_(OrgOssPdfreporterEngineJRAbstractExporter_ParameterOverrideResolver *self, OrgOssPdfreporterEngineJRAbstractExporter *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

OrgOssPdfreporterEngineJRAbstractExporter_ParameterOverrideResolver *new_OrgOssPdfreporterEngineJRAbstractExporter_ParameterOverrideResolver_initWithOrgOssPdfreporterEngineJRAbstractExporter_(OrgOssPdfreporterEngineJRAbstractExporter *outer$) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineJRAbstractExporter_ParameterOverrideResolver, initWithOrgOssPdfreporterEngineJRAbstractExporter_, outer$)
}

OrgOssPdfreporterEngineJRAbstractExporter_ParameterOverrideResolver *create_OrgOssPdfreporterEngineJRAbstractExporter_ParameterOverrideResolver_initWithOrgOssPdfreporterEngineJRAbstractExporter_(OrgOssPdfreporterEngineJRAbstractExporter *outer$) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineJRAbstractExporter_ParameterOverrideResolver, initWithOrgOssPdfreporterEngineJRAbstractExporter_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineJRAbstractExporter_ParameterOverrideResolver)

@implementation OrgOssPdfreporterEngineJRAbstractExporter_ParameterOverriddenResolver

- (NSString *)getStringParameterWithOrgOssPdfreporterEngineJRExporterParameter:(OrgOssPdfreporterEngineJRExporterParameter *)parameter
                                                                  withNSString:(NSString *)property {
  NSString *value;
  OrgOssPdfreporterEngineJRPropertiesMap *hintsMap = [((OrgOssPdfreporterEngineJasperPrint *) nil_chk(this$0_->jasperPrint_)) getPropertiesMap];
  if (hintsMap != nil && [hintsMap containsPropertyWithNSString:property]) {
    value = [hintsMap getPropertyWithNSString:property];
  }
  else {
    value = (NSString *) cast_chk([((id<JavaUtilMap>) nil_chk(this$0_->parameters_)) getWithId:parameter], [NSString class]);
    if (value == nil) {
      value = [((OrgOssPdfreporterEngineJRPropertiesUtil *) nil_chk([this$0_ getPropertiesUtil])) getPropertyWithNSString:property];
    }
  }
  return value;
}

- (IOSObjectArray *)getStringArrayParameterWithOrgOssPdfreporterEngineJRExporterParameter:(OrgOssPdfreporterEngineJRExporterParameter *)parameter
                                                                             withNSString:(NSString *)propertyPrefix {
  IOSObjectArray *values = nil;
  OrgOssPdfreporterEngineJRPropertiesMap *hintsMap = [((OrgOssPdfreporterEngineJasperPrint *) nil_chk(this$0_->jasperPrint_)) getPropertiesMap];
  if (hintsMap != nil) {
    id<JavaUtilList> properties = OrgOssPdfreporterEngineJRPropertiesUtil_getPropertiesWithOrgOssPdfreporterEngineJRPropertiesMap_withNSString_(hintsMap, propertyPrefix);
    if (properties != nil) {
      values = [IOSObjectArray newArrayWithLength:[properties size] type:NSString_class_()];
      for (jint i = 0; i < values->size_; i++) {
        (void) IOSObjectArray_Set(values, i, [((OrgOssPdfreporterEngineJRPropertiesUtil_PropertySuffix *) nil_chk([properties getWithInt:i])) getValue]);
      }
    }
  }
  else {
    values = (IOSObjectArray *) cast_check([((id<JavaUtilMap>) nil_chk(this$0_->parameters_)) getWithId:parameter], IOSClass_arrayType(NSString_class_(), 1));
  }
  return values;
}

- (NSString *)getStringParameterOrDefaultWithOrgOssPdfreporterEngineJRExporterParameter:(OrgOssPdfreporterEngineJRExporterParameter *)parameter
                                                                           withNSString:(NSString *)property {
  NSString *value;
  OrgOssPdfreporterEngineJRPropertiesMap *hintsMap = [((OrgOssPdfreporterEngineJasperPrint *) nil_chk(this$0_->jasperPrint_)) getPropertiesMap];
  if (hintsMap != nil && [hintsMap containsPropertyWithNSString:property]) {
    value = [hintsMap getPropertyWithNSString:property];
  }
  else {
    value = (NSString *) cast_chk([((id<JavaUtilMap>) nil_chk(this$0_->parameters_)) getWithId:parameter], [NSString class]);
  }
  if (value == nil) {
    value = [((OrgOssPdfreporterEngineJRPropertiesUtil *) nil_chk([this$0_ getPropertiesUtil])) getPropertyWithNSString:property];
  }
  return value;
}

- (jboolean)getBooleanParameterWithOrgOssPdfreporterEngineJRExporterParameter:(OrgOssPdfreporterEngineJRExporterParameter *)parameter
                                                                 withNSString:(NSString *)property
                                                                  withBoolean:(jboolean)defaultValue {
  jboolean value;
  OrgOssPdfreporterEngineJRPropertiesMap *hintsMap = [((OrgOssPdfreporterEngineJasperPrint *) nil_chk(this$0_->jasperPrint_)) getPropertiesMap];
  if (hintsMap != nil && [hintsMap containsPropertyWithNSString:property]) {
    NSString *prop = [hintsMap getPropertyWithNSString:property];
    if (prop == nil) {
      value = [((OrgOssPdfreporterEngineJRPropertiesUtil *) nil_chk([this$0_ getPropertiesUtil])) getBooleanPropertyWithNSString:property];
    }
    else {
      value = OrgOssPdfreporterEngineJRPropertiesUtil_asBooleanWithNSString_(prop);
    }
  }
  else {
    JavaLangBoolean *param = (JavaLangBoolean *) cast_chk([((id<JavaUtilMap>) nil_chk(this$0_->parameters_)) getWithId:parameter], [JavaLangBoolean class]);
    if (param == nil) {
      value = [((OrgOssPdfreporterEngineJRPropertiesUtil *) nil_chk([this$0_ getPropertiesUtil])) getBooleanPropertyWithNSString:property];
    }
    else {
      value = [param booleanValue];
    }
  }
  return value;
}

- (jint)getIntegerParameterWithOrgOssPdfreporterEngineJRExporterParameter:(OrgOssPdfreporterEngineJRExporterParameter *)parameter
                                                             withNSString:(NSString *)property
                                                                  withInt:(jint)defaultValue {
  jint value;
  OrgOssPdfreporterEngineJRPropertiesMap *hintsMap = [((OrgOssPdfreporterEngineJasperPrint *) nil_chk(this$0_->jasperPrint_)) getPropertiesMap];
  if (hintsMap != nil && [hintsMap containsPropertyWithNSString:property]) {
    NSString *prop = [hintsMap getPropertyWithNSString:property];
    if (prop == nil) {
      value = [((OrgOssPdfreporterEngineJRPropertiesUtil *) nil_chk([this$0_ getPropertiesUtil])) getIntegerPropertyWithNSString:property];
    }
    else {
      value = OrgOssPdfreporterEngineJRPropertiesUtil_asIntegerWithNSString_(prop);
    }
  }
  else {
    JavaLangInteger *param = (JavaLangInteger *) cast_chk([((id<JavaUtilMap>) nil_chk(this$0_->parameters_)) getWithId:parameter], [JavaLangInteger class]);
    if (param == nil) {
      value = [((OrgOssPdfreporterEngineJRPropertiesUtil *) nil_chk([this$0_ getPropertiesUtil])) getIntegerPropertyWithNSString:property];
    }
    else {
      value = [param intValue];
    }
  }
  return value;
}

- (jfloat)getFloatParameterWithOrgOssPdfreporterEngineJRExporterParameter:(OrgOssPdfreporterEngineJRExporterParameter *)parameter
                                                             withNSString:(NSString *)property
                                                                withFloat:(jfloat)defaultValue {
  jfloat value;
  OrgOssPdfreporterEngineJRPropertiesMap *hintsMap = [((OrgOssPdfreporterEngineJasperPrint *) nil_chk(this$0_->jasperPrint_)) getPropertiesMap];
  if (hintsMap != nil && [hintsMap containsPropertyWithNSString:property]) {
    NSString *prop = [hintsMap getPropertyWithNSString:property];
    if (prop == nil) {
      value = [((OrgOssPdfreporterEngineJRPropertiesUtil *) nil_chk([this$0_ getPropertiesUtil])) getFloatPropertyWithNSString:property];
    }
    else {
      value = OrgOssPdfreporterEngineJRPropertiesUtil_asFloatWithNSString_(prop);
    }
  }
  else {
    JavaLangFloat *param = (JavaLangFloat *) cast_chk([((id<JavaUtilMap>) nil_chk(this$0_->parameters_)) getWithId:parameter], [JavaLangFloat class]);
    if (param == nil) {
      value = [((OrgOssPdfreporterEngineJRPropertiesUtil *) nil_chk([this$0_ getPropertiesUtil])) getFloatPropertyWithNSString:property];
    }
    else {
      value = [param floatValue];
    }
  }
  return value;
}

- (JavaLangCharacter *)getCharacterParameterWithOrgOssPdfreporterEngineJRExporterParameter:(OrgOssPdfreporterEngineJRExporterParameter *)parameter
                                                                              withNSString:(NSString *)property {
  JavaLangCharacter *value;
  OrgOssPdfreporterEngineJRPropertiesMap *hintsMap = [((OrgOssPdfreporterEngineJasperPrint *) nil_chk(this$0_->jasperPrint_)) getPropertiesMap];
  if (hintsMap != nil && [hintsMap containsPropertyWithNSString:property]) {
    NSString *prop = [hintsMap getPropertyWithNSString:property];
    value = OrgOssPdfreporterEngineJRPropertiesUtil_asCharacterWithNSString_(prop);
  }
  else {
    value = (JavaLangCharacter *) cast_chk([((id<JavaUtilMap>) nil_chk(this$0_->parameters_)) getWithId:parameter], [JavaLangCharacter class]);
    if (value == nil) {
      value = [((OrgOssPdfreporterEngineJRPropertiesUtil *) nil_chk([this$0_ getPropertiesUtil])) getCharacterPropertyWithNSString:property];
    }
  }
  return value;
}

- (instancetype)initWithOrgOssPdfreporterEngineJRAbstractExporter:(OrgOssPdfreporterEngineJRAbstractExporter *)outer$ {
  OrgOssPdfreporterEngineJRAbstractExporter_ParameterOverriddenResolver_initWithOrgOssPdfreporterEngineJRAbstractExporter_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getStringParameterWithOrgOssPdfreporterEngineJRExporterParameter:withNSString:", "getStringParameter", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getStringArrayParameterWithOrgOssPdfreporterEngineJRExporterParameter:withNSString:", "getStringArrayParameter", "[Ljava.lang.String;", 0x1, NULL, NULL },
    { "getStringParameterOrDefaultWithOrgOssPdfreporterEngineJRExporterParameter:withNSString:", "getStringParameterOrDefault", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getBooleanParameterWithOrgOssPdfreporterEngineJRExporterParameter:withNSString:withBoolean:", "getBooleanParameter", "Z", 0x1, NULL, NULL },
    { "getIntegerParameterWithOrgOssPdfreporterEngineJRExporterParameter:withNSString:withInt:", "getIntegerParameter", "I", 0x1, NULL, NULL },
    { "getFloatParameterWithOrgOssPdfreporterEngineJRExporterParameter:withNSString:withFloat:", "getFloatParameter", "F", 0x1, NULL, NULL },
    { "getCharacterParameterWithOrgOssPdfreporterEngineJRExporterParameter:withNSString:", "getCharacterParameter", "Ljava.lang.Character;", 0x1, NULL, NULL },
    { "initWithOrgOssPdfreporterEngineJRAbstractExporter:", "ParameterOverriddenResolver", NULL, 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.oss.pdfreporter.engine.JRAbstractExporter;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineJRAbstractExporter_ParameterOverriddenResolver = { 2, "ParameterOverriddenResolver", "org.oss.pdfreporter.engine", "JRAbstractExporter", 0x4, 8, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineJRAbstractExporter_ParameterOverriddenResolver;
}

@end

void OrgOssPdfreporterEngineJRAbstractExporter_ParameterOverriddenResolver_initWithOrgOssPdfreporterEngineJRAbstractExporter_(OrgOssPdfreporterEngineJRAbstractExporter_ParameterOverriddenResolver *self, OrgOssPdfreporterEngineJRAbstractExporter *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

OrgOssPdfreporterEngineJRAbstractExporter_ParameterOverriddenResolver *new_OrgOssPdfreporterEngineJRAbstractExporter_ParameterOverriddenResolver_initWithOrgOssPdfreporterEngineJRAbstractExporter_(OrgOssPdfreporterEngineJRAbstractExporter *outer$) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineJRAbstractExporter_ParameterOverriddenResolver, initWithOrgOssPdfreporterEngineJRAbstractExporter_, outer$)
}

OrgOssPdfreporterEngineJRAbstractExporter_ParameterOverriddenResolver *create_OrgOssPdfreporterEngineJRAbstractExporter_ParameterOverriddenResolver_initWithOrgOssPdfreporterEngineJRAbstractExporter_(OrgOssPdfreporterEngineJRAbstractExporter *outer$) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineJRAbstractExporter_ParameterOverriddenResolver, initWithOrgOssPdfreporterEngineJRAbstractExporter_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineJRAbstractExporter_ParameterOverriddenResolver)

@implementation OrgOssPdfreporterEngineJRAbstractExporter_$1

- (NSString *)getExportPropertiesPrefix {
  return val$exportPropertyPrefix_;
}

- (instancetype)initWithOrgOssPdfreporterEngineJRAbstractExporter:(OrgOssPdfreporterEngineJRAbstractExporter *)outer$
                                                     withNSString:(NSString *)capture$0 {
  OrgOssPdfreporterEngineJRAbstractExporter_$1_initWithOrgOssPdfreporterEngineJRAbstractExporter_withNSString_(self, outer$, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getExportPropertiesPrefix", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "initWithOrgOssPdfreporterEngineJRAbstractExporter:withNSString:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$exportPropertyPrefix_", NULL, 0x1012, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "OrgOssPdfreporterEngineJRAbstractExporter", "createFilterWithNSString:" };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineJRAbstractExporter_$1 = { 2, "", "org.oss.pdfreporter.engine", "JRAbstractExporter", 0x8008, 2, methods, 1, fields, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_OrgOssPdfreporterEngineJRAbstractExporter_$1;
}

@end

void OrgOssPdfreporterEngineJRAbstractExporter_$1_initWithOrgOssPdfreporterEngineJRAbstractExporter_withNSString_(OrgOssPdfreporterEngineJRAbstractExporter_$1 *self, OrgOssPdfreporterEngineJRAbstractExporter *outer$, NSString *capture$0) {
  self->val$exportPropertyPrefix_ = capture$0;
  OrgOssPdfreporterEngineJRAbstractExporter_BaseExporterContext_initWithOrgOssPdfreporterEngineJRAbstractExporter_(self, outer$);
}

OrgOssPdfreporterEngineJRAbstractExporter_$1 *new_OrgOssPdfreporterEngineJRAbstractExporter_$1_initWithOrgOssPdfreporterEngineJRAbstractExporter_withNSString_(OrgOssPdfreporterEngineJRAbstractExporter *outer$, NSString *capture$0) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineJRAbstractExporter_$1, initWithOrgOssPdfreporterEngineJRAbstractExporter_withNSString_, outer$, capture$0)
}

OrgOssPdfreporterEngineJRAbstractExporter_$1 *create_OrgOssPdfreporterEngineJRAbstractExporter_$1_initWithOrgOssPdfreporterEngineJRAbstractExporter_withNSString_(OrgOssPdfreporterEngineJRAbstractExporter *outer$, NSString *capture$0) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineJRAbstractExporter_$1, initWithOrgOssPdfreporterEngineJRAbstractExporter_withNSString_, outer$, capture$0)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineJRAbstractExporter_$1)
