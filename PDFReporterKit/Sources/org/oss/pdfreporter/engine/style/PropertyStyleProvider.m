//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/style/PropertyStyleProvider.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Boolean.h"
#include "java/lang/Float.h"
#include "java/lang/Integer.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "org/oss/pdfreporter/engine/JRElement.h"
#include "org/oss/pdfreporter/engine/JREvaluation.h"
#include "org/oss/pdfreporter/engine/JRExpression.h"
#include "org/oss/pdfreporter/engine/JRExpressionChunk.h"
#include "org/oss/pdfreporter/engine/JRLineBox.h"
#include "org/oss/pdfreporter/engine/JRParagraph.h"
#include "org/oss/pdfreporter/engine/JRPen.h"
#include "org/oss/pdfreporter/engine/JRPropertiesMap.h"
#include "org/oss/pdfreporter/engine/JRPropertyExpression.h"
#include "org/oss/pdfreporter/engine/JRStyle.h"
#include "org/oss/pdfreporter/engine/base/JRBaseStyle.h"
#include "org/oss/pdfreporter/engine/base/JRBoxPen.h"
#include "org/oss/pdfreporter/engine/style/PropertyStyleProvider.h"
#include "org/oss/pdfreporter/engine/style/StyleProviderContext.h"
#include "org/oss/pdfreporter/engine/type/EvaluationTimeEnum.h"
#include "org/oss/pdfreporter/engine/type/FillEnum.h"
#include "org/oss/pdfreporter/engine/type/HorizontalAlignEnum.h"
#include "org/oss/pdfreporter/engine/type/LineSpacingEnum.h"
#include "org/oss/pdfreporter/engine/type/LineStyleEnum.h"
#include "org/oss/pdfreporter/engine/type/ModeEnum.h"
#include "org/oss/pdfreporter/engine/type/RotationEnum.h"
#include "org/oss/pdfreporter/engine/type/ScaleImageEnum.h"
#include "org/oss/pdfreporter/engine/type/VerticalAlignEnum.h"
#include "org/oss/pdfreporter/engine/util/JRColorUtil.h"
#include "org/oss/pdfreporter/geometry/IColor.h"

@interface OrgOssPdfreporterEngineStylePropertyStyleProvider () {
 @public
  id<OrgOssPdfreporterEngineStyleStyleProviderContext> context_;
  id<JavaUtilMap> stylePropertyExpressions_;
  IOSObjectArray *fields_;
  IOSObjectArray *variables_;
  jboolean lateEvaluated_;
}

- (NSString *)getPropertyValueWithNSString:(NSString *)propertyName
                                  withByte:(jbyte)evaluation;

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineStylePropertyStyleProvider, context_, id<OrgOssPdfreporterEngineStyleStyleProviderContext>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineStylePropertyStyleProvider, stylePropertyExpressions_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineStylePropertyStyleProvider, fields_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineStylePropertyStyleProvider, variables_, IOSObjectArray *)

__attribute__((unused)) static NSString *OrgOssPdfreporterEngineStylePropertyStyleProvider_getPropertyValueWithNSString_withByte_(OrgOssPdfreporterEngineStylePropertyStyleProvider *self, NSString *propertyName, jbyte evaluation);

NSString *OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_PREFIX = @"net.sf.jasperreports.style.";
NSString *OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_PEN_PREFIX = @"net.sf.jasperreports.style.pen.";
NSString *OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_PREFIX = @"net.sf.jasperreports.style.box.";
NSString *OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_PEN_PREFIX = @"net.sf.jasperreports.style.box.pen.";
NSString *OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_LEFT_PEN_PREFIX = @"net.sf.jasperreports.style.box.left.pen.";
NSString *OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_TOP_PEN_PREFIX = @"net.sf.jasperreports.style.box.top.pen.";
NSString *OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_RIGHT_PEN_PREFIX = @"net.sf.jasperreports.style.box.right.pen.";
NSString *OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_BOTTOM_PEN_PREFIX = @"net.sf.jasperreports.style.box.bottom.pen.";
NSString *OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_PARAGRAPH_PREFIX = @"net.sf.jasperreports.style.paragraph.";
NSString *OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_MODE = @"net.sf.jasperreports.style.mode";
NSString *OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BACKCOLOR = @"net.sf.jasperreports.style.backcolor";
NSString *OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_FORECOLOR = @"net.sf.jasperreports.style.forecolor";
NSString *OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_FILL = @"net.sf.jasperreports.style.fill";
NSString *OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_RADIUS = @"net.sf.jasperreports.style.radius";
NSString *OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_SCALE_IMAGE = @"net.sf.jasperreports.style.scaleImage";
NSString *OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_HALIGN = @"net.sf.jasperreports.style.hAlign";
NSString *OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_VALIGN = @"net.sf.jasperreports.style.vAlign";
NSString *OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_ROTATION = @"net.sf.jasperreports.style.rotation";
NSString *OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_MARKUP = @"net.sf.jasperreports.style.markup";
NSString *OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_PATTERN = @"net.sf.jasperreports.style.pattern";
NSString *OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BLANK_WHEN_NULL = @"net.sf.jasperreports.style.isBlankWhenNull";
NSString *OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_FONT_NAME = @"net.sf.jasperreports.style.fontName";
NSString *OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_FONT_SIZE = @"net.sf.jasperreports.style.fontSize";
NSString *OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_FONT_BOLD = @"net.sf.jasperreports.style.isBold";
NSString *OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_FONT_ITALIC = @"net.sf.jasperreports.style.isItalic";
NSString *OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_FONT_UNDERLINE = @"net.sf.jasperreports.style.isUnderline";
NSString *OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_FONT_STRIKETHROUGH = @"net.sf.jasperreports.style.isStrikeThrough";
NSString *OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_PDF_FONT_NAME = @"net.sf.jasperreports.style.pdfFontName";
NSString *OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_PDF_ENCODING = @"net.sf.jasperreports.style.pdfEncoding";
NSString *OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_PDF_EMBEDDED = @"net.sf.jasperreports.style.isPdfEmbedded";
NSString *OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_PEN_LINE_WIDTH = @"net.sf.jasperreports.style.pen.lineWidth";
NSString *OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_PEN_LINE_STYLE = @"net.sf.jasperreports.style.pen.lineStyle";
NSString *OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_PEN_LINE_COLOR = @"net.sf.jasperreports.style.pen.lineColor";
NSString *OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_PADDING = @"net.sf.jasperreports.style.box.padding";
NSString *OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_TOP_PADDING = @"net.sf.jasperreports.style.box.topPadding";
NSString *OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_LEFT_PADDING = @"net.sf.jasperreports.style.box.leftPadding";
NSString *OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_RIGHT_PADDING = @"net.sf.jasperreports.style.box.rightPadding";
NSString *OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_BOTTOM_PADDING = @"net.sf.jasperreports.style.box.bottomPadding";
NSString *OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_PEN_LINE_WIDTH = @"net.sf.jasperreports.style.box.pen.lineWidth";
NSString *OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_PEN_LINE_STYLE = @"net.sf.jasperreports.style.box.pen.lineStyle";
NSString *OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_PEN_LINE_COLOR = @"net.sf.jasperreports.style.box.pen.lineColor";
NSString *OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_LEFT_PEN_LINE_WIDTH = @"net.sf.jasperreports.style.box.left.pen.lineWidth";
NSString *OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_LEFT_PEN_LINE_STYLE = @"net.sf.jasperreports.style.box.left.pen.lineStyle";
NSString *OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_LEFT_PEN_LINE_COLOR = @"net.sf.jasperreports.style.box.left.pen.lineColor";
NSString *OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_TOP_PEN_LINE_WIDTH = @"net.sf.jasperreports.style.box.top.pen.lineWidth";
NSString *OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_TOP_PEN_LINE_STYLE = @"net.sf.jasperreports.style.box.top.pen.lineStyle";
NSString *OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_TOP_PEN_LINE_COLOR = @"net.sf.jasperreports.style.box.top.pen.lineColor";
NSString *OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_RIGHT_PEN_LINE_WIDTH = @"net.sf.jasperreports.style.box.right.pen.lineWidth";
NSString *OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_RIGHT_PEN_LINE_STYLE = @"net.sf.jasperreports.style.box.right.pen.lineStyle";
NSString *OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_RIGHT_PEN_LINE_COLOR = @"net.sf.jasperreports.style.box.right.pen.lineColor";
NSString *OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_BOTTOM_PEN_LINE_WIDTH = @"net.sf.jasperreports.style.box.bottom.pen.lineWidth";
NSString *OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_BOTTOM_PEN_LINE_STYLE = @"net.sf.jasperreports.style.box.bottom.pen.lineStyle";
NSString *OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_BOTTOM_PEN_LINE_COLOR = @"net.sf.jasperreports.style.box.bottom.pen.lineColor";
NSString *OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_LINE_SPACING = @"net.sf.jasperreports.style.paragraph.lineSpacing";
NSString *OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_LINE_SPACING_SIZE = @"net.sf.jasperreports.style.paragraph.lineSpacingSize";
NSString *OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_FIRST_LINE_INDENT = @"net.sf.jasperreports.style.paragraph.firstLineIndent";
NSString *OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_LEFT_INDENT = @"net.sf.jasperreports.style.paragraph.leftIndent";
NSString *OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_RIGHT_INDENT = @"net.sf.jasperreports.style.paragraph.rightIndent";
NSString *OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_SPACING_BEFORE = @"net.sf.jasperreports.style.paragraph.spacingBefore";
NSString *OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_SPACING_AFTER = @"net.sf.jasperreports.style.paragraph.spacingAfter";
NSString *OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_TABSTOP_WIDTH = @"net.sf.jasperreports.style.paragraph.tabStopWidth";

@implementation OrgOssPdfreporterEngineStylePropertyStyleProvider

+ (NSString *)STYLE_PROPERTY_PREFIX {
  return OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_PREFIX;
}

+ (NSString *)STYLE_PROPERTY_PEN_PREFIX {
  return OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_PEN_PREFIX;
}

+ (NSString *)STYLE_PROPERTY_BOX_PREFIX {
  return OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_PREFIX;
}

+ (NSString *)STYLE_PROPERTY_BOX_PEN_PREFIX {
  return OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_PEN_PREFIX;
}

+ (NSString *)STYLE_PROPERTY_BOX_LEFT_PEN_PREFIX {
  return OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_LEFT_PEN_PREFIX;
}

+ (NSString *)STYLE_PROPERTY_BOX_TOP_PEN_PREFIX {
  return OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_TOP_PEN_PREFIX;
}

+ (NSString *)STYLE_PROPERTY_BOX_RIGHT_PEN_PREFIX {
  return OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_RIGHT_PEN_PREFIX;
}

+ (NSString *)STYLE_PROPERTY_BOX_BOTTOM_PEN_PREFIX {
  return OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_BOTTOM_PEN_PREFIX;
}

+ (NSString *)STYLE_PROPERTY_PARAGRAPH_PREFIX {
  return OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_PARAGRAPH_PREFIX;
}

+ (NSString *)STYLE_PROPERTY_MODE {
  return OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_MODE;
}

+ (NSString *)STYLE_PROPERTY_BACKCOLOR {
  return OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BACKCOLOR;
}

+ (NSString *)STYLE_PROPERTY_FORECOLOR {
  return OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_FORECOLOR;
}

+ (NSString *)STYLE_PROPERTY_FILL {
  return OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_FILL;
}

+ (NSString *)STYLE_PROPERTY_RADIUS {
  return OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_RADIUS;
}

+ (NSString *)STYLE_PROPERTY_SCALE_IMAGE {
  return OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_SCALE_IMAGE;
}

+ (NSString *)STYLE_PROPERTY_HALIGN {
  return OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_HALIGN;
}

+ (NSString *)STYLE_PROPERTY_VALIGN {
  return OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_VALIGN;
}

+ (NSString *)STYLE_PROPERTY_ROTATION {
  return OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_ROTATION;
}

+ (NSString *)STYLE_PROPERTY_MARKUP {
  return OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_MARKUP;
}

+ (NSString *)STYLE_PROPERTY_PATTERN {
  return OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_PATTERN;
}

+ (NSString *)STYLE_PROPERTY_BLANK_WHEN_NULL {
  return OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BLANK_WHEN_NULL;
}

+ (NSString *)STYLE_PROPERTY_FONT_NAME {
  return OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_FONT_NAME;
}

+ (NSString *)STYLE_PROPERTY_FONT_SIZE {
  return OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_FONT_SIZE;
}

+ (NSString *)STYLE_PROPERTY_FONT_BOLD {
  return OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_FONT_BOLD;
}

+ (NSString *)STYLE_PROPERTY_FONT_ITALIC {
  return OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_FONT_ITALIC;
}

+ (NSString *)STYLE_PROPERTY_FONT_UNDERLINE {
  return OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_FONT_UNDERLINE;
}

+ (NSString *)STYLE_PROPERTY_FONT_STRIKETHROUGH {
  return OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_FONT_STRIKETHROUGH;
}

+ (NSString *)STYLE_PROPERTY_PDF_FONT_NAME {
  return OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_PDF_FONT_NAME;
}

+ (NSString *)STYLE_PROPERTY_PDF_ENCODING {
  return OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_PDF_ENCODING;
}

+ (NSString *)STYLE_PROPERTY_PDF_EMBEDDED {
  return OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_PDF_EMBEDDED;
}

+ (NSString *)STYLE_PROPERTY_PEN_LINE_WIDTH {
  return OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_PEN_LINE_WIDTH;
}

+ (NSString *)STYLE_PROPERTY_PEN_LINE_STYLE {
  return OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_PEN_LINE_STYLE;
}

+ (NSString *)STYLE_PROPERTY_PEN_LINE_COLOR {
  return OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_PEN_LINE_COLOR;
}

+ (NSString *)STYLE_PROPERTY_BOX_PADDING {
  return OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_PADDING;
}

+ (NSString *)STYLE_PROPERTY_BOX_TOP_PADDING {
  return OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_TOP_PADDING;
}

+ (NSString *)STYLE_PROPERTY_BOX_LEFT_PADDING {
  return OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_LEFT_PADDING;
}

+ (NSString *)STYLE_PROPERTY_BOX_RIGHT_PADDING {
  return OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_RIGHT_PADDING;
}

+ (NSString *)STYLE_PROPERTY_BOX_BOTTOM_PADDING {
  return OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_BOTTOM_PADDING;
}

+ (NSString *)STYLE_PROPERTY_BOX_PEN_LINE_WIDTH {
  return OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_PEN_LINE_WIDTH;
}

+ (NSString *)STYLE_PROPERTY_BOX_PEN_LINE_STYLE {
  return OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_PEN_LINE_STYLE;
}

+ (NSString *)STYLE_PROPERTY_BOX_PEN_LINE_COLOR {
  return OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_PEN_LINE_COLOR;
}

+ (NSString *)STYLE_PROPERTY_BOX_LEFT_PEN_LINE_WIDTH {
  return OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_LEFT_PEN_LINE_WIDTH;
}

+ (NSString *)STYLE_PROPERTY_BOX_LEFT_PEN_LINE_STYLE {
  return OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_LEFT_PEN_LINE_STYLE;
}

+ (NSString *)STYLE_PROPERTY_BOX_LEFT_PEN_LINE_COLOR {
  return OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_LEFT_PEN_LINE_COLOR;
}

+ (NSString *)STYLE_PROPERTY_BOX_TOP_PEN_LINE_WIDTH {
  return OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_TOP_PEN_LINE_WIDTH;
}

+ (NSString *)STYLE_PROPERTY_BOX_TOP_PEN_LINE_STYLE {
  return OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_TOP_PEN_LINE_STYLE;
}

+ (NSString *)STYLE_PROPERTY_BOX_TOP_PEN_LINE_COLOR {
  return OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_TOP_PEN_LINE_COLOR;
}

+ (NSString *)STYLE_PROPERTY_BOX_RIGHT_PEN_LINE_WIDTH {
  return OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_RIGHT_PEN_LINE_WIDTH;
}

+ (NSString *)STYLE_PROPERTY_BOX_RIGHT_PEN_LINE_STYLE {
  return OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_RIGHT_PEN_LINE_STYLE;
}

+ (NSString *)STYLE_PROPERTY_BOX_RIGHT_PEN_LINE_COLOR {
  return OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_RIGHT_PEN_LINE_COLOR;
}

+ (NSString *)STYLE_PROPERTY_BOX_BOTTOM_PEN_LINE_WIDTH {
  return OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_BOTTOM_PEN_LINE_WIDTH;
}

+ (NSString *)STYLE_PROPERTY_BOX_BOTTOM_PEN_LINE_STYLE {
  return OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_BOTTOM_PEN_LINE_STYLE;
}

+ (NSString *)STYLE_PROPERTY_BOX_BOTTOM_PEN_LINE_COLOR {
  return OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_BOTTOM_PEN_LINE_COLOR;
}

+ (NSString *)STYLE_PROPERTY_LINE_SPACING {
  return OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_LINE_SPACING;
}

+ (NSString *)STYLE_PROPERTY_LINE_SPACING_SIZE {
  return OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_LINE_SPACING_SIZE;
}

+ (NSString *)STYLE_PROPERTY_FIRST_LINE_INDENT {
  return OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_FIRST_LINE_INDENT;
}

+ (NSString *)STYLE_PROPERTY_LEFT_INDENT {
  return OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_LEFT_INDENT;
}

+ (NSString *)STYLE_PROPERTY_RIGHT_INDENT {
  return OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_RIGHT_INDENT;
}

+ (NSString *)STYLE_PROPERTY_SPACING_BEFORE {
  return OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_SPACING_BEFORE;
}

+ (NSString *)STYLE_PROPERTY_SPACING_AFTER {
  return OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_SPACING_AFTER;
}

+ (NSString *)STYLE_PROPERTY_TABSTOP_WIDTH {
  return OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_TABSTOP_WIDTH;
}

- (instancetype)initWithOrgOssPdfreporterEngineStyleStyleProviderContext:(id<OrgOssPdfreporterEngineStyleStyleProviderContext>)context
                                                         withJavaUtilMap:(id<JavaUtilMap>)stylePropertyExpressions {
  OrgOssPdfreporterEngineStylePropertyStyleProvider_initWithOrgOssPdfreporterEngineStyleStyleProviderContext_withJavaUtilMap_(self, context, stylePropertyExpressions);
  return self;
}

- (id<OrgOssPdfreporterEngineJRStyle>)getStyleWithByte:(jbyte)evaluation {
  id<OrgOssPdfreporterEngineJRStyle> style = new_OrgOssPdfreporterEngineBaseJRBaseStyle_init();
  NSString *mode = OrgOssPdfreporterEngineStylePropertyStyleProvider_getPropertyValueWithNSString_withByte_(self, OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_MODE, evaluation);
  if (mode != nil) {
    [style setModeWithOrgOssPdfreporterEngineTypeModeEnum:OrgOssPdfreporterEngineTypeModeEnum_getByNameWithNSString_(mode)];
  }
  NSString *backcolor = OrgOssPdfreporterEngineStylePropertyStyleProvider_getPropertyValueWithNSString_withByte_(self, OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BACKCOLOR, evaluation);
  if (backcolor != nil) {
    [style setBackcolorWithOrgOssPdfreporterGeometryIColor:OrgOssPdfreporterEngineUtilJRColorUtil_getColorWithNSString_withOrgOssPdfreporterGeometryIColor_(backcolor, nil)];
  }
  NSString *forecolor = OrgOssPdfreporterEngineStylePropertyStyleProvider_getPropertyValueWithNSString_withByte_(self, OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_FORECOLOR, evaluation);
  if (forecolor != nil) {
    [style setForecolorWithOrgOssPdfreporterGeometryIColor:OrgOssPdfreporterEngineUtilJRColorUtil_getColorWithNSString_withOrgOssPdfreporterGeometryIColor_(forecolor, nil)];
  }
  NSString *fill = OrgOssPdfreporterEngineStylePropertyStyleProvider_getPropertyValueWithNSString_withByte_(self, OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_FILL, evaluation);
  if (fill != nil) {
    [style setFillWithOrgOssPdfreporterEngineTypeFillEnum:OrgOssPdfreporterEngineTypeFillEnum_getByNameWithNSString_(fill)];
  }
  NSString *radius = OrgOssPdfreporterEngineStylePropertyStyleProvider_getPropertyValueWithNSString_withByte_(self, OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_RADIUS, evaluation);
  if (radius != nil) {
    [style setRadiusWithJavaLangInteger:JavaLangInteger_valueOfWithNSString_(radius)];
  }
  NSString *scaleImage = OrgOssPdfreporterEngineStylePropertyStyleProvider_getPropertyValueWithNSString_withByte_(self, OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_SCALE_IMAGE, evaluation);
  if (scaleImage != nil) {
    [style setScaleImageWithOrgOssPdfreporterEngineTypeScaleImageEnum:OrgOssPdfreporterEngineTypeScaleImageEnum_getByNameWithNSString_(scaleImage)];
  }
  NSString *hAlign = OrgOssPdfreporterEngineStylePropertyStyleProvider_getPropertyValueWithNSString_withByte_(self, OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_HALIGN, evaluation);
  if (hAlign != nil) {
    [style setHorizontalAlignmentWithOrgOssPdfreporterEngineTypeHorizontalAlignEnum:OrgOssPdfreporterEngineTypeHorizontalAlignEnum_getByNameWithNSString_(hAlign)];
  }
  NSString *vAlign = OrgOssPdfreporterEngineStylePropertyStyleProvider_getPropertyValueWithNSString_withByte_(self, OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_VALIGN, evaluation);
  if (vAlign != nil) {
    [style setVerticalAlignmentWithOrgOssPdfreporterEngineTypeVerticalAlignEnum:OrgOssPdfreporterEngineTypeVerticalAlignEnum_getByNameWithNSString_(vAlign)];
  }
  NSString *rotation = OrgOssPdfreporterEngineStylePropertyStyleProvider_getPropertyValueWithNSString_withByte_(self, OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_ROTATION, evaluation);
  if (rotation != nil) {
    [style setRotationWithOrgOssPdfreporterEngineTypeRotationEnum:OrgOssPdfreporterEngineTypeRotationEnum_getByNameWithNSString_(rotation)];
  }
  NSString *markup = OrgOssPdfreporterEngineStylePropertyStyleProvider_getPropertyValueWithNSString_withByte_(self, OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_MARKUP, evaluation);
  if (markup != nil) {
    [style setMarkupWithNSString:markup];
  }
  NSString *pattern = OrgOssPdfreporterEngineStylePropertyStyleProvider_getPropertyValueWithNSString_withByte_(self, OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_PATTERN, evaluation);
  if (pattern != nil) {
    [style setPatternWithNSString:pattern];
  }
  NSString *blankWhenNull = OrgOssPdfreporterEngineStylePropertyStyleProvider_getPropertyValueWithNSString_withByte_(self, OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BLANK_WHEN_NULL, evaluation);
  if (blankWhenNull != nil) {
    [style setBlankWhenNullWithJavaLangBoolean:JavaLangBoolean_valueOfWithNSString_(blankWhenNull)];
  }
  NSString *fontName = OrgOssPdfreporterEngineStylePropertyStyleProvider_getPropertyValueWithNSString_withByte_(self, OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_FONT_NAME, evaluation);
  if (fontName != nil) {
    [style setFontNameWithNSString:fontName];
  }
  NSString *fontSize = OrgOssPdfreporterEngineStylePropertyStyleProvider_getPropertyValueWithNSString_withByte_(self, OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_FONT_SIZE, evaluation);
  if (fontSize != nil) {
    [style setFontSizeWithJavaLangInteger:JavaLangInteger_valueOfWithNSString_(fontSize)];
  }
  NSString *bold = OrgOssPdfreporterEngineStylePropertyStyleProvider_getPropertyValueWithNSString_withByte_(self, OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_FONT_BOLD, evaluation);
  if (bold != nil) {
    [style setBoldWithJavaLangBoolean:JavaLangBoolean_valueOfWithNSString_(bold)];
  }
  NSString *italic = OrgOssPdfreporterEngineStylePropertyStyleProvider_getPropertyValueWithNSString_withByte_(self, OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_FONT_ITALIC, evaluation);
  if (italic != nil) {
    [style setItalicWithJavaLangBoolean:JavaLangBoolean_valueOfWithNSString_(italic)];
  }
  NSString *underline = OrgOssPdfreporterEngineStylePropertyStyleProvider_getPropertyValueWithNSString_withByte_(self, OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_FONT_UNDERLINE, evaluation);
  if (underline != nil) {
    [style setUnderlineWithJavaLangBoolean:JavaLangBoolean_valueOfWithNSString_(underline)];
  }
  NSString *strikethrough = OrgOssPdfreporterEngineStylePropertyStyleProvider_getPropertyValueWithNSString_withByte_(self, OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_FONT_STRIKETHROUGH, evaluation);
  if (strikethrough != nil) {
    [style setStrikeThroughWithJavaLangBoolean:JavaLangBoolean_valueOfWithNSString_(strikethrough)];
  }
  NSString *pdfFontName = OrgOssPdfreporterEngineStylePropertyStyleProvider_getPropertyValueWithNSString_withByte_(self, OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_PDF_FONT_NAME, evaluation);
  if (pdfFontName != nil) {
    [style setPdfFontNameWithNSString:pdfFontName];
  }
  NSString *pdfEncoding = OrgOssPdfreporterEngineStylePropertyStyleProvider_getPropertyValueWithNSString_withByte_(self, OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_PDF_ENCODING, evaluation);
  if (pdfEncoding != nil) {
    [style setPdfEncodingWithNSString:pdfEncoding];
  }
  NSString *pdfEmbedded = OrgOssPdfreporterEngineStylePropertyStyleProvider_getPropertyValueWithNSString_withByte_(self, OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_PDF_EMBEDDED, evaluation);
  if (pdfEmbedded != nil) {
    [style setPdfEmbeddedWithJavaLangBoolean:JavaLangBoolean_valueOfWithNSString_(pdfEmbedded)];
  }
  NSString *penLineWidth = OrgOssPdfreporterEngineStylePropertyStyleProvider_getPropertyValueWithNSString_withByte_(self, OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_PEN_LINE_WIDTH, evaluation);
  if (penLineWidth != nil) {
    [((id<OrgOssPdfreporterEngineJRPen>) nil_chk([style getLinePen])) setLineWidthWithJavaLangFloat:JavaLangFloat_valueOfWithNSString_(penLineWidth)];
  }
  NSString *penLineStyle = OrgOssPdfreporterEngineStylePropertyStyleProvider_getPropertyValueWithNSString_withByte_(self, OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_PEN_LINE_STYLE, evaluation);
  if (penLineStyle != nil) {
    [((id<OrgOssPdfreporterEngineJRPen>) nil_chk([style getLinePen])) setLineStyleWithOrgOssPdfreporterEngineTypeLineStyleEnum:OrgOssPdfreporterEngineTypeLineStyleEnum_getByNameWithNSString_(penLineStyle)];
  }
  NSString *penLineColor = OrgOssPdfreporterEngineStylePropertyStyleProvider_getPropertyValueWithNSString_withByte_(self, OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_PEN_LINE_COLOR, evaluation);
  if (penLineColor != nil) {
    [((id<OrgOssPdfreporterEngineJRPen>) nil_chk([style getLinePen])) setLineColorWithOrgOssPdfreporterGeometryIColor:OrgOssPdfreporterEngineUtilJRColorUtil_getColorWithNSString_withOrgOssPdfreporterGeometryIColor_(penLineColor, nil)];
  }
  NSString *boxPadding = OrgOssPdfreporterEngineStylePropertyStyleProvider_getPropertyValueWithNSString_withByte_(self, OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_PADDING, evaluation);
  if (boxPadding != nil) {
    [((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk([style getLineBox])) setPaddingWithJavaLangInteger:JavaLangInteger_valueOfWithNSString_(boxPadding)];
  }
  NSString *boxLeftPadding = OrgOssPdfreporterEngineStylePropertyStyleProvider_getPropertyValueWithNSString_withByte_(self, OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_LEFT_PADDING, evaluation);
  if (boxLeftPadding != nil) {
    [((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk([style getLineBox])) setLeftPaddingWithJavaLangInteger:JavaLangInteger_valueOfWithNSString_(boxLeftPadding)];
  }
  NSString *boxTopPadding = OrgOssPdfreporterEngineStylePropertyStyleProvider_getPropertyValueWithNSString_withByte_(self, OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_TOP_PADDING, evaluation);
  if (boxTopPadding != nil) {
    [((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk([style getLineBox])) setTopPaddingWithJavaLangInteger:JavaLangInteger_valueOfWithNSString_(boxTopPadding)];
  }
  NSString *boxRightPadding = OrgOssPdfreporterEngineStylePropertyStyleProvider_getPropertyValueWithNSString_withByte_(self, OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_RIGHT_PADDING, evaluation);
  if (boxRightPadding != nil) {
    [((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk([style getLineBox])) setRightPaddingWithJavaLangInteger:JavaLangInteger_valueOfWithNSString_(boxRightPadding)];
  }
  NSString *boxBottomPadding = OrgOssPdfreporterEngineStylePropertyStyleProvider_getPropertyValueWithNSString_withByte_(self, OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_BOTTOM_PADDING, evaluation);
  if (boxBottomPadding != nil) {
    [((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk([style getLineBox])) setBottomPaddingWithJavaLangInteger:JavaLangInteger_valueOfWithNSString_(boxBottomPadding)];
  }
  NSString *boxPenLineWidth = OrgOssPdfreporterEngineStylePropertyStyleProvider_getPropertyValueWithNSString_withByte_(self, OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_PEN_LINE_WIDTH, evaluation);
  if (boxPenLineWidth != nil) {
    [((id<OrgOssPdfreporterEngineBaseJRBoxPen>) nil_chk([((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk([style getLineBox])) getPen])) setLineWidthWithJavaLangFloat:JavaLangFloat_valueOfWithNSString_(boxPenLineWidth)];
  }
  NSString *boxPenLineStyle = OrgOssPdfreporterEngineStylePropertyStyleProvider_getPropertyValueWithNSString_withByte_(self, OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_PEN_LINE_STYLE, evaluation);
  if (boxPenLineStyle != nil) {
    [((id<OrgOssPdfreporterEngineBaseJRBoxPen>) nil_chk([((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk([style getLineBox])) getPen])) setLineStyleWithOrgOssPdfreporterEngineTypeLineStyleEnum:OrgOssPdfreporterEngineTypeLineStyleEnum_getByNameWithNSString_(boxPenLineStyle)];
  }
  NSString *boxPenLineColor = OrgOssPdfreporterEngineStylePropertyStyleProvider_getPropertyValueWithNSString_withByte_(self, OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_PEN_LINE_COLOR, evaluation);
  if (boxPenLineColor != nil) {
    [((id<OrgOssPdfreporterEngineBaseJRBoxPen>) nil_chk([((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk([style getLineBox])) getPen])) setLineColorWithOrgOssPdfreporterGeometryIColor:OrgOssPdfreporterEngineUtilJRColorUtil_getColorWithNSString_withOrgOssPdfreporterGeometryIColor_(boxPenLineColor, nil)];
  }
  NSString *boxLeftPenLineWidth = OrgOssPdfreporterEngineStylePropertyStyleProvider_getPropertyValueWithNSString_withByte_(self, OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_LEFT_PEN_LINE_WIDTH, evaluation);
  if (boxLeftPenLineWidth != nil) {
    [((id<OrgOssPdfreporterEngineBaseJRBoxPen>) nil_chk([((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk([style getLineBox])) getLeftPen])) setLineWidthWithJavaLangFloat:JavaLangFloat_valueOfWithNSString_(boxLeftPenLineWidth)];
  }
  NSString *boxLeftPenLineStyle = OrgOssPdfreporterEngineStylePropertyStyleProvider_getPropertyValueWithNSString_withByte_(self, OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_LEFT_PEN_LINE_STYLE, evaluation);
  if (boxLeftPenLineStyle != nil) {
    [((id<OrgOssPdfreporterEngineBaseJRBoxPen>) nil_chk([((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk([style getLineBox])) getLeftPen])) setLineStyleWithOrgOssPdfreporterEngineTypeLineStyleEnum:OrgOssPdfreporterEngineTypeLineStyleEnum_getByNameWithNSString_(boxLeftPenLineStyle)];
  }
  NSString *boxLeftPenLineColor = OrgOssPdfreporterEngineStylePropertyStyleProvider_getPropertyValueWithNSString_withByte_(self, OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_LEFT_PEN_LINE_COLOR, evaluation);
  if (boxLeftPenLineColor != nil) {
    [((id<OrgOssPdfreporterEngineBaseJRBoxPen>) nil_chk([((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk([style getLineBox])) getLeftPen])) setLineColorWithOrgOssPdfreporterGeometryIColor:OrgOssPdfreporterEngineUtilJRColorUtil_getColorWithNSString_withOrgOssPdfreporterGeometryIColor_(boxLeftPenLineColor, nil)];
  }
  NSString *boxTopPenLineWidth = OrgOssPdfreporterEngineStylePropertyStyleProvider_getPropertyValueWithNSString_withByte_(self, OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_TOP_PEN_LINE_WIDTH, evaluation);
  if (boxTopPenLineWidth != nil) {
    [((id<OrgOssPdfreporterEngineBaseJRBoxPen>) nil_chk([((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk([style getLineBox])) getTopPen])) setLineWidthWithJavaLangFloat:JavaLangFloat_valueOfWithNSString_(boxTopPenLineWidth)];
  }
  NSString *boxTopPenLineStyle = OrgOssPdfreporterEngineStylePropertyStyleProvider_getPropertyValueWithNSString_withByte_(self, OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_TOP_PEN_LINE_STYLE, evaluation);
  if (boxTopPenLineStyle != nil) {
    [((id<OrgOssPdfreporterEngineBaseJRBoxPen>) nil_chk([((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk([style getLineBox])) getTopPen])) setLineStyleWithOrgOssPdfreporterEngineTypeLineStyleEnum:OrgOssPdfreporterEngineTypeLineStyleEnum_getByNameWithNSString_(boxTopPenLineStyle)];
  }
  NSString *boxTopPenLineColor = OrgOssPdfreporterEngineStylePropertyStyleProvider_getPropertyValueWithNSString_withByte_(self, OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_TOP_PEN_LINE_COLOR, evaluation);
  if (boxTopPenLineColor != nil) {
    [((id<OrgOssPdfreporterEngineBaseJRBoxPen>) nil_chk([((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk([style getLineBox])) getTopPen])) setLineColorWithOrgOssPdfreporterGeometryIColor:OrgOssPdfreporterEngineUtilJRColorUtil_getColorWithNSString_withOrgOssPdfreporterGeometryIColor_(boxTopPenLineColor, nil)];
  }
  NSString *boxRightPenLineWidth = OrgOssPdfreporterEngineStylePropertyStyleProvider_getPropertyValueWithNSString_withByte_(self, OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_RIGHT_PEN_LINE_WIDTH, evaluation);
  if (boxRightPenLineWidth != nil) {
    [((id<OrgOssPdfreporterEngineBaseJRBoxPen>) nil_chk([((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk([style getLineBox])) getRightPen])) setLineWidthWithJavaLangFloat:JavaLangFloat_valueOfWithNSString_(boxRightPenLineWidth)];
  }
  NSString *boxRightPenLineStyle = OrgOssPdfreporterEngineStylePropertyStyleProvider_getPropertyValueWithNSString_withByte_(self, OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_RIGHT_PEN_LINE_STYLE, evaluation);
  if (boxRightPenLineStyle != nil) {
    [((id<OrgOssPdfreporterEngineBaseJRBoxPen>) nil_chk([((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk([style getLineBox])) getRightPen])) setLineStyleWithOrgOssPdfreporterEngineTypeLineStyleEnum:OrgOssPdfreporterEngineTypeLineStyleEnum_getByNameWithNSString_(boxRightPenLineStyle)];
  }
  NSString *boxRightPenLineColor = OrgOssPdfreporterEngineStylePropertyStyleProvider_getPropertyValueWithNSString_withByte_(self, OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_RIGHT_PEN_LINE_COLOR, evaluation);
  if (boxRightPenLineColor != nil) {
    [((id<OrgOssPdfreporterEngineBaseJRBoxPen>) nil_chk([((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk([style getLineBox])) getRightPen])) setLineColorWithOrgOssPdfreporterGeometryIColor:OrgOssPdfreporterEngineUtilJRColorUtil_getColorWithNSString_withOrgOssPdfreporterGeometryIColor_(boxRightPenLineColor, nil)];
  }
  NSString *boxBottomPenLineWidth = OrgOssPdfreporterEngineStylePropertyStyleProvider_getPropertyValueWithNSString_withByte_(self, OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_BOTTOM_PEN_LINE_WIDTH, evaluation);
  if (boxBottomPenLineWidth != nil) {
    [((id<OrgOssPdfreporterEngineBaseJRBoxPen>) nil_chk([((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk([style getLineBox])) getBottomPen])) setLineWidthWithJavaLangFloat:JavaLangFloat_valueOfWithNSString_(boxBottomPenLineWidth)];
  }
  NSString *boxBottomPenLineStyle = OrgOssPdfreporterEngineStylePropertyStyleProvider_getPropertyValueWithNSString_withByte_(self, OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_BOTTOM_PEN_LINE_STYLE, evaluation);
  if (boxBottomPenLineStyle != nil) {
    [((id<OrgOssPdfreporterEngineBaseJRBoxPen>) nil_chk([((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk([style getLineBox])) getBottomPen])) setLineStyleWithOrgOssPdfreporterEngineTypeLineStyleEnum:OrgOssPdfreporterEngineTypeLineStyleEnum_getByNameWithNSString_(boxBottomPenLineStyle)];
  }
  NSString *boxBottomPenLineColor = OrgOssPdfreporterEngineStylePropertyStyleProvider_getPropertyValueWithNSString_withByte_(self, OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_BOTTOM_PEN_LINE_COLOR, evaluation);
  if (boxBottomPenLineColor != nil) {
    [((id<OrgOssPdfreporterEngineBaseJRBoxPen>) nil_chk([((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk([style getLineBox])) getBottomPen])) setLineColorWithOrgOssPdfreporterGeometryIColor:OrgOssPdfreporterEngineUtilJRColorUtil_getColorWithNSString_withOrgOssPdfreporterGeometryIColor_(boxBottomPenLineColor, nil)];
  }
  NSString *lineSpacing = OrgOssPdfreporterEngineStylePropertyStyleProvider_getPropertyValueWithNSString_withByte_(self, OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_LINE_SPACING, evaluation);
  if (lineSpacing != nil) {
    [((id<OrgOssPdfreporterEngineJRParagraph>) nil_chk([style getParagraph])) setLineSpacingWithOrgOssPdfreporterEngineTypeLineSpacingEnum:OrgOssPdfreporterEngineTypeLineSpacingEnum_getByNameWithNSString_(lineSpacing)];
  }
  NSString *lineSpacingSize = OrgOssPdfreporterEngineStylePropertyStyleProvider_getPropertyValueWithNSString_withByte_(self, OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_LINE_SPACING_SIZE, evaluation);
  if (lineSpacingSize != nil) {
    [((id<OrgOssPdfreporterEngineJRParagraph>) nil_chk([style getParagraph])) setLineSpacingSizeWithJavaLangFloat:JavaLangFloat_valueOfWithNSString_(lineSpacingSize)];
  }
  NSString *firstLineIndent = OrgOssPdfreporterEngineStylePropertyStyleProvider_getPropertyValueWithNSString_withByte_(self, OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_FIRST_LINE_INDENT, evaluation);
  if (firstLineIndent != nil) {
    [((id<OrgOssPdfreporterEngineJRParagraph>) nil_chk([style getParagraph])) setFirstLineIndentWithJavaLangInteger:JavaLangInteger_valueOfWithNSString_(firstLineIndent)];
  }
  NSString *leftIndent = OrgOssPdfreporterEngineStylePropertyStyleProvider_getPropertyValueWithNSString_withByte_(self, OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_LEFT_INDENT, evaluation);
  if (leftIndent != nil) {
    [((id<OrgOssPdfreporterEngineJRParagraph>) nil_chk([style getParagraph])) setLeftIndentWithJavaLangInteger:JavaLangInteger_valueOfWithNSString_(leftIndent)];
  }
  NSString *rightIndent = OrgOssPdfreporterEngineStylePropertyStyleProvider_getPropertyValueWithNSString_withByte_(self, OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_RIGHT_INDENT, evaluation);
  if (rightIndent != nil) {
    [((id<OrgOssPdfreporterEngineJRParagraph>) nil_chk([style getParagraph])) setRightIndentWithJavaLangInteger:JavaLangInteger_valueOfWithNSString_(rightIndent)];
  }
  NSString *spacingBefore = OrgOssPdfreporterEngineStylePropertyStyleProvider_getPropertyValueWithNSString_withByte_(self, OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_SPACING_BEFORE, evaluation);
  if (spacingBefore != nil) {
    [((id<OrgOssPdfreporterEngineJRParagraph>) nil_chk([style getParagraph])) setSpacingBeforeWithJavaLangInteger:JavaLangInteger_valueOfWithNSString_(spacingBefore)];
  }
  NSString *spacingAfter = OrgOssPdfreporterEngineStylePropertyStyleProvider_getPropertyValueWithNSString_withByte_(self, OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_SPACING_AFTER, evaluation);
  if (spacingAfter != nil) {
    [((id<OrgOssPdfreporterEngineJRParagraph>) nil_chk([style getParagraph])) setSpacingAfterWithJavaLangInteger:JavaLangInteger_valueOfWithNSString_(spacingAfter)];
  }
  NSString *tabStopWidth = OrgOssPdfreporterEngineStylePropertyStyleProvider_getPropertyValueWithNSString_withByte_(self, OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_TABSTOP_WIDTH, evaluation);
  if (tabStopWidth != nil) {
    [((id<OrgOssPdfreporterEngineJRParagraph>) nil_chk([style getParagraph])) setTabStopWidthWithJavaLangInteger:JavaLangInteger_valueOfWithNSString_(spacingAfter)];
  }
  return style;
}

- (IOSObjectArray *)getFields {
  return fields_;
}

- (IOSObjectArray *)getVariables {
  return variables_;
}

- (NSString *)getPropertyValueWithNSString:(NSString *)propertyName
                                  withByte:(jbyte)evaluation {
  return OrgOssPdfreporterEngineStylePropertyStyleProvider_getPropertyValueWithNSString_withByte_(self, propertyName, evaluation);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgOssPdfreporterEngineStyleStyleProviderContext:withJavaUtilMap:", "PropertyStyleProvider", NULL, 0x1, NULL, "(Lorg/oss/pdfreporter/engine/style/StyleProviderContext;Ljava/util/Map<Ljava/lang/String;Lorg/oss/pdfreporter/engine/JRPropertyExpression;>;)V" },
    { "getStyleWithByte:", "getStyle", "Lorg.oss.pdfreporter.engine.JRStyle;", 0x1, NULL, NULL },
    { "getFields", NULL, "[Ljava.lang.String;", 0x1, NULL, NULL },
    { "getVariables", NULL, "[Ljava.lang.String;", 0x1, NULL, NULL },
    { "getPropertyValueWithNSString:withByte:", "getPropertyValue", "Ljava.lang.String;", 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "STYLE_PROPERTY_PREFIX", "STYLE_PROPERTY_PREFIX", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_PREFIX, NULL, .constantValue.asLong = 0 },
    { "STYLE_PROPERTY_PEN_PREFIX", "STYLE_PROPERTY_PEN_PREFIX", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_PEN_PREFIX, NULL, .constantValue.asLong = 0 },
    { "STYLE_PROPERTY_BOX_PREFIX", "STYLE_PROPERTY_BOX_PREFIX", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_PREFIX, NULL, .constantValue.asLong = 0 },
    { "STYLE_PROPERTY_BOX_PEN_PREFIX", "STYLE_PROPERTY_BOX_PEN_PREFIX", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_PEN_PREFIX, NULL, .constantValue.asLong = 0 },
    { "STYLE_PROPERTY_BOX_LEFT_PEN_PREFIX", "STYLE_PROPERTY_BOX_LEFT_PEN_PREFIX", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_LEFT_PEN_PREFIX, NULL, .constantValue.asLong = 0 },
    { "STYLE_PROPERTY_BOX_TOP_PEN_PREFIX", "STYLE_PROPERTY_BOX_TOP_PEN_PREFIX", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_TOP_PEN_PREFIX, NULL, .constantValue.asLong = 0 },
    { "STYLE_PROPERTY_BOX_RIGHT_PEN_PREFIX", "STYLE_PROPERTY_BOX_RIGHT_PEN_PREFIX", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_RIGHT_PEN_PREFIX, NULL, .constantValue.asLong = 0 },
    { "STYLE_PROPERTY_BOX_BOTTOM_PEN_PREFIX", "STYLE_PROPERTY_BOX_BOTTOM_PEN_PREFIX", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_BOTTOM_PEN_PREFIX, NULL, .constantValue.asLong = 0 },
    { "STYLE_PROPERTY_PARAGRAPH_PREFIX", "STYLE_PROPERTY_PARAGRAPH_PREFIX", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_PARAGRAPH_PREFIX, NULL, .constantValue.asLong = 0 },
    { "STYLE_PROPERTY_MODE", "STYLE_PROPERTY_MODE", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_MODE, NULL, .constantValue.asLong = 0 },
    { "STYLE_PROPERTY_BACKCOLOR", "STYLE_PROPERTY_BACKCOLOR", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BACKCOLOR, NULL, .constantValue.asLong = 0 },
    { "STYLE_PROPERTY_FORECOLOR", "STYLE_PROPERTY_FORECOLOR", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_FORECOLOR, NULL, .constantValue.asLong = 0 },
    { "STYLE_PROPERTY_FILL", "STYLE_PROPERTY_FILL", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_FILL, NULL, .constantValue.asLong = 0 },
    { "STYLE_PROPERTY_RADIUS", "STYLE_PROPERTY_RADIUS", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_RADIUS, NULL, .constantValue.asLong = 0 },
    { "STYLE_PROPERTY_SCALE_IMAGE", "STYLE_PROPERTY_SCALE_IMAGE", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_SCALE_IMAGE, NULL, .constantValue.asLong = 0 },
    { "STYLE_PROPERTY_HALIGN", "STYLE_PROPERTY_HALIGN", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_HALIGN, NULL, .constantValue.asLong = 0 },
    { "STYLE_PROPERTY_VALIGN", "STYLE_PROPERTY_VALIGN", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_VALIGN, NULL, .constantValue.asLong = 0 },
    { "STYLE_PROPERTY_ROTATION", "STYLE_PROPERTY_ROTATION", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_ROTATION, NULL, .constantValue.asLong = 0 },
    { "STYLE_PROPERTY_MARKUP", "STYLE_PROPERTY_MARKUP", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_MARKUP, NULL, .constantValue.asLong = 0 },
    { "STYLE_PROPERTY_PATTERN", "STYLE_PROPERTY_PATTERN", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_PATTERN, NULL, .constantValue.asLong = 0 },
    { "STYLE_PROPERTY_BLANK_WHEN_NULL", "STYLE_PROPERTY_BLANK_WHEN_NULL", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BLANK_WHEN_NULL, NULL, .constantValue.asLong = 0 },
    { "STYLE_PROPERTY_FONT_NAME", "STYLE_PROPERTY_FONT_NAME", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_FONT_NAME, NULL, .constantValue.asLong = 0 },
    { "STYLE_PROPERTY_FONT_SIZE", "STYLE_PROPERTY_FONT_SIZE", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_FONT_SIZE, NULL, .constantValue.asLong = 0 },
    { "STYLE_PROPERTY_FONT_BOLD", "STYLE_PROPERTY_FONT_BOLD", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_FONT_BOLD, NULL, .constantValue.asLong = 0 },
    { "STYLE_PROPERTY_FONT_ITALIC", "STYLE_PROPERTY_FONT_ITALIC", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_FONT_ITALIC, NULL, .constantValue.asLong = 0 },
    { "STYLE_PROPERTY_FONT_UNDERLINE", "STYLE_PROPERTY_FONT_UNDERLINE", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_FONT_UNDERLINE, NULL, .constantValue.asLong = 0 },
    { "STYLE_PROPERTY_FONT_STRIKETHROUGH", "STYLE_PROPERTY_FONT_STRIKETHROUGH", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_FONT_STRIKETHROUGH, NULL, .constantValue.asLong = 0 },
    { "STYLE_PROPERTY_PDF_FONT_NAME", "STYLE_PROPERTY_PDF_FONT_NAME", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_PDF_FONT_NAME, NULL, .constantValue.asLong = 0 },
    { "STYLE_PROPERTY_PDF_ENCODING", "STYLE_PROPERTY_PDF_ENCODING", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_PDF_ENCODING, NULL, .constantValue.asLong = 0 },
    { "STYLE_PROPERTY_PDF_EMBEDDED", "STYLE_PROPERTY_PDF_EMBEDDED", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_PDF_EMBEDDED, NULL, .constantValue.asLong = 0 },
    { "STYLE_PROPERTY_PEN_LINE_WIDTH", "STYLE_PROPERTY_PEN_LINE_WIDTH", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_PEN_LINE_WIDTH, NULL, .constantValue.asLong = 0 },
    { "STYLE_PROPERTY_PEN_LINE_STYLE", "STYLE_PROPERTY_PEN_LINE_STYLE", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_PEN_LINE_STYLE, NULL, .constantValue.asLong = 0 },
    { "STYLE_PROPERTY_PEN_LINE_COLOR", "STYLE_PROPERTY_PEN_LINE_COLOR", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_PEN_LINE_COLOR, NULL, .constantValue.asLong = 0 },
    { "STYLE_PROPERTY_BOX_PADDING", "STYLE_PROPERTY_BOX_PADDING", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_PADDING, NULL, .constantValue.asLong = 0 },
    { "STYLE_PROPERTY_BOX_TOP_PADDING", "STYLE_PROPERTY_BOX_TOP_PADDING", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_TOP_PADDING, NULL, .constantValue.asLong = 0 },
    { "STYLE_PROPERTY_BOX_LEFT_PADDING", "STYLE_PROPERTY_BOX_LEFT_PADDING", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_LEFT_PADDING, NULL, .constantValue.asLong = 0 },
    { "STYLE_PROPERTY_BOX_RIGHT_PADDING", "STYLE_PROPERTY_BOX_RIGHT_PADDING", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_RIGHT_PADDING, NULL, .constantValue.asLong = 0 },
    { "STYLE_PROPERTY_BOX_BOTTOM_PADDING", "STYLE_PROPERTY_BOX_BOTTOM_PADDING", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_BOTTOM_PADDING, NULL, .constantValue.asLong = 0 },
    { "STYLE_PROPERTY_BOX_PEN_LINE_WIDTH", "STYLE_PROPERTY_BOX_PEN_LINE_WIDTH", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_PEN_LINE_WIDTH, NULL, .constantValue.asLong = 0 },
    { "STYLE_PROPERTY_BOX_PEN_LINE_STYLE", "STYLE_PROPERTY_BOX_PEN_LINE_STYLE", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_PEN_LINE_STYLE, NULL, .constantValue.asLong = 0 },
    { "STYLE_PROPERTY_BOX_PEN_LINE_COLOR", "STYLE_PROPERTY_BOX_PEN_LINE_COLOR", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_PEN_LINE_COLOR, NULL, .constantValue.asLong = 0 },
    { "STYLE_PROPERTY_BOX_LEFT_PEN_LINE_WIDTH", "STYLE_PROPERTY_BOX_LEFT_PEN_LINE_WIDTH", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_LEFT_PEN_LINE_WIDTH, NULL, .constantValue.asLong = 0 },
    { "STYLE_PROPERTY_BOX_LEFT_PEN_LINE_STYLE", "STYLE_PROPERTY_BOX_LEFT_PEN_LINE_STYLE", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_LEFT_PEN_LINE_STYLE, NULL, .constantValue.asLong = 0 },
    { "STYLE_PROPERTY_BOX_LEFT_PEN_LINE_COLOR", "STYLE_PROPERTY_BOX_LEFT_PEN_LINE_COLOR", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_LEFT_PEN_LINE_COLOR, NULL, .constantValue.asLong = 0 },
    { "STYLE_PROPERTY_BOX_TOP_PEN_LINE_WIDTH", "STYLE_PROPERTY_BOX_TOP_PEN_LINE_WIDTH", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_TOP_PEN_LINE_WIDTH, NULL, .constantValue.asLong = 0 },
    { "STYLE_PROPERTY_BOX_TOP_PEN_LINE_STYLE", "STYLE_PROPERTY_BOX_TOP_PEN_LINE_STYLE", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_TOP_PEN_LINE_STYLE, NULL, .constantValue.asLong = 0 },
    { "STYLE_PROPERTY_BOX_TOP_PEN_LINE_COLOR", "STYLE_PROPERTY_BOX_TOP_PEN_LINE_COLOR", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_TOP_PEN_LINE_COLOR, NULL, .constantValue.asLong = 0 },
    { "STYLE_PROPERTY_BOX_RIGHT_PEN_LINE_WIDTH", "STYLE_PROPERTY_BOX_RIGHT_PEN_LINE_WIDTH", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_RIGHT_PEN_LINE_WIDTH, NULL, .constantValue.asLong = 0 },
    { "STYLE_PROPERTY_BOX_RIGHT_PEN_LINE_STYLE", "STYLE_PROPERTY_BOX_RIGHT_PEN_LINE_STYLE", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_RIGHT_PEN_LINE_STYLE, NULL, .constantValue.asLong = 0 },
    { "STYLE_PROPERTY_BOX_RIGHT_PEN_LINE_COLOR", "STYLE_PROPERTY_BOX_RIGHT_PEN_LINE_COLOR", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_RIGHT_PEN_LINE_COLOR, NULL, .constantValue.asLong = 0 },
    { "STYLE_PROPERTY_BOX_BOTTOM_PEN_LINE_WIDTH", "STYLE_PROPERTY_BOX_BOTTOM_PEN_LINE_WIDTH", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_BOTTOM_PEN_LINE_WIDTH, NULL, .constantValue.asLong = 0 },
    { "STYLE_PROPERTY_BOX_BOTTOM_PEN_LINE_STYLE", "STYLE_PROPERTY_BOX_BOTTOM_PEN_LINE_STYLE", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_BOTTOM_PEN_LINE_STYLE, NULL, .constantValue.asLong = 0 },
    { "STYLE_PROPERTY_BOX_BOTTOM_PEN_LINE_COLOR", "STYLE_PROPERTY_BOX_BOTTOM_PEN_LINE_COLOR", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_BOX_BOTTOM_PEN_LINE_COLOR, NULL, .constantValue.asLong = 0 },
    { "STYLE_PROPERTY_LINE_SPACING", "STYLE_PROPERTY_LINE_SPACING", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_LINE_SPACING, NULL, .constantValue.asLong = 0 },
    { "STYLE_PROPERTY_LINE_SPACING_SIZE", "STYLE_PROPERTY_LINE_SPACING_SIZE", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_LINE_SPACING_SIZE, NULL, .constantValue.asLong = 0 },
    { "STYLE_PROPERTY_FIRST_LINE_INDENT", "STYLE_PROPERTY_FIRST_LINE_INDENT", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_FIRST_LINE_INDENT, NULL, .constantValue.asLong = 0 },
    { "STYLE_PROPERTY_LEFT_INDENT", "STYLE_PROPERTY_LEFT_INDENT", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_LEFT_INDENT, NULL, .constantValue.asLong = 0 },
    { "STYLE_PROPERTY_RIGHT_INDENT", "STYLE_PROPERTY_RIGHT_INDENT", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_RIGHT_INDENT, NULL, .constantValue.asLong = 0 },
    { "STYLE_PROPERTY_SPACING_BEFORE", "STYLE_PROPERTY_SPACING_BEFORE", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_SPACING_BEFORE, NULL, .constantValue.asLong = 0 },
    { "STYLE_PROPERTY_SPACING_AFTER", "STYLE_PROPERTY_SPACING_AFTER", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_SPACING_AFTER, NULL, .constantValue.asLong = 0 },
    { "STYLE_PROPERTY_TABSTOP_WIDTH", "STYLE_PROPERTY_TABSTOP_WIDTH", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineStylePropertyStyleProvider_STYLE_PROPERTY_TABSTOP_WIDTH, NULL, .constantValue.asLong = 0 },
    { "context_", NULL, 0x12, "Lorg.oss.pdfreporter.engine.style.StyleProviderContext;", NULL, NULL, .constantValue.asLong = 0 },
    { "stylePropertyExpressions_", NULL, 0x12, "Ljava.util.Map;", NULL, "Ljava/util/Map<Ljava/lang/String;Lorg/oss/pdfreporter/engine/JRPropertyExpression;>;", .constantValue.asLong = 0 },
    { "fields_", NULL, 0x12, "[Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "variables_", NULL, 0x12, "[Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "lateEvaluated_", NULL, 0x12, "Z", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineStylePropertyStyleProvider = { 2, "PropertyStyleProvider", "org.oss.pdfreporter.engine.style", NULL, 0x1, 5, methods, 66, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineStylePropertyStyleProvider;
}

@end

void OrgOssPdfreporterEngineStylePropertyStyleProvider_initWithOrgOssPdfreporterEngineStyleStyleProviderContext_withJavaUtilMap_(OrgOssPdfreporterEngineStylePropertyStyleProvider *self, id<OrgOssPdfreporterEngineStyleStyleProviderContext> context, id<JavaUtilMap> stylePropertyExpressions) {
  NSObject_init(self);
  self->context_ = context;
  self->stylePropertyExpressions_ = stylePropertyExpressions;
  id<JavaUtilList> fieldsList = new_JavaUtilArrayList_init();
  id<JavaUtilList> variablesList = new_JavaUtilArrayList_init();
  if (stylePropertyExpressions != nil) {
    for (id<OrgOssPdfreporterEngineJRPropertyExpression> __strong stylePropertyExpression in nil_chk([stylePropertyExpressions values])) {
      id<OrgOssPdfreporterEngineJRExpression> expression = [((id<OrgOssPdfreporterEngineJRPropertyExpression>) nil_chk(stylePropertyExpression)) getValueExpression];
      if (expression != nil) {
        IOSObjectArray *chunks = [expression getChunks];
        if (chunks != nil) {
          for (jint i = 0; i < chunks->size_; i++) {
            id<OrgOssPdfreporterEngineJRExpressionChunk> chunk = IOSObjectArray_Get(chunks, i);
            switch ([((id<OrgOssPdfreporterEngineJRExpressionChunk>) nil_chk(chunk)) getType]) {
              case OrgOssPdfreporterEngineJRExpressionChunk_TYPE_FIELD:
              {
                [fieldsList addWithId:[chunk getText]];
                break;
              }
              case OrgOssPdfreporterEngineJRExpressionChunk_TYPE_VARIABLE:
              {
                [variablesList addWithId:[chunk getText]];
                break;
              }
            }
          }
        }
      }
    }
  }
  self->fields_ = [fieldsList size] > 0 ? [fieldsList toArrayWithNSObjectArray:[IOSObjectArray newArrayWithLength:[fieldsList size] type:NSString_class_()]] : nil;
  self->variables_ = [variablesList size] > 0 ? [variablesList toArrayWithNSObjectArray:[IOSObjectArray newArrayWithLength:[variablesList size] type:NSString_class_()]] : nil;
  id<OrgOssPdfreporterEngineJRElement> element = [((id<OrgOssPdfreporterEngineStyleStyleProviderContext>) nil_chk(context)) getElement];
  id<OrgOssPdfreporterEngineJREvaluation> evaluation = [OrgOssPdfreporterEngineJREvaluation_class_() isInstance:element] ? (id<OrgOssPdfreporterEngineJREvaluation>) cast_check(element, OrgOssPdfreporterEngineJREvaluation_class_()) : nil;
  self->lateEvaluated_ = (evaluation != nil && [evaluation getEvaluationTimeValue] != JreLoadEnum(OrgOssPdfreporterEngineTypeEvaluationTimeEnum, NOW));
}

OrgOssPdfreporterEngineStylePropertyStyleProvider *new_OrgOssPdfreporterEngineStylePropertyStyleProvider_initWithOrgOssPdfreporterEngineStyleStyleProviderContext_withJavaUtilMap_(id<OrgOssPdfreporterEngineStyleStyleProviderContext> context, id<JavaUtilMap> stylePropertyExpressions) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineStylePropertyStyleProvider, initWithOrgOssPdfreporterEngineStyleStyleProviderContext_withJavaUtilMap_, context, stylePropertyExpressions)
}

OrgOssPdfreporterEngineStylePropertyStyleProvider *create_OrgOssPdfreporterEngineStylePropertyStyleProvider_initWithOrgOssPdfreporterEngineStyleStyleProviderContext_withJavaUtilMap_(id<OrgOssPdfreporterEngineStyleStyleProviderContext> context, id<JavaUtilMap> stylePropertyExpressions) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineStylePropertyStyleProvider, initWithOrgOssPdfreporterEngineStyleStyleProviderContext_withJavaUtilMap_, context, stylePropertyExpressions)
}

NSString *OrgOssPdfreporterEngineStylePropertyStyleProvider_getPropertyValueWithNSString_withByte_(OrgOssPdfreporterEngineStylePropertyStyleProvider *self, NSString *propertyName, jbyte evaluation) {
  NSString *value = nil;
  if (self->lateEvaluated_ && [((id<JavaUtilMap>) nil_chk(self->stylePropertyExpressions_)) containsKeyWithId:propertyName]) {
    id<OrgOssPdfreporterEngineJRPropertyExpression> stylePropertyExpression = [((id<JavaUtilMap>) nil_chk(self->stylePropertyExpressions_)) getWithId:propertyName];
    id<OrgOssPdfreporterEngineJRExpression> expression = [((id<OrgOssPdfreporterEngineJRPropertyExpression>) nil_chk(stylePropertyExpression)) getValueExpression];
    if (expression != nil) {
      value = (NSString *) cast_chk([((id<OrgOssPdfreporterEngineStyleStyleProviderContext>) nil_chk(self->context_)) evaluateExpressionWithOrgOssPdfreporterEngineJRExpression:expression withByte:evaluation], [NSString class]);
    }
  }
  else {
    value = [((OrgOssPdfreporterEngineJRPropertiesMap *) nil_chk([((id<OrgOssPdfreporterEngineJRElement>) nil_chk([((id<OrgOssPdfreporterEngineStyleStyleProviderContext>) nil_chk(self->context_)) getElement])) getPropertiesMap])) getPropertyWithNSString:propertyName];
  }
  return value;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineStylePropertyStyleProvider)
