//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/fonts/SimpleFontExtensionHelper.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgOssPdfreporterEngineFontsSimpleFontExtensionHelper")
#ifdef RESTRICT_OrgOssPdfreporterEngineFontsSimpleFontExtensionHelper
#define INCLUDE_ALL_OrgOssPdfreporterEngineFontsSimpleFontExtensionHelper 0
#else
#define INCLUDE_ALL_OrgOssPdfreporterEngineFontsSimpleFontExtensionHelper 1
#endif
#undef RESTRICT_OrgOssPdfreporterEngineFontsSimpleFontExtensionHelper

#if !defined (OrgOssPdfreporterEngineFontsSimpleFontExtensionHelper_) && (INCLUDE_ALL_OrgOssPdfreporterEngineFontsSimpleFontExtensionHelper || defined(INCLUDE_OrgOssPdfreporterEngineFontsSimpleFontExtensionHelper))
#define OrgOssPdfreporterEngineFontsSimpleFontExtensionHelper_

#define RESTRICT_OrgOssPdfreporterXmlParsersXMLErrorHandler 1
#define INCLUDE_OrgOssPdfreporterXmlParsersXMLErrorHandler 1
#include "org/oss/pdfreporter/xml/parsers/XMLErrorHandler.h"

@class JavaIoInputStream;
@class JavaIoOutputStream;
@class OrgOssPdfreporterXmlParsersXMLParseException;
@protocol JavaUtilList;
@protocol OrgOssPdfreporterEngineJasperReportsContext;

@interface OrgOssPdfreporterEngineFontsSimpleFontExtensionHelper : NSObject < OrgOssPdfreporterXmlParsersXMLErrorHandler >

+ (NSString *)DEFAULT_ENCODING;

#pragma mark Public

- (void)errorWithOrgOssPdfreporterXmlParsersXMLParseException:(OrgOssPdfreporterXmlParsersXMLParseException *)e;

- (void)fatalErrorWithOrgOssPdfreporterXmlParsersXMLParseException:(OrgOssPdfreporterXmlParsersXMLParseException *)e;

+ (NSString *)getFontsXmlWithJavaUtilList:(id<JavaUtilList>)fontFamilies;

+ (OrgOssPdfreporterEngineFontsSimpleFontExtensionHelper *)getInstance;

- (id<JavaUtilList>)loadFontFamiliesWithJavaIoInputStream:(JavaIoInputStream *)is;

- (id<JavaUtilList>)loadFontFamiliesWithOrgOssPdfreporterEngineJasperReportsContext:(id<OrgOssPdfreporterEngineJasperReportsContext>)jasperReportsContext
                                                              withJavaIoInputStream:(JavaIoInputStream *)is;

- (id<JavaUtilList>)loadFontFamiliesWithOrgOssPdfreporterEngineJasperReportsContext:(id<OrgOssPdfreporterEngineJasperReportsContext>)jasperReportsContext
                                                                       withNSString:(NSString *)file;

- (id<JavaUtilList>)loadFontFamiliesWithNSString:(NSString *)file;

- (void)warningWithOrgOssPdfreporterXmlParsersXMLParseException:(OrgOssPdfreporterXmlParsersXMLParseException *)e;

+ (void)writeFontExtensionsPropertiesWithNSString:(NSString *)fontFamiliesPropertyValue
                           withJavaIoOutputStream:(JavaIoOutputStream *)outputStream;

+ (void)writeFontExtensionsPropertiesWithNSString:(NSString *)fontsXmlLocation
                                     withNSString:(NSString *)destFileName;

+ (void)writeFontExtensionsPropertiesWithNSString:(NSString *)fontRegistryFactoryPropertyName
                                     withNSString:(NSString *)fontRegistryFactoryPropertyValue
                                     withNSString:(NSString *)fontFamiliesPropertyName
                                     withNSString:(NSString *)fontFamiliesPropertyValue
                           withJavaIoOutputStream:(JavaIoOutputStream *)outputStream;

+ (void)writeFontsXmlWithJavaIoOutputStream:(JavaIoOutputStream *)outputStream
                           withJavaUtilList:(id<JavaUtilList>)fontFamilies;

+ (void)writeFontsXmlWithNSString:(NSString *)destFileName
                 withJavaUtilList:(id<JavaUtilList>)fontFamilies;

@end

J2OBJC_STATIC_INIT(OrgOssPdfreporterEngineFontsSimpleFontExtensionHelper)

inline NSString *OrgOssPdfreporterEngineFontsSimpleFontExtensionHelper_get_DEFAULT_ENCODING();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgOssPdfreporterEngineFontsSimpleFontExtensionHelper_DEFAULT_ENCODING;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterEngineFontsSimpleFontExtensionHelper, DEFAULT_ENCODING, NSString *)

FOUNDATION_EXPORT OrgOssPdfreporterEngineFontsSimpleFontExtensionHelper *OrgOssPdfreporterEngineFontsSimpleFontExtensionHelper_getInstance();

FOUNDATION_EXPORT NSString *OrgOssPdfreporterEngineFontsSimpleFontExtensionHelper_getFontsXmlWithJavaUtilList_(id<JavaUtilList> fontFamilies);

FOUNDATION_EXPORT void OrgOssPdfreporterEngineFontsSimpleFontExtensionHelper_writeFontsXmlWithNSString_withJavaUtilList_(NSString *destFileName, id<JavaUtilList> fontFamilies);

FOUNDATION_EXPORT void OrgOssPdfreporterEngineFontsSimpleFontExtensionHelper_writeFontsXmlWithJavaIoOutputStream_withJavaUtilList_(JavaIoOutputStream *outputStream, id<JavaUtilList> fontFamilies);

FOUNDATION_EXPORT void OrgOssPdfreporterEngineFontsSimpleFontExtensionHelper_writeFontExtensionsPropertiesWithNSString_withNSString_(NSString *fontsXmlLocation, NSString *destFileName);

FOUNDATION_EXPORT void OrgOssPdfreporterEngineFontsSimpleFontExtensionHelper_writeFontExtensionsPropertiesWithNSString_withJavaIoOutputStream_(NSString *fontFamiliesPropertyValue, JavaIoOutputStream *outputStream);

FOUNDATION_EXPORT void OrgOssPdfreporterEngineFontsSimpleFontExtensionHelper_writeFontExtensionsPropertiesWithNSString_withNSString_withNSString_withNSString_withJavaIoOutputStream_(NSString *fontRegistryFactoryPropertyName, NSString *fontRegistryFactoryPropertyValue, NSString *fontFamiliesPropertyName, NSString *fontFamiliesPropertyValue, JavaIoOutputStream *outputStream);

J2OBJC_TYPE_LITERAL_HEADER(OrgOssPdfreporterEngineFontsSimpleFontExtensionHelper)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgOssPdfreporterEngineFontsSimpleFontExtensionHelper")
