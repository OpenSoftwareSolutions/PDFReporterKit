//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/JRImageRenderer.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/RuntimeException.h"
#include "org/oss/pdfreporter/engine/JRAbstractRenderer.h"
#include "org/oss/pdfreporter/engine/JRConstants.h"
#include "org/oss/pdfreporter/engine/JRException.h"
#include "org/oss/pdfreporter/engine/JRImageRenderer.h"
#include "org/oss/pdfreporter/engine/JasperReportsContext.h"
#include "org/oss/pdfreporter/engine/type/ImageTypeEnum.h"
#include "org/oss/pdfreporter/engine/type/RenderableTypeEnum.h"
#include "org/oss/pdfreporter/geometry/IDimension.h"
#include "org/oss/pdfreporter/geometry/IRectangle.h"
#include "org/oss/pdfreporter/geometry/factory/IGeometryFactory.h"
#include "org/oss/pdfreporter/image/IImage.h"
#include "org/oss/pdfreporter/image/IImageManager.h"
#include "org/oss/pdfreporter/image/factory/IImageFactory.h"
#include "org/oss/pdfreporter/net/IURL.h"
#include "org/oss/pdfreporter/pdf/DocumentException.h"
#include "org/oss/pdfreporter/pdf/IPage.h"
#include "org/oss/pdfreporter/registry/ApiRegistry.h"
#include "org/oss/pdfreporter/repo/FileResourceLoader.h"

@interface OrgOssPdfreporterEngineJRImageRenderer () {
 @public
  id<OrgOssPdfreporterImageIImage> image_;
  NSString *imageLocation_;
  OrgOssPdfreporterEngineTypeImageTypeEnum *imageTypeValue_;
}

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineJRImageRenderer, image_, id<OrgOssPdfreporterImageIImage>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineJRImageRenderer, imageLocation_, NSString *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineJRImageRenderer, imageTypeValue_, OrgOssPdfreporterEngineTypeImageTypeEnum *)

inline jlong OrgOssPdfreporterEngineJRImageRenderer_get_serialVersionUID();
#define OrgOssPdfreporterEngineJRImageRenderer_serialVersionUID 10200LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgOssPdfreporterEngineJRImageRenderer, serialVersionUID, jlong)

@implementation OrgOssPdfreporterEngineJRImageRenderer

- (instancetype)initWithOrgOssPdfreporterImageIImage:(id<OrgOssPdfreporterImageIImage>)image {
  OrgOssPdfreporterEngineJRImageRenderer_initWithOrgOssPdfreporterImageIImage_(self, image);
  return self;
}

- (instancetype)initWithNSString:(NSString *)imageLocation {
  OrgOssPdfreporterEngineJRImageRenderer_initWithNSString_(self, imageLocation);
  return self;
}

+ (OrgOssPdfreporterEngineJRImageRenderer *)getInstanceWithOrgOssPdfreporterImageIImage:(id<OrgOssPdfreporterImageIImage>)image {
  return OrgOssPdfreporterEngineJRImageRenderer_getInstanceWithOrgOssPdfreporterImageIImage_(image);
}

+ (OrgOssPdfreporterEngineJRImageRenderer *)getInstanceWithNSString:(NSString *)location {
  return OrgOssPdfreporterEngineJRImageRenderer_getInstanceWithNSString_(location);
}

- (NSString *)getImageLocation {
  return imageLocation_;
}

- (OrgOssPdfreporterEngineTypeRenderableTypeEnum *)getTypeValue {
  return JreLoadEnum(OrgOssPdfreporterEngineTypeRenderableTypeEnum, IMAGE);
}

- (OrgOssPdfreporterEngineTypeImageTypeEnum *)getImageTypeValue {
  return imageTypeValue_;
}

- (id<OrgOssPdfreporterGeometryIDimension>)getDimensionWithOrgOssPdfreporterEngineJasperReportsContext:(id<OrgOssPdfreporterEngineJasperReportsContext>)jasperReportsContext {
  id<OrgOssPdfreporterImageIImage> img = [self getImageWithOrgOssPdfreporterEngineJasperReportsContext:jasperReportsContext];
  return [((id<OrgOssPdfreporterGeometryFactoryIGeometryFactory>) nil_chk(OrgOssPdfreporterRegistryApiRegistry_getGeometryFactory())) newDimensionWithFloat:[((id<OrgOssPdfreporterImageIImage>) nil_chk(img)) getWidth] withFloat:[img getHeight]];
}

- (id<OrgOssPdfreporterImageIImage>)getImageWithOrgOssPdfreporterEngineJasperReportsContext:(id<OrgOssPdfreporterEngineJasperReportsContext>)jasperReportsContext {
  if (image_ == nil) {
    @try {
      id<OrgOssPdfreporterNetIURL> url = OrgOssPdfreporterRepoFileResourceLoader_getURLWithNSString_(imageLocation_);
      if (url == nil) {
        @throw new_JavaLangRuntimeException_initWithNSString_(JreStrcat("$$$", @"Image file: ", imageLocation_, @" not found."));
      }
      image_ = [((id<OrgOssPdfreporterImageIImageManager>) nil_chk([((id<OrgOssPdfreporterImageFactoryIImageFactory>) nil_chk(OrgOssPdfreporterRegistryApiRegistry_getImageFactory())) getImageManager])) loadImageWithNSString:[url getPath]];
    }
    @catch (JavaIoIOException *e) {
      @throw new_OrgOssPdfreporterEngineJRException_initWithNSException_(e);
    }
  }
  return image_;
}

- (void)renderWithOrgOssPdfreporterEngineJasperReportsContext:(id<OrgOssPdfreporterEngineJasperReportsContext>)jasperReportsContext
                                withOrgOssPdfreporterPdfIPage:(id<OrgOssPdfreporterPdfIPage>)page
                      withOrgOssPdfreporterGeometryIRectangle:(id<OrgOssPdfreporterGeometryIRectangle>)rectangle {
  id<OrgOssPdfreporterImageIImage> img = [self getImageWithOrgOssPdfreporterEngineJasperReportsContext:jasperReportsContext];
  @try {
    [((id<OrgOssPdfreporterPdfIPage>) nil_chk(page)) drawWithOrgOssPdfreporterImageIImage:img withFloat:[((id<OrgOssPdfreporterGeometryIRectangle>) nil_chk(rectangle)) getX] withFloat:[rectangle getY] withFloat:[rectangle getWidth] withFloat:[rectangle getHeight] withOrgOssPdfreporterPdfIPage_ScaleMode:JreLoadEnum(OrgOssPdfreporterPdfIPage_ScaleMode, NONE)];
  }
  @catch (OrgOssPdfreporterPdfDocumentException *e) {
    @throw new_OrgOssPdfreporterEngineJRException_initWithNSException_(e);
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgOssPdfreporterImageIImage:", "JRImageRenderer", NULL, 0x4, NULL, NULL },
    { "initWithNSString:", "JRImageRenderer", NULL, 0x4, NULL, NULL },
    { "getInstanceWithOrgOssPdfreporterImageIImage:", "getInstance", "Lorg.oss.pdfreporter.engine.JRImageRenderer;", 0x9, NULL, NULL },
    { "getInstanceWithNSString:", "getInstance", "Lorg.oss.pdfreporter.engine.JRImageRenderer;", 0x9, NULL, NULL },
    { "getImageLocation", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getTypeValue", NULL, "Lorg.oss.pdfreporter.engine.type.RenderableTypeEnum;", 0x1, NULL, NULL },
    { "getImageTypeValue", NULL, "Lorg.oss.pdfreporter.engine.type.ImageTypeEnum;", 0x1, NULL, NULL },
    { "getDimensionWithOrgOssPdfreporterEngineJasperReportsContext:", "getDimension", "Lorg.oss.pdfreporter.geometry.IDimension;", 0x1, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "getImageWithOrgOssPdfreporterEngineJasperReportsContext:", "getImage", "Lorg.oss.pdfreporter.image.IImage;", 0x1, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "renderWithOrgOssPdfreporterEngineJasperReportsContext:withOrgOssPdfreporterPdfIPage:withOrgOssPdfreporterGeometryIRectangle:", "render", "V", 0x1, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "serialVersionUID", 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgOssPdfreporterEngineJRImageRenderer_serialVersionUID },
    { "image_", NULL, 0x2, "Lorg.oss.pdfreporter.image.IImage;", NULL, NULL, .constantValue.asLong = 0 },
    { "imageLocation_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "imageTypeValue_", NULL, 0x2, "Lorg.oss.pdfreporter.engine.type.ImageTypeEnum;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineJRImageRenderer = { 2, "JRImageRenderer", "org.oss.pdfreporter.engine", NULL, 0x1, 10, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineJRImageRenderer;
}

@end

void OrgOssPdfreporterEngineJRImageRenderer_initWithOrgOssPdfreporterImageIImage_(OrgOssPdfreporterEngineJRImageRenderer *self, id<OrgOssPdfreporterImageIImage> image) {
  OrgOssPdfreporterEngineJRAbstractRenderer_init(self);
  self->image_ = nil;
  self->imageLocation_ = nil;
  self->imageTypeValue_ = JreLoadEnum(OrgOssPdfreporterEngineTypeImageTypeEnum, UNKNOWN);
  self->image_ = image;
}

OrgOssPdfreporterEngineJRImageRenderer *new_OrgOssPdfreporterEngineJRImageRenderer_initWithOrgOssPdfreporterImageIImage_(id<OrgOssPdfreporterImageIImage> image) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineJRImageRenderer, initWithOrgOssPdfreporterImageIImage_, image)
}

OrgOssPdfreporterEngineJRImageRenderer *create_OrgOssPdfreporterEngineJRImageRenderer_initWithOrgOssPdfreporterImageIImage_(id<OrgOssPdfreporterImageIImage> image) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineJRImageRenderer, initWithOrgOssPdfreporterImageIImage_, image)
}

void OrgOssPdfreporterEngineJRImageRenderer_initWithNSString_(OrgOssPdfreporterEngineJRImageRenderer *self, NSString *imageLocation) {
  OrgOssPdfreporterEngineJRAbstractRenderer_init(self);
  self->image_ = nil;
  self->imageLocation_ = nil;
  self->imageTypeValue_ = JreLoadEnum(OrgOssPdfreporterEngineTypeImageTypeEnum, UNKNOWN);
  self->imageLocation_ = imageLocation;
}

OrgOssPdfreporterEngineJRImageRenderer *new_OrgOssPdfreporterEngineJRImageRenderer_initWithNSString_(NSString *imageLocation) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineJRImageRenderer, initWithNSString_, imageLocation)
}

OrgOssPdfreporterEngineJRImageRenderer *create_OrgOssPdfreporterEngineJRImageRenderer_initWithNSString_(NSString *imageLocation) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineJRImageRenderer, initWithNSString_, imageLocation)
}

OrgOssPdfreporterEngineJRImageRenderer *OrgOssPdfreporterEngineJRImageRenderer_getInstanceWithOrgOssPdfreporterImageIImage_(id<OrgOssPdfreporterImageIImage> image) {
  OrgOssPdfreporterEngineJRImageRenderer_initialize();
  return new_OrgOssPdfreporterEngineJRImageRenderer_initWithOrgOssPdfreporterImageIImage_(image);
}

OrgOssPdfreporterEngineJRImageRenderer *OrgOssPdfreporterEngineJRImageRenderer_getInstanceWithNSString_(NSString *location) {
  OrgOssPdfreporterEngineJRImageRenderer_initialize();
  return new_OrgOssPdfreporterEngineJRImageRenderer_initWithNSString_(location);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineJRImageRenderer)
