//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/DefaultJasperReportsContext.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/lang/SecurityException.h"
#include "java/lang/System.h"
#include "java/util/Enumeration.h"
#include "java/util/HashMap.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/logging/Logger.h"
#include "org/oss/pdfreporter/engine/DefaultJasperReportsContext.h"
#include "org/oss/pdfreporter/engine/JRException.h"
#include "org/oss/pdfreporter/engine/JRPropertiesUtil.h"
#include "org/oss/pdfreporter/engine/JRRuntimeException.h"
#include "org/oss/pdfreporter/engine/JasperReportsContext.h"
#include "org/oss/pdfreporter/engine/design/JRCompiler.h"
#include "org/oss/pdfreporter/engine/util/JRLoader.h"
#include "org/oss/pdfreporter/extensions/ExtensionsEnvironment.h"
#include "org/oss/pdfreporter/extensions/ExtensionsRegistry.h"
#include "org/oss/pdfreporter/uses/java/util/Properties.h"

@interface OrgOssPdfreporterEngineDefaultJasperReportsContext () {
 @public
  id<JavaUtilMap> values_;
}

- (instancetype)init;

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineDefaultJasperReportsContext, values_, id<JavaUtilMap>)

inline JavaUtilLoggingLogger *OrgOssPdfreporterEngineDefaultJasperReportsContext_get_logger();
static JavaUtilLoggingLogger *OrgOssPdfreporterEngineDefaultJasperReportsContext_logger;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterEngineDefaultJasperReportsContext, logger, JavaUtilLoggingLogger *)

inline OrgOssPdfreporterEngineDefaultJasperReportsContext *OrgOssPdfreporterEngineDefaultJasperReportsContext_get_INSTANCE();
static OrgOssPdfreporterEngineDefaultJasperReportsContext *OrgOssPdfreporterEngineDefaultJasperReportsContext_INSTANCE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterEngineDefaultJasperReportsContext, INSTANCE, OrgOssPdfreporterEngineDefaultJasperReportsContext *)

__attribute__((unused)) static void OrgOssPdfreporterEngineDefaultJasperReportsContext_init(OrgOssPdfreporterEngineDefaultJasperReportsContext *self);

__attribute__((unused)) static OrgOssPdfreporterEngineDefaultJasperReportsContext *new_OrgOssPdfreporterEngineDefaultJasperReportsContext_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgOssPdfreporterEngineDefaultJasperReportsContext *create_OrgOssPdfreporterEngineDefaultJasperReportsContext_init();

J2OBJC_INITIALIZED_DEFN(OrgOssPdfreporterEngineDefaultJasperReportsContext)

NSString *OrgOssPdfreporterEngineDefaultJasperReportsContext_DEFAULT_PROPERTIES_FILE = @"jasperreports.properties";
NSString *OrgOssPdfreporterEngineDefaultJasperReportsContext_PROPERTIES_FILE = @"net.sf.jasperreports.properties";

@implementation OrgOssPdfreporterEngineDefaultJasperReportsContext

+ (NSString *)DEFAULT_PROPERTIES_FILE {
  return OrgOssPdfreporterEngineDefaultJasperReportsContext_DEFAULT_PROPERTIES_FILE;
}

+ (NSString *)PROPERTIES_FILE {
  return OrgOssPdfreporterEngineDefaultJasperReportsContext_PROPERTIES_FILE;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterEngineDefaultJasperReportsContext_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (OrgOssPdfreporterEngineDefaultJasperReportsContext *)getInstance {
  return OrgOssPdfreporterEngineDefaultJasperReportsContext_getInstance();
}

- (void)initProperties {
  @try {
    OrgOssPdfreporterUsesJavaUtilProperties *defaults = OrgOssPdfreporterEngineDefaultJasperReportsContext_getDefaultProperties();
    NSString *propFile = OrgOssPdfreporterEngineDefaultJasperReportsContext_getSystemPropertyWithNSString_(OrgOssPdfreporterEngineDefaultJasperReportsContext_PROPERTIES_FILE);
    OrgOssPdfreporterUsesJavaUtilProperties *loadedProps;
    if (propFile == nil) {
      loadedProps = OrgOssPdfreporterEngineJRPropertiesUtil_loadPropertiesWithNSString_withOrgOssPdfreporterUsesJavaUtilProperties_(OrgOssPdfreporterEngineDefaultJasperReportsContext_DEFAULT_PROPERTIES_FILE, defaults);
      if (loadedProps == nil) {
        loadedProps = new_OrgOssPdfreporterUsesJavaUtilProperties_initWithOrgOssPdfreporterUsesJavaUtilProperties_(defaults);
      }
    }
    else {
      loadedProps = OrgOssPdfreporterEngineJRPropertiesUtil_loadPropertiesWithNSString_withOrgOssPdfreporterUsesJavaUtilProperties_(propFile, defaults);
      if (loadedProps == nil) {
        @throw new_OrgOssPdfreporterEngineJRRuntimeException_initWithNSString_(JreStrcat("$$C", @"Could not load properties file \"", propFile, '"'));
      }
    }
    (void) JreVolatileStrongAssignAndConsume(&properties_, new_JavaUtilHashMap_init());
    for (id<JavaUtilEnumeration> names = [loadedProps propertyNames]; [((id<JavaUtilEnumeration>) nil_chk(names)) hasMoreElements]; ) {
      NSString *name = (NSString *) cast_chk([names nextElement], [NSString class]);
      NSString *value = [loadedProps getPropertyWithNSString:name];
      (void) [((id<JavaUtilMap>) nil_chk(JreLoadVolatileId(&properties_))) putWithId:name withId:value];
    }
    [self loadSystemProperties];
  }
  @catch (OrgOssPdfreporterEngineJRException *e) {
    @throw new_OrgOssPdfreporterEngineJRRuntimeException_initWithNSString_withNSException_(@"Error loading the properties", e);
  }
  [((JavaUtilLoggingLogger *) nil_chk(OrgOssPdfreporterEngineDefaultJasperReportsContext_logger)) finestWithNSString:[((id<JavaUtilMap>) nil_chk(JreLoadVolatileId(&properties_))) description]];
}

- (void)loadSystemProperties {
  [self loadSystemPropertyWithNSString:@"jasper.reports.compiler.class" withNSString:OrgOssPdfreporterEngineDesignJRCompiler_COMPILER_CLASS];
  [self loadSystemPropertyWithNSString:@"jasper.reports.compile.xml.validation" withNSString:OrgOssPdfreporterEngineJasperReportsContext_COMPILER_XML_VALIDATION];
  [self loadSystemPropertyWithNSString:@"jasper.reports.export.xml.validation" withNSString:OrgOssPdfreporterEngineJasperReportsContext_EXPORT_XML_VALIDATION];
  [self loadSystemPropertyWithNSString:@"jasper.reports.compile.keep.java.file" withNSString:OrgOssPdfreporterEngineDesignJRCompiler_COMPILER_KEEP_JAVA_FILE];
  [self loadSystemPropertyWithNSString:@"jasper.reports.compile.temp" withNSString:OrgOssPdfreporterEngineDesignJRCompiler_COMPILER_TEMP_DIR];
  [self loadSystemPropertyWithNSString:@"jasper.reports.compile.class.path" withNSString:OrgOssPdfreporterEngineDesignJRCompiler_COMPILER_CLASSPATH];
}

+ (OrgOssPdfreporterUsesJavaUtilProperties *)getDefaultProperties {
  return OrgOssPdfreporterEngineDefaultJasperReportsContext_getDefaultProperties();
}

+ (NSString *)getSystemPropertyWithNSString:(NSString *)propertyName {
  return OrgOssPdfreporterEngineDefaultJasperReportsContext_getSystemPropertyWithNSString_(propertyName);
}

- (void)loadSystemPropertyWithNSString:(NSString *)sysKey
                          withNSString:(NSString *)propKey {
  NSString *val = OrgOssPdfreporterEngineDefaultJasperReportsContext_getSystemPropertyWithNSString_(sysKey);
  if (val != nil) {
    (void) [((id<JavaUtilMap>) nil_chk(JreLoadVolatileId(&properties_))) putWithId:propKey withId:val];
  }
}

- (id)getValueWithNSString:(NSString *)key {
  return [((id<JavaUtilMap>) nil_chk(values_)) getWithId:key];
}

- (void)setValueWithNSString:(NSString *)key
                      withId:(id)value {
  (void) [((id<JavaUtilMap>) nil_chk(values_)) putWithId:key withId:value];
}

- (id<JavaUtilList>)getExtensionsWithIOSClass:(IOSClass *)extensionType {
  return [((id<OrgOssPdfreporterExtensionsExtensionsRegistry>) nil_chk(OrgOssPdfreporterExtensionsExtensionsEnvironment_getExtensionsRegistry())) getExtensionsWithIOSClass:extensionType];
}

- (NSString *)getPropertyWithNSString:(NSString *)key {
  return [((id<JavaUtilMap>) nil_chk(JreLoadVolatileId(&properties_))) getWithId:key];
}

- (void)setPropertyWithNSString:(NSString *)key
                   withNSString:(NSString *)value {
  (void) [((id<JavaUtilMap>) nil_chk(JreLoadVolatileId(&properties_))) putWithId:key withId:value];
}

- (void)removePropertyWithNSString:(NSString *)key {
  (void) [((id<JavaUtilMap>) nil_chk(JreLoadVolatileId(&properties_))) removeWithId:key];
}

- (id<JavaUtilMap>)getProperties {
  return JreLoadVolatileId(&properties_);
}

- (void)__javaClone:(OrgOssPdfreporterEngineDefaultJasperReportsContext *)original {
  [super __javaClone:original];
  JreCloneVolatileStrong(&properties_, &original->properties_);
}

- (void)dealloc {
  JreReleaseVolatile(&properties_);
}

+ (void)initialize {
  if (self == [OrgOssPdfreporterEngineDefaultJasperReportsContext class]) {
    OrgOssPdfreporterEngineDefaultJasperReportsContext_logger = JavaUtilLoggingLogger_getLoggerWithNSString_([OrgOssPdfreporterEngineDefaultJasperReportsContext_class_() getName]);
    OrgOssPdfreporterEngineDefaultJasperReportsContext_INSTANCE = new_OrgOssPdfreporterEngineDefaultJasperReportsContext_init();
    J2OBJC_SET_INITIALIZED(OrgOssPdfreporterEngineDefaultJasperReportsContext)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "DefaultJasperReportsContext", NULL, 0x2, NULL, NULL },
    { "getInstance", NULL, "Lorg.oss.pdfreporter.engine.DefaultJasperReportsContext;", 0x9, NULL, NULL },
    { "initProperties", NULL, "V", 0x4, NULL, NULL },
    { "loadSystemProperties", NULL, "V", 0x4, NULL, NULL },
    { "getDefaultProperties", NULL, "Lorg.oss.pdfreporter.uses.java.util.Properties;", 0xc, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "getSystemPropertyWithNSString:", "getSystemProperty", "Ljava.lang.String;", 0xc, NULL, NULL },
    { "loadSystemPropertyWithNSString:withNSString:", "loadSystemProperty", "V", 0x4, NULL, NULL },
    { "getValueWithNSString:", "getValue", "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "setValueWithNSString:withId:", "setValue", "V", 0x1, NULL, NULL },
    { "getExtensionsWithIOSClass:", "getExtensions", "Ljava.util.List;", 0x1, NULL, "<T:Ljava/lang/Object;>(Ljava/lang/Class<TT;>;)Ljava/util/List<TT;>;" },
    { "getPropertyWithNSString:", "getProperty", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "setPropertyWithNSString:withNSString:", "setProperty", "V", 0x1, NULL, NULL },
    { "removePropertyWithNSString:", "removeProperty", "V", 0x1, NULL, NULL },
    { "getProperties", NULL, "Ljava.util.Map;", 0x1, NULL, "()Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "logger", "logger", 0x1a, "Ljava.util.logging.Logger;", &OrgOssPdfreporterEngineDefaultJasperReportsContext_logger, NULL, .constantValue.asLong = 0 },
    { "DEFAULT_PROPERTIES_FILE", "DEFAULT_PROPERTIES_FILE", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineDefaultJasperReportsContext_DEFAULT_PROPERTIES_FILE, NULL, .constantValue.asLong = 0 },
    { "PROPERTIES_FILE", "PROPERTIES_FILE", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineDefaultJasperReportsContext_PROPERTIES_FILE, NULL, .constantValue.asLong = 0 },
    { "INSTANCE", "INSTANCE", 0x1a, "Lorg.oss.pdfreporter.engine.DefaultJasperReportsContext;", &OrgOssPdfreporterEngineDefaultJasperReportsContext_INSTANCE, NULL, .constantValue.asLong = 0 },
    { "values_", NULL, 0x2, "Ljava.util.Map;", NULL, "Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;", .constantValue.asLong = 0 },
    { "properties_", NULL, 0x44, "Ljava.util.Map;", NULL, "Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineDefaultJasperReportsContext = { 2, "DefaultJasperReportsContext", "org.oss.pdfreporter.engine", NULL, 0x1, 14, methods, 6, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineDefaultJasperReportsContext;
}

@end

void OrgOssPdfreporterEngineDefaultJasperReportsContext_init(OrgOssPdfreporterEngineDefaultJasperReportsContext *self) {
  NSObject_init(self);
  self->values_ = new_JavaUtilHashMap_init();
  [self initProperties];
}

OrgOssPdfreporterEngineDefaultJasperReportsContext *new_OrgOssPdfreporterEngineDefaultJasperReportsContext_init() {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineDefaultJasperReportsContext, init)
}

OrgOssPdfreporterEngineDefaultJasperReportsContext *create_OrgOssPdfreporterEngineDefaultJasperReportsContext_init() {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineDefaultJasperReportsContext, init)
}

OrgOssPdfreporterEngineDefaultJasperReportsContext *OrgOssPdfreporterEngineDefaultJasperReportsContext_getInstance() {
  OrgOssPdfreporterEngineDefaultJasperReportsContext_initialize();
  return OrgOssPdfreporterEngineDefaultJasperReportsContext_INSTANCE;
}

OrgOssPdfreporterUsesJavaUtilProperties *OrgOssPdfreporterEngineDefaultJasperReportsContext_getDefaultProperties() {
  OrgOssPdfreporterEngineDefaultJasperReportsContext_initialize();
  OrgOssPdfreporterUsesJavaUtilProperties *defaults = new_OrgOssPdfreporterUsesJavaUtilProperties_init();
  JavaIoInputStream *is = OrgOssPdfreporterEngineUtilJRLoader_getResourceInputStreamWithNSString_(@"default.jasperreports.properties");
  if (is == nil) {
    @throw new_OrgOssPdfreporterEngineJRException_initWithNSString_(@"Default default.jasperreports.properties file not found.");
  }
  @try {
    [defaults load__WithJavaIoInputStream:is];
  }
  @catch (JavaIoIOException *e) {
    @throw new_OrgOssPdfreporterEngineJRException_initWithNSString_withNSException_(@"Failed to load default properties.", e);
  }
  @finally {
    @try {
      [is close];
    }
    @catch (JavaIoIOException *e) {
    }
  }
  NSString *userDir = OrgOssPdfreporterEngineDefaultJasperReportsContext_getSystemPropertyWithNSString_(@"user.dir");
  if (userDir != nil) {
    (void) [defaults setPropertyWithNSString:OrgOssPdfreporterEngineDesignJRCompiler_COMPILER_TEMP_DIR withNSString:userDir];
  }
  NSString *classPath = OrgOssPdfreporterEngineDefaultJasperReportsContext_getSystemPropertyWithNSString_(@"java.class.path");
  if (classPath != nil) {
    (void) [defaults setPropertyWithNSString:OrgOssPdfreporterEngineDesignJRCompiler_COMPILER_CLASSPATH withNSString:classPath];
  }
  return defaults;
}

NSString *OrgOssPdfreporterEngineDefaultJasperReportsContext_getSystemPropertyWithNSString_(NSString *propertyName) {
  OrgOssPdfreporterEngineDefaultJasperReportsContext_initialize();
  @try {
    return JavaLangSystem_getPropertyWithNSString_(propertyName);
  }
  @catch (JavaLangSecurityException *e) {
    return nil;
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineDefaultJasperReportsContext)
