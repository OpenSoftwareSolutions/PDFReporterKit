//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/design/JRDesignExpression.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/StringBuffer.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "java/util/StringTokenizer.h"
#include "org/oss/pdfreporter/engine/JRConstants.h"
#include "org/oss/pdfreporter/engine/JRExpressionChunk.h"
#include "org/oss/pdfreporter/engine/base/JRBaseExpression.h"
#include "org/oss/pdfreporter/engine/design/JRDesignExpression.h"
#include "org/oss/pdfreporter/engine/design/JRDesignExpressionChunk.h"
#include "org/oss/pdfreporter/engine/design/events/JRPropertyChangeSupport.h"
#include "org/oss/pdfreporter/engine/util/JRCloneUtils.h"

@interface OrgOssPdfreporterEngineDesignJRDesignExpression () {
 @public
  OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *eventSupport_;
}

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineDesignJRDesignExpression, eventSupport_, OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *)

inline jlong OrgOssPdfreporterEngineDesignJRDesignExpression_get_serialVersionUID();
#define OrgOssPdfreporterEngineDesignJRDesignExpression_serialVersionUID 10200LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgOssPdfreporterEngineDesignJRDesignExpression, serialVersionUID, jlong)

NSString *OrgOssPdfreporterEngineDesignJRDesignExpression_PROPERTY_TEXT = @"text";
NSString *OrgOssPdfreporterEngineDesignJRDesignExpression_PROPERTY_VALUE_CLASS_NAME = @"valueClassName";

@implementation OrgOssPdfreporterEngineDesignJRDesignExpression

+ (NSString *)PROPERTY_TEXT {
  return OrgOssPdfreporterEngineDesignJRDesignExpression_PROPERTY_TEXT;
}

+ (NSString *)PROPERTY_VALUE_CLASS_NAME {
  return OrgOssPdfreporterEngineDesignJRDesignExpression_PROPERTY_VALUE_CLASS_NAME;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterEngineDesignJRDesignExpression_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithNSString:(NSString *)text {
  OrgOssPdfreporterEngineDesignJRDesignExpression_initWithNSString_(self, text);
  return self;
}

- (void)setValueClassWithIOSClass:(IOSClass *)clazz {
  [self setValueClassNameWithNSString:[((IOSClass *) nil_chk(clazz)) getName]];
}

- (void)setValueClassNameWithNSString:(NSString *)className_ {
  id old = self->valueClassName_;
  valueClassName_ = className_;
  valueClass_ = nil;
  valueClassRealName_ = nil;
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) firePropertyChangeWithNSString:OrgOssPdfreporterEngineDesignJRDesignExpression_PROPERTY_VALUE_CLASS_NAME withId:old withId:self->valueClassName_];
}

- (void)setIdWithInt:(jint)id_ {
  self->id__ = id_;
}

- (IOSObjectArray *)getChunks {
  IOSObjectArray *chunkArray = nil;
  if (chunks_JRDesignExpression_ != nil && [chunks_JRDesignExpression_ size] > 0) {
    chunkArray = [IOSObjectArray newArrayWithLength:[chunks_JRDesignExpression_ size] type:OrgOssPdfreporterEngineJRExpressionChunk_class_()];
    (void) [((id<JavaUtilList>) nil_chk(chunks_JRDesignExpression_)) toArrayWithNSObjectArray:chunkArray];
  }
  return chunkArray;
}

- (void)setChunksWithJavaUtilList:(id<JavaUtilList>)chunks {
  [((id<JavaUtilList>) nil_chk(self->chunks_JRDesignExpression_)) clear];
  [((id<JavaUtilList>) nil_chk(self->chunks_JRDesignExpression_)) addAllWithJavaUtilCollection:chunks];
}

- (void)addChunkWithOrgOssPdfreporterEngineDesignJRDesignExpressionChunk:(OrgOssPdfreporterEngineDesignJRDesignExpressionChunk *)chunk {
  [((id<JavaUtilList>) nil_chk(self->chunks_JRDesignExpression_)) addWithId:chunk];
}

- (void)addChunkWithByte:(jbyte)type
            withNSString:(NSString *)text {
  OrgOssPdfreporterEngineDesignJRDesignExpressionChunk *chunk = new_OrgOssPdfreporterEngineDesignJRDesignExpressionChunk_init();
  [chunk setTypeWithByte:type];
  [chunk setTextWithNSString:text];
  [((id<JavaUtilList>) nil_chk(self->chunks_JRDesignExpression_)) addWithId:chunk];
}

- (void)addTextChunkWithNSString:(NSString *)text {
  OrgOssPdfreporterEngineDesignJRDesignExpressionChunk *chunk = new_OrgOssPdfreporterEngineDesignJRDesignExpressionChunk_init();
  [chunk setTypeWithByte:OrgOssPdfreporterEngineJRExpressionChunk_TYPE_TEXT];
  [chunk setTextWithNSString:text];
  [((id<JavaUtilList>) nil_chk(self->chunks_JRDesignExpression_)) addWithId:chunk];
}

- (void)addParameterChunkWithNSString:(NSString *)text {
  OrgOssPdfreporterEngineDesignJRDesignExpressionChunk *chunk = new_OrgOssPdfreporterEngineDesignJRDesignExpressionChunk_init();
  [chunk setTypeWithByte:OrgOssPdfreporterEngineJRExpressionChunk_TYPE_PARAMETER];
  [chunk setTextWithNSString:text];
  [((id<JavaUtilList>) nil_chk(self->chunks_JRDesignExpression_)) addWithId:chunk];
}

- (void)addFieldChunkWithNSString:(NSString *)text {
  OrgOssPdfreporterEngineDesignJRDesignExpressionChunk *chunk = new_OrgOssPdfreporterEngineDesignJRDesignExpressionChunk_init();
  [chunk setTypeWithByte:OrgOssPdfreporterEngineJRExpressionChunk_TYPE_FIELD];
  [chunk setTextWithNSString:text];
  [((id<JavaUtilList>) nil_chk(self->chunks_JRDesignExpression_)) addWithId:chunk];
}

- (void)addVariableChunkWithNSString:(NSString *)text {
  OrgOssPdfreporterEngineDesignJRDesignExpressionChunk *chunk = new_OrgOssPdfreporterEngineDesignJRDesignExpressionChunk_init();
  [chunk setTypeWithByte:OrgOssPdfreporterEngineJRExpressionChunk_TYPE_VARIABLE];
  [chunk setTextWithNSString:text];
  [((id<JavaUtilList>) nil_chk(self->chunks_JRDesignExpression_)) addWithId:chunk];
}

- (void)addResourceChunkWithNSString:(NSString *)text {
  OrgOssPdfreporterEngineDesignJRDesignExpressionChunk *chunk = new_OrgOssPdfreporterEngineDesignJRDesignExpressionChunk_init();
  [chunk setTypeWithByte:OrgOssPdfreporterEngineJRExpressionChunk_TYPE_RESOURCE];
  [chunk setTextWithNSString:text];
  [((id<JavaUtilList>) nil_chk(self->chunks_JRDesignExpression_)) addWithId:chunk];
}

- (void)setTextWithNSString:(NSString *)text {
  id old = [self getText];
  [((id<JavaUtilList>) nil_chk(chunks_JRDesignExpression_)) clear];
  if (text != nil) {
    JavaLangStringBuffer *textChunk = new_JavaLangStringBuffer_init();
    JavaUtilStringTokenizer *tkzer = new_JavaUtilStringTokenizer_initWithNSString_withNSString_withBoolean_(text, @"$", true);
    jint behindDelims = 0;
    while ([tkzer hasMoreTokens]) {
      NSString *token = [tkzer nextToken];
      if ([((NSString *) nil_chk(token)) isEqual:@"$"]) {
        if (behindDelims > 0) {
          (void) [textChunk appendWithNSString:@"$"];
        }
        ++behindDelims;
      }
      else {
        jbyte chunkType = OrgOssPdfreporterEngineJRExpressionChunk_TYPE_TEXT;
        if (behindDelims > 0) {
          if ([token hasPrefix:@"P{"]) {
            chunkType = OrgOssPdfreporterEngineJRExpressionChunk_TYPE_PARAMETER;
          }
          else if ([token hasPrefix:@"F{"]) {
            chunkType = OrgOssPdfreporterEngineJRExpressionChunk_TYPE_FIELD;
          }
          else if ([token hasPrefix:@"V{"]) {
            chunkType = OrgOssPdfreporterEngineJRExpressionChunk_TYPE_VARIABLE;
          }
          else if ([token hasPrefix:@"R{"]) {
            chunkType = OrgOssPdfreporterEngineJRExpressionChunk_TYPE_RESOURCE;
          }
        }
        if (chunkType == OrgOssPdfreporterEngineJRExpressionChunk_TYPE_TEXT) {
          if (behindDelims > 0) {
            (void) [textChunk appendWithNSString:@"$"];
          }
          (void) [textChunk appendWithNSString:token];
        }
        else {
          jint end = [token indexOf:'}'];
          if (end > 0) {
            if (behindDelims > 1) {
              (void) [textChunk appendWithNSString:token];
            }
            else {
              if ([textChunk length] > 0) {
                [self addTextChunkWithNSString:[textChunk description]];
              }
              [self addChunkWithByte:chunkType withNSString:[token substring:2 endIndex:end]];
              textChunk = new_JavaLangStringBuffer_initWithNSString_([token substring:end + 1]);
            }
          }
          else {
            if (behindDelims > 0) {
              (void) [textChunk appendWithNSString:@"$"];
            }
            (void) [textChunk appendWithNSString:token];
          }
        }
        behindDelims = 0;
      }
    }
    if (behindDelims > 0) {
      (void) [textChunk appendWithNSString:@"$"];
    }
    if ([textChunk length] > 0) {
      [self addTextChunkWithNSString:[textChunk description]];
    }
  }
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) firePropertyChangeWithNSString:OrgOssPdfreporterEngineDesignJRDesignExpression_PROPERTY_TEXT withId:old withId:text];
}

- (OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *)getEventSupport {
  @synchronized(self) {
    if (eventSupport_ == nil) {
      eventSupport_ = new_OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport_initWithId_(self);
    }
  }
  return eventSupport_;
}

- (id)clone {
  OrgOssPdfreporterEngineDesignJRDesignExpression *clone = (OrgOssPdfreporterEngineDesignJRDesignExpression *) cast_chk([super clone], [OrgOssPdfreporterEngineDesignJRDesignExpression class]);
  ((OrgOssPdfreporterEngineDesignJRDesignExpression *) nil_chk(clone))->chunks_JRDesignExpression_ = OrgOssPdfreporterEngineUtilJRCloneUtils_cloneListWithJavaUtilList_(chunks_JRDesignExpression_);
  clone->eventSupport_ = nil;
  return clone;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "JRDesignExpression", NULL, 0x1, NULL, NULL },
    { "initWithNSString:", "JRDesignExpression", NULL, 0x1, NULL, NULL },
    { "setValueClassWithIOSClass:", "setValueClass", "V", 0x1, NULL, "(Ljava/lang/Class<*>;)V" },
    { "setValueClassNameWithNSString:", "setValueClassName", "V", 0x1, NULL, NULL },
    { "setIdWithInt:", "setId", "V", 0x1, NULL, NULL },
    { "getChunks", NULL, "[Lorg.oss.pdfreporter.engine.JRExpressionChunk;", 0x1, NULL, NULL },
    { "setChunksWithJavaUtilList:", "setChunks", "V", 0x1, NULL, "(Ljava/util/List<Lorg/oss/pdfreporter/engine/JRExpressionChunk;>;)V" },
    { "addChunkWithOrgOssPdfreporterEngineDesignJRDesignExpressionChunk:", "addChunk", "V", 0x1, NULL, NULL },
    { "addChunkWithByte:withNSString:", "addChunk", "V", 0x4, NULL, NULL },
    { "addTextChunkWithNSString:", "addTextChunk", "V", 0x1, NULL, NULL },
    { "addParameterChunkWithNSString:", "addParameterChunk", "V", 0x1, NULL, NULL },
    { "addFieldChunkWithNSString:", "addFieldChunk", "V", 0x1, NULL, NULL },
    { "addVariableChunkWithNSString:", "addVariableChunk", "V", 0x1, NULL, NULL },
    { "addResourceChunkWithNSString:", "addResourceChunk", "V", 0x1, NULL, NULL },
    { "setTextWithNSString:", "setText", "V", 0x1, NULL, NULL },
    { "getEventSupport", NULL, "Lorg.oss.pdfreporter.engine.design.events.JRPropertyChangeSupport;", 0x1, NULL, NULL },
    { "clone", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "serialVersionUID", 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgOssPdfreporterEngineDesignJRDesignExpression_serialVersionUID },
    { "PROPERTY_TEXT", "PROPERTY_TEXT", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineDesignJRDesignExpression_PROPERTY_TEXT, NULL, .constantValue.asLong = 0 },
    { "PROPERTY_VALUE_CLASS_NAME", "PROPERTY_VALUE_CLASS_NAME", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineDesignJRDesignExpression_PROPERTY_VALUE_CLASS_NAME, NULL, .constantValue.asLong = 0 },
    { "chunks_JRDesignExpression_", "chunks", 0x4, "Ljava.util.List;", NULL, "Ljava/util/List<Lorg/oss/pdfreporter/engine/JRExpressionChunk;>;", .constantValue.asLong = 0 },
    { "eventSupport_", NULL, 0x82, "Lorg.oss.pdfreporter.engine.design.events.JRPropertyChangeSupport;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineDesignJRDesignExpression = { 2, "JRDesignExpression", "org.oss.pdfreporter.engine.design", NULL, 0x1, 17, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineDesignJRDesignExpression;
}

@end

void OrgOssPdfreporterEngineDesignJRDesignExpression_init(OrgOssPdfreporterEngineDesignJRDesignExpression *self) {
  OrgOssPdfreporterEngineBaseJRBaseExpression_init(self);
  self->chunks_JRDesignExpression_ = new_JavaUtilArrayList_init();
  [self regenerateId];
}

OrgOssPdfreporterEngineDesignJRDesignExpression *new_OrgOssPdfreporterEngineDesignJRDesignExpression_init() {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineDesignJRDesignExpression, init)
}

OrgOssPdfreporterEngineDesignJRDesignExpression *create_OrgOssPdfreporterEngineDesignJRDesignExpression_init() {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineDesignJRDesignExpression, init)
}

void OrgOssPdfreporterEngineDesignJRDesignExpression_initWithNSString_(OrgOssPdfreporterEngineDesignJRDesignExpression *self, NSString *text) {
  OrgOssPdfreporterEngineDesignJRDesignExpression_init(self);
  [self setTextWithNSString:text];
}

OrgOssPdfreporterEngineDesignJRDesignExpression *new_OrgOssPdfreporterEngineDesignJRDesignExpression_initWithNSString_(NSString *text) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineDesignJRDesignExpression, initWithNSString_, text)
}

OrgOssPdfreporterEngineDesignJRDesignExpression *create_OrgOssPdfreporterEngineDesignJRDesignExpression_initWithNSString_(NSString *text) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineDesignJRDesignExpression, initWithNSString_, text)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineDesignJRDesignExpression)
