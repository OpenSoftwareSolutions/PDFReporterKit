//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/design/JRReportCompileData.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/io/Serializable.h"
#include "java/lang/Integer.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"
#include "org/oss/pdfreporter/crosstabs/JRCrosstab.h"
#include "org/oss/pdfreporter/engine/JRConstants.h"
#include "org/oss/pdfreporter/engine/JRDataset.h"
#include "org/oss/pdfreporter/engine/JRException.h"
#include "org/oss/pdfreporter/engine/JasperReport.h"
#include "org/oss/pdfreporter/engine/design/JRAbstractCompiler.h"
#include "org/oss/pdfreporter/engine/design/JRReportCompileData.h"

@interface OrgOssPdfreporterEngineDesignJRReportCompileData () {
 @public
  id<JavaIoSerializable> mainDatasetCompileData_;
  id<JavaUtilMap> datasetCompileData_;
  id<JavaUtilMap> crosstabCompileData_;
}

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineDesignJRReportCompileData, mainDatasetCompileData_, id<JavaIoSerializable>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineDesignJRReportCompileData, datasetCompileData_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineDesignJRReportCompileData, crosstabCompileData_, id<JavaUtilMap>)

inline jlong OrgOssPdfreporterEngineDesignJRReportCompileData_get_serialVersionUID();
#define OrgOssPdfreporterEngineDesignJRReportCompileData_serialVersionUID 10200LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgOssPdfreporterEngineDesignJRReportCompileData, serialVersionUID, jlong)

@implementation OrgOssPdfreporterEngineDesignJRReportCompileData

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterEngineDesignJRReportCompileData_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)setMainDatasetCompileDataWithJavaIoSerializable:(id<JavaIoSerializable>)compileData {
  mainDatasetCompileData_ = compileData;
}

- (void)setDatasetCompileDataWithOrgOssPdfreporterEngineJRDataset:(id<OrgOssPdfreporterEngineJRDataset>)dataset
                                           withJavaIoSerializable:(id<JavaIoSerializable>)compileData {
  if ([((id<OrgOssPdfreporterEngineJRDataset>) nil_chk(dataset)) isMainDataset]) {
    [self setMainDatasetCompileDataWithJavaIoSerializable:compileData];
  }
  else {
    (void) [((id<JavaUtilMap>) nil_chk(datasetCompileData_)) putWithId:[dataset getName] withId:compileData];
  }
}

- (void)setCrosstabCompileDataWithInt:(jint)crosstabId
               withJavaIoSerializable:(id<JavaIoSerializable>)compileData {
  (void) [((id<JavaUtilMap>) nil_chk(crosstabCompileData_)) putWithId:JavaLangInteger_valueOfWithInt_(crosstabId) withId:compileData];
}

- (id<JavaIoSerializable>)getMainDatasetCompileData {
  return mainDatasetCompileData_;
}

- (id<JavaIoSerializable>)getDatasetCompileDataWithOrgOssPdfreporterEngineJRDataset:(id<OrgOssPdfreporterEngineJRDataset>)dataset {
  id<JavaIoSerializable> compileData;
  if ([((id<OrgOssPdfreporterEngineJRDataset>) nil_chk(dataset)) isMainDataset]) {
    compileData = [self getMainDatasetCompileData];
  }
  else {
    compileData = [((id<JavaUtilMap>) nil_chk(datasetCompileData_)) getWithId:[dataset getName]];
    if (compileData == nil) {
      @throw new_OrgOssPdfreporterEngineJRException_initWithNSString_(JreStrcat("$$$", @"Compile data for dataset ", [dataset getName], @" not found in the report."));
    }
  }
  return compileData;
}

- (id<JavaIoSerializable>)getCrosstabCompileDataWithOrgOssPdfreporterCrosstabsJRCrosstab:(id<OrgOssPdfreporterCrosstabsJRCrosstab>)crosstab {
  id<JavaIoSerializable> compileData = [((id<JavaUtilMap>) nil_chk(crosstabCompileData_)) getWithId:JavaLangInteger_valueOfWithInt_([((id<OrgOssPdfreporterCrosstabsJRCrosstab>) nil_chk(crosstab)) getId])];
  if (compileData == nil) {
    @throw new_OrgOssPdfreporterEngineJRException_initWithNSString_(@"Compile data for crosstab not found in the report.");
  }
  return compileData;
}

- (NSString *)getUnitNameWithOrgOssPdfreporterEngineJasperReport:(OrgOssPdfreporterEngineJasperReport *)jasperReport
                            withOrgOssPdfreporterEngineJRDataset:(id<OrgOssPdfreporterEngineJRDataset>)dataset {
  return OrgOssPdfreporterEngineDesignJRAbstractCompiler_getUnitNameWithOrgOssPdfreporterEngineJasperReport_withOrgOssPdfreporterEngineJRDataset_(jasperReport, dataset);
}

- (NSString *)getUnitNameWithOrgOssPdfreporterEngineJasperReport:(OrgOssPdfreporterEngineJasperReport *)jasperReport
                        withOrgOssPdfreporterCrosstabsJRCrosstab:(id<OrgOssPdfreporterCrosstabsJRCrosstab>)crosstab {
  return OrgOssPdfreporterEngineDesignJRAbstractCompiler_getUnitNameWithOrgOssPdfreporterEngineJasperReport_withOrgOssPdfreporterCrosstabsJRCrosstab_(jasperReport, crosstab);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "JRReportCompileData", NULL, 0x1, NULL, NULL },
    { "setMainDatasetCompileDataWithJavaIoSerializable:", "setMainDatasetCompileData", "V", 0x1, NULL, NULL },
    { "setDatasetCompileDataWithOrgOssPdfreporterEngineJRDataset:withJavaIoSerializable:", "setDatasetCompileData", "V", 0x1, NULL, NULL },
    { "setCrosstabCompileDataWithInt:withJavaIoSerializable:", "setCrosstabCompileData", "V", 0x1, NULL, NULL },
    { "getMainDatasetCompileData", NULL, "Ljava.io.Serializable;", 0x1, NULL, NULL },
    { "getDatasetCompileDataWithOrgOssPdfreporterEngineJRDataset:", "getDatasetCompileData", "Ljava.io.Serializable;", 0x1, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "getCrosstabCompileDataWithOrgOssPdfreporterCrosstabsJRCrosstab:", "getCrosstabCompileData", "Ljava.io.Serializable;", 0x1, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "getUnitNameWithOrgOssPdfreporterEngineJasperReport:withOrgOssPdfreporterEngineJRDataset:", "getUnitName", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getUnitNameWithOrgOssPdfreporterEngineJasperReport:withOrgOssPdfreporterCrosstabsJRCrosstab:", "getUnitName", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "serialVersionUID", 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgOssPdfreporterEngineDesignJRReportCompileData_serialVersionUID },
    { "mainDatasetCompileData_", NULL, 0x2, "Ljava.io.Serializable;", NULL, NULL, .constantValue.asLong = 0 },
    { "datasetCompileData_", NULL, 0x2, "Ljava.util.Map;", NULL, "Ljava/util/Map<Ljava/lang/String;Ljava/io/Serializable;>;", .constantValue.asLong = 0 },
    { "crosstabCompileData_", NULL, 0x2, "Ljava.util.Map;", NULL, "Ljava/util/Map<Ljava/lang/Integer;Ljava/io/Serializable;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineDesignJRReportCompileData = { 2, "JRReportCompileData", "org.oss.pdfreporter.engine.design", NULL, 0x1, 9, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineDesignJRReportCompileData;
}

@end

void OrgOssPdfreporterEngineDesignJRReportCompileData_init(OrgOssPdfreporterEngineDesignJRReportCompileData *self) {
  NSObject_init(self);
  self->datasetCompileData_ = new_JavaUtilHashMap_init();
  self->crosstabCompileData_ = new_JavaUtilHashMap_init();
}

OrgOssPdfreporterEngineDesignJRReportCompileData *new_OrgOssPdfreporterEngineDesignJRReportCompileData_init() {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineDesignJRReportCompileData, init)
}

OrgOssPdfreporterEngineDesignJRReportCompileData *create_OrgOssPdfreporterEngineDesignJRReportCompileData_init() {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineDesignJRReportCompileData, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineDesignJRReportCompileData)
