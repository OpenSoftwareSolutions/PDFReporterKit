//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/JasperCompileManager.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgOssPdfreporterEngineJasperCompileManager")
#ifdef RESTRICT_OrgOssPdfreporterEngineJasperCompileManager
#define INCLUDE_ALL_OrgOssPdfreporterEngineJasperCompileManager 0
#else
#define INCLUDE_ALL_OrgOssPdfreporterEngineJasperCompileManager 1
#endif
#undef RESTRICT_OrgOssPdfreporterEngineJasperCompileManager

#if !defined (OrgOssPdfreporterEngineJasperCompileManager_) && (INCLUDE_ALL_OrgOssPdfreporterEngineJasperCompileManager || defined(INCLUDE_OrgOssPdfreporterEngineJasperCompileManager))
#define OrgOssPdfreporterEngineJasperCompileManager_

@class JavaIoInputStream;
@class JavaIoOutputStream;
@class OrgOssPdfreporterEngineDesignJasperDesign;
@class OrgOssPdfreporterEngineFillJREvaluator;
@class OrgOssPdfreporterEngineJasperReport;
@protocol JavaUtilCollection;
@protocol OrgOssPdfreporterCrosstabsJRCrosstab;
@protocol OrgOssPdfreporterEngineJRDataset;
@protocol OrgOssPdfreporterEngineJasperReportsContext;

@interface OrgOssPdfreporterEngineJasperCompileManager : NSObject

#pragma mark Public

- (OrgOssPdfreporterEngineJasperReport *)compileWithJavaIoInputStream:(JavaIoInputStream *)inputStream;

- (OrgOssPdfreporterEngineJasperReport *)compileWithOrgOssPdfreporterEngineDesignJasperDesign:(OrgOssPdfreporterEngineDesignJasperDesign *)jasperDesign;

- (OrgOssPdfreporterEngineJasperReport *)compileWithNSString:(NSString *)sourceFileName;

+ (OrgOssPdfreporterEngineJasperReport *)compileReportWithJavaIoInputStream:(JavaIoInputStream *)inputStream;

+ (OrgOssPdfreporterEngineJasperReport *)compileReportWithOrgOssPdfreporterEngineDesignJasperDesign:(OrgOssPdfreporterEngineDesignJasperDesign *)jasperDesign;

+ (OrgOssPdfreporterEngineJasperReport *)compileReportWithNSString:(NSString *)sourceFileName;

+ (void)compileReportToFileWithOrgOssPdfreporterEngineDesignJasperDesign:(OrgOssPdfreporterEngineDesignJasperDesign *)jasperDesign
                                                            withNSString:(NSString *)destFileName;

+ (NSString *)compileReportToFileWithNSString:(NSString *)sourceFileName;

+ (void)compileReportToFileWithNSString:(NSString *)sourceFileName
                           withNSString:(NSString *)destFileName;

+ (void)compileReportToStreamWithJavaIoInputStream:(JavaIoInputStream *)inputStream
                            withJavaIoOutputStream:(JavaIoOutputStream *)outputStream;

+ (void)compileReportToStreamWithOrgOssPdfreporterEngineDesignJasperDesign:(OrgOssPdfreporterEngineDesignJasperDesign *)jasperDesign
                                                    withJavaIoOutputStream:(JavaIoOutputStream *)outputStream;

- (void)compileToFileWithOrgOssPdfreporterEngineDesignJasperDesign:(OrgOssPdfreporterEngineDesignJasperDesign *)jasperDesign
                                                      withNSString:(NSString *)destFileName;

- (NSString *)compileToFileWithNSString:(NSString *)sourceFileName;

- (void)compileToFileWithNSString:(NSString *)sourceFileName
                     withNSString:(NSString *)destFileName;

- (void)compileToStreamWithJavaIoInputStream:(JavaIoInputStream *)inputStream
                      withJavaIoOutputStream:(JavaIoOutputStream *)outputStream;

- (void)compileToStreamWithOrgOssPdfreporterEngineDesignJasperDesign:(OrgOssPdfreporterEngineDesignJasperDesign *)jasperDesign
                                              withJavaIoOutputStream:(JavaIoOutputStream *)outputStream;

- (OrgOssPdfreporterEngineFillJREvaluator *)getEvaluatorWithOrgOssPdfreporterEngineJasperReport:(OrgOssPdfreporterEngineJasperReport *)jasperReport;

- (OrgOssPdfreporterEngineFillJREvaluator *)getEvaluatorWithOrgOssPdfreporterEngineJasperReport:(OrgOssPdfreporterEngineJasperReport *)jasperReport
                                                       withOrgOssPdfreporterCrosstabsJRCrosstab:(id<OrgOssPdfreporterCrosstabsJRCrosstab>)crosstab;

- (OrgOssPdfreporterEngineFillJREvaluator *)getEvaluatorWithOrgOssPdfreporterEngineJasperReport:(OrgOssPdfreporterEngineJasperReport *)jasperReport
                                                           withOrgOssPdfreporterEngineJRDataset:(id<OrgOssPdfreporterEngineJRDataset>)dataset;

+ (OrgOssPdfreporterEngineJasperCompileManager *)getInstanceWithOrgOssPdfreporterEngineJasperReportsContext:(id<OrgOssPdfreporterEngineJasperReportsContext>)jasperReportsContext;

+ (OrgOssPdfreporterEngineFillJREvaluator *)loadEvaluatorWithOrgOssPdfreporterEngineJasperReport:(OrgOssPdfreporterEngineJasperReport *)jasperReport;

+ (OrgOssPdfreporterEngineFillJREvaluator *)loadEvaluatorWithOrgOssPdfreporterEngineJasperReport:(OrgOssPdfreporterEngineJasperReport *)jasperReport
                                                        withOrgOssPdfreporterCrosstabsJRCrosstab:(id<OrgOssPdfreporterCrosstabsJRCrosstab>)crosstab;

+ (OrgOssPdfreporterEngineFillJREvaluator *)loadEvaluatorWithOrgOssPdfreporterEngineJasperReport:(OrgOssPdfreporterEngineJasperReport *)jasperReport
                                                            withOrgOssPdfreporterEngineJRDataset:(id<OrgOssPdfreporterEngineJRDataset>)dataset;

- (id<JavaUtilCollection>)verifyWithOrgOssPdfreporterEngineDesignJasperDesign:(OrgOssPdfreporterEngineDesignJasperDesign *)jasperDesign;

+ (id<JavaUtilCollection>)verifyDesignWithOrgOssPdfreporterEngineDesignJasperDesign:(OrgOssPdfreporterEngineDesignJasperDesign *)jasperDesign;

@end

J2OBJC_STATIC_INIT(OrgOssPdfreporterEngineJasperCompileManager)

FOUNDATION_EXPORT OrgOssPdfreporterEngineJasperCompileManager *OrgOssPdfreporterEngineJasperCompileManager_getInstanceWithOrgOssPdfreporterEngineJasperReportsContext_(id<OrgOssPdfreporterEngineJasperReportsContext> jasperReportsContext);

FOUNDATION_EXPORT NSString *OrgOssPdfreporterEngineJasperCompileManager_compileReportToFileWithNSString_(NSString *sourceFileName);

FOUNDATION_EXPORT void OrgOssPdfreporterEngineJasperCompileManager_compileReportToFileWithNSString_withNSString_(NSString *sourceFileName, NSString *destFileName);

FOUNDATION_EXPORT void OrgOssPdfreporterEngineJasperCompileManager_compileReportToFileWithOrgOssPdfreporterEngineDesignJasperDesign_withNSString_(OrgOssPdfreporterEngineDesignJasperDesign *jasperDesign, NSString *destFileName);

FOUNDATION_EXPORT OrgOssPdfreporterEngineJasperReport *OrgOssPdfreporterEngineJasperCompileManager_compileReportWithNSString_(NSString *sourceFileName);

FOUNDATION_EXPORT void OrgOssPdfreporterEngineJasperCompileManager_compileReportToStreamWithJavaIoInputStream_withJavaIoOutputStream_(JavaIoInputStream *inputStream, JavaIoOutputStream *outputStream);

FOUNDATION_EXPORT void OrgOssPdfreporterEngineJasperCompileManager_compileReportToStreamWithOrgOssPdfreporterEngineDesignJasperDesign_withJavaIoOutputStream_(OrgOssPdfreporterEngineDesignJasperDesign *jasperDesign, JavaIoOutputStream *outputStream);

FOUNDATION_EXPORT OrgOssPdfreporterEngineJasperReport *OrgOssPdfreporterEngineJasperCompileManager_compileReportWithJavaIoInputStream_(JavaIoInputStream *inputStream);

FOUNDATION_EXPORT OrgOssPdfreporterEngineJasperReport *OrgOssPdfreporterEngineJasperCompileManager_compileReportWithOrgOssPdfreporterEngineDesignJasperDesign_(OrgOssPdfreporterEngineDesignJasperDesign *jasperDesign);

FOUNDATION_EXPORT id<JavaUtilCollection> OrgOssPdfreporterEngineJasperCompileManager_verifyDesignWithOrgOssPdfreporterEngineDesignJasperDesign_(OrgOssPdfreporterEngineDesignJasperDesign *jasperDesign);

FOUNDATION_EXPORT OrgOssPdfreporterEngineFillJREvaluator *OrgOssPdfreporterEngineJasperCompileManager_loadEvaluatorWithOrgOssPdfreporterEngineJasperReport_withOrgOssPdfreporterEngineJRDataset_(OrgOssPdfreporterEngineJasperReport *jasperReport, id<OrgOssPdfreporterEngineJRDataset> dataset);

FOUNDATION_EXPORT OrgOssPdfreporterEngineFillJREvaluator *OrgOssPdfreporterEngineJasperCompileManager_loadEvaluatorWithOrgOssPdfreporterEngineJasperReport_withOrgOssPdfreporterCrosstabsJRCrosstab_(OrgOssPdfreporterEngineJasperReport *jasperReport, id<OrgOssPdfreporterCrosstabsJRCrosstab> crosstab);

FOUNDATION_EXPORT OrgOssPdfreporterEngineFillJREvaluator *OrgOssPdfreporterEngineJasperCompileManager_loadEvaluatorWithOrgOssPdfreporterEngineJasperReport_(OrgOssPdfreporterEngineJasperReport *jasperReport);

J2OBJC_TYPE_LITERAL_HEADER(OrgOssPdfreporterEngineJasperCompileManager)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgOssPdfreporterEngineJasperCompileManager")
