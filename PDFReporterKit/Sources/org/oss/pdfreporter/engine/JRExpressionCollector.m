//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/JRExpressionCollector.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Integer.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/HashMap.h"
#include "java/util/HashSet.h"
#include "java/util/Iterator.h"
#include "java/util/LinkedList.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "java/util/TreeMap.h"
#include "org/oss/pdfreporter/commons/arrays/Array2D.h"
#include "org/oss/pdfreporter/crosstabs/JRCellContents.h"
#include "org/oss/pdfreporter/crosstabs/JRCrosstab.h"
#include "org/oss/pdfreporter/crosstabs/JRCrosstabBucket.h"
#include "org/oss/pdfreporter/crosstabs/JRCrosstabCell.h"
#include "org/oss/pdfreporter/crosstabs/JRCrosstabColumnGroup.h"
#include "org/oss/pdfreporter/crosstabs/JRCrosstabDataset.h"
#include "org/oss/pdfreporter/crosstabs/JRCrosstabMeasure.h"
#include "org/oss/pdfreporter/crosstabs/JRCrosstabParameter.h"
#include "org/oss/pdfreporter/crosstabs/JRCrosstabRowGroup.h"
#include "org/oss/pdfreporter/crosstabs/design/JRDesignCrosstab.h"
#include "org/oss/pdfreporter/engine/DefaultJasperReportsContext.h"
#include "org/oss/pdfreporter/engine/JRAnchor.h"
#include "org/oss/pdfreporter/engine/JRBand.h"
#include "org/oss/pdfreporter/engine/JRBreak.h"
#include "org/oss/pdfreporter/engine/JRComponentElement.h"
#include "org/oss/pdfreporter/engine/JRConditionalStyle.h"
#include "org/oss/pdfreporter/engine/JRDataset.h"
#include "org/oss/pdfreporter/engine/JRDatasetParameter.h"
#include "org/oss/pdfreporter/engine/JRDatasetRun.h"
#include "org/oss/pdfreporter/engine/JRElement.h"
#include "org/oss/pdfreporter/engine/JRElementDataset.h"
#include "org/oss/pdfreporter/engine/JREllipse.h"
#include "org/oss/pdfreporter/engine/JRExpression.h"
#include "org/oss/pdfreporter/engine/JRExpressionCollector.h"
#include "org/oss/pdfreporter/engine/JRFrame.h"
#include "org/oss/pdfreporter/engine/JRGenericElement.h"
#include "org/oss/pdfreporter/engine/JRGenericElementParameter.h"
#include "org/oss/pdfreporter/engine/JRGroup.h"
#include "org/oss/pdfreporter/engine/JRHyperlink.h"
#include "org/oss/pdfreporter/engine/JRHyperlinkParameter.h"
#include "org/oss/pdfreporter/engine/JRImage.h"
#include "org/oss/pdfreporter/engine/JRLine.h"
#include "org/oss/pdfreporter/engine/JRParameter.h"
#include "org/oss/pdfreporter/engine/JRPropertyExpression.h"
#include "org/oss/pdfreporter/engine/JRRectangle.h"
#include "org/oss/pdfreporter/engine/JRReport.h"
#include "org/oss/pdfreporter/engine/JRReportTemplate.h"
#include "org/oss/pdfreporter/engine/JRRuntimeException.h"
#include "org/oss/pdfreporter/engine/JRSection.h"
#include "org/oss/pdfreporter/engine/JRStaticText.h"
#include "org/oss/pdfreporter/engine/JRStyle.h"
#include "org/oss/pdfreporter/engine/JRSubreport.h"
#include "org/oss/pdfreporter/engine/JRSubreportParameter.h"
#include "org/oss/pdfreporter/engine/JRTextField.h"
#include "org/oss/pdfreporter/engine/JRVariable.h"
#include "org/oss/pdfreporter/engine/JasperReportsContext.h"
#include "org/oss/pdfreporter/engine/component/Component.h"
#include "org/oss/pdfreporter/engine/component/ComponentCompiler.h"
#include "org/oss/pdfreporter/engine/component/ComponentKey.h"
#include "org/oss/pdfreporter/engine/component/ComponentsEnvironment.h"
#include "org/oss/pdfreporter/engine/component/IComponentManager.h"

@interface OrgOssPdfreporterEngineJRExpressionCollector () {
 @public
  id<OrgOssPdfreporterEngineJasperReportsContext> jasperReportsContext_;
  id<OrgOssPdfreporterEngineJRReport> report_;
  OrgOssPdfreporterEngineJRExpressionCollector *parent_;
  id<JavaUtilMap> expressionIds_;
  JavaUtilLinkedList *contextStack_;
  id<JavaUtilMap> expressionContextMap_;
  OrgOssPdfreporterEngineJRExpressionCollector_GeneratedIds *generatedIds_;
  id<JavaUtilMap> crosstabIds_;
  id<JavaUtilMap> datasetCollectors_;
  id<JavaUtilMap> crosstabCollectors_;
  id<JavaUtilSet> collectedStyles_;
}

- (void)setGeneratedIdWithOrgOssPdfreporterEngineJRExpression:(id<OrgOssPdfreporterEngineJRExpression>)expression
                                          withJavaLangInteger:(JavaLangInteger *)id_;

- (void)updateGeneratedIdWithOrgOssPdfreporterEngineJRExpression:(id<OrgOssPdfreporterEngineJRExpression>)expression
                                             withJavaLangInteger:(JavaLangInteger *)currentId
                                             withJavaLangInteger:(JavaLangInteger *)newId;

- (void)collectWithOrgOssPdfreporterEngineJRParameterArray:(IOSObjectArray *)parameters;

- (void)collectWithOrgOssPdfreporterEngineJRVariableArray:(IOSObjectArray *)variables;

- (void)collectWithOrgOssPdfreporterEngineJRGroupArray:(IOSObjectArray *)groups;

- (void)collectWithOrgOssPdfreporterEngineJRSection:(id<OrgOssPdfreporterEngineJRSection>)section;

- (void)collectWithOrgOssPdfreporterEngineJRBand:(id<OrgOssPdfreporterEngineJRBand>)band;

- (void)collectElementWithOrgOssPdfreporterEngineJRElement:(id<OrgOssPdfreporterEngineJRElement>)element;

- (void)collectAnchorWithOrgOssPdfreporterEngineJRAnchor:(id<OrgOssPdfreporterEngineJRAnchor>)anchor;

- (void)createCrosstabIdWithOrgOssPdfreporterCrosstabsJRCrosstab:(id<OrgOssPdfreporterCrosstabsJRCrosstab>)crosstab;

- (void)collectCrosstabCellsWithOrgOssPdfreporterCrosstabsJRCrosstab:(id<OrgOssPdfreporterCrosstabsJRCrosstab>)crosstab
                    withOrgOssPdfreporterEngineJRExpressionCollector:(OrgOssPdfreporterEngineJRExpressionCollector *)crosstabCollector;

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineJRExpressionCollector, jasperReportsContext_, id<OrgOssPdfreporterEngineJasperReportsContext>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineJRExpressionCollector, report_, id<OrgOssPdfreporterEngineJRReport>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineJRExpressionCollector, parent_, OrgOssPdfreporterEngineJRExpressionCollector *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineJRExpressionCollector, expressionIds_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineJRExpressionCollector, contextStack_, JavaUtilLinkedList *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineJRExpressionCollector, expressionContextMap_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineJRExpressionCollector, generatedIds_, OrgOssPdfreporterEngineJRExpressionCollector_GeneratedIds *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineJRExpressionCollector, crosstabIds_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineJRExpressionCollector, datasetCollectors_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineJRExpressionCollector, crosstabCollectors_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineJRExpressionCollector, collectedStyles_, id<JavaUtilSet>)

__attribute__((unused)) static void OrgOssPdfreporterEngineJRExpressionCollector_setGeneratedIdWithOrgOssPdfreporterEngineJRExpression_withJavaLangInteger_(OrgOssPdfreporterEngineJRExpressionCollector *self, id<OrgOssPdfreporterEngineJRExpression> expression, JavaLangInteger *id_);

__attribute__((unused)) static void OrgOssPdfreporterEngineJRExpressionCollector_updateGeneratedIdWithOrgOssPdfreporterEngineJRExpression_withJavaLangInteger_withJavaLangInteger_(OrgOssPdfreporterEngineJRExpressionCollector *self, id<OrgOssPdfreporterEngineJRExpression> expression, JavaLangInteger *currentId, JavaLangInteger *newId);

__attribute__((unused)) static void OrgOssPdfreporterEngineJRExpressionCollector_collectWithOrgOssPdfreporterEngineJRParameterArray_(OrgOssPdfreporterEngineJRExpressionCollector *self, IOSObjectArray *parameters);

__attribute__((unused)) static void OrgOssPdfreporterEngineJRExpressionCollector_collectWithOrgOssPdfreporterEngineJRVariableArray_(OrgOssPdfreporterEngineJRExpressionCollector *self, IOSObjectArray *variables);

__attribute__((unused)) static void OrgOssPdfreporterEngineJRExpressionCollector_collectWithOrgOssPdfreporterEngineJRGroupArray_(OrgOssPdfreporterEngineJRExpressionCollector *self, IOSObjectArray *groups);

__attribute__((unused)) static void OrgOssPdfreporterEngineJRExpressionCollector_collectWithOrgOssPdfreporterEngineJRSection_(OrgOssPdfreporterEngineJRExpressionCollector *self, id<OrgOssPdfreporterEngineJRSection> section);

__attribute__((unused)) static void OrgOssPdfreporterEngineJRExpressionCollector_collectWithOrgOssPdfreporterEngineJRBand_(OrgOssPdfreporterEngineJRExpressionCollector *self, id<OrgOssPdfreporterEngineJRBand> band);

__attribute__((unused)) static void OrgOssPdfreporterEngineJRExpressionCollector_collectElementWithOrgOssPdfreporterEngineJRElement_(OrgOssPdfreporterEngineJRExpressionCollector *self, id<OrgOssPdfreporterEngineJRElement> element);

__attribute__((unused)) static void OrgOssPdfreporterEngineJRExpressionCollector_collectAnchorWithOrgOssPdfreporterEngineJRAnchor_(OrgOssPdfreporterEngineJRExpressionCollector *self, id<OrgOssPdfreporterEngineJRAnchor> anchor);

__attribute__((unused)) static void OrgOssPdfreporterEngineJRExpressionCollector_createCrosstabIdWithOrgOssPdfreporterCrosstabsJRCrosstab_(OrgOssPdfreporterEngineJRExpressionCollector *self, id<OrgOssPdfreporterCrosstabsJRCrosstab> crosstab);

__attribute__((unused)) static void OrgOssPdfreporterEngineJRExpressionCollector_collectCrosstabCellsWithOrgOssPdfreporterCrosstabsJRCrosstab_withOrgOssPdfreporterEngineJRExpressionCollector_(OrgOssPdfreporterEngineJRExpressionCollector *self, id<OrgOssPdfreporterCrosstabsJRCrosstab> crosstab, OrgOssPdfreporterEngineJRExpressionCollector *crosstabCollector);

@interface OrgOssPdfreporterEngineJRExpressionCollector_GeneratedIds () {
 @public
  JavaUtilTreeMap *ids_;
  jint nextId_;
  id<JavaUtilList> expressions_;
}

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineJRExpressionCollector_GeneratedIds, ids_, JavaUtilTreeMap *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineJRExpressionCollector_GeneratedIds, expressions_, id<JavaUtilList>)

@implementation OrgOssPdfreporterEngineJRExpressionCollector

+ (OrgOssPdfreporterEngineJRExpressionCollector *)collectorWithOrgOssPdfreporterEngineJasperReportsContext:(id<OrgOssPdfreporterEngineJasperReportsContext>)jasperReportsContext
                                                                       withOrgOssPdfreporterEngineJRReport:(id<OrgOssPdfreporterEngineJRReport>)report {
  return OrgOssPdfreporterEngineJRExpressionCollector_collectorWithOrgOssPdfreporterEngineJasperReportsContext_withOrgOssPdfreporterEngineJRReport_(jasperReportsContext, report);
}

+ (id<JavaUtilList>)collectExpressionsWithOrgOssPdfreporterEngineJasperReportsContext:(id<OrgOssPdfreporterEngineJasperReportsContext>)jasperReportsContext
                                                  withOrgOssPdfreporterEngineJRReport:(id<OrgOssPdfreporterEngineJRReport>)report {
  return OrgOssPdfreporterEngineJRExpressionCollector_collectExpressionsWithOrgOssPdfreporterEngineJasperReportsContext_withOrgOssPdfreporterEngineJRReport_(jasperReportsContext, report);
}

+ (OrgOssPdfreporterEngineJRExpressionCollector *)collectorWithOrgOssPdfreporterEngineJasperReportsContext:(id<OrgOssPdfreporterEngineJasperReportsContext>)jasperReportsContext
                                                                       withOrgOssPdfreporterEngineJRReport:(id<OrgOssPdfreporterEngineJRReport>)report
                                                                  withOrgOssPdfreporterCrosstabsJRCrosstab:(id<OrgOssPdfreporterCrosstabsJRCrosstab>)crosstab {
  return OrgOssPdfreporterEngineJRExpressionCollector_collectorWithOrgOssPdfreporterEngineJasperReportsContext_withOrgOssPdfreporterEngineJRReport_withOrgOssPdfreporterCrosstabsJRCrosstab_(jasperReportsContext, report, crosstab);
}

+ (id<JavaUtilList>)collectExpressionsWithOrgOssPdfreporterEngineJasperReportsContext:(id<OrgOssPdfreporterEngineJasperReportsContext>)jasperReportsContext
                                                  withOrgOssPdfreporterEngineJRReport:(id<OrgOssPdfreporterEngineJRReport>)report
                                             withOrgOssPdfreporterCrosstabsJRCrosstab:(id<OrgOssPdfreporterCrosstabsJRCrosstab>)crosstab {
  return OrgOssPdfreporterEngineJRExpressionCollector_collectExpressionsWithOrgOssPdfreporterEngineJasperReportsContext_withOrgOssPdfreporterEngineJRReport_withOrgOssPdfreporterCrosstabsJRCrosstab_(jasperReportsContext, report, crosstab);
}

+ (OrgOssPdfreporterEngineJRExpressionCollector *)collectorWithOrgOssPdfreporterEngineJRReport:(id<OrgOssPdfreporterEngineJRReport>)report {
  return OrgOssPdfreporterEngineJRExpressionCollector_collectorWithOrgOssPdfreporterEngineJRReport_(report);
}

+ (id<JavaUtilList>)collectExpressionsWithOrgOssPdfreporterEngineJRReport:(id<OrgOssPdfreporterEngineJRReport>)report {
  return OrgOssPdfreporterEngineJRExpressionCollector_collectExpressionsWithOrgOssPdfreporterEngineJRReport_(report);
}

+ (OrgOssPdfreporterEngineJRExpressionCollector *)collectorWithOrgOssPdfreporterEngineJRReport:(id<OrgOssPdfreporterEngineJRReport>)report
                                                      withOrgOssPdfreporterCrosstabsJRCrosstab:(id<OrgOssPdfreporterCrosstabsJRCrosstab>)crosstab {
  return OrgOssPdfreporterEngineJRExpressionCollector_collectorWithOrgOssPdfreporterEngineJRReport_withOrgOssPdfreporterCrosstabsJRCrosstab_(report, crosstab);
}

+ (id<JavaUtilList>)collectExpressionsWithOrgOssPdfreporterEngineJRReport:(id<OrgOssPdfreporterEngineJRReport>)report
                                 withOrgOssPdfreporterCrosstabsJRCrosstab:(id<OrgOssPdfreporterCrosstabsJRCrosstab>)crosstab {
  return OrgOssPdfreporterEngineJRExpressionCollector_collectExpressionsWithOrgOssPdfreporterEngineJRReport_withOrgOssPdfreporterCrosstabsJRCrosstab_(report, crosstab);
}

- (instancetype)initWithOrgOssPdfreporterEngineJRExpressionCollector:(OrgOssPdfreporterEngineJRExpressionCollector *)parent
                                 withOrgOssPdfreporterEngineJRReport:(id<OrgOssPdfreporterEngineJRReport>)report {
  OrgOssPdfreporterEngineJRExpressionCollector_initWithOrgOssPdfreporterEngineJRExpressionCollector_withOrgOssPdfreporterEngineJRReport_(self, parent, report);
  return self;
}

- (instancetype)initWithOrgOssPdfreporterEngineJasperReportsContext:(id<OrgOssPdfreporterEngineJasperReportsContext>)jasperReportsContext
                   withOrgOssPdfreporterEngineJRExpressionCollector:(OrgOssPdfreporterEngineJRExpressionCollector *)parent
                                withOrgOssPdfreporterEngineJRReport:(id<OrgOssPdfreporterEngineJRReport>)report {
  OrgOssPdfreporterEngineJRExpressionCollector_initWithOrgOssPdfreporterEngineJasperReportsContext_withOrgOssPdfreporterEngineJRExpressionCollector_withOrgOssPdfreporterEngineJRReport_(self, jasperReportsContext, parent, report);
  return self;
}

- (void)addExpressionWithOrgOssPdfreporterEngineJRExpression:(id<OrgOssPdfreporterEngineJRExpression>)expression {
  if (expression != nil) {
    JavaLangInteger *id_ = [self getExpressionIdWithOrgOssPdfreporterEngineJRExpression:expression];
    if (id_ == nil) {
      id_ = [((OrgOssPdfreporterEngineJRExpressionCollector_GeneratedIds *) nil_chk(generatedIds_)) nextId];
      OrgOssPdfreporterEngineJRExpressionCollector_setGeneratedIdWithOrgOssPdfreporterEngineJRExpression_withJavaLangInteger_(self, expression, id_);
      (void) [((OrgOssPdfreporterEngineJRExpressionCollector_GeneratedIds *) nil_chk(generatedIds_)) putWithJavaLangInteger:id_ withOrgOssPdfreporterEngineJRExpression:expression];
    }
    else {
      id<OrgOssPdfreporterEngineJRExpression> existingExpression = [((OrgOssPdfreporterEngineJRExpressionCollector_GeneratedIds *) nil_chk(generatedIds_)) putWithJavaLangInteger:id_ withOrgOssPdfreporterEngineJRExpression:expression];
      if (existingExpression != nil && ![existingExpression isEqual:expression]) {
        JavaLangInteger *newId = [((OrgOssPdfreporterEngineJRExpressionCollector_GeneratedIds *) nil_chk(generatedIds_)) nextId];
        OrgOssPdfreporterEngineJRExpressionCollector_updateGeneratedIdWithOrgOssPdfreporterEngineJRExpression_withJavaLangInteger_withJavaLangInteger_(self, existingExpression, id_, newId);
        (void) [((OrgOssPdfreporterEngineJRExpressionCollector_GeneratedIds *) nil_chk(generatedIds_)) putWithJavaLangInteger:newId withOrgOssPdfreporterEngineJRExpression:existingExpression];
      }
    }
    [self setExpressionContextWithOrgOssPdfreporterEngineJRExpression:expression];
  }
}

- (void)setGeneratedIdWithOrgOssPdfreporterEngineJRExpression:(id<OrgOssPdfreporterEngineJRExpression>)expression
                                          withJavaLangInteger:(JavaLangInteger *)id_ {
  OrgOssPdfreporterEngineJRExpressionCollector_setGeneratedIdWithOrgOssPdfreporterEngineJRExpression_withJavaLangInteger_(self, expression, id_);
}

- (void)updateGeneratedIdWithOrgOssPdfreporterEngineJRExpression:(id<OrgOssPdfreporterEngineJRExpression>)expression
                                             withJavaLangInteger:(JavaLangInteger *)currentId
                                             withJavaLangInteger:(JavaLangInteger *)newId {
  OrgOssPdfreporterEngineJRExpressionCollector_updateGeneratedIdWithOrgOssPdfreporterEngineJRExpression_withJavaLangInteger_withJavaLangInteger_(self, expression, currentId, newId);
}

- (void)pushContextObjectWithId:(id)context {
  [((JavaUtilLinkedList *) nil_chk(contextStack_)) addLastWithId:context];
}

- (id)popContextObject {
  return [((JavaUtilLinkedList *) nil_chk(contextStack_)) removeLast];
}

- (void)setExpressionContextWithOrgOssPdfreporterEngineJRExpression:(id<OrgOssPdfreporterEngineJRExpression>)expression {
  if (![((JavaUtilLinkedList *) nil_chk(contextStack_)) isEmpty]) {
    id context = [((JavaUtilLinkedList *) nil_chk(contextStack_)) getLast];
    (void) [((id<JavaUtilMap>) nil_chk(expressionContextMap_)) putWithId:expression withId:context];
  }
}

- (OrgOssPdfreporterEngineJRExpressionCollector *)getCollectorWithOrgOssPdfreporterEngineJRElementDataset:(id<OrgOssPdfreporterEngineJRElementDataset>)elementDataset {
  OrgOssPdfreporterEngineJRExpressionCollector *collector;
  id<OrgOssPdfreporterEngineJRDatasetRun> datasetRun = [((id<OrgOssPdfreporterEngineJRElementDataset>) nil_chk(elementDataset)) getDatasetRun];
  if (datasetRun == nil) {
    collector = self;
  }
  else {
    collector = [self getDatasetCollectorWithNSString:[datasetRun getDatasetName]];
  }
  return collector;
}

- (OrgOssPdfreporterEngineJRExpressionCollector *)getDatasetCollectorWithNSString:(NSString *)datasetName {
  OrgOssPdfreporterEngineJRExpressionCollector *collector;
  if (parent_ == nil) {
    collector = [((id<JavaUtilMap>) nil_chk(datasetCollectors_)) getWithId:datasetName];
    if (collector == nil) {
      collector = new_OrgOssPdfreporterEngineJRExpressionCollector_initWithOrgOssPdfreporterEngineJasperReportsContext_withOrgOssPdfreporterEngineJRExpressionCollector_withOrgOssPdfreporterEngineJRReport_(jasperReportsContext_, self, report_);
      (void) [((id<JavaUtilMap>) nil_chk(datasetCollectors_)) putWithId:datasetName withId:collector];
    }
  }
  else {
    collector = [parent_ getDatasetCollectorWithNSString:datasetName];
  }
  return collector;
}

- (OrgOssPdfreporterEngineJRExpressionCollector *)getCollectorWithOrgOssPdfreporterEngineJRDataset:(id<OrgOssPdfreporterEngineJRDataset>)dataset {
  OrgOssPdfreporterEngineJRExpressionCollector *collector;
  if (parent_ == nil) {
    if ([((id<OrgOssPdfreporterEngineJRDataset>) nil_chk(dataset)) isMainDataset] || datasetCollectors_ == nil) {
      collector = self;
    }
    else {
      collector = [self getDatasetCollectorWithNSString:[dataset getName]];
    }
  }
  else {
    collector = [parent_ getCollectorWithOrgOssPdfreporterEngineJRDataset:dataset];
  }
  return collector;
}

- (OrgOssPdfreporterEngineJRExpressionCollector *)getCollectorWithOrgOssPdfreporterCrosstabsJRCrosstab:(id<OrgOssPdfreporterCrosstabsJRCrosstab>)crosstab {
  OrgOssPdfreporterEngineJRExpressionCollector *collector;
  if (parent_ == nil) {
    collector = [((id<JavaUtilMap>) nil_chk(crosstabCollectors_)) getWithId:crosstab];
    if (collector == nil) {
      collector = new_OrgOssPdfreporterEngineJRExpressionCollector_initWithOrgOssPdfreporterEngineJasperReportsContext_withOrgOssPdfreporterEngineJRExpressionCollector_withOrgOssPdfreporterEngineJRReport_(jasperReportsContext_, self, report_);
      (void) [((id<JavaUtilMap>) nil_chk(crosstabCollectors_)) putWithId:crosstab withId:collector];
    }
  }
  else {
    collector = [parent_ getCollectorWithOrgOssPdfreporterCrosstabsJRCrosstab:crosstab];
  }
  return collector;
}

- (id<JavaUtilList>)getExpressions {
  return new_JavaUtilArrayList_initWithJavaUtilCollection_([((OrgOssPdfreporterEngineJRExpressionCollector_GeneratedIds *) nil_chk(generatedIds_)) expressions]);
}

- (id<JavaUtilCollection>)getReportExpressions {
  return JavaUtilCollections_unmodifiableSetWithJavaUtilSet_([((id<JavaUtilMap>) nil_chk(expressionIds_)) keySet]);
}

- (id<JavaUtilList>)getExpressionsWithOrgOssPdfreporterEngineJRDataset:(id<OrgOssPdfreporterEngineJRDataset>)dataset {
  return [((OrgOssPdfreporterEngineJRExpressionCollector *) nil_chk([self getCollectorWithOrgOssPdfreporterEngineJRDataset:dataset])) getExpressions];
}

- (id<JavaUtilList>)getExpressionsWithOrgOssPdfreporterCrosstabsJRCrosstab:(id<OrgOssPdfreporterCrosstabsJRCrosstab>)crosstab {
  return [((OrgOssPdfreporterEngineJRExpressionCollector *) nil_chk([self getCollectorWithOrgOssPdfreporterCrosstabsJRCrosstab:crosstab])) getExpressions];
}

- (JavaLangInteger *)getExpressionIdWithOrgOssPdfreporterEngineJRExpression:(id<OrgOssPdfreporterEngineJRExpression>)expression {
  return [((id<JavaUtilMap>) nil_chk(expressionIds_)) getWithId:expression];
}

- (id<OrgOssPdfreporterEngineJRExpression>)getExpressionWithInt:(jint)expressionId {
  return [((OrgOssPdfreporterEngineJRExpressionCollector_GeneratedIds *) nil_chk(generatedIds_)) expressionWithInt:expressionId];
}

- (JavaLangInteger *)getCrosstabIdWithOrgOssPdfreporterCrosstabsJRCrosstab:(id<OrgOssPdfreporterCrosstabsJRCrosstab>)crosstab {
  return [((id<JavaUtilMap>) nil_chk(crosstabIds_)) getWithId:crosstab];
}

- (id)getExpressionContextWithOrgOssPdfreporterEngineJRExpression:(id<OrgOssPdfreporterEngineJRExpression>)expression {
  return [((id<JavaUtilMap>) nil_chk(expressionContextMap_)) getWithId:expression];
}

- (id<JavaUtilCollection>)collect {
  [self collectTemplates];
  [self collectWithOrgOssPdfreporterEngineJRStyle:[((id<OrgOssPdfreporterEngineJRReport>) nil_chk(report_)) getDefaultStyle]];
  (void) [self collectWithOrgOssPdfreporterEngineJRDataset:[report_ getMainDataset]];
  IOSObjectArray *datasets = [report_ getDatasets];
  if (datasets != nil && datasets->size_ > 0) {
    for (jint i = 0; i < datasets->size_; i++) {
      OrgOssPdfreporterEngineJRExpressionCollector *collector = [self getCollectorWithOrgOssPdfreporterEngineJRDataset:IOSObjectArray_Get(datasets, i)];
      (void) [((OrgOssPdfreporterEngineJRExpressionCollector *) nil_chk(collector)) collectWithOrgOssPdfreporterEngineJRDataset:IOSObjectArray_Get(datasets, i)];
    }
  }
  OrgOssPdfreporterEngineJRExpressionCollector_collectWithOrgOssPdfreporterEngineJRBand_(self, [report_ getBackground]);
  OrgOssPdfreporterEngineJRExpressionCollector_collectWithOrgOssPdfreporterEngineJRBand_(self, [report_ getTitle]);
  OrgOssPdfreporterEngineJRExpressionCollector_collectWithOrgOssPdfreporterEngineJRBand_(self, [report_ getPageHeader]);
  OrgOssPdfreporterEngineJRExpressionCollector_collectWithOrgOssPdfreporterEngineJRBand_(self, [report_ getColumnHeader]);
  OrgOssPdfreporterEngineJRExpressionCollector_collectWithOrgOssPdfreporterEngineJRSection_(self, [report_ getDetailSection]);
  OrgOssPdfreporterEngineJRExpressionCollector_collectWithOrgOssPdfreporterEngineJRBand_(self, [report_ getColumnFooter]);
  OrgOssPdfreporterEngineJRExpressionCollector_collectWithOrgOssPdfreporterEngineJRBand_(self, [report_ getPageFooter]);
  OrgOssPdfreporterEngineJRExpressionCollector_collectWithOrgOssPdfreporterEngineJRBand_(self, [report_ getLastPageFooter]);
  OrgOssPdfreporterEngineJRExpressionCollector_collectWithOrgOssPdfreporterEngineJRBand_(self, [report_ getSummary]);
  OrgOssPdfreporterEngineJRExpressionCollector_collectWithOrgOssPdfreporterEngineJRBand_(self, [report_ getNoData]);
  return [self getExpressions];
}

- (void)collectTemplates {
  IOSObjectArray *templates = [((id<OrgOssPdfreporterEngineJRReport>) nil_chk(report_)) getTemplates];
  if (templates != nil) {
    for (jint i = 0; i < templates->size_; i++) {
      id<OrgOssPdfreporterEngineJRReportTemplate> template_ = IOSObjectArray_Get(templates, i);
      [self collectWithOrgOssPdfreporterEngineJRReportTemplate:template_];
    }
  }
}

- (void)collectWithOrgOssPdfreporterEngineJRReportTemplate:(id<OrgOssPdfreporterEngineJRReportTemplate>)template_ {
  [self addExpressionWithOrgOssPdfreporterEngineJRExpression:[((id<OrgOssPdfreporterEngineJRReportTemplate>) nil_chk(template_)) getSourceExpression]];
}

- (void)collectWithOrgOssPdfreporterEngineJRStyle:(id<OrgOssPdfreporterEngineJRStyle>)style {
  if (style != nil && [((id<JavaUtilSet>) nil_chk(collectedStyles_)) addWithId:style]) {
    IOSObjectArray *conditionalStyles = [style getConditionalStyles];
    if (conditionalStyles != nil && conditionalStyles->size_ > 0) {
      for (jint i = 0; i < conditionalStyles->size_; i++) {
        [self addExpressionWithOrgOssPdfreporterEngineJRExpression:[((id<OrgOssPdfreporterEngineJRConditionalStyle>) nil_chk(IOSObjectArray_Get(conditionalStyles, i))) getConditionExpression]];
      }
    }
    [self collectWithOrgOssPdfreporterEngineJRStyle:[style getStyle]];
  }
}

- (void)collectWithOrgOssPdfreporterEngineJRParameterArray:(IOSObjectArray *)parameters {
  OrgOssPdfreporterEngineJRExpressionCollector_collectWithOrgOssPdfreporterEngineJRParameterArray_(self, parameters);
}

- (void)collectWithOrgOssPdfreporterEngineJRVariableArray:(IOSObjectArray *)variables {
  OrgOssPdfreporterEngineJRExpressionCollector_collectWithOrgOssPdfreporterEngineJRVariableArray_(self, variables);
}

- (void)collectWithOrgOssPdfreporterEngineJRGroupArray:(IOSObjectArray *)groups {
  OrgOssPdfreporterEngineJRExpressionCollector_collectWithOrgOssPdfreporterEngineJRGroupArray_(self, groups);
}

- (void)collectWithOrgOssPdfreporterEngineJRSection:(id<OrgOssPdfreporterEngineJRSection>)section {
  OrgOssPdfreporterEngineJRExpressionCollector_collectWithOrgOssPdfreporterEngineJRSection_(self, section);
}

- (void)collectWithOrgOssPdfreporterEngineJRBand:(id<OrgOssPdfreporterEngineJRBand>)band {
  OrgOssPdfreporterEngineJRExpressionCollector_collectWithOrgOssPdfreporterEngineJRBand_(self, band);
}

- (void)collectElementWithOrgOssPdfreporterEngineJRElement:(id<OrgOssPdfreporterEngineJRElement>)element {
  OrgOssPdfreporterEngineJRExpressionCollector_collectElementWithOrgOssPdfreporterEngineJRElement_(self, element);
}

- (void)collectPropertyExpressionsWithOrgOssPdfreporterEngineJRPropertyExpressionArray:(IOSObjectArray *)propertyExpressions {
  if (propertyExpressions != nil && propertyExpressions->size_ > 0) {
    for (jint i = 0; i < propertyExpressions->size_; i++) {
      [self collectPropertyExpressionWithOrgOssPdfreporterEngineJRPropertyExpression:IOSObjectArray_Get(propertyExpressions, i)];
    }
  }
}

- (void)collectPropertyExpressionWithOrgOssPdfreporterEngineJRPropertyExpression:(id<OrgOssPdfreporterEngineJRPropertyExpression>)propertyExpression {
  [self addExpressionWithOrgOssPdfreporterEngineJRExpression:[((id<OrgOssPdfreporterEngineJRPropertyExpression>) nil_chk(propertyExpression)) getValueExpression]];
}

- (void)collectAnchorWithOrgOssPdfreporterEngineJRAnchor:(id<OrgOssPdfreporterEngineJRAnchor>)anchor {
  OrgOssPdfreporterEngineJRExpressionCollector_collectAnchorWithOrgOssPdfreporterEngineJRAnchor_(self, anchor);
}

- (void)collectHyperlinkWithOrgOssPdfreporterEngineJRHyperlink:(id<OrgOssPdfreporterEngineJRHyperlink>)hyperlink {
  if (hyperlink != nil) {
    [self addExpressionWithOrgOssPdfreporterEngineJRExpression:[hyperlink getHyperlinkReferenceExpression]];
    [self addExpressionWithOrgOssPdfreporterEngineJRExpression:[hyperlink getHyperlinkAnchorExpression]];
    [self addExpressionWithOrgOssPdfreporterEngineJRExpression:[hyperlink getHyperlinkPageExpression]];
    [self addExpressionWithOrgOssPdfreporterEngineJRExpression:[hyperlink getHyperlinkTooltipExpression]];
    IOSObjectArray *hyperlinkParameters = [hyperlink getHyperlinkParameters];
    if (hyperlinkParameters != nil) {
      for (jint i = 0; i < hyperlinkParameters->size_; i++) {
        id<OrgOssPdfreporterEngineJRHyperlinkParameter> parameter = IOSObjectArray_Get(hyperlinkParameters, i);
        [self collectHyperlinkParameterWithOrgOssPdfreporterEngineJRHyperlinkParameter:parameter];
      }
    }
  }
}

- (void)collectHyperlinkParameterWithOrgOssPdfreporterEngineJRHyperlinkParameter:(id<OrgOssPdfreporterEngineJRHyperlinkParameter>)parameter {
  if (parameter != nil) {
    [self addExpressionWithOrgOssPdfreporterEngineJRExpression:[parameter getValueExpression]];
  }
}

- (void)collectWithOrgOssPdfreporterEngineJRBreak:(id<OrgOssPdfreporterEngineJRBreak>)breakElement {
  OrgOssPdfreporterEngineJRExpressionCollector_collectElementWithOrgOssPdfreporterEngineJRElement_(self, breakElement);
}

- (void)collectWithOrgOssPdfreporterEngineJRLine:(id<OrgOssPdfreporterEngineJRLine>)line {
  OrgOssPdfreporterEngineJRExpressionCollector_collectElementWithOrgOssPdfreporterEngineJRElement_(self, line);
}

- (void)collectWithOrgOssPdfreporterEngineJRRectangle:(id<OrgOssPdfreporterEngineJRRectangle>)rectangle {
  OrgOssPdfreporterEngineJRExpressionCollector_collectElementWithOrgOssPdfreporterEngineJRElement_(self, rectangle);
}

- (void)collectWithOrgOssPdfreporterEngineJREllipse:(id<OrgOssPdfreporterEngineJREllipse>)ellipse {
  OrgOssPdfreporterEngineJRExpressionCollector_collectElementWithOrgOssPdfreporterEngineJRElement_(self, ellipse);
}

- (void)collectWithOrgOssPdfreporterEngineJRImage:(id<OrgOssPdfreporterEngineJRImage>)image {
  OrgOssPdfreporterEngineJRExpressionCollector_collectElementWithOrgOssPdfreporterEngineJRElement_(self, image);
  [self addExpressionWithOrgOssPdfreporterEngineJRExpression:[((id<OrgOssPdfreporterEngineJRImage>) nil_chk(image)) getExpression]];
  OrgOssPdfreporterEngineJRExpressionCollector_collectAnchorWithOrgOssPdfreporterEngineJRAnchor_(self, image);
  [self collectHyperlinkWithOrgOssPdfreporterEngineJRHyperlink:image];
}

- (void)collectWithOrgOssPdfreporterEngineJRStaticText:(id<OrgOssPdfreporterEngineJRStaticText>)staticText {
  OrgOssPdfreporterEngineJRExpressionCollector_collectElementWithOrgOssPdfreporterEngineJRElement_(self, staticText);
}

- (void)collectWithOrgOssPdfreporterEngineJRTextField:(id<OrgOssPdfreporterEngineJRTextField>)textField {
  OrgOssPdfreporterEngineJRExpressionCollector_collectElementWithOrgOssPdfreporterEngineJRElement_(self, textField);
  [self addExpressionWithOrgOssPdfreporterEngineJRExpression:[((id<OrgOssPdfreporterEngineJRTextField>) nil_chk(textField)) getExpression]];
  [self addExpressionWithOrgOssPdfreporterEngineJRExpression:[textField getPatternExpression]];
  OrgOssPdfreporterEngineJRExpressionCollector_collectAnchorWithOrgOssPdfreporterEngineJRAnchor_(self, textField);
  [self collectHyperlinkWithOrgOssPdfreporterEngineJRHyperlink:textField];
}

- (void)collectWithOrgOssPdfreporterEngineJRSubreport:(id<OrgOssPdfreporterEngineJRSubreport>)subreport {
  OrgOssPdfreporterEngineJRExpressionCollector_collectElementWithOrgOssPdfreporterEngineJRElement_(self, subreport);
  [self addExpressionWithOrgOssPdfreporterEngineJRExpression:[((id<OrgOssPdfreporterEngineJRSubreport>) nil_chk(subreport)) getParametersMapExpression]];
  IOSObjectArray *parameters = [subreport getParameters];
  if (parameters != nil && parameters->size_ > 0) {
    for (jint j = 0; j < parameters->size_; j++) {
      [self addExpressionWithOrgOssPdfreporterEngineJRExpression:[((id<OrgOssPdfreporterEngineJRSubreportParameter>) nil_chk(IOSObjectArray_Get(parameters, j))) getExpression]];
    }
  }
  [self addExpressionWithOrgOssPdfreporterEngineJRExpression:[subreport getConnectionExpression]];
  [self addExpressionWithOrgOssPdfreporterEngineJRExpression:[subreport getDataSourceExpression]];
  [self addExpressionWithOrgOssPdfreporterEngineJRExpression:[subreport getExpression]];
}

- (void)collectWithOrgOssPdfreporterCrosstabsJRCrosstab:(id<OrgOssPdfreporterCrosstabsJRCrosstab>)crosstab {
  OrgOssPdfreporterEngineJRExpressionCollector_collectElementWithOrgOssPdfreporterEngineJRElement_(self, crosstab);
  OrgOssPdfreporterEngineJRExpressionCollector_createCrosstabIdWithOrgOssPdfreporterCrosstabsJRCrosstab_(self, crosstab);
  id<OrgOssPdfreporterCrosstabsJRCrosstabDataset> dataset = [((id<OrgOssPdfreporterCrosstabsJRCrosstab>) nil_chk(crosstab)) getDataset];
  [self collectWithOrgOssPdfreporterEngineJRElementDataset:dataset];
  OrgOssPdfreporterEngineJRExpressionCollector *datasetCollector = [self getCollectorWithOrgOssPdfreporterEngineJRElementDataset:dataset];
  OrgOssPdfreporterEngineJRExpressionCollector *crosstabCollector = [self getCollectorWithOrgOssPdfreporterCrosstabsJRCrosstab:crosstab];
  [((OrgOssPdfreporterEngineJRExpressionCollector *) nil_chk(crosstabCollector)) collectWithOrgOssPdfreporterEngineJRStyle:[((id<OrgOssPdfreporterEngineJRReport>) nil_chk(report_)) getDefaultStyle]];
  [self addExpressionWithOrgOssPdfreporterEngineJRExpression:[crosstab getParametersMapExpression]];
  IOSObjectArray *parameters = [crosstab getParameters];
  if (parameters != nil) {
    for (jint i = 0; i < parameters->size_; i++) {
      [self addExpressionWithOrgOssPdfreporterEngineJRExpression:[((id<OrgOssPdfreporterCrosstabsJRCrosstabParameter>) nil_chk(IOSObjectArray_Get(parameters, i))) getExpression]];
    }
  }
  [crosstabCollector collectWithOrgOssPdfreporterCrosstabsJRCellContents:[crosstab getHeaderCell]];
  IOSObjectArray *rowGroups = [crosstab getRowGroups];
  if (rowGroups != nil) {
    for (jint i = 0; i < rowGroups->size_; i++) {
      id<OrgOssPdfreporterCrosstabsJRCrosstabRowGroup> rowGroup = IOSObjectArray_Get(rowGroups, i);
      id<OrgOssPdfreporterCrosstabsJRCrosstabBucket> bucket = [((id<OrgOssPdfreporterCrosstabsJRCrosstabRowGroup>) nil_chk(rowGroup)) getBucket];
      [((OrgOssPdfreporterEngineJRExpressionCollector *) nil_chk(datasetCollector)) addExpressionWithOrgOssPdfreporterEngineJRExpression:[((id<OrgOssPdfreporterCrosstabsJRCrosstabBucket>) nil_chk(bucket)) getExpression]];
      [crosstabCollector pushContextObjectWithId:rowGroup];
      [crosstabCollector addExpressionWithOrgOssPdfreporterEngineJRExpression:[bucket getOrderByExpression]];
      [self addExpressionWithOrgOssPdfreporterEngineJRExpression:[bucket getComparatorExpression]];
      [crosstabCollector collectWithOrgOssPdfreporterCrosstabsJRCellContents:[rowGroup getHeader]];
      [crosstabCollector collectWithOrgOssPdfreporterCrosstabsJRCellContents:[rowGroup getTotalHeader]];
      (void) [crosstabCollector popContextObject];
    }
  }
  IOSObjectArray *colGroups = [crosstab getColumnGroups];
  if (colGroups != nil) {
    for (jint i = 0; i < colGroups->size_; i++) {
      id<OrgOssPdfreporterCrosstabsJRCrosstabColumnGroup> columnGroup = IOSObjectArray_Get(colGroups, i);
      id<OrgOssPdfreporterCrosstabsJRCrosstabBucket> bucket = [((id<OrgOssPdfreporterCrosstabsJRCrosstabColumnGroup>) nil_chk(columnGroup)) getBucket];
      [((OrgOssPdfreporterEngineJRExpressionCollector *) nil_chk(datasetCollector)) addExpressionWithOrgOssPdfreporterEngineJRExpression:[((id<OrgOssPdfreporterCrosstabsJRCrosstabBucket>) nil_chk(bucket)) getExpression]];
      [crosstabCollector pushContextObjectWithId:columnGroup];
      [crosstabCollector addExpressionWithOrgOssPdfreporterEngineJRExpression:[bucket getOrderByExpression]];
      [self addExpressionWithOrgOssPdfreporterEngineJRExpression:[bucket getComparatorExpression]];
      [crosstabCollector collectWithOrgOssPdfreporterCrosstabsJRCellContents:[columnGroup getHeader]];
      [crosstabCollector collectWithOrgOssPdfreporterCrosstabsJRCellContents:[columnGroup getTotalHeader]];
      (void) [crosstabCollector popContextObject];
    }
  }
  IOSObjectArray *measures = [crosstab getMeasures];
  if (measures != nil) {
    for (jint i = 0; i < measures->size_; i++) {
      [((OrgOssPdfreporterEngineJRExpressionCollector *) nil_chk(datasetCollector)) addExpressionWithOrgOssPdfreporterEngineJRExpression:[((id<OrgOssPdfreporterCrosstabsJRCrosstabMeasure>) nil_chk(IOSObjectArray_Get(measures, i))) getValueExpression]];
    }
  }
  [crosstabCollector collectWithOrgOssPdfreporterCrosstabsJRCellContents:[crosstab getWhenNoDataCell]];
  OrgOssPdfreporterEngineJRExpressionCollector_collectCrosstabCellsWithOrgOssPdfreporterCrosstabsJRCrosstab_withOrgOssPdfreporterEngineJRExpressionCollector_(self, crosstab, crosstabCollector);
}

- (void)createCrosstabIdWithOrgOssPdfreporterCrosstabsJRCrosstab:(id<OrgOssPdfreporterCrosstabsJRCrosstab>)crosstab {
  OrgOssPdfreporterEngineJRExpressionCollector_createCrosstabIdWithOrgOssPdfreporterCrosstabsJRCrosstab_(self, crosstab);
}

- (void)collectCrosstabCellsWithOrgOssPdfreporterCrosstabsJRCrosstab:(id<OrgOssPdfreporterCrosstabsJRCrosstab>)crosstab
                    withOrgOssPdfreporterEngineJRExpressionCollector:(OrgOssPdfreporterEngineJRExpressionCollector *)crosstabCollector {
  OrgOssPdfreporterEngineJRExpressionCollector_collectCrosstabCellsWithOrgOssPdfreporterCrosstabsJRCrosstab_withOrgOssPdfreporterEngineJRExpressionCollector_(self, crosstab, crosstabCollector);
}

- (id<JavaUtilCollection>)collectWithOrgOssPdfreporterEngineJRDataset:(id<OrgOssPdfreporterEngineJRDataset>)dataset {
  OrgOssPdfreporterEngineJRExpressionCollector *collector = [self getCollectorWithOrgOssPdfreporterEngineJRDataset:dataset];
  OrgOssPdfreporterEngineJRExpressionCollector_collectWithOrgOssPdfreporterEngineJRParameterArray_(nil_chk(collector), [((id<OrgOssPdfreporterEngineJRDataset>) nil_chk(dataset)) getParameters]);
  OrgOssPdfreporterEngineJRExpressionCollector_collectWithOrgOssPdfreporterEngineJRVariableArray_(collector, [dataset getVariables]);
  OrgOssPdfreporterEngineJRExpressionCollector_collectWithOrgOssPdfreporterEngineJRGroupArray_(collector, [dataset getGroups]);
  [collector addExpressionWithOrgOssPdfreporterEngineJRExpression:[dataset getFilterExpression]];
  return [self getExpressionsWithOrgOssPdfreporterEngineJRDataset:dataset];
}

- (void)collectWithOrgOssPdfreporterEngineJRElementDataset:(id<OrgOssPdfreporterEngineJRElementDataset>)dataset {
  [self collectWithOrgOssPdfreporterEngineJRDatasetRun:[((id<OrgOssPdfreporterEngineJRElementDataset>) nil_chk(dataset)) getDatasetRun]];
  id<OrgOssPdfreporterEngineJRExpression> incrementWhenExpression = [dataset getIncrementWhenExpression];
  if (incrementWhenExpression != nil) {
    OrgOssPdfreporterEngineJRExpressionCollector *datasetCollector = [self getCollectorWithOrgOssPdfreporterEngineJRElementDataset:dataset];
    [((OrgOssPdfreporterEngineJRExpressionCollector *) nil_chk(datasetCollector)) addExpressionWithOrgOssPdfreporterEngineJRExpression:incrementWhenExpression];
  }
}

- (void)collectWithOrgOssPdfreporterEngineJRDatasetRun:(id<OrgOssPdfreporterEngineJRDatasetRun>)datasetRun {
  if (datasetRun != nil) {
    [self addExpressionWithOrgOssPdfreporterEngineJRExpression:[datasetRun getParametersMapExpression]];
    [self addExpressionWithOrgOssPdfreporterEngineJRExpression:[datasetRun getConnectionExpression]];
    [self addExpressionWithOrgOssPdfreporterEngineJRExpression:[datasetRun getDataSourceExpression]];
    IOSObjectArray *parameters = [datasetRun getParameters];
    if (parameters != nil && parameters->size_ > 0) {
      for (jint i = 0; i < parameters->size_; i++) {
        [self addExpressionWithOrgOssPdfreporterEngineJRExpression:[((id<OrgOssPdfreporterEngineJRDatasetParameter>) nil_chk(IOSObjectArray_Get(parameters, i))) getExpression]];
      }
    }
  }
}

- (void)collectWithOrgOssPdfreporterCrosstabsJRCellContents:(id<OrgOssPdfreporterCrosstabsJRCellContents>)cell {
  if (cell != nil) {
    [self collectWithOrgOssPdfreporterEngineJRStyle:[cell getStyle]];
    IOSObjectArray *elements = [cell getElements];
    if (elements != nil && elements->size_ > 0) {
      for (jint i = 0; i < elements->size_; i++) {
        [((id<OrgOssPdfreporterEngineJRElement>) nil_chk(IOSObjectArray_Get(elements, i))) collectExpressionsWithOrgOssPdfreporterEngineJRExpressionCollector:self];
      }
    }
  }
}

- (void)collectWithOrgOssPdfreporterEngineJRFrame:(id<OrgOssPdfreporterEngineJRFrame>)frame {
  OrgOssPdfreporterEngineJRExpressionCollector_collectElementWithOrgOssPdfreporterEngineJRElement_(self, frame);
  IOSObjectArray *elements = [((id<OrgOssPdfreporterEngineJRFrame>) nil_chk(frame)) getElements];
  if (elements != nil) {
    for (jint i = 0; i < elements->size_; i++) {
      [((id<OrgOssPdfreporterEngineJRElement>) nil_chk(IOSObjectArray_Get(elements, i))) collectExpressionsWithOrgOssPdfreporterEngineJRExpressionCollector:self];
    }
  }
}

- (void)collectWithOrgOssPdfreporterEngineJRComponentElement:(id<OrgOssPdfreporterEngineJRComponentElement>)componentElement {
  OrgOssPdfreporterEngineJRExpressionCollector_collectElementWithOrgOssPdfreporterEngineJRElement_(self, componentElement);
  OrgOssPdfreporterEngineComponentComponentKey *componentKey = [((id<OrgOssPdfreporterEngineJRComponentElement>) nil_chk(componentElement)) getComponentKey];
  id<OrgOssPdfreporterEngineComponentIComponentManager> manager = [((OrgOssPdfreporterEngineComponentComponentsEnvironment *) nil_chk(OrgOssPdfreporterEngineComponentComponentsEnvironment_getInstanceWithOrgOssPdfreporterEngineJasperReportsContext_(jasperReportsContext_))) getManagerWithOrgOssPdfreporterEngineComponentComponentKey:componentKey];
  id<OrgOssPdfreporterEngineComponentComponent> component = [componentElement getComponent];
  [((id<OrgOssPdfreporterEngineComponentComponentCompiler>) nil_chk([((id<OrgOssPdfreporterEngineComponentIComponentManager>) nil_chk(manager)) getComponentCompilerWithOrgOssPdfreporterEngineJasperReportsContext:jasperReportsContext_])) collectExpressionsWithOrgOssPdfreporterEngineComponentComponent:component withOrgOssPdfreporterEngineJRExpressionCollector:self];
}

- (void)collectWithOrgOssPdfreporterEngineJRGenericElement:(id<OrgOssPdfreporterEngineJRGenericElement>)element {
  OrgOssPdfreporterEngineJRExpressionCollector_collectElementWithOrgOssPdfreporterEngineJRElement_(self, element);
  IOSObjectArray *parameters = [((id<OrgOssPdfreporterEngineJRGenericElement>) nil_chk(element)) getParameters];
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(parameters))->size_; i++) {
    id<OrgOssPdfreporterEngineJRGenericElementParameter> parameter = IOSObjectArray_Get(parameters, i);
    [self addExpressionWithOrgOssPdfreporterEngineJRExpression:[((id<OrgOssPdfreporterEngineJRGenericElementParameter>) nil_chk(parameter)) getValueExpression]];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "collectorWithOrgOssPdfreporterEngineJasperReportsContext:withOrgOssPdfreporterEngineJRReport:", "collector", "Lorg.oss.pdfreporter.engine.JRExpressionCollector;", 0x9, NULL, NULL },
    { "collectExpressionsWithOrgOssPdfreporterEngineJasperReportsContext:withOrgOssPdfreporterEngineJRReport:", "collectExpressions", "Ljava.util.List;", 0x9, NULL, "(Lorg/oss/pdfreporter/engine/JasperReportsContext;Lorg/oss/pdfreporter/engine/JRReport;)Ljava/util/List<Lorg/oss/pdfreporter/engine/JRExpression;>;" },
    { "collectorWithOrgOssPdfreporterEngineJasperReportsContext:withOrgOssPdfreporterEngineJRReport:withOrgOssPdfreporterCrosstabsJRCrosstab:", "collector", "Lorg.oss.pdfreporter.engine.JRExpressionCollector;", 0x9, NULL, NULL },
    { "collectExpressionsWithOrgOssPdfreporterEngineJasperReportsContext:withOrgOssPdfreporterEngineJRReport:withOrgOssPdfreporterCrosstabsJRCrosstab:", "collectExpressions", "Ljava.util.List;", 0x9, NULL, "(Lorg/oss/pdfreporter/engine/JasperReportsContext;Lorg/oss/pdfreporter/engine/JRReport;Lorg/oss/pdfreporter/crosstabs/JRCrosstab;)Ljava/util/List<Lorg/oss/pdfreporter/engine/JRExpression;>;" },
    { "collectorWithOrgOssPdfreporterEngineJRReport:", "collector", "Lorg.oss.pdfreporter.engine.JRExpressionCollector;", 0x9, NULL, NULL },
    { "collectExpressionsWithOrgOssPdfreporterEngineJRReport:", "collectExpressions", "Ljava.util.List;", 0x9, NULL, "(Lorg/oss/pdfreporter/engine/JRReport;)Ljava/util/List<Lorg/oss/pdfreporter/engine/JRExpression;>;" },
    { "collectorWithOrgOssPdfreporterEngineJRReport:withOrgOssPdfreporterCrosstabsJRCrosstab:", "collector", "Lorg.oss.pdfreporter.engine.JRExpressionCollector;", 0x9, NULL, NULL },
    { "collectExpressionsWithOrgOssPdfreporterEngineJRReport:withOrgOssPdfreporterCrosstabsJRCrosstab:", "collectExpressions", "Ljava.util.List;", 0x9, NULL, "(Lorg/oss/pdfreporter/engine/JRReport;Lorg/oss/pdfreporter/crosstabs/JRCrosstab;)Ljava/util/List<Lorg/oss/pdfreporter/engine/JRExpression;>;" },
    { "initWithOrgOssPdfreporterEngineJRExpressionCollector:withOrgOssPdfreporterEngineJRReport:", "JRExpressionCollector", NULL, 0x4, NULL, NULL },
    { "initWithOrgOssPdfreporterEngineJasperReportsContext:withOrgOssPdfreporterEngineJRExpressionCollector:withOrgOssPdfreporterEngineJRReport:", "JRExpressionCollector", NULL, 0x4, NULL, NULL },
    { "addExpressionWithOrgOssPdfreporterEngineJRExpression:", "addExpression", "V", 0x1, NULL, NULL },
    { "setGeneratedIdWithOrgOssPdfreporterEngineJRExpression:withJavaLangInteger:", "setGeneratedId", "V", 0x2, NULL, NULL },
    { "updateGeneratedIdWithOrgOssPdfreporterEngineJRExpression:withJavaLangInteger:withJavaLangInteger:", "updateGeneratedId", "V", 0x2, NULL, NULL },
    { "pushContextObjectWithId:", "pushContextObject", "V", 0x4, NULL, NULL },
    { "popContextObject", NULL, "Ljava.lang.Object;", 0x4, NULL, NULL },
    { "setExpressionContextWithOrgOssPdfreporterEngineJRExpression:", "setExpressionContext", "V", 0x4, NULL, NULL },
    { "getCollectorWithOrgOssPdfreporterEngineJRElementDataset:", "getCollector", "Lorg.oss.pdfreporter.engine.JRExpressionCollector;", 0x1, NULL, NULL },
    { "getDatasetCollectorWithNSString:", "getDatasetCollector", "Lorg.oss.pdfreporter.engine.JRExpressionCollector;", 0x1, NULL, NULL },
    { "getCollectorWithOrgOssPdfreporterEngineJRDataset:", "getCollector", "Lorg.oss.pdfreporter.engine.JRExpressionCollector;", 0x1, NULL, NULL },
    { "getCollectorWithOrgOssPdfreporterCrosstabsJRCrosstab:", "getCollector", "Lorg.oss.pdfreporter.engine.JRExpressionCollector;", 0x1, NULL, NULL },
    { "getExpressions", NULL, "Ljava.util.List;", 0x1, NULL, "()Ljava/util/List<Lorg/oss/pdfreporter/engine/JRExpression;>;" },
    { "getReportExpressions", NULL, "Ljava.util.Collection;", 0x1, NULL, "()Ljava/util/Collection<Lorg/oss/pdfreporter/engine/JRExpression;>;" },
    { "getExpressionsWithOrgOssPdfreporterEngineJRDataset:", "getExpressions", "Ljava.util.List;", 0x1, NULL, "(Lorg/oss/pdfreporter/engine/JRDataset;)Ljava/util/List<Lorg/oss/pdfreporter/engine/JRExpression;>;" },
    { "getExpressionsWithOrgOssPdfreporterCrosstabsJRCrosstab:", "getExpressions", "Ljava.util.List;", 0x1, NULL, "(Lorg/oss/pdfreporter/crosstabs/JRCrosstab;)Ljava/util/List<Lorg/oss/pdfreporter/engine/JRExpression;>;" },
    { "getExpressionIdWithOrgOssPdfreporterEngineJRExpression:", "getExpressionId", "Ljava.lang.Integer;", 0x1, NULL, NULL },
    { "getExpressionWithInt:", "getExpression", "Lorg.oss.pdfreporter.engine.JRExpression;", 0x1, NULL, NULL },
    { "getCrosstabIdWithOrgOssPdfreporterCrosstabsJRCrosstab:", "getCrosstabId", "Ljava.lang.Integer;", 0x1, NULL, NULL },
    { "getExpressionContextWithOrgOssPdfreporterEngineJRExpression:", "getExpressionContext", "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "collect", NULL, "Ljava.util.Collection;", 0x1, NULL, "()Ljava/util/Collection<Lorg/oss/pdfreporter/engine/JRExpression;>;" },
    { "collectTemplates", NULL, "V", 0x4, NULL, NULL },
    { "collectWithOrgOssPdfreporterEngineJRReportTemplate:", "collect", "V", 0x4, NULL, NULL },
    { "collectWithOrgOssPdfreporterEngineJRStyle:", "collect", "V", 0x1, NULL, NULL },
    { "collectWithOrgOssPdfreporterEngineJRParameterArray:", "collect", "V", 0x2, NULL, NULL },
    { "collectWithOrgOssPdfreporterEngineJRVariableArray:", "collect", "V", 0x2, NULL, NULL },
    { "collectWithOrgOssPdfreporterEngineJRGroupArray:", "collect", "V", 0x2, NULL, NULL },
    { "collectWithOrgOssPdfreporterEngineJRSection:", "collect", "V", 0x2, NULL, NULL },
    { "collectWithOrgOssPdfreporterEngineJRBand:", "collect", "V", 0x2, NULL, NULL },
    { "collectElementWithOrgOssPdfreporterEngineJRElement:", "collectElement", "V", 0x2, NULL, NULL },
    { "collectPropertyExpressionsWithOrgOssPdfreporterEngineJRPropertyExpressionArray:", "collectPropertyExpressions", "V", 0x1, NULL, NULL },
    { "collectPropertyExpressionWithOrgOssPdfreporterEngineJRPropertyExpression:", "collectPropertyExpression", "V", 0x4, NULL, NULL },
    { "collectAnchorWithOrgOssPdfreporterEngineJRAnchor:", "collectAnchor", "V", 0x2, NULL, NULL },
    { "collectHyperlinkWithOrgOssPdfreporterEngineJRHyperlink:", "collectHyperlink", "V", 0x1, NULL, NULL },
    { "collectHyperlinkParameterWithOrgOssPdfreporterEngineJRHyperlinkParameter:", "collectHyperlinkParameter", "V", 0x4, NULL, NULL },
    { "collectWithOrgOssPdfreporterEngineJRBreak:", "collect", "V", 0x1, NULL, NULL },
    { "collectWithOrgOssPdfreporterEngineJRLine:", "collect", "V", 0x1, NULL, NULL },
    { "collectWithOrgOssPdfreporterEngineJRRectangle:", "collect", "V", 0x1, NULL, NULL },
    { "collectWithOrgOssPdfreporterEngineJREllipse:", "collect", "V", 0x1, NULL, NULL },
    { "collectWithOrgOssPdfreporterEngineJRImage:", "collect", "V", 0x1, NULL, NULL },
    { "collectWithOrgOssPdfreporterEngineJRStaticText:", "collect", "V", 0x1, NULL, NULL },
    { "collectWithOrgOssPdfreporterEngineJRTextField:", "collect", "V", 0x1, NULL, NULL },
    { "collectWithOrgOssPdfreporterEngineJRSubreport:", "collect", "V", 0x1, NULL, NULL },
    { "collectWithOrgOssPdfreporterCrosstabsJRCrosstab:", "collect", "V", 0x1, NULL, NULL },
    { "createCrosstabIdWithOrgOssPdfreporterCrosstabsJRCrosstab:", "createCrosstabId", "V", 0x2, NULL, NULL },
    { "collectCrosstabCellsWithOrgOssPdfreporterCrosstabsJRCrosstab:withOrgOssPdfreporterEngineJRExpressionCollector:", "collectCrosstabCells", "V", 0x2, NULL, NULL },
    { "collectWithOrgOssPdfreporterEngineJRDataset:", "collect", "Ljava.util.Collection;", 0x1, NULL, "(Lorg/oss/pdfreporter/engine/JRDataset;)Ljava/util/Collection<Lorg/oss/pdfreporter/engine/JRExpression;>;" },
    { "collectWithOrgOssPdfreporterEngineJRElementDataset:", "collect", "V", 0x1, NULL, NULL },
    { "collectWithOrgOssPdfreporterEngineJRDatasetRun:", "collect", "V", 0x1, NULL, NULL },
    { "collectWithOrgOssPdfreporterCrosstabsJRCellContents:", "collect", "V", 0x4, NULL, NULL },
    { "collectWithOrgOssPdfreporterEngineJRFrame:", "collect", "V", 0x1, NULL, NULL },
    { "collectWithOrgOssPdfreporterEngineJRComponentElement:", "collect", "V", 0x1, NULL, NULL },
    { "collectWithOrgOssPdfreporterEngineJRGenericElement:", "collect", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "jasperReportsContext_", NULL, 0x12, "Lorg.oss.pdfreporter.engine.JasperReportsContext;", NULL, NULL, .constantValue.asLong = 0 },
    { "report_", NULL, 0x12, "Lorg.oss.pdfreporter.engine.JRReport;", NULL, NULL, .constantValue.asLong = 0 },
    { "parent_", NULL, 0x12, "Lorg.oss.pdfreporter.engine.JRExpressionCollector;", NULL, NULL, .constantValue.asLong = 0 },
    { "expressionIds_", NULL, 0x2, "Ljava.util.Map;", NULL, "Ljava/util/Map<Lorg/oss/pdfreporter/engine/JRExpression;Ljava/lang/Integer;>;", .constantValue.asLong = 0 },
    { "contextStack_", NULL, 0x2, "Ljava.util.LinkedList;", NULL, "Ljava/util/LinkedList<Ljava/lang/Object;>;", .constantValue.asLong = 0 },
    { "expressionContextMap_", NULL, 0x2, "Ljava.util.Map;", NULL, "Ljava/util/Map<Lorg/oss/pdfreporter/engine/JRExpression;Ljava/lang/Object;>;", .constantValue.asLong = 0 },
    { "generatedIds_", NULL, 0x2, "Lorg.oss.pdfreporter.engine.JRExpressionCollector$GeneratedIds;", NULL, NULL, .constantValue.asLong = 0 },
    { "crosstabIds_", NULL, 0x2, "Ljava.util.Map;", NULL, "Ljava/util/Map<Lorg/oss/pdfreporter/crosstabs/JRCrosstab;Ljava/lang/Integer;>;", .constantValue.asLong = 0 },
    { "datasetCollectors_", NULL, 0x2, "Ljava.util.Map;", NULL, "Ljava/util/Map<Ljava/lang/String;Lorg/oss/pdfreporter/engine/JRExpressionCollector;>;", .constantValue.asLong = 0 },
    { "crosstabCollectors_", NULL, 0x2, "Ljava.util.Map;", NULL, "Ljava/util/Map<Lorg/oss/pdfreporter/crosstabs/JRCrosstab;Lorg/oss/pdfreporter/engine/JRExpressionCollector;>;", .constantValue.asLong = 0 },
    { "collectedStyles_", NULL, 0x12, "Ljava.util.Set;", NULL, "Ljava/util/Set<Lorg/oss/pdfreporter/engine/JRStyle;>;", .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lorg.oss.pdfreporter.engine.JRExpressionCollector$GeneratedIds;"};
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineJRExpressionCollector = { 2, "JRExpressionCollector", "org.oss.pdfreporter.engine", NULL, 0x1, 61, methods, 11, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_OrgOssPdfreporterEngineJRExpressionCollector;
}

@end

OrgOssPdfreporterEngineJRExpressionCollector *OrgOssPdfreporterEngineJRExpressionCollector_collectorWithOrgOssPdfreporterEngineJasperReportsContext_withOrgOssPdfreporterEngineJRReport_(id<OrgOssPdfreporterEngineJasperReportsContext> jasperReportsContext, id<OrgOssPdfreporterEngineJRReport> report) {
  OrgOssPdfreporterEngineJRExpressionCollector_initialize();
  OrgOssPdfreporterEngineJRExpressionCollector *collector = new_OrgOssPdfreporterEngineJRExpressionCollector_initWithOrgOssPdfreporterEngineJasperReportsContext_withOrgOssPdfreporterEngineJRExpressionCollector_withOrgOssPdfreporterEngineJRReport_(jasperReportsContext, nil, report);
  (void) [collector collect];
  return collector;
}

id<JavaUtilList> OrgOssPdfreporterEngineJRExpressionCollector_collectExpressionsWithOrgOssPdfreporterEngineJasperReportsContext_withOrgOssPdfreporterEngineJRReport_(id<OrgOssPdfreporterEngineJasperReportsContext> jasperReportsContext, id<OrgOssPdfreporterEngineJRReport> report) {
  OrgOssPdfreporterEngineJRExpressionCollector_initialize();
  return [((OrgOssPdfreporterEngineJRExpressionCollector *) nil_chk(OrgOssPdfreporterEngineJRExpressionCollector_collectorWithOrgOssPdfreporterEngineJasperReportsContext_withOrgOssPdfreporterEngineJRReport_(jasperReportsContext, report))) getExpressions];
}

OrgOssPdfreporterEngineJRExpressionCollector *OrgOssPdfreporterEngineJRExpressionCollector_collectorWithOrgOssPdfreporterEngineJasperReportsContext_withOrgOssPdfreporterEngineJRReport_withOrgOssPdfreporterCrosstabsJRCrosstab_(id<OrgOssPdfreporterEngineJasperReportsContext> jasperReportsContext, id<OrgOssPdfreporterEngineJRReport> report, id<OrgOssPdfreporterCrosstabsJRCrosstab> crosstab) {
  OrgOssPdfreporterEngineJRExpressionCollector_initialize();
  OrgOssPdfreporterEngineJRExpressionCollector *collector = new_OrgOssPdfreporterEngineJRExpressionCollector_initWithOrgOssPdfreporterEngineJasperReportsContext_withOrgOssPdfreporterEngineJRExpressionCollector_withOrgOssPdfreporterEngineJRReport_(jasperReportsContext, nil, report);
  [collector collectWithOrgOssPdfreporterCrosstabsJRCrosstab:crosstab];
  return collector;
}

id<JavaUtilList> OrgOssPdfreporterEngineJRExpressionCollector_collectExpressionsWithOrgOssPdfreporterEngineJasperReportsContext_withOrgOssPdfreporterEngineJRReport_withOrgOssPdfreporterCrosstabsJRCrosstab_(id<OrgOssPdfreporterEngineJasperReportsContext> jasperReportsContext, id<OrgOssPdfreporterEngineJRReport> report, id<OrgOssPdfreporterCrosstabsJRCrosstab> crosstab) {
  OrgOssPdfreporterEngineJRExpressionCollector_initialize();
  return [((OrgOssPdfreporterEngineJRExpressionCollector *) nil_chk(OrgOssPdfreporterEngineJRExpressionCollector_collectorWithOrgOssPdfreporterEngineJasperReportsContext_withOrgOssPdfreporterEngineJRReport_withOrgOssPdfreporterCrosstabsJRCrosstab_(jasperReportsContext, report, crosstab))) getExpressionsWithOrgOssPdfreporterCrosstabsJRCrosstab:crosstab];
}

OrgOssPdfreporterEngineJRExpressionCollector *OrgOssPdfreporterEngineJRExpressionCollector_collectorWithOrgOssPdfreporterEngineJRReport_(id<OrgOssPdfreporterEngineJRReport> report) {
  OrgOssPdfreporterEngineJRExpressionCollector_initialize();
  return OrgOssPdfreporterEngineJRExpressionCollector_collectorWithOrgOssPdfreporterEngineJasperReportsContext_withOrgOssPdfreporterEngineJRReport_(OrgOssPdfreporterEngineDefaultJasperReportsContext_getInstance(), report);
}

id<JavaUtilList> OrgOssPdfreporterEngineJRExpressionCollector_collectExpressionsWithOrgOssPdfreporterEngineJRReport_(id<OrgOssPdfreporterEngineJRReport> report) {
  OrgOssPdfreporterEngineJRExpressionCollector_initialize();
  return OrgOssPdfreporterEngineJRExpressionCollector_collectExpressionsWithOrgOssPdfreporterEngineJasperReportsContext_withOrgOssPdfreporterEngineJRReport_(OrgOssPdfreporterEngineDefaultJasperReportsContext_getInstance(), report);
}

OrgOssPdfreporterEngineJRExpressionCollector *OrgOssPdfreporterEngineJRExpressionCollector_collectorWithOrgOssPdfreporterEngineJRReport_withOrgOssPdfreporterCrosstabsJRCrosstab_(id<OrgOssPdfreporterEngineJRReport> report, id<OrgOssPdfreporterCrosstabsJRCrosstab> crosstab) {
  OrgOssPdfreporterEngineJRExpressionCollector_initialize();
  return OrgOssPdfreporterEngineJRExpressionCollector_collectorWithOrgOssPdfreporterEngineJasperReportsContext_withOrgOssPdfreporterEngineJRReport_withOrgOssPdfreporterCrosstabsJRCrosstab_(OrgOssPdfreporterEngineDefaultJasperReportsContext_getInstance(), report, crosstab);
}

id<JavaUtilList> OrgOssPdfreporterEngineJRExpressionCollector_collectExpressionsWithOrgOssPdfreporterEngineJRReport_withOrgOssPdfreporterCrosstabsJRCrosstab_(id<OrgOssPdfreporterEngineJRReport> report, id<OrgOssPdfreporterCrosstabsJRCrosstab> crosstab) {
  OrgOssPdfreporterEngineJRExpressionCollector_initialize();
  return OrgOssPdfreporterEngineJRExpressionCollector_collectExpressionsWithOrgOssPdfreporterEngineJasperReportsContext_withOrgOssPdfreporterEngineJRReport_withOrgOssPdfreporterCrosstabsJRCrosstab_(OrgOssPdfreporterEngineDefaultJasperReportsContext_getInstance(), report, crosstab);
}

void OrgOssPdfreporterEngineJRExpressionCollector_initWithOrgOssPdfreporterEngineJRExpressionCollector_withOrgOssPdfreporterEngineJRReport_(OrgOssPdfreporterEngineJRExpressionCollector *self, OrgOssPdfreporterEngineJRExpressionCollector *parent, id<OrgOssPdfreporterEngineJRReport> report) {
  OrgOssPdfreporterEngineJRExpressionCollector_initWithOrgOssPdfreporterEngineJasperReportsContext_withOrgOssPdfreporterEngineJRExpressionCollector_withOrgOssPdfreporterEngineJRReport_(self, OrgOssPdfreporterEngineDefaultJasperReportsContext_getInstance(), parent, report);
}

OrgOssPdfreporterEngineJRExpressionCollector *new_OrgOssPdfreporterEngineJRExpressionCollector_initWithOrgOssPdfreporterEngineJRExpressionCollector_withOrgOssPdfreporterEngineJRReport_(OrgOssPdfreporterEngineJRExpressionCollector *parent, id<OrgOssPdfreporterEngineJRReport> report) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineJRExpressionCollector, initWithOrgOssPdfreporterEngineJRExpressionCollector_withOrgOssPdfreporterEngineJRReport_, parent, report)
}

OrgOssPdfreporterEngineJRExpressionCollector *create_OrgOssPdfreporterEngineJRExpressionCollector_initWithOrgOssPdfreporterEngineJRExpressionCollector_withOrgOssPdfreporterEngineJRReport_(OrgOssPdfreporterEngineJRExpressionCollector *parent, id<OrgOssPdfreporterEngineJRReport> report) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineJRExpressionCollector, initWithOrgOssPdfreporterEngineJRExpressionCollector_withOrgOssPdfreporterEngineJRReport_, parent, report)
}

void OrgOssPdfreporterEngineJRExpressionCollector_initWithOrgOssPdfreporterEngineJasperReportsContext_withOrgOssPdfreporterEngineJRExpressionCollector_withOrgOssPdfreporterEngineJRReport_(OrgOssPdfreporterEngineJRExpressionCollector *self, id<OrgOssPdfreporterEngineJasperReportsContext> jasperReportsContext, OrgOssPdfreporterEngineJRExpressionCollector *parent, id<OrgOssPdfreporterEngineJRReport> report) {
  NSObject_init(self);
  self->generatedIds_ = new_OrgOssPdfreporterEngineJRExpressionCollector_GeneratedIds_init();
  self->crosstabIds_ = new_JavaUtilHashMap_init();
  self->jasperReportsContext_ = jasperReportsContext;
  self->parent_ = parent;
  self->report_ = report;
  if (parent == nil) {
    self->expressionIds_ = new_JavaUtilHashMap_init();
    self->datasetCollectors_ = new_JavaUtilHashMap_init();
    self->crosstabCollectors_ = new_JavaUtilHashMap_init();
    self->contextStack_ = new_JavaUtilLinkedList_init();
    self->expressionContextMap_ = new_JavaUtilHashMap_init();
  }
  else {
    self->expressionIds_ = ((OrgOssPdfreporterEngineJRExpressionCollector *) nil_chk(self->parent_))->expressionIds_;
    self->contextStack_ = self->parent_->contextStack_;
    self->expressionContextMap_ = self->parent_->expressionContextMap_;
  }
  self->collectedStyles_ = new_JavaUtilHashSet_init();
}

OrgOssPdfreporterEngineJRExpressionCollector *new_OrgOssPdfreporterEngineJRExpressionCollector_initWithOrgOssPdfreporterEngineJasperReportsContext_withOrgOssPdfreporterEngineJRExpressionCollector_withOrgOssPdfreporterEngineJRReport_(id<OrgOssPdfreporterEngineJasperReportsContext> jasperReportsContext, OrgOssPdfreporterEngineJRExpressionCollector *parent, id<OrgOssPdfreporterEngineJRReport> report) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineJRExpressionCollector, initWithOrgOssPdfreporterEngineJasperReportsContext_withOrgOssPdfreporterEngineJRExpressionCollector_withOrgOssPdfreporterEngineJRReport_, jasperReportsContext, parent, report)
}

OrgOssPdfreporterEngineJRExpressionCollector *create_OrgOssPdfreporterEngineJRExpressionCollector_initWithOrgOssPdfreporterEngineJasperReportsContext_withOrgOssPdfreporterEngineJRExpressionCollector_withOrgOssPdfreporterEngineJRReport_(id<OrgOssPdfreporterEngineJasperReportsContext> jasperReportsContext, OrgOssPdfreporterEngineJRExpressionCollector *parent, id<OrgOssPdfreporterEngineJRReport> report) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineJRExpressionCollector, initWithOrgOssPdfreporterEngineJasperReportsContext_withOrgOssPdfreporterEngineJRExpressionCollector_withOrgOssPdfreporterEngineJRReport_, jasperReportsContext, parent, report)
}

void OrgOssPdfreporterEngineJRExpressionCollector_setGeneratedIdWithOrgOssPdfreporterEngineJRExpression_withJavaLangInteger_(OrgOssPdfreporterEngineJRExpressionCollector *self, id<OrgOssPdfreporterEngineJRExpression> expression, JavaLangInteger *id_) {
  id existingId = [((id<JavaUtilMap>) nil_chk(self->expressionIds_)) putWithId:expression withId:id_];
  if (existingId != nil && ![existingId isEqual:id_]) {
    @throw new_OrgOssPdfreporterEngineJRRuntimeException_initWithNSString_(JreStrcat("$$$", @"Expression \"", [((id<OrgOssPdfreporterEngineJRExpression>) nil_chk(expression)) getText], @"\" has two generated IDs"));
  }
}

void OrgOssPdfreporterEngineJRExpressionCollector_updateGeneratedIdWithOrgOssPdfreporterEngineJRExpression_withJavaLangInteger_withJavaLangInteger_(OrgOssPdfreporterEngineJRExpressionCollector *self, id<OrgOssPdfreporterEngineJRExpression> expression, JavaLangInteger *currentId, JavaLangInteger *newId) {
  id existingId = [((id<JavaUtilMap>) nil_chk(self->expressionIds_)) putWithId:expression withId:newId];
  if (existingId == nil || ![existingId isEqual:currentId]) {
    @throw new_OrgOssPdfreporterEngineJRRuntimeException_initWithNSString_(JreStrcat("$$$@", @"Expression \"", [((id<OrgOssPdfreporterEngineJRExpression>) nil_chk(expression)) getText], @"\" not found with id ", currentId));
  }
}

void OrgOssPdfreporterEngineJRExpressionCollector_collectWithOrgOssPdfreporterEngineJRParameterArray_(OrgOssPdfreporterEngineJRExpressionCollector *self, IOSObjectArray *parameters) {
  if (parameters != nil && parameters->size_ > 0) {
    for (jint i = 0; i < parameters->size_; i++) {
      [self addExpressionWithOrgOssPdfreporterEngineJRExpression:[((id<OrgOssPdfreporterEngineJRParameter>) nil_chk(IOSObjectArray_Get(parameters, i))) getDefaultValueExpression]];
    }
  }
}

void OrgOssPdfreporterEngineJRExpressionCollector_collectWithOrgOssPdfreporterEngineJRVariableArray_(OrgOssPdfreporterEngineJRExpressionCollector *self, IOSObjectArray *variables) {
  if (variables != nil && variables->size_ > 0) {
    for (jint i = 0; i < variables->size_; i++) {
      id<OrgOssPdfreporterEngineJRVariable> variable = IOSObjectArray_Get(variables, i);
      [self addExpressionWithOrgOssPdfreporterEngineJRExpression:[((id<OrgOssPdfreporterEngineJRVariable>) nil_chk(variable)) getExpression]];
      [self addExpressionWithOrgOssPdfreporterEngineJRExpression:[variable getInitialValueExpression]];
    }
  }
}

void OrgOssPdfreporterEngineJRExpressionCollector_collectWithOrgOssPdfreporterEngineJRGroupArray_(OrgOssPdfreporterEngineJRExpressionCollector *self, IOSObjectArray *groups) {
  if (groups != nil && groups->size_ > 0) {
    for (jint i = 0; i < groups->size_; i++) {
      id<OrgOssPdfreporterEngineJRGroup> group = IOSObjectArray_Get(groups, i);
      [self addExpressionWithOrgOssPdfreporterEngineJRExpression:[((id<OrgOssPdfreporterEngineJRGroup>) nil_chk(group)) getExpression]];
      OrgOssPdfreporterEngineJRExpressionCollector_collectWithOrgOssPdfreporterEngineJRSection_(self, [group getGroupHeaderSection]);
      OrgOssPdfreporterEngineJRExpressionCollector_collectWithOrgOssPdfreporterEngineJRSection_(self, [group getGroupFooterSection]);
    }
  }
}

void OrgOssPdfreporterEngineJRExpressionCollector_collectWithOrgOssPdfreporterEngineJRSection_(OrgOssPdfreporterEngineJRExpressionCollector *self, id<OrgOssPdfreporterEngineJRSection> section) {
  if (section != nil) {
    IOSObjectArray *bands = [section getBands];
    if (bands != nil && bands->size_ > 0) {
      for (jint i = 0; i < bands->size_; i++) {
        OrgOssPdfreporterEngineJRExpressionCollector_collectWithOrgOssPdfreporterEngineJRBand_(self, IOSObjectArray_Get(bands, i));
      }
    }
  }
}

void OrgOssPdfreporterEngineJRExpressionCollector_collectWithOrgOssPdfreporterEngineJRBand_(OrgOssPdfreporterEngineJRExpressionCollector *self, id<OrgOssPdfreporterEngineJRBand> band) {
  if (band != nil) {
    [self addExpressionWithOrgOssPdfreporterEngineJRExpression:[band getPrintWhenExpression]];
    IOSObjectArray *elements = [band getElements];
    if (elements != nil && elements->size_ > 0) {
      for (jint i = 0; i < elements->size_; i++) {
        [((id<OrgOssPdfreporterEngineJRElement>) nil_chk(IOSObjectArray_Get(elements, i))) collectExpressionsWithOrgOssPdfreporterEngineJRExpressionCollector:self];
      }
    }
  }
}

void OrgOssPdfreporterEngineJRExpressionCollector_collectElementWithOrgOssPdfreporterEngineJRElement_(OrgOssPdfreporterEngineJRExpressionCollector *self, id<OrgOssPdfreporterEngineJRElement> element) {
  [self collectWithOrgOssPdfreporterEngineJRStyle:[((id<OrgOssPdfreporterEngineJRElement>) nil_chk(element)) getStyle]];
  [self addExpressionWithOrgOssPdfreporterEngineJRExpression:[element getPrintWhenExpression]];
  [self collectPropertyExpressionsWithOrgOssPdfreporterEngineJRPropertyExpressionArray:[element getPropertyExpressions]];
}

void OrgOssPdfreporterEngineJRExpressionCollector_collectAnchorWithOrgOssPdfreporterEngineJRAnchor_(OrgOssPdfreporterEngineJRExpressionCollector *self, id<OrgOssPdfreporterEngineJRAnchor> anchor) {
  [self addExpressionWithOrgOssPdfreporterEngineJRExpression:[((id<OrgOssPdfreporterEngineJRAnchor>) nil_chk(anchor)) getAnchorNameExpression]];
}

void OrgOssPdfreporterEngineJRExpressionCollector_createCrosstabIdWithOrgOssPdfreporterCrosstabsJRCrosstab_(OrgOssPdfreporterEngineJRExpressionCollector *self, id<OrgOssPdfreporterCrosstabsJRCrosstab> crosstab) {
  (void) [((id<JavaUtilMap>) nil_chk(self->crosstabIds_)) putWithId:crosstab withId:JavaLangInteger_valueOfWithInt_([self->crosstabIds_ size])];
}

void OrgOssPdfreporterEngineJRExpressionCollector_collectCrosstabCellsWithOrgOssPdfreporterCrosstabsJRCrosstab_withOrgOssPdfreporterEngineJRExpressionCollector_(OrgOssPdfreporterEngineJRExpressionCollector *self, id<OrgOssPdfreporterCrosstabsJRCrosstab> crosstab, OrgOssPdfreporterEngineJRExpressionCollector *crosstabCollector) {
  if ([crosstab isKindOfClass:[OrgOssPdfreporterCrosstabsDesignJRDesignCrosstab class]]) {
    id<JavaUtilList> cellsList = [((OrgOssPdfreporterCrosstabsDesignJRDesignCrosstab *) nil_chk(((OrgOssPdfreporterCrosstabsDesignJRDesignCrosstab *) cast_chk(crosstab, [OrgOssPdfreporterCrosstabsDesignJRDesignCrosstab class])))) getCellsList];
    if (cellsList != nil) {
      for (id<JavaUtilIterator> iter = [cellsList iterator]; [((id<JavaUtilIterator>) nil_chk(iter)) hasNext]; ) {
        id<OrgOssPdfreporterCrosstabsJRCrosstabCell> cell = [iter next];
        [((OrgOssPdfreporterEngineJRExpressionCollector *) nil_chk(crosstabCollector)) collectWithOrgOssPdfreporterCrosstabsJRCellContents:[((id<OrgOssPdfreporterCrosstabsJRCrosstabCell>) nil_chk(cell)) getContents]];
      }
    }
  }
  else {
    id<OrgOssPdfreporterCommonsArraysArray2D> cells = [((id<OrgOssPdfreporterCrosstabsJRCrosstab>) nil_chk(crosstab)) getCells];
    if (cells != nil) {
      for (jint i = 0; i < [cells getLengthI]; ++i) {
        for (jint j = 0; j < [cells getLengthJ]; j++) {
          if ([cells getWithInt:i withInt:j] != nil) {
            [((OrgOssPdfreporterEngineJRExpressionCollector *) nil_chk(crosstabCollector)) collectWithOrgOssPdfreporterCrosstabsJRCellContents:[((id<OrgOssPdfreporterCrosstabsJRCrosstabCell>) nil_chk([cells getWithInt:i withInt:j])) getContents]];
          }
        }
      }
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineJRExpressionCollector)

@implementation OrgOssPdfreporterEngineJRExpressionCollector_GeneratedIds

- (id<OrgOssPdfreporterEngineJRExpression>)putWithJavaLangInteger:(JavaLangInteger *)id_
                          withOrgOssPdfreporterEngineJRExpression:(id<OrgOssPdfreporterEngineJRExpression>)expression {
  expressions_ = nil;
  return [((JavaUtilTreeMap *) nil_chk(ids_)) putWithId:id_ withId:expression];
}

- (JavaLangInteger *)nextId {
  JavaLangInteger *id_ = JavaLangInteger_valueOfWithInt_(nextId_);
  while ([((JavaUtilTreeMap *) nil_chk(ids_)) containsKeyWithId:id_]) {
    id_ = JavaLangInteger_valueOfWithInt_(++nextId_);
  }
  return id_;
}

- (id<JavaUtilList>)expressions {
  if (expressions_ == nil) {
    expressions_ = new_JavaUtilArrayList_initWithJavaUtilCollection_([((JavaUtilTreeMap *) nil_chk(ids_)) values]);
  }
  return expressions_;
}

- (id<OrgOssPdfreporterEngineJRExpression>)expressionWithInt:(jint)id_ {
  return [((JavaUtilTreeMap *) nil_chk(ids_)) getWithId:JavaLangInteger_valueOfWithInt_(id_)];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterEngineJRExpressionCollector_GeneratedIds_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "putWithJavaLangInteger:withOrgOssPdfreporterEngineJRExpression:", "put", "Lorg.oss.pdfreporter.engine.JRExpression;", 0x1, NULL, NULL },
    { "nextId", NULL, "Ljava.lang.Integer;", 0x1, NULL, NULL },
    { "expressions", NULL, "Ljava.util.List;", 0x1, NULL, "()Ljava/util/List<Lorg/oss/pdfreporter/engine/JRExpression;>;" },
    { "expressionWithInt:", "expression", "Lorg.oss.pdfreporter.engine.JRExpression;", 0x1, NULL, NULL },
    { "init", "GeneratedIds", NULL, 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "ids_", NULL, 0x12, "Ljava.util.TreeMap;", NULL, "Ljava/util/TreeMap<Ljava/lang/Integer;Lorg/oss/pdfreporter/engine/JRExpression;>;", .constantValue.asLong = 0 },
    { "nextId_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "expressions_", NULL, 0x2, "Ljava.util.List;", NULL, "Ljava/util/List<Lorg/oss/pdfreporter/engine/JRExpression;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineJRExpressionCollector_GeneratedIds = { 2, "GeneratedIds", "org.oss.pdfreporter.engine", "JRExpressionCollector", 0xc, 5, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineJRExpressionCollector_GeneratedIds;
}

@end

void OrgOssPdfreporterEngineJRExpressionCollector_GeneratedIds_init(OrgOssPdfreporterEngineJRExpressionCollector_GeneratedIds *self) {
  NSObject_init(self);
  self->ids_ = new_JavaUtilTreeMap_init();
}

OrgOssPdfreporterEngineJRExpressionCollector_GeneratedIds *new_OrgOssPdfreporterEngineJRExpressionCollector_GeneratedIds_init() {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineJRExpressionCollector_GeneratedIds, init)
}

OrgOssPdfreporterEngineJRExpressionCollector_GeneratedIds *create_OrgOssPdfreporterEngineJRExpressionCollector_GeneratedIds_init() {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineJRExpressionCollector_GeneratedIds, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineJRExpressionCollector_GeneratedIds)
