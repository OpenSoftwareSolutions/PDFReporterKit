//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/JRGenericElementType.java
//

#include "J2ObjC_source.h"
#include "org/oss/pdfreporter/engine/JRConstants.h"
#include "org/oss/pdfreporter/engine/JRGenericElementType.h"

@interface OrgOssPdfreporterEngineJRGenericElementType () {
 @public
  NSString *namespace__;
  NSString *name_;
}

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineJRGenericElementType, namespace__, NSString *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineJRGenericElementType, name_, NSString *)

inline jlong OrgOssPdfreporterEngineJRGenericElementType_get_serialVersionUID();
#define OrgOssPdfreporterEngineJRGenericElementType_serialVersionUID 10200LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgOssPdfreporterEngineJRGenericElementType, serialVersionUID, jlong)

@implementation OrgOssPdfreporterEngineJRGenericElementType

- (instancetype)initWithNSString:(NSString *)namespace_
                    withNSString:(NSString *)name {
  OrgOssPdfreporterEngineJRGenericElementType_initWithNSString_withNSString_(self, namespace_, name);
  return self;
}

- (NSString *)getNamespace {
  return namespace__;
}

- (NSString *)getName {
  return name_;
}

- (NSUInteger)hash {
  jint hash_ = 17;
  hash_ = 37 * hash_ + ((jint) [((NSString *) nil_chk(namespace__)) hash]);
  hash_ = 37 * hash_ + ((jint) [((NSString *) nil_chk(name_)) hash]);
  return hash_;
}

- (jboolean)isEqual:(id)o {
  if (o == self) {
    return true;
  }
  if (!([o isKindOfClass:[OrgOssPdfreporterEngineJRGenericElementType class]])) {
    return false;
  }
  OrgOssPdfreporterEngineJRGenericElementType *key = (OrgOssPdfreporterEngineJRGenericElementType *) cast_chk(o, [OrgOssPdfreporterEngineJRGenericElementType class]);
  return [((NSString *) nil_chk(namespace__)) isEqual:((OrgOssPdfreporterEngineJRGenericElementType *) nil_chk(key))->namespace__] && [((NSString *) nil_chk(name_)) isEqual:key->name_];
}

- (NSString *)description {
  return JreStrcat("$C$", namespace__, '#', name_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withNSString:", "JRGenericElementType", NULL, 0x1, NULL, NULL },
    { "getNamespace", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getName", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "serialVersionUID", 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgOssPdfreporterEngineJRGenericElementType_serialVersionUID },
    { "namespace__", "namespace", 0x12, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "name_", NULL, 0x12, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineJRGenericElementType = { 2, "JRGenericElementType", "org.oss.pdfreporter.engine", NULL, 0x1, 6, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineJRGenericElementType;
}

@end

void OrgOssPdfreporterEngineJRGenericElementType_initWithNSString_withNSString_(OrgOssPdfreporterEngineJRGenericElementType *self, NSString *namespace_, NSString *name) {
  NSObject_init(self);
  self->name_ = name;
  self->namespace__ = namespace_;
}

OrgOssPdfreporterEngineJRGenericElementType *new_OrgOssPdfreporterEngineJRGenericElementType_initWithNSString_withNSString_(NSString *namespace_, NSString *name) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineJRGenericElementType, initWithNSString_withNSString_, namespace_, name)
}

OrgOssPdfreporterEngineJRGenericElementType *create_OrgOssPdfreporterEngineJRGenericElementType_initWithNSString_withNSString_(NSString *namespace_, NSString *name) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineJRGenericElementType, initWithNSString_withNSString_, namespace_, name)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineJRGenericElementType)
