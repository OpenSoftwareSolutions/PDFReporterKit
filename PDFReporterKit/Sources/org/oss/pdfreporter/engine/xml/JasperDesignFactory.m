//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/xml/JasperDesignFactory.java
//

#include "J2ObjC_source.h"
#include "java/lang/Boolean.h"
#include "java/lang/Integer.h"
#include "org/oss/pdfreporter/engine/design/JasperDesign.h"
#include "org/oss/pdfreporter/engine/type/OrientationEnum.h"
#include "org/oss/pdfreporter/engine/type/PrintOrderEnum.h"
#include "org/oss/pdfreporter/engine/type/RunDirectionEnum.h"
#include "org/oss/pdfreporter/engine/type/WhenNoDataTypeEnum.h"
#include "org/oss/pdfreporter/engine/type/WhenResourceMissingTypeEnum.h"
#include "org/oss/pdfreporter/engine/xml/JRBaseFactory.h"
#include "org/oss/pdfreporter/engine/xml/JRXmlConstants.h"
#include "org/oss/pdfreporter/engine/xml/JasperDesignFactory.h"
#include "org/oss/pdfreporter/uses/java/util/UUID.h"
#include "org/oss/pdfreporter/xml/parsers/IAttributes.h"

@implementation OrgOssPdfreporterEngineXmlJasperDesignFactory

- (id)createObjectWithOrgOssPdfreporterXmlParsersIAttributes:(id<OrgOssPdfreporterXmlParsersIAttributes>)atts {
  OrgOssPdfreporterEngineDesignJasperDesign *jasperDesign = new_OrgOssPdfreporterEngineDesignJasperDesign_init();
  [jasperDesign setNameWithNSString:[((id<OrgOssPdfreporterXmlParsersIAttributes>) nil_chk(atts)) getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_name]];
  [jasperDesign setLanguageWithNSString:[atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_language]];
  NSString *columnCount = [atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_columnCount];
  if (columnCount != nil && ((jint) [columnCount length]) > 0) {
    [jasperDesign setColumnCountWithInt:JavaLangInteger_parseIntWithNSString_(columnCount)];
  }
  OrgOssPdfreporterEngineTypePrintOrderEnum *printOrder = OrgOssPdfreporterEngineTypePrintOrderEnum_getByNameWithNSString_([atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_printOrder]);
  if (printOrder != nil) {
    [jasperDesign setPrintOrderWithOrgOssPdfreporterEngineTypePrintOrderEnum:printOrder];
  }
  OrgOssPdfreporterEngineTypeRunDirectionEnum *columnDirection = OrgOssPdfreporterEngineTypeRunDirectionEnum_getByNameWithNSString_([atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_columnDirection]);
  if (columnDirection != nil) {
    [jasperDesign setColumnDirectionWithOrgOssPdfreporterEngineTypeRunDirectionEnum:columnDirection];
  }
  NSString *pageWidth = [atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_pageWidth];
  if (pageWidth != nil && ((jint) [pageWidth length]) > 0) {
    [jasperDesign setPageWidthWithInt:JavaLangInteger_parseIntWithNSString_(pageWidth)];
  }
  NSString *pageHeight = [atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_pageHeight];
  if (pageHeight != nil && ((jint) [pageHeight length]) > 0) {
    [jasperDesign setPageHeightWithInt:JavaLangInteger_parseIntWithNSString_(pageHeight)];
  }
  OrgOssPdfreporterEngineTypeOrientationEnum *orientation = OrgOssPdfreporterEngineTypeOrientationEnum_getByNameWithNSString_([atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_orientation]);
  if (orientation != nil) {
    [jasperDesign setOrientationWithOrgOssPdfreporterEngineTypeOrientationEnum:orientation];
  }
  OrgOssPdfreporterEngineTypeWhenNoDataTypeEnum *whenNoDataType = OrgOssPdfreporterEngineTypeWhenNoDataTypeEnum_getByNameWithNSString_([atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_whenNoDataType]);
  if (whenNoDataType != nil) {
    [jasperDesign setWhenNoDataTypeWithOrgOssPdfreporterEngineTypeWhenNoDataTypeEnum:whenNoDataType];
  }
  NSString *columnWidth = [atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_columnWidth];
  if (columnWidth != nil && ((jint) [columnWidth length]) > 0) {
    [jasperDesign setColumnWidthWithInt:JavaLangInteger_parseIntWithNSString_(columnWidth)];
  }
  NSString *columnSpacing = [atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_columnSpacing];
  if (columnSpacing != nil && ((jint) [columnSpacing length]) > 0) {
    [jasperDesign setColumnSpacingWithInt:JavaLangInteger_parseIntWithNSString_(columnSpacing)];
  }
  NSString *leftMargin = [atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_leftMargin];
  if (leftMargin != nil && ((jint) [leftMargin length]) > 0) {
    [jasperDesign setLeftMarginWithInt:JavaLangInteger_parseIntWithNSString_(leftMargin)];
  }
  NSString *rightMargin = [atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_rightMargin];
  if (rightMargin != nil && ((jint) [rightMargin length]) > 0) {
    [jasperDesign setRightMarginWithInt:JavaLangInteger_parseIntWithNSString_(rightMargin)];
  }
  NSString *topMargin = [atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_topMargin];
  if (topMargin != nil && ((jint) [topMargin length]) > 0) {
    [jasperDesign setTopMarginWithInt:JavaLangInteger_parseIntWithNSString_(topMargin)];
  }
  NSString *bottomMargin = [atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_bottomMargin];
  if (bottomMargin != nil && ((jint) [bottomMargin length]) > 0) {
    [jasperDesign setBottomMarginWithInt:JavaLangInteger_parseIntWithNSString_(bottomMargin)];
  }
  NSString *isTitleNewPage = [atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_isTitleNewPage];
  if (isTitleNewPage != nil && ((jint) [isTitleNewPage length]) > 0) {
    [jasperDesign setTitleNewPageWithBoolean:[((JavaLangBoolean *) nil_chk(JavaLangBoolean_valueOfWithNSString_(isTitleNewPage))) booleanValue]];
  }
  NSString *isSummaryNewPage = [atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_isSummaryNewPage];
  if (isSummaryNewPage != nil && ((jint) [isSummaryNewPage length]) > 0) {
    [jasperDesign setSummaryNewPageWithBoolean:[((JavaLangBoolean *) nil_chk(JavaLangBoolean_valueOfWithNSString_(isSummaryNewPage))) booleanValue]];
  }
  NSString *isSummaryWithPageHeaderAndFooter = [atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_isSummaryWithPageHeaderAndFooter];
  if (isSummaryWithPageHeaderAndFooter != nil && ((jint) [isSummaryWithPageHeaderAndFooter length]) > 0) {
    [jasperDesign setSummaryWithPageHeaderAndFooterWithBoolean:[((JavaLangBoolean *) nil_chk(JavaLangBoolean_valueOfWithNSString_(isSummaryWithPageHeaderAndFooter))) booleanValue]];
  }
  NSString *isFloatColumnFooter = [atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_isFloatColumnFooter];
  if (isFloatColumnFooter != nil && ((jint) [isFloatColumnFooter length]) > 0) {
    [jasperDesign setFloatColumnFooterWithBoolean:[((JavaLangBoolean *) nil_chk(JavaLangBoolean_valueOfWithNSString_(isFloatColumnFooter))) booleanValue]];
  }
  [jasperDesign setFormatFactoryClassWithNSString:[atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_formatFactoryClass]];
  [jasperDesign setResourceBundleWithNSString:[atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_resourceBundle]];
  OrgOssPdfreporterEngineTypeWhenResourceMissingTypeEnum *whenResourceMissingType = OrgOssPdfreporterEngineTypeWhenResourceMissingTypeEnum_getByNameWithNSString_([atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_whenResourceMissingType]);
  if (whenResourceMissingType != nil) {
    [jasperDesign setWhenResourceMissingTypeWithOrgOssPdfreporterEngineTypeWhenResourceMissingTypeEnum:whenResourceMissingType];
  }
  NSString *isIgnorePagination = [atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_isIgnorePagination];
  if (isIgnorePagination != nil && ((jint) [isIgnorePagination length]) > 0) {
    [jasperDesign setIgnorePaginationWithBoolean:[((JavaLangBoolean *) nil_chk(JavaLangBoolean_valueOfWithNSString_(isIgnorePagination))) booleanValue]];
  }
  NSString *uuid = [atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_uuid];
  if (uuid != nil) {
    [jasperDesign setUUIDWithOrgOssPdfreporterUsesJavaUtilUUID:OrgOssPdfreporterUsesJavaUtilUUID_fromStringWithNSString_(uuid)];
  }
  return jasperDesign;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterEngineXmlJasperDesignFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "createObjectWithOrgOssPdfreporterXmlParsersIAttributes:", "createObject", "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "init", "JasperDesignFactory", NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineXmlJasperDesignFactory = { 2, "JasperDesignFactory", "org.oss.pdfreporter.engine.xml", NULL, 0x1, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineXmlJasperDesignFactory;
}

@end

void OrgOssPdfreporterEngineXmlJasperDesignFactory_init(OrgOssPdfreporterEngineXmlJasperDesignFactory *self) {
  OrgOssPdfreporterEngineXmlJRBaseFactory_init(self);
}

OrgOssPdfreporterEngineXmlJasperDesignFactory *new_OrgOssPdfreporterEngineXmlJasperDesignFactory_init() {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineXmlJasperDesignFactory, init)
}

OrgOssPdfreporterEngineXmlJasperDesignFactory *create_OrgOssPdfreporterEngineXmlJasperDesignFactory_init() {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineXmlJasperDesignFactory, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineXmlJasperDesignFactory)
