//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/xml/JRPrintImageFactory.java
//

#include "J2ObjC_source.h"
#include "java/lang/Boolean.h"
#include "java/lang/Integer.h"
#include "org/oss/pdfreporter/engine/JRDefaultStyleProvider.h"
#include "org/oss/pdfreporter/engine/JasperPrint.h"
#include "org/oss/pdfreporter/engine/base/JRBasePrintImage.h"
#include "org/oss/pdfreporter/engine/type/HorizontalAlignEnum.h"
#include "org/oss/pdfreporter/engine/type/OnErrorTypeEnum.h"
#include "org/oss/pdfreporter/engine/type/ScaleImageEnum.h"
#include "org/oss/pdfreporter/engine/type/VerticalAlignEnum.h"
#include "org/oss/pdfreporter/engine/xml/JRBaseFactory.h"
#include "org/oss/pdfreporter/engine/xml/JRPrintImageFactory.h"
#include "org/oss/pdfreporter/engine/xml/JRXmlConstants.h"
#include "org/oss/pdfreporter/uses/org/apache/digester/IDigester.h"
#include "org/oss/pdfreporter/xml/parsers/IAttributes.h"

@implementation OrgOssPdfreporterEngineXmlJRPrintImageFactory

- (id)createObjectWithOrgOssPdfreporterXmlParsersIAttributes:(id<OrgOssPdfreporterXmlParsersIAttributes>)atts {
  OrgOssPdfreporterEngineJasperPrint *jasperPrint = (OrgOssPdfreporterEngineJasperPrint *) cast_chk([((id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>) nil_chk(digester_)) peekWithInt:[digester_ getCount] - 2], [OrgOssPdfreporterEngineJasperPrint class]);
  OrgOssPdfreporterEngineBaseJRBasePrintImage *image = new_OrgOssPdfreporterEngineBaseJRBasePrintImage_initWithOrgOssPdfreporterEngineJRDefaultStyleProvider_([((OrgOssPdfreporterEngineJasperPrint *) nil_chk(jasperPrint)) getDefaultStyleProvider]);
  OrgOssPdfreporterEngineTypeScaleImageEnum *scaleImage = OrgOssPdfreporterEngineTypeScaleImageEnum_getByNameWithNSString_([((id<OrgOssPdfreporterXmlParsersIAttributes>) nil_chk(atts)) getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_scaleImage]);
  if (scaleImage != nil) {
    [image setScaleImageWithOrgOssPdfreporterEngineTypeScaleImageEnum:scaleImage];
  }
  OrgOssPdfreporterEngineTypeHorizontalAlignEnum *horizontalAlignment = OrgOssPdfreporterEngineTypeHorizontalAlignEnum_getByNameWithNSString_([atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_hAlign]);
  if (horizontalAlignment != nil) {
    [image setHorizontalAlignmentWithOrgOssPdfreporterEngineTypeHorizontalAlignEnum:horizontalAlignment];
  }
  OrgOssPdfreporterEngineTypeVerticalAlignEnum *verticalAlignment = OrgOssPdfreporterEngineTypeVerticalAlignEnum_getByNameWithNSString_([atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_vAlign]);
  if (verticalAlignment != nil) {
    [image setVerticalAlignmentWithOrgOssPdfreporterEngineTypeVerticalAlignEnum:verticalAlignment];
  }
  NSString *isLazy = [atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_isLazy];
  if (isLazy != nil && ((jint) [isLazy length]) > 0) {
    [image setLazyWithBoolean:[((JavaLangBoolean *) nil_chk(JavaLangBoolean_valueOfWithNSString_(isLazy))) booleanValue]];
  }
  OrgOssPdfreporterEngineTypeOnErrorTypeEnum *onErrorType = OrgOssPdfreporterEngineTypeOnErrorTypeEnum_getByNameWithNSString_([atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_onErrorType]);
  if (onErrorType != nil) {
    [image setOnErrorTypeWithOrgOssPdfreporterEngineTypeOnErrorTypeEnum:onErrorType];
  }
  [image setLinkTypeWithNSString:[atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_hyperlinkType]];
  [image setLinkTargetWithNSString:[atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_hyperlinkTarget]];
  [image setAnchorNameWithNSString:[atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_anchorName]];
  [image setHyperlinkReferenceWithNSString:[atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_hyperlinkReference]];
  [image setHyperlinkAnchorWithNSString:[atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_hyperlinkAnchor]];
  NSString *hyperlinkPage = [atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_hyperlinkPage];
  if (hyperlinkPage != nil) {
    [image setHyperlinkPageWithJavaLangInteger:JavaLangInteger_valueOfWithNSString_(hyperlinkPage)];
  }
  [image setHyperlinkTooltipWithNSString:[atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_hyperlinkTooltip]];
  NSString *bookmarkLevelAttr = [atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_bookmarkLevel];
  if (bookmarkLevelAttr != nil) {
    [image setBookmarkLevelWithInt:JavaLangInteger_parseIntWithNSString_(bookmarkLevelAttr)];
  }
  return image;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterEngineXmlJRPrintImageFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "createObjectWithOrgOssPdfreporterXmlParsersIAttributes:", "createObject", "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "init", "JRPrintImageFactory", NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineXmlJRPrintImageFactory = { 2, "JRPrintImageFactory", "org.oss.pdfreporter.engine.xml", NULL, 0x1, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineXmlJRPrintImageFactory;
}

@end

void OrgOssPdfreporterEngineXmlJRPrintImageFactory_init(OrgOssPdfreporterEngineXmlJRPrintImageFactory *self) {
  OrgOssPdfreporterEngineXmlJRBaseFactory_init(self);
}

OrgOssPdfreporterEngineXmlJRPrintImageFactory *new_OrgOssPdfreporterEngineXmlJRPrintImageFactory_init() {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineXmlJRPrintImageFactory, init)
}

OrgOssPdfreporterEngineXmlJRPrintImageFactory *create_OrgOssPdfreporterEngineXmlJRPrintImageFactory_init() {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineXmlJRPrintImageFactory, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineXmlJRPrintImageFactory)
