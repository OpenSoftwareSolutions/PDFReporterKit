//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/xml/JRBoxFactory.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/Integer.h"
#include "org/oss/pdfreporter/engine/JRBoxContainer.h"
#include "org/oss/pdfreporter/engine/JRLineBox.h"
#include "org/oss/pdfreporter/engine/base/JRBoxPen.h"
#include "org/oss/pdfreporter/engine/type/PenEnum.h"
#include "org/oss/pdfreporter/engine/util/JRColorUtil.h"
#include "org/oss/pdfreporter/engine/util/JRPenUtil.h"
#include "org/oss/pdfreporter/engine/xml/JRBaseFactory.h"
#include "org/oss/pdfreporter/engine/xml/JRBoxFactory.h"
#include "org/oss/pdfreporter/engine/xml/JRXmlConstants.h"
#include "org/oss/pdfreporter/geometry/IColor.h"
#include "org/oss/pdfreporter/uses/org/apache/digester/IDigester.h"
#include "org/oss/pdfreporter/xml/parsers/IAttributes.h"

@implementation OrgOssPdfreporterEngineXmlJRBoxFactory

- (id)createObjectWithOrgOssPdfreporterXmlParsersIAttributes:(id<OrgOssPdfreporterXmlParsersIAttributes>)atts {
  id<OrgOssPdfreporterEngineJRBoxContainer> boxContainer = (id<OrgOssPdfreporterEngineJRBoxContainer>) cast_check([((id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>) nil_chk(digester_)) peek], OrgOssPdfreporterEngineJRBoxContainer_class_());
  id<OrgOssPdfreporterEngineJRLineBox> box = [((id<OrgOssPdfreporterEngineJRBoxContainer>) nil_chk(boxContainer)) getLineBox];
  OrgOssPdfreporterEngineXmlJRBoxFactory_setBoxAttributesWithOrgOssPdfreporterXmlParsersIAttributes_withOrgOssPdfreporterEngineJRLineBox_(atts, box);
  return box;
}

+ (void)setBoxAttributesWithOrgOssPdfreporterXmlParsersIAttributes:(id<OrgOssPdfreporterXmlParsersIAttributes>)atts
                              withOrgOssPdfreporterEngineJRLineBox:(id<OrgOssPdfreporterEngineJRLineBox>)box {
  OrgOssPdfreporterEngineXmlJRBoxFactory_setBoxAttributesWithOrgOssPdfreporterXmlParsersIAttributes_withOrgOssPdfreporterEngineJRLineBox_(atts, box);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterEngineXmlJRBoxFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "createObjectWithOrgOssPdfreporterXmlParsersIAttributes:", "createObject", "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "setBoxAttributesWithOrgOssPdfreporterXmlParsersIAttributes:withOrgOssPdfreporterEngineJRLineBox:", "setBoxAttributes", "V", 0x9, NULL, NULL },
    { "init", "JRBoxFactory", NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineXmlJRBoxFactory = { 2, "JRBoxFactory", "org.oss.pdfreporter.engine.xml", NULL, 0x1, 3, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineXmlJRBoxFactory;
}

@end

void OrgOssPdfreporterEngineXmlJRBoxFactory_setBoxAttributesWithOrgOssPdfreporterXmlParsersIAttributes_withOrgOssPdfreporterEngineJRLineBox_(id<OrgOssPdfreporterXmlParsersIAttributes> atts, id<OrgOssPdfreporterEngineJRLineBox> box) {
  OrgOssPdfreporterEngineXmlJRBoxFactory_initialize();
  OrgOssPdfreporterEngineTypePenEnum *border = OrgOssPdfreporterEngineTypePenEnum_getByNameWithNSString_([((id<OrgOssPdfreporterXmlParsersIAttributes>) nil_chk(atts)) getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_border]);
  if (border != nil) {
    OrgOssPdfreporterEngineUtilJRPenUtil_setLinePenFromPenWithOrgOssPdfreporterEngineTypePenEnum_withOrgOssPdfreporterEngineJRPen_(border, [((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk(box)) getPen]);
  }
  id<OrgOssPdfreporterGeometryIColor> borderColor = OrgOssPdfreporterEngineUtilJRColorUtil_getColorWithNSString_withOrgOssPdfreporterGeometryIColor_([atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_borderColor], nil);
  if (borderColor != nil) {
    [((id<OrgOssPdfreporterEngineBaseJRBoxPen>) nil_chk([((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk(box)) getPen])) setLineColorWithOrgOssPdfreporterGeometryIColor:borderColor];
  }
  NSString *padding = [atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_padding];
  if (padding != nil && ((jint) [padding length]) > 0) {
    [((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk(box)) setPaddingWithInt:JavaLangInteger_parseIntWithNSString_(padding)];
  }
  border = OrgOssPdfreporterEngineTypePenEnum_getByNameWithNSString_([atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_topBorder]);
  if (border != nil) {
    OrgOssPdfreporterEngineUtilJRPenUtil_setLinePenFromPenWithOrgOssPdfreporterEngineTypePenEnum_withOrgOssPdfreporterEngineJRPen_(border, [((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk(box)) getTopPen]);
  }
  borderColor = OrgOssPdfreporterEngineUtilJRColorUtil_getColorWithNSString_withOrgOssPdfreporterGeometryIColor_([atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_topBorderColor], JreLoadStatic(OrgOssPdfreporterGeometryIColor, black));
  if (borderColor != nil) {
    [((id<OrgOssPdfreporterEngineBaseJRBoxPen>) nil_chk([((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk(box)) getTopPen])) setLineColorWithOrgOssPdfreporterGeometryIColor:borderColor];
  }
  padding = [atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_topPadding];
  if (padding != nil && ((jint) [padding length]) > 0) {
    [((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk(box)) setTopPaddingWithInt:JavaLangInteger_parseIntWithNSString_(padding)];
  }
  border = OrgOssPdfreporterEngineTypePenEnum_getByNameWithNSString_([atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_leftBorder]);
  if (border != nil) {
    OrgOssPdfreporterEngineUtilJRPenUtil_setLinePenFromPenWithOrgOssPdfreporterEngineTypePenEnum_withOrgOssPdfreporterEngineJRPen_(border, [((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk(box)) getLeftPen]);
  }
  borderColor = OrgOssPdfreporterEngineUtilJRColorUtil_getColorWithNSString_withOrgOssPdfreporterGeometryIColor_([atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_leftBorderColor], JreLoadStatic(OrgOssPdfreporterGeometryIColor, black));
  if (borderColor != nil) {
    [((id<OrgOssPdfreporterEngineBaseJRBoxPen>) nil_chk([((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk(box)) getLeftPen])) setLineColorWithOrgOssPdfreporterGeometryIColor:borderColor];
  }
  padding = [atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_leftPadding];
  if (padding != nil && ((jint) [padding length]) > 0) {
    [((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk(box)) setLeftPaddingWithInt:JavaLangInteger_parseIntWithNSString_(padding)];
  }
  border = OrgOssPdfreporterEngineTypePenEnum_getByNameWithNSString_([atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_bottomBorder]);
  if (border != nil) {
    OrgOssPdfreporterEngineUtilJRPenUtil_setLinePenFromPenWithOrgOssPdfreporterEngineTypePenEnum_withOrgOssPdfreporterEngineJRPen_(border, [((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk(box)) getBottomPen]);
  }
  borderColor = OrgOssPdfreporterEngineUtilJRColorUtil_getColorWithNSString_withOrgOssPdfreporterGeometryIColor_([atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_bottomBorderColor], JreLoadStatic(OrgOssPdfreporterGeometryIColor, black));
  if (borderColor != nil) {
    [((id<OrgOssPdfreporterEngineBaseJRBoxPen>) nil_chk([((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk(box)) getBottomPen])) setLineColorWithOrgOssPdfreporterGeometryIColor:borderColor];
  }
  padding = [atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_bottomPadding];
  if (padding != nil && ((jint) [padding length]) > 0) {
    [((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk(box)) setBottomPaddingWithInt:JavaLangInteger_parseIntWithNSString_(padding)];
  }
  border = OrgOssPdfreporterEngineTypePenEnum_getByNameWithNSString_([atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_rightBorder]);
  if (border != nil) {
    OrgOssPdfreporterEngineUtilJRPenUtil_setLinePenFromPenWithOrgOssPdfreporterEngineTypePenEnum_withOrgOssPdfreporterEngineJRPen_(border, [((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk(box)) getRightPen]);
  }
  borderColor = OrgOssPdfreporterEngineUtilJRColorUtil_getColorWithNSString_withOrgOssPdfreporterGeometryIColor_([atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_rightBorderColor], JreLoadStatic(OrgOssPdfreporterGeometryIColor, black));
  if (borderColor != nil) {
    [((id<OrgOssPdfreporterEngineBaseJRBoxPen>) nil_chk([((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk(box)) getRightPen])) setLineColorWithOrgOssPdfreporterGeometryIColor:borderColor];
  }
  padding = [atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_rightPadding];
  if (padding != nil && ((jint) [padding length]) > 0) {
    [((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk(box)) setRightPaddingWithInt:JavaLangInteger_parseIntWithNSString_(padding)];
  }
}

void OrgOssPdfreporterEngineXmlJRBoxFactory_init(OrgOssPdfreporterEngineXmlJRBoxFactory *self) {
  OrgOssPdfreporterEngineXmlJRBaseFactory_init(self);
}

OrgOssPdfreporterEngineXmlJRBoxFactory *new_OrgOssPdfreporterEngineXmlJRBoxFactory_init() {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineXmlJRBoxFactory, init)
}

OrgOssPdfreporterEngineXmlJRBoxFactory *create_OrgOssPdfreporterEngineXmlJRBoxFactory_init() {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineXmlJRBoxFactory, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineXmlJRBoxFactory)
