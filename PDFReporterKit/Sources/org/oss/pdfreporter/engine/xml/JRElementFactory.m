//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/xml/JRElementFactory.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/Boolean.h"
#include "java/lang/Integer.h"
#include "java/util/Map.h"
#include "org/oss/pdfreporter/engine/JRStyle.h"
#include "org/oss/pdfreporter/engine/design/JRDesignElement.h"
#include "org/oss/pdfreporter/engine/design/JRDesignGroup.h"
#include "org/oss/pdfreporter/engine/design/JasperDesign.h"
#include "org/oss/pdfreporter/engine/type/ModeEnum.h"
#include "org/oss/pdfreporter/engine/type/PositionTypeEnum.h"
#include "org/oss/pdfreporter/engine/type/StretchTypeEnum.h"
#include "org/oss/pdfreporter/engine/util/JRColorUtil.h"
#include "org/oss/pdfreporter/engine/xml/JRBaseFactory.h"
#include "org/oss/pdfreporter/engine/xml/JRElementFactory.h"
#include "org/oss/pdfreporter/engine/xml/JRXmlConstants.h"
#include "org/oss/pdfreporter/engine/xml/JRXmlLoader.h"
#include "org/oss/pdfreporter/geometry/IColor.h"
#include "org/oss/pdfreporter/uses/java/util/UUID.h"
#include "org/oss/pdfreporter/uses/org/apache/digester/IDigester.h"
#include "org/oss/pdfreporter/xml/parsers/IAttributes.h"

@implementation OrgOssPdfreporterEngineXmlJRElementFactory

- (id)createObjectWithOrgOssPdfreporterXmlParsersIAttributes:(id<OrgOssPdfreporterXmlParsersIAttributes>)atts {
  OrgOssPdfreporterEngineXmlJRXmlLoader *xmlLoader = (OrgOssPdfreporterEngineXmlJRXmlLoader *) cast_chk([((id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>) nil_chk(digester_)) peekWithInt:[digester_ getCount] - 1], [OrgOssPdfreporterEngineXmlJRXmlLoader class]);
  OrgOssPdfreporterEngineDesignJRDesignElement *element = (OrgOssPdfreporterEngineDesignJRDesignElement *) cast_chk([((id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>) nil_chk(digester_)) peek], [OrgOssPdfreporterEngineDesignJRDesignElement class]);
  NSString *uuid = [((id<OrgOssPdfreporterXmlParsersIAttributes>) nil_chk(atts)) getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_uuid];
  if (uuid != nil) {
    [((OrgOssPdfreporterEngineDesignJRDesignElement *) nil_chk(element)) setUUIDWithOrgOssPdfreporterUsesJavaUtilUUID:OrgOssPdfreporterUsesJavaUtilUUID_fromStringWithNSString_(uuid)];
  }
  [((OrgOssPdfreporterEngineDesignJRDesignElement *) nil_chk(element)) setKeyWithNSString:[atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_key]];
  OrgOssPdfreporterEngineTypePositionTypeEnum *positionType = OrgOssPdfreporterEngineTypePositionTypeEnum_getByNameWithNSString_([atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_positionType]);
  if (positionType != nil) {
    [element setPositionTypeWithOrgOssPdfreporterEngineTypePositionTypeEnum:positionType];
  }
  OrgOssPdfreporterEngineTypeStretchTypeEnum *stretchType = OrgOssPdfreporterEngineTypeStretchTypeEnum_getByNameWithNSString_([atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_stretchType]);
  if (stretchType != nil) {
    [element setStretchTypeWithOrgOssPdfreporterEngineTypeStretchTypeEnum:stretchType];
  }
  NSString *isPrintRepeatedValues = [atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_isPrintRepeatedValues];
  if (isPrintRepeatedValues != nil && ((jint) [isPrintRepeatedValues length]) > 0) {
    [element setPrintRepeatedValuesWithBoolean:[((JavaLangBoolean *) nil_chk(JavaLangBoolean_valueOfWithNSString_(isPrintRepeatedValues))) booleanValue]];
  }
  OrgOssPdfreporterEngineTypeModeEnum *mode = OrgOssPdfreporterEngineTypeModeEnum_getByNameWithNSString_([atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_mode]);
  if (mode != nil) {
    [element setModeWithOrgOssPdfreporterEngineTypeModeEnum:mode];
  }
  NSString *x = [atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_x];
  if (x != nil && ((jint) [x length]) > 0) {
    [element setXWithInt:JavaLangInteger_parseIntWithNSString_(x)];
  }
  NSString *y = [atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_y];
  if (y != nil && ((jint) [y length]) > 0) {
    [element setYWithInt:JavaLangInteger_parseIntWithNSString_(y)];
  }
  NSString *width = [atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_width];
  if (width != nil && ((jint) [width length]) > 0) {
    [element setWidthWithInt:JavaLangInteger_parseIntWithNSString_(width)];
  }
  NSString *height = [atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_height];
  if (height != nil && ((jint) [height length]) > 0) {
    [element setHeightWithInt:JavaLangInteger_parseIntWithNSString_(height)];
  }
  NSString *isRemoveLineWhenBlank = [atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_isRemoveLineWhenBlank];
  if (isRemoveLineWhenBlank != nil && ((jint) [isRemoveLineWhenBlank length]) > 0) {
    [element setRemoveLineWhenBlankWithBoolean:[((JavaLangBoolean *) nil_chk(JavaLangBoolean_valueOfWithNSString_(isRemoveLineWhenBlank))) booleanValue]];
  }
  NSString *isPrintInFirstWholeBand = [atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_isPrintInFirstWholeBand];
  if (isPrintInFirstWholeBand != nil && ((jint) [isPrintInFirstWholeBand length]) > 0) {
    [element setPrintInFirstWholeBandWithBoolean:[((JavaLangBoolean *) nil_chk(JavaLangBoolean_valueOfWithNSString_(isPrintInFirstWholeBand))) booleanValue]];
  }
  NSString *isPrintWhenDetailOverflows = [atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_isPrintWhenDetailOverflows];
  if (isPrintWhenDetailOverflows != nil && ((jint) [isPrintWhenDetailOverflows length]) > 0) {
    [element setPrintWhenDetailOverflowsWithBoolean:[((JavaLangBoolean *) nil_chk(JavaLangBoolean_valueOfWithNSString_(isPrintWhenDetailOverflows))) booleanValue]];
  }
  NSString *groupName = [atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_printWhenGroupChanges];
  if (groupName != nil) {
    OrgOssPdfreporterEngineDesignJRDesignGroup *group = new_OrgOssPdfreporterEngineDesignJRDesignGroup_init();
    [group setNameWithNSString:groupName];
    [element setPrintWhenGroupChangesWithOrgOssPdfreporterEngineJRGroup:group];
    [((OrgOssPdfreporterEngineXmlJRXmlLoader *) nil_chk(xmlLoader)) addGroupReprintedElementWithOrgOssPdfreporterEngineDesignJRDesignElement:element];
  }
  NSString *forecolor = [atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_forecolor];
  if (forecolor != nil && ((jint) [forecolor length]) > 0) {
    [element setForecolorWithOrgOssPdfreporterGeometryIColor:OrgOssPdfreporterEngineUtilJRColorUtil_getColorWithNSString_withOrgOssPdfreporterGeometryIColor_(forecolor, nil)];
  }
  NSString *backcolor = [atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_backcolor];
  if (backcolor != nil && ((jint) [backcolor length]) > 0) {
    [element setBackcolorWithOrgOssPdfreporterGeometryIColor:OrgOssPdfreporterEngineUtilJRColorUtil_getColorWithNSString_withOrgOssPdfreporterGeometryIColor_(backcolor, nil)];
  }
  NSString *styleName = [atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_style];
  if (styleName != nil) {
    OrgOssPdfreporterEngineDesignJasperDesign *jasperDesign = (OrgOssPdfreporterEngineDesignJasperDesign *) cast_chk([((id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>) nil_chk(digester_)) peekWithInt:[digester_ getCount] - 2], [OrgOssPdfreporterEngineDesignJasperDesign class]);
    id<JavaUtilMap> stylesMap = [((OrgOssPdfreporterEngineDesignJasperDesign *) nil_chk(jasperDesign)) getStylesMap];
    if ([((id<JavaUtilMap>) nil_chk(stylesMap)) containsKeyWithId:styleName]) {
      id<OrgOssPdfreporterEngineJRStyle> style = [stylesMap getWithId:styleName];
      [element setStyleWithOrgOssPdfreporterEngineJRStyle:style];
    }
    else {
      [element setStyleNameReferenceWithNSString:styleName];
    }
  }
  return element;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterEngineXmlJRElementFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "createObjectWithOrgOssPdfreporterXmlParsersIAttributes:", "createObject", "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "init", "JRElementFactory", NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineXmlJRElementFactory = { 2, "JRElementFactory", "org.oss.pdfreporter.engine.xml", NULL, 0x1, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineXmlJRElementFactory;
}

@end

void OrgOssPdfreporterEngineXmlJRElementFactory_init(OrgOssPdfreporterEngineXmlJRElementFactory *self) {
  OrgOssPdfreporterEngineXmlJRBaseFactory_init(self);
}

OrgOssPdfreporterEngineXmlJRElementFactory *new_OrgOssPdfreporterEngineXmlJRElementFactory_init() {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineXmlJRElementFactory, init)
}

OrgOssPdfreporterEngineXmlJRElementFactory *create_OrgOssPdfreporterEngineXmlJRElementFactory_init() {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineXmlJRElementFactory, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineXmlJRElementFactory)
