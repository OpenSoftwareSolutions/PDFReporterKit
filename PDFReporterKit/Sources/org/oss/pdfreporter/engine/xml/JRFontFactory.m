//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/xml/JRFontFactory.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/Boolean.h"
#include "java/lang/Integer.h"
#include "java/util/Map.h"
#include "org/oss/pdfreporter/engine/JRFont.h"
#include "org/oss/pdfreporter/engine/JRStyle.h"
#include "org/oss/pdfreporter/engine/design/JRDesignElement.h"
#include "org/oss/pdfreporter/engine/design/JasperDesign.h"
#include "org/oss/pdfreporter/engine/xml/JRBaseFactory.h"
#include "org/oss/pdfreporter/engine/xml/JRFontFactory.h"
#include "org/oss/pdfreporter/engine/xml/JRXmlConstants.h"
#include "org/oss/pdfreporter/uses/org/apache/digester/IDigester.h"
#include "org/oss/pdfreporter/xml/parsers/IAttributes.h"

@implementation OrgOssPdfreporterEngineXmlJRFontFactory

- (id<OrgOssPdfreporterEngineJRFont>)getFont {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)setStyleWithOrgOssPdfreporterEngineJRFont:(id<OrgOssPdfreporterEngineJRFont>)font
       withOrgOssPdfreporterXmlParsersIAttributes:(id<OrgOssPdfreporterXmlParsersIAttributes>)atts {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (id)createObjectWithOrgOssPdfreporterXmlParsersIAttributes:(id<OrgOssPdfreporterXmlParsersIAttributes>)atts {
  id<OrgOssPdfreporterEngineJRFont> font = [self getFont];
  if ([((id<OrgOssPdfreporterXmlParsersIAttributes>) nil_chk(atts)) getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_fontName] != nil) {
    [((id<OrgOssPdfreporterEngineJRFont>) nil_chk(font)) setFontNameWithNSString:[atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_fontName]];
  }
  if ([atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_isBold] != nil) {
    [((id<OrgOssPdfreporterEngineJRFont>) nil_chk(font)) setBoldWithJavaLangBoolean:JavaLangBoolean_valueOfWithNSString_([atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_isBold])];
  }
  if ([atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_isItalic] != nil) {
    [((id<OrgOssPdfreporterEngineJRFont>) nil_chk(font)) setItalicWithJavaLangBoolean:JavaLangBoolean_valueOfWithNSString_([atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_isItalic])];
  }
  if ([atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_isUnderline] != nil) {
    [((id<OrgOssPdfreporterEngineJRFont>) nil_chk(font)) setUnderlineWithJavaLangBoolean:JavaLangBoolean_valueOfWithNSString_([atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_isUnderline])];
  }
  if ([atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_isStrikeThrough] != nil) {
    [((id<OrgOssPdfreporterEngineJRFont>) nil_chk(font)) setStrikeThroughWithJavaLangBoolean:JavaLangBoolean_valueOfWithNSString_([atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_isStrikeThrough])];
  }
  if ([atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_size] != nil) {
    [((id<OrgOssPdfreporterEngineJRFont>) nil_chk(font)) setFontSizeWithInt:JavaLangInteger_parseIntWithNSString_([atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_size])];
  }
  if ([atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_pdfFontName] != nil) {
    [((id<OrgOssPdfreporterEngineJRFont>) nil_chk(font)) setPdfFontNameWithNSString:[atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_pdfFontName]];
  }
  if ([atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_pdfEncoding] != nil) {
    [((id<OrgOssPdfreporterEngineJRFont>) nil_chk(font)) setPdfEncodingWithNSString:[atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_pdfEncoding]];
  }
  if ([atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_isPdfEmbedded] != nil) {
    [((id<OrgOssPdfreporterEngineJRFont>) nil_chk(font)) setPdfEmbeddedWithJavaLangBoolean:JavaLangBoolean_valueOfWithNSString_([atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_isPdfEmbedded])];
  }
  [self setStyleWithOrgOssPdfreporterEngineJRFont:font withOrgOssPdfreporterXmlParsersIAttributes:atts];
  return font;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterEngineXmlJRFontFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getFont", NULL, "Lorg.oss.pdfreporter.engine.JRFont;", 0x401, NULL, NULL },
    { "setStyleWithOrgOssPdfreporterEngineJRFont:withOrgOssPdfreporterXmlParsersIAttributes:", "setStyle", "V", 0x401, NULL, NULL },
    { "createObjectWithOrgOssPdfreporterXmlParsersIAttributes:", "createObject", "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "init", "JRFontFactory", NULL, 0x1, NULL, NULL },
  };
  static const char *inner_classes[] = {"Lorg.oss.pdfreporter.engine.xml.JRFontFactory$TextElementFontFactory;"};
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineXmlJRFontFactory = { 2, "JRFontFactory", "org.oss.pdfreporter.engine.xml", NULL, 0x401, 4, methods, 0, NULL, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_OrgOssPdfreporterEngineXmlJRFontFactory;
}

@end

void OrgOssPdfreporterEngineXmlJRFontFactory_init(OrgOssPdfreporterEngineXmlJRFontFactory *self) {
  OrgOssPdfreporterEngineXmlJRBaseFactory_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineXmlJRFontFactory)

@implementation OrgOssPdfreporterEngineXmlJRFontFactory_TextElementFontFactory

- (id<OrgOssPdfreporterEngineJRFont>)getFont {
  return (id<OrgOssPdfreporterEngineJRFont>) cast_check([((id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>) nil_chk(digester_)) peek], OrgOssPdfreporterEngineJRFont_class_());
}

- (void)setStyleWithOrgOssPdfreporterEngineJRFont:(id<OrgOssPdfreporterEngineJRFont>)font
       withOrgOssPdfreporterXmlParsersIAttributes:(id<OrgOssPdfreporterXmlParsersIAttributes>)atts {
  OrgOssPdfreporterEngineDesignJRDesignElement *element = (OrgOssPdfreporterEngineDesignJRDesignElement *) cast_chk(font, [OrgOssPdfreporterEngineDesignJRDesignElement class]);
  if ([((OrgOssPdfreporterEngineDesignJRDesignElement *) nil_chk(element)) getStyle] == nil && [element getStyleNameReference] == nil) {
    NSString *styleName = [((id<OrgOssPdfreporterXmlParsersIAttributes>) nil_chk(atts)) getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_reportFont];
    if (styleName != nil) {
      OrgOssPdfreporterEngineDesignJasperDesign *jasperDesign = (OrgOssPdfreporterEngineDesignJasperDesign *) cast_chk([((id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>) nil_chk(digester_)) peekWithInt:[digester_ getCount] - 2], [OrgOssPdfreporterEngineDesignJasperDesign class]);
      id<JavaUtilMap> stylesMap = [((OrgOssPdfreporterEngineDesignJasperDesign *) nil_chk(jasperDesign)) getStylesMap];
      if ([((id<JavaUtilMap>) nil_chk(stylesMap)) containsKeyWithId:styleName]) {
        id<OrgOssPdfreporterEngineJRStyle> style = [stylesMap getWithId:styleName];
        [element setStyleWithOrgOssPdfreporterEngineJRStyle:style];
      }
      else {
        [element setStyleNameReferenceWithNSString:styleName];
      }
    }
  }
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterEngineXmlJRFontFactory_TextElementFontFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getFont", NULL, "Lorg.oss.pdfreporter.engine.JRFont;", 0x1, NULL, NULL },
    { "setStyleWithOrgOssPdfreporterEngineJRFont:withOrgOssPdfreporterXmlParsersIAttributes:", "setStyle", "V", 0x1, NULL, NULL },
    { "init", "TextElementFontFactory", NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineXmlJRFontFactory_TextElementFontFactory = { 2, "TextElementFontFactory", "org.oss.pdfreporter.engine.xml", "JRFontFactory", 0x9, 3, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineXmlJRFontFactory_TextElementFontFactory;
}

@end

void OrgOssPdfreporterEngineXmlJRFontFactory_TextElementFontFactory_init(OrgOssPdfreporterEngineXmlJRFontFactory_TextElementFontFactory *self) {
  OrgOssPdfreporterEngineXmlJRFontFactory_init(self);
}

OrgOssPdfreporterEngineXmlJRFontFactory_TextElementFontFactory *new_OrgOssPdfreporterEngineXmlJRFontFactory_TextElementFontFactory_init() {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineXmlJRFontFactory_TextElementFontFactory, init)
}

OrgOssPdfreporterEngineXmlJRFontFactory_TextElementFontFactory *create_OrgOssPdfreporterEngineXmlJRFontFactory_TextElementFontFactory_init() {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineXmlJRFontFactory_TextElementFontFactory, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineXmlJRFontFactory_TextElementFontFactory)
