//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/xml/JRPrintGraphicElementFactory.java
//

#include "J2ObjC_source.h"
#include "org/oss/pdfreporter/engine/JRPen.h"
#include "org/oss/pdfreporter/engine/base/JRBasePrintGraphicElement.h"
#include "org/oss/pdfreporter/engine/type/FillEnum.h"
#include "org/oss/pdfreporter/engine/type/PenEnum.h"
#include "org/oss/pdfreporter/engine/util/JRPenUtil.h"
#include "org/oss/pdfreporter/engine/xml/JRBaseFactory.h"
#include "org/oss/pdfreporter/engine/xml/JRPrintGraphicElementFactory.h"
#include "org/oss/pdfreporter/engine/xml/JRXmlConstants.h"
#include "org/oss/pdfreporter/uses/org/apache/digester/IDigester.h"
#include "org/oss/pdfreporter/xml/parsers/IAttributes.h"

@implementation OrgOssPdfreporterEngineXmlJRPrintGraphicElementFactory

- (id)createObjectWithOrgOssPdfreporterXmlParsersIAttributes:(id<OrgOssPdfreporterXmlParsersIAttributes>)atts {
  OrgOssPdfreporterEngineBaseJRBasePrintGraphicElement *graphicElement = (OrgOssPdfreporterEngineBaseJRBasePrintGraphicElement *) cast_chk([((id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>) nil_chk(digester_)) peek], [OrgOssPdfreporterEngineBaseJRBasePrintGraphicElement class]);
  OrgOssPdfreporterEngineTypePenEnum *pen = OrgOssPdfreporterEngineTypePenEnum_getByNameWithNSString_([((id<OrgOssPdfreporterXmlParsersIAttributes>) nil_chk(atts)) getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_pen]);
  if (pen != nil) {
    OrgOssPdfreporterEngineUtilJRPenUtil_setLinePenFromPenWithOrgOssPdfreporterEngineTypePenEnum_withOrgOssPdfreporterEngineJRPen_(pen, [((OrgOssPdfreporterEngineBaseJRBasePrintGraphicElement *) nil_chk(graphicElement)) getLinePen]);
  }
  OrgOssPdfreporterEngineTypeFillEnum *fill = OrgOssPdfreporterEngineTypeFillEnum_getByNameWithNSString_([atts getValueWithNSString:OrgOssPdfreporterEngineXmlJRXmlConstants_ATTRIBUTE_fill]);
  if (fill != nil) {
    [((OrgOssPdfreporterEngineBaseJRBasePrintGraphicElement *) nil_chk(graphicElement)) setFillWithOrgOssPdfreporterEngineTypeFillEnum:fill];
  }
  return graphicElement;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterEngineXmlJRPrintGraphicElementFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "createObjectWithOrgOssPdfreporterXmlParsersIAttributes:", "createObject", "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "init", "JRPrintGraphicElementFactory", NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineXmlJRPrintGraphicElementFactory = { 2, "JRPrintGraphicElementFactory", "org.oss.pdfreporter.engine.xml", NULL, 0x1, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineXmlJRPrintGraphicElementFactory;
}

@end

void OrgOssPdfreporterEngineXmlJRPrintGraphicElementFactory_init(OrgOssPdfreporterEngineXmlJRPrintGraphicElementFactory *self) {
  OrgOssPdfreporterEngineXmlJRBaseFactory_init(self);
}

OrgOssPdfreporterEngineXmlJRPrintGraphicElementFactory *new_OrgOssPdfreporterEngineXmlJRPrintGraphicElementFactory_init() {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineXmlJRPrintGraphicElementFactory, init)
}

OrgOssPdfreporterEngineXmlJRPrintGraphicElementFactory *create_OrgOssPdfreporterEngineXmlJRPrintGraphicElementFactory_init() {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineXmlJRPrintGraphicElementFactory, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineXmlJRPrintGraphicElementFactory)
