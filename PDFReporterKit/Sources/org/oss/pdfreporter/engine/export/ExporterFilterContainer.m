//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/export/ExporterFilterContainer.java
//

#include "J2ObjC_source.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "org/oss/pdfreporter/engine/JRPrintElement.h"
#include "org/oss/pdfreporter/engine/JRRuntimeException.h"
#include "org/oss/pdfreporter/engine/export/ExporterFilter.h"
#include "org/oss/pdfreporter/engine/export/ExporterFilterContainer.h"

@interface OrgOssPdfreporterEngineExportExporterFilterContainer () {
 @public
  id<JavaUtilList> filters_;
}

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineExportExporterFilterContainer, filters_, id<JavaUtilList>)

@implementation OrgOssPdfreporterEngineExportExporterFilterContainer

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)filters {
  OrgOssPdfreporterEngineExportExporterFilterContainer_initWithJavaUtilList_(self, filters);
  return self;
}

- (jboolean)isToExportWithOrgOssPdfreporterEngineJRPrintElement:(id<OrgOssPdfreporterEngineJRPrintElement>)element {
  jboolean export_ = true;
  for (id<JavaUtilIterator> it = [((id<JavaUtilList>) nil_chk(filters_)) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    id<OrgOssPdfreporterEngineExportExporterFilter> filter = [it next];
    if (![((id<OrgOssPdfreporterEngineExportExporterFilter>) nil_chk(filter)) isToExportWithOrgOssPdfreporterEngineJRPrintElement:element]) {
      export_ = false;
      break;
    }
  }
  return export_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaUtilList:", "ExporterFilterContainer", NULL, 0x1, NULL, "(Ljava/util/List<Lorg/oss/pdfreporter/engine/export/ExporterFilter;>;)V" },
    { "isToExportWithOrgOssPdfreporterEngineJRPrintElement:", "isToExport", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "filters_", NULL, 0x12, "Ljava.util.List;", NULL, "Ljava/util/List<Lorg/oss/pdfreporter/engine/export/ExporterFilter;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineExportExporterFilterContainer = { 2, "ExporterFilterContainer", "org.oss.pdfreporter.engine.export", NULL, 0x1, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineExportExporterFilterContainer;
}

@end

void OrgOssPdfreporterEngineExportExporterFilterContainer_initWithJavaUtilList_(OrgOssPdfreporterEngineExportExporterFilterContainer *self, id<JavaUtilList> filters) {
  NSObject_init(self);
  if (filters == nil) {
    @throw new_OrgOssPdfreporterEngineJRRuntimeException_initWithNSString_(@"Null filters list");
  }
  self->filters_ = filters;
}

OrgOssPdfreporterEngineExportExporterFilterContainer *new_OrgOssPdfreporterEngineExportExporterFilterContainer_initWithJavaUtilList_(id<JavaUtilList> filters) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineExportExporterFilterContainer, initWithJavaUtilList_, filters)
}

OrgOssPdfreporterEngineExportExporterFilterContainer *create_OrgOssPdfreporterEngineExportExporterFilterContainer_initWithJavaUtilList_(id<JavaUtilList> filters) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineExportExporterFilterContainer, initWithJavaUtilList_, filters)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineExportExporterFilterContainer)
