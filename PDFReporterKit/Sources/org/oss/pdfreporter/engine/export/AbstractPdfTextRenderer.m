//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/export/AbstractPdfTextRenderer.java
//

#include "J2ObjC_source.h"
#include "org/oss/pdfreporter/engine/DefaultJasperReportsContext.h"
#include "org/oss/pdfreporter/engine/JRPrintText.h"
#include "org/oss/pdfreporter/engine/JasperReportsContext.h"
#include "org/oss/pdfreporter/engine/export/AbstractPdfTextRenderer.h"
#include "org/oss/pdfreporter/engine/export/AbstractTextRenderer.h"
#include "org/oss/pdfreporter/engine/export/JRPdfExporter.h"
#include "org/oss/pdfreporter/engine/type/HorizontalAlignEnum.h"
#include "org/oss/pdfreporter/engine/type/RunDirectionEnum.h"
#include "org/oss/pdfreporter/pdf/IPage.h"
#include "org/oss/pdfreporter/text/HorizontalAlignment.h"

@implementation OrgOssPdfreporterEngineExportAbstractPdfTextRenderer

- (instancetype)initWithBoolean:(jboolean)ignoreMissingFont {
  OrgOssPdfreporterEngineExportAbstractPdfTextRenderer_initWithBoolean_(self, ignoreMissingFont);
  return self;
}

- (instancetype)initWithOrgOssPdfreporterEngineJasperReportsContext:(id<OrgOssPdfreporterEngineJasperReportsContext>)jasperReportsContext
                                                        withBoolean:(jboolean)ignoreMissingFont {
  OrgOssPdfreporterEngineExportAbstractPdfTextRenderer_initWithOrgOssPdfreporterEngineJasperReportsContext_withBoolean_(self, jasperReportsContext, ignoreMissingFont);
  return self;
}

- (void)initialize__WithOrgOssPdfreporterEngineExportJRPdfExporter:(OrgOssPdfreporterEngineExportJRPdfExporter *)pdfExporter
                                     withOrgOssPdfreporterPdfIPage:(id<OrgOssPdfreporterPdfIPage>)pdfPage
                            withOrgOssPdfreporterEngineJRPrintText:(id<OrgOssPdfreporterEngineJRPrintText>)text
                                                           withInt:(jint)offsetX
                                                           withInt:(jint)offsetY {
  self->pdfExporter_ = pdfExporter;
  self->pdfPage_ = pdfPage;
  horizontalAlignment_ = JreLoadEnum(OrgOssPdfreporterTextHorizontalAlignment, ALIGN_LEFT);
  leftOffsetFactor_ = 0.0f;
  rightOffsetFactor_ = 0.0f;
  switch ([[((id<OrgOssPdfreporterEngineJRPrintText>) nil_chk(text)) getHorizontalAlignmentValue] ordinal]) {
    case OrgOssPdfreporterEngineTypeHorizontalAlignEnum_Enum_JUSTIFIED:
    {
      horizontalAlignment_ = JreLoadEnum(OrgOssPdfreporterTextHorizontalAlignment, ALIGN_JUSTIFY);
      leftOffsetFactor_ = 0.0f;
      rightOffsetFactor_ = 0.0f;
      break;
    }
    case OrgOssPdfreporterEngineTypeHorizontalAlignEnum_Enum_RIGHT:
    {
      if ([text getRunDirectionValue] == JreLoadEnum(OrgOssPdfreporterEngineTypeRunDirectionEnum, LTR)) {
        horizontalAlignment_ = JreLoadEnum(OrgOssPdfreporterTextHorizontalAlignment, ALIGN_RIGHT);
      }
      else {
        horizontalAlignment_ = JreLoadEnum(OrgOssPdfreporterTextHorizontalAlignment, ALIGN_LEFT);
      }
      leftOffsetFactor_ = -0.2f;
      rightOffsetFactor_ = 0.0f;
      break;
    }
    case OrgOssPdfreporterEngineTypeHorizontalAlignEnum_Enum_CENTER:
    {
      horizontalAlignment_ = JreLoadEnum(OrgOssPdfreporterTextHorizontalAlignment, ALIGN_CENTER);
      leftOffsetFactor_ = -0.1f;
      rightOffsetFactor_ = 0.1f;
      break;
    }
    case OrgOssPdfreporterEngineTypeHorizontalAlignEnum_Enum_LEFT:
    default:
    {
      if ([text getRunDirectionValue] == JreLoadEnum(OrgOssPdfreporterEngineTypeRunDirectionEnum, LTR)) {
        horizontalAlignment_ = JreLoadEnum(OrgOssPdfreporterTextHorizontalAlignment, ALIGN_LEFT);
      }
      else {
        horizontalAlignment_ = JreLoadEnum(OrgOssPdfreporterTextHorizontalAlignment, ALIGN_RIGHT);
      }
      leftOffsetFactor_ = 0.0f;
      rightOffsetFactor_ = 0.2f;
      break;
    }
  }
  [super initialize__WithOrgOssPdfreporterEngineJRPrintText:text withInt:offsetX withInt:offsetY];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithBoolean:", "AbstractPdfTextRenderer", NULL, 0x1, NULL, NULL },
    { "initWithOrgOssPdfreporterEngineJasperReportsContext:withBoolean:", "AbstractPdfTextRenderer", NULL, 0x1, NULL, NULL },
    { "initialize__WithOrgOssPdfreporterEngineExportJRPdfExporter:withOrgOssPdfreporterPdfIPage:withOrgOssPdfreporterEngineJRPrintText:withInt:withInt:", "initialize", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "pdfExporter_", NULL, 0x4, "Lorg.oss.pdfreporter.engine.export.JRPdfExporter;", NULL, NULL, .constantValue.asLong = 0 },
    { "pdfPage_", NULL, 0x4, "Lorg.oss.pdfreporter.pdf.IPage;", NULL, NULL, .constantValue.asLong = 0 },
    { "horizontalAlignment_", NULL, 0x4, "Lorg.oss.pdfreporter.text.HorizontalAlignment;", NULL, NULL, .constantValue.asLong = 0 },
    { "leftOffsetFactor_", NULL, 0x4, "F", NULL, NULL, .constantValue.asLong = 0 },
    { "rightOffsetFactor_", NULL, 0x4, "F", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineExportAbstractPdfTextRenderer = { 2, "AbstractPdfTextRenderer", "org.oss.pdfreporter.engine.export", NULL, 0x401, 3, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineExportAbstractPdfTextRenderer;
}

@end

void OrgOssPdfreporterEngineExportAbstractPdfTextRenderer_initWithBoolean_(OrgOssPdfreporterEngineExportAbstractPdfTextRenderer *self, jboolean ignoreMissingFont) {
  OrgOssPdfreporterEngineExportAbstractPdfTextRenderer_initWithOrgOssPdfreporterEngineJasperReportsContext_withBoolean_(self, OrgOssPdfreporterEngineDefaultJasperReportsContext_getInstance(), ignoreMissingFont);
}

void OrgOssPdfreporterEngineExportAbstractPdfTextRenderer_initWithOrgOssPdfreporterEngineJasperReportsContext_withBoolean_(OrgOssPdfreporterEngineExportAbstractPdfTextRenderer *self, id<OrgOssPdfreporterEngineJasperReportsContext> jasperReportsContext, jboolean ignoreMissingFont) {
  OrgOssPdfreporterEngineExportAbstractTextRenderer_initWithOrgOssPdfreporterEngineJasperReportsContext_withBoolean_withBoolean_(self, jasperReportsContext, false, ignoreMissingFont);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineExportAbstractPdfTextRenderer)
