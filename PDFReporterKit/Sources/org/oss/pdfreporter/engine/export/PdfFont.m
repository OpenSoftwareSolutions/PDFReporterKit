//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/export/PdfFont.java
//

#include "J2ObjC_source.h"
#include "org/oss/pdfreporter/engine/export/PdfFont.h"

@interface OrgOssPdfreporterEngineExportPdfFont () {
 @public
  NSString *pdfFontName_;
  NSString *pdfEncoding_;
  jboolean isPdfEmbedded_;
  jboolean isPdfSimulatedBold_;
  jboolean isPdfSimulatedItalic_;
}

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineExportPdfFont, pdfFontName_, NSString *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineExportPdfFont, pdfEncoding_, NSString *)

@implementation OrgOssPdfreporterEngineExportPdfFont

- (instancetype)initWithNSString:(NSString *)pdfFontName
                    withNSString:(NSString *)pdfEncoding
                     withBoolean:(jboolean)isPdfEmbedded {
  OrgOssPdfreporterEngineExportPdfFont_initWithNSString_withNSString_withBoolean_(self, pdfFontName, pdfEncoding, isPdfEmbedded);
  return self;
}

- (instancetype)initWithNSString:(NSString *)pdfFontName
                    withNSString:(NSString *)pdfEncoding
                     withBoolean:(jboolean)isPdfEmbedded
                     withBoolean:(jboolean)isPdfSimulatedBold
                     withBoolean:(jboolean)isPdfSimulatedItalic {
  OrgOssPdfreporterEngineExportPdfFont_initWithNSString_withNSString_withBoolean_withBoolean_withBoolean_(self, pdfFontName, pdfEncoding, isPdfEmbedded, isPdfSimulatedBold, isPdfSimulatedItalic);
  return self;
}

- (NSString *)getPdfFontName {
  return pdfFontName_;
}

- (NSString *)getPdfEncoding {
  return pdfEncoding_;
}

- (jboolean)isPdfEmbedded {
  return isPdfEmbedded_;
}

- (jboolean)isPdfSimulatedBold {
  return isPdfSimulatedBold_;
}

- (jboolean)isPdfSimulatedItalic {
  return isPdfSimulatedItalic_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withNSString:withBoolean:", "PdfFont", NULL, 0x1, NULL, NULL },
    { "initWithNSString:withNSString:withBoolean:withBoolean:withBoolean:", "PdfFont", NULL, 0x1, NULL, NULL },
    { "getPdfFontName", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getPdfEncoding", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "isPdfEmbedded", NULL, "Z", 0x1, NULL, NULL },
    { "isPdfSimulatedBold", NULL, "Z", 0x1, NULL, NULL },
    { "isPdfSimulatedItalic", NULL, "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "pdfFontName_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "pdfEncoding_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "isPdfEmbedded_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "isPdfSimulatedBold_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "isPdfSimulatedItalic_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineExportPdfFont = { 2, "PdfFont", "org.oss.pdfreporter.engine.export", NULL, 0x1, 7, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineExportPdfFont;
}

@end

void OrgOssPdfreporterEngineExportPdfFont_initWithNSString_withNSString_withBoolean_(OrgOssPdfreporterEngineExportPdfFont *self, NSString *pdfFontName, NSString *pdfEncoding, jboolean isPdfEmbedded) {
  OrgOssPdfreporterEngineExportPdfFont_initWithNSString_withNSString_withBoolean_withBoolean_withBoolean_(self, pdfFontName, pdfEncoding, isPdfEmbedded, false, false);
}

OrgOssPdfreporterEngineExportPdfFont *new_OrgOssPdfreporterEngineExportPdfFont_initWithNSString_withNSString_withBoolean_(NSString *pdfFontName, NSString *pdfEncoding, jboolean isPdfEmbedded) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineExportPdfFont, initWithNSString_withNSString_withBoolean_, pdfFontName, pdfEncoding, isPdfEmbedded)
}

OrgOssPdfreporterEngineExportPdfFont *create_OrgOssPdfreporterEngineExportPdfFont_initWithNSString_withNSString_withBoolean_(NSString *pdfFontName, NSString *pdfEncoding, jboolean isPdfEmbedded) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineExportPdfFont, initWithNSString_withNSString_withBoolean_, pdfFontName, pdfEncoding, isPdfEmbedded)
}

void OrgOssPdfreporterEngineExportPdfFont_initWithNSString_withNSString_withBoolean_withBoolean_withBoolean_(OrgOssPdfreporterEngineExportPdfFont *self, NSString *pdfFontName, NSString *pdfEncoding, jboolean isPdfEmbedded, jboolean isPdfSimulatedBold, jboolean isPdfSimulatedItalic) {
  NSObject_init(self);
  self->pdfFontName_ = pdfFontName;
  self->pdfEncoding_ = pdfEncoding;
  self->isPdfEmbedded_ = isPdfEmbedded;
  self->isPdfSimulatedBold_ = isPdfSimulatedBold;
  self->isPdfSimulatedItalic_ = isPdfSimulatedItalic;
}

OrgOssPdfreporterEngineExportPdfFont *new_OrgOssPdfreporterEngineExportPdfFont_initWithNSString_withNSString_withBoolean_withBoolean_withBoolean_(NSString *pdfFontName, NSString *pdfEncoding, jboolean isPdfEmbedded, jboolean isPdfSimulatedBold, jboolean isPdfSimulatedItalic) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineExportPdfFont, initWithNSString_withNSString_withBoolean_withBoolean_withBoolean_, pdfFontName, pdfEncoding, isPdfEmbedded, isPdfSimulatedBold, isPdfSimulatedItalic)
}

OrgOssPdfreporterEngineExportPdfFont *create_OrgOssPdfreporterEngineExportPdfFont_initWithNSString_withNSString_withBoolean_withBoolean_withBoolean_(NSString *pdfFontName, NSString *pdfEncoding, jboolean isPdfEmbedded, jboolean isPdfSimulatedBold, jboolean isPdfSimulatedItalic) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineExportPdfFont, initWithNSString_withNSString_withBoolean_withBoolean_withBoolean_, pdfFontName, pdfEncoding, isPdfEmbedded, isPdfSimulatedBold, isPdfSimulatedItalic)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineExportPdfFont)
