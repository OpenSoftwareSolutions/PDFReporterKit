//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/export/ExporterFilterFactoryUtil.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/ClassNotFoundException.h"
#include "java/lang/IllegalAccessException.h"
#include "java/lang/InstantiationException.h"
#include "org/oss/pdfreporter/engine/JRException.h"
#include "org/oss/pdfreporter/engine/export/ExporterFilterFactory.h"
#include "org/oss/pdfreporter/engine/export/ExporterFilterFactoryUtil.h"
#include "org/oss/pdfreporter/engine/util/JRClassLoader.h"

@interface OrgOssPdfreporterEngineExportExporterFilterFactoryUtil ()

- (instancetype)init;

@end

__attribute__((unused)) static void OrgOssPdfreporterEngineExportExporterFilterFactoryUtil_init(OrgOssPdfreporterEngineExportExporterFilterFactoryUtil *self);

__attribute__((unused)) static OrgOssPdfreporterEngineExportExporterFilterFactoryUtil *new_OrgOssPdfreporterEngineExportExporterFilterFactoryUtil_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgOssPdfreporterEngineExportExporterFilterFactoryUtil *create_OrgOssPdfreporterEngineExportExporterFilterFactoryUtil_init();

@implementation OrgOssPdfreporterEngineExportExporterFilterFactoryUtil

+ (id<OrgOssPdfreporterEngineExportExporterFilterFactory>)getFilterFactoryWithNSString:(NSString *)factoryClassName {
  return OrgOssPdfreporterEngineExportExporterFilterFactoryUtil_getFilterFactoryWithNSString_(factoryClassName);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterEngineExportExporterFilterFactoryUtil_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getFilterFactoryWithNSString:", "getFilterFactory", "Lorg.oss.pdfreporter.engine.export.ExporterFilterFactory;", 0x9, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "init", "ExporterFilterFactoryUtil", NULL, 0x2, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineExportExporterFilterFactoryUtil = { 2, "ExporterFilterFactoryUtil", "org.oss.pdfreporter.engine.export", NULL, 0x11, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineExportExporterFilterFactoryUtil;
}

@end

id<OrgOssPdfreporterEngineExportExporterFilterFactory> OrgOssPdfreporterEngineExportExporterFilterFactoryUtil_getFilterFactoryWithNSString_(NSString *factoryClassName) {
  OrgOssPdfreporterEngineExportExporterFilterFactoryUtil_initialize();
  @try {
    IOSClass *clazz = OrgOssPdfreporterEngineUtilJRClassLoader_loadClassForNameWithNSString_(factoryClassName);
    return (id<OrgOssPdfreporterEngineExportExporterFilterFactory>) cast_check([((IOSClass *) nil_chk(clazz)) newInstance], OrgOssPdfreporterEngineExportExporterFilterFactory_class_());
  }
  @catch (JavaLangClassNotFoundException *e) {
    @throw new_OrgOssPdfreporterEngineJRException_initWithNSString_withNSException_(JreStrcat("$$$", @"Class ", factoryClassName, @" not found."), e);
  }
  @catch (JavaLangInstantiationException *e) {
    @throw new_OrgOssPdfreporterEngineJRException_initWithNSString_withNSException_(JreStrcat("$$C", @"Error instantiating class ", factoryClassName, '.'), e);
  }
  @catch (JavaLangIllegalAccessException *e) {
    @throw new_OrgOssPdfreporterEngineJRException_initWithNSString_withNSException_(JreStrcat("$$C", @"Error instantiating class ", factoryClassName, '.'), e);
  }
}

void OrgOssPdfreporterEngineExportExporterFilterFactoryUtil_init(OrgOssPdfreporterEngineExportExporterFilterFactoryUtil *self) {
  NSObject_init(self);
}

OrgOssPdfreporterEngineExportExporterFilterFactoryUtil *new_OrgOssPdfreporterEngineExportExporterFilterFactoryUtil_init() {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineExportExporterFilterFactoryUtil, init)
}

OrgOssPdfreporterEngineExportExporterFilterFactoryUtil *create_OrgOssPdfreporterEngineExportExporterFilterFactoryUtil_init() {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineExportExporterFilterFactoryUtil, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineExportExporterFilterFactoryUtil)
