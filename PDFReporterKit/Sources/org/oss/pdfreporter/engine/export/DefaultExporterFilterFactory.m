//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/export/DefaultExporterFilterFactory.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/util/ArrayList.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "org/oss/pdfreporter/engine/DefaultJasperReportsContext.h"
#include "org/oss/pdfreporter/engine/JRException.h"
#include "org/oss/pdfreporter/engine/JRPropertiesUtil.h"
#include "org/oss/pdfreporter/engine/JasperPrint.h"
#include "org/oss/pdfreporter/engine/JasperReportsContext.h"
#include "org/oss/pdfreporter/engine/export/DefaultExporterFilterFactory.h"
#include "org/oss/pdfreporter/engine/export/ExporterFilter.h"
#include "org/oss/pdfreporter/engine/export/ExporterFilterContainer.h"
#include "org/oss/pdfreporter/engine/export/ExporterFilterFactory.h"
#include "org/oss/pdfreporter/engine/export/ExporterFilterFactoryUtil.h"
#include "org/oss/pdfreporter/engine/export/JRExporterContext.h"

NSString *OrgOssPdfreporterEngineExportDefaultExporterFilterFactory_PROPERTY_EXPORTER_FILTER_FACTORY_PREFIX = @"net.sf.jasperreports.export.filter.factory.";

@implementation OrgOssPdfreporterEngineExportDefaultExporterFilterFactory

+ (NSString *)PROPERTY_EXPORTER_FILTER_FACTORY_PREFIX {
  return OrgOssPdfreporterEngineExportDefaultExporterFilterFactory_PROPERTY_EXPORTER_FILTER_FACTORY_PREFIX;
}

- (id<OrgOssPdfreporterEngineExportExporterFilter>)getFilterWithOrgOssPdfreporterEngineExportJRExporterContext:(id<OrgOssPdfreporterEngineExportJRExporterContext>)exporterContext {
  id<JavaUtilList> factories = [self getAllFilterFactoriesWithOrgOssPdfreporterEngineJasperPrint:[((id<OrgOssPdfreporterEngineExportJRExporterContext>) nil_chk(exporterContext)) getExportedReport]];
  id<JavaUtilList> filters = new_JavaUtilArrayList_initWithInt_([((id<JavaUtilList>) nil_chk(factories)) size]);
  for (id<JavaUtilIterator> it = [factories iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    id<OrgOssPdfreporterEngineExportExporterFilterFactory> factory = [it next];
    id<OrgOssPdfreporterEngineExportExporterFilter> filter = [((id<OrgOssPdfreporterEngineExportExporterFilterFactory>) nil_chk(factory)) getFilterWithOrgOssPdfreporterEngineExportJRExporterContext:exporterContext];
    if (filter != nil) {
      [filters addWithId:filter];
    }
  }
  id<OrgOssPdfreporterEngineExportExporterFilter> filter;
  if ([filters isEmpty]) {
    filter = nil;
  }
  else if ([filters size] == 1) {
    filter = [filters getWithInt:0];
  }
  else {
    filter = new_OrgOssPdfreporterEngineExportExporterFilterContainer_initWithJavaUtilList_(filters);
  }
  return filter;
}

- (id<JavaUtilList>)getAllFilterFactoriesWithOrgOssPdfreporterEngineJasperReportsContext:(id<OrgOssPdfreporterEngineJasperReportsContext>)jasperReportsContext
                                                  withOrgOssPdfreporterEngineJasperPrint:(OrgOssPdfreporterEngineJasperPrint *)report {
  id<JavaUtilList> factoryProps = [((OrgOssPdfreporterEngineJRPropertiesUtil *) nil_chk(OrgOssPdfreporterEngineJRPropertiesUtil_getInstanceWithOrgOssPdfreporterEngineJasperReportsContext_(jasperReportsContext))) getAllPropertiesWithOrgOssPdfreporterEngineJRPropertiesHolder:report withNSString:OrgOssPdfreporterEngineExportDefaultExporterFilterFactory_PROPERTY_EXPORTER_FILTER_FACTORY_PREFIX];
  id<JavaUtilList> factories = new_JavaUtilArrayList_initWithInt_([((id<JavaUtilList>) nil_chk(factoryProps)) size]);
  for (id<JavaUtilIterator> it = [factoryProps iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    OrgOssPdfreporterEngineJRPropertiesUtil_PropertySuffix *prop = [it next];
    id<OrgOssPdfreporterEngineExportExporterFilterFactory> factory = [self getFilterFactoryWithNSString:[((OrgOssPdfreporterEngineJRPropertiesUtil_PropertySuffix *) nil_chk(prop)) getValue]];
    [factories addWithId:factory];
  }
  return factories;
}

- (id<JavaUtilList>)getAllFilterFactoriesWithOrgOssPdfreporterEngineJasperPrint:(OrgOssPdfreporterEngineJasperPrint *)report {
  return [self getAllFilterFactoriesWithOrgOssPdfreporterEngineJasperReportsContext:OrgOssPdfreporterEngineDefaultJasperReportsContext_getInstance() withOrgOssPdfreporterEngineJasperPrint:report];
}

- (id<OrgOssPdfreporterEngineExportExporterFilterFactory>)getFilterFactoryWithNSString:(NSString *)factoryClassName {
  return OrgOssPdfreporterEngineExportExporterFilterFactoryUtil_getFilterFactoryWithNSString_(factoryClassName);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterEngineExportDefaultExporterFilterFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getFilterWithOrgOssPdfreporterEngineExportJRExporterContext:", "getFilter", "Lorg.oss.pdfreporter.engine.export.ExporterFilter;", 0x1, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "getAllFilterFactoriesWithOrgOssPdfreporterEngineJasperReportsContext:withOrgOssPdfreporterEngineJasperPrint:", "getAllFilterFactories", "Ljava.util.List;", 0x4, "Lorg.oss.pdfreporter.engine.JRException;", "(Lorg/oss/pdfreporter/engine/JasperReportsContext;Lorg/oss/pdfreporter/engine/JasperPrint;)Ljava/util/List<Lorg/oss/pdfreporter/engine/export/ExporterFilterFactory;>;" },
    { "getAllFilterFactoriesWithOrgOssPdfreporterEngineJasperPrint:", "getAllFilterFactories", "Ljava.util.List;", 0x4, "Lorg.oss.pdfreporter.engine.JRException;", "(Lorg/oss/pdfreporter/engine/JasperPrint;)Ljava/util/List<Lorg/oss/pdfreporter/engine/export/ExporterFilterFactory;>;" },
    { "getFilterFactoryWithNSString:", "getFilterFactory", "Lorg.oss.pdfreporter.engine.export.ExporterFilterFactory;", 0x4, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "init", "DefaultExporterFilterFactory", NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "PROPERTY_EXPORTER_FILTER_FACTORY_PREFIX", "PROPERTY_EXPORTER_FILTER_FACTORY_PREFIX", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineExportDefaultExporterFilterFactory_PROPERTY_EXPORTER_FILTER_FACTORY_PREFIX, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineExportDefaultExporterFilterFactory = { 2, "DefaultExporterFilterFactory", "org.oss.pdfreporter.engine.export", NULL, 0x1, 5, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineExportDefaultExporterFilterFactory;
}

@end

void OrgOssPdfreporterEngineExportDefaultExporterFilterFactory_init(OrgOssPdfreporterEngineExportDefaultExporterFilterFactory *self) {
  NSObject_init(self);
}

OrgOssPdfreporterEngineExportDefaultExporterFilterFactory *new_OrgOssPdfreporterEngineExportDefaultExporterFilterFactory_init() {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineExportDefaultExporterFilterFactory, init)
}

OrgOssPdfreporterEngineExportDefaultExporterFilterFactory *create_OrgOssPdfreporterEngineExportDefaultExporterFilterFactory_init() {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineExportDefaultExporterFilterFactory, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineExportDefaultExporterFilterFactory)
