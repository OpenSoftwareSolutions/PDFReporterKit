//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/export/ElementKeyExporterFilterFactory.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/util/HashSet.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/Set.h"
#include "org/oss/pdfreporter/engine/JRException.h"
#include "org/oss/pdfreporter/engine/JRPropertiesUtil.h"
#include "org/oss/pdfreporter/engine/JasperPrint.h"
#include "org/oss/pdfreporter/engine/export/ElementKeyExporterFilter.h"
#include "org/oss/pdfreporter/engine/export/ElementKeyExporterFilterFactory.h"
#include "org/oss/pdfreporter/engine/export/ExporterFilter.h"
#include "org/oss/pdfreporter/engine/export/JRExporterContext.h"

NSString *OrgOssPdfreporterEngineExportElementKeyExporterFilterFactory_PROPERTY_EXCLUDED_KEY_PREFIX = @"exclude.key.";

@implementation OrgOssPdfreporterEngineExportElementKeyExporterFilterFactory

+ (NSString *)PROPERTY_EXCLUDED_KEY_PREFIX {
  return OrgOssPdfreporterEngineExportElementKeyExporterFilterFactory_PROPERTY_EXCLUDED_KEY_PREFIX;
}

- (id<OrgOssPdfreporterEngineExportExporterFilter>)getFilterWithOrgOssPdfreporterEngineExportJRExporterContext:(id<OrgOssPdfreporterEngineExportJRExporterContext>)exporterContext {
  NSString *excludeKeyPrefix = JreStrcat("$$", [((id<OrgOssPdfreporterEngineExportJRExporterContext>) nil_chk(exporterContext)) getExportPropertiesPrefix], OrgOssPdfreporterEngineExportElementKeyExporterFilterFactory_PROPERTY_EXCLUDED_KEY_PREFIX);
  id<JavaUtilList> props = OrgOssPdfreporterEngineJRPropertiesUtil_getPropertiesWithOrgOssPdfreporterEngineJRPropertiesHolder_withNSString_([exporterContext getExportedReport], excludeKeyPrefix);
  id<OrgOssPdfreporterEngineExportExporterFilter> filter;
  if ([((id<JavaUtilList>) nil_chk(props)) isEmpty]) {
    filter = nil;
  }
  else {
    id<JavaUtilSet> excludedKeys = new_JavaUtilHashSet_init();
    for (id<JavaUtilIterator> it = [props iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
      OrgOssPdfreporterEngineJRPropertiesUtil_PropertySuffix *prop = [it next];
      NSString *key = [((OrgOssPdfreporterEngineJRPropertiesUtil_PropertySuffix *) nil_chk(prop)) getValue];
      if (key == nil || ((jint) [key length]) == 0) {
        key = [prop getSuffix];
      }
      [excludedKeys addWithId:key];
    }
    filter = new_OrgOssPdfreporterEngineExportElementKeyExporterFilter_initWithJavaUtilSet_(excludedKeys);
  }
  return filter;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterEngineExportElementKeyExporterFilterFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getFilterWithOrgOssPdfreporterEngineExportJRExporterContext:", "getFilter", "Lorg.oss.pdfreporter.engine.export.ExporterFilter;", 0x1, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "init", "ElementKeyExporterFilterFactory", NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "PROPERTY_EXCLUDED_KEY_PREFIX", "PROPERTY_EXCLUDED_KEY_PREFIX", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineExportElementKeyExporterFilterFactory_PROPERTY_EXCLUDED_KEY_PREFIX, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineExportElementKeyExporterFilterFactory = { 2, "ElementKeyExporterFilterFactory", "org.oss.pdfreporter.engine.export", NULL, 0x1, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineExportElementKeyExporterFilterFactory;
}

@end

void OrgOssPdfreporterEngineExportElementKeyExporterFilterFactory_init(OrgOssPdfreporterEngineExportElementKeyExporterFilterFactory *self) {
  NSObject_init(self);
}

OrgOssPdfreporterEngineExportElementKeyExporterFilterFactory *new_OrgOssPdfreporterEngineExportElementKeyExporterFilterFactory_init() {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineExportElementKeyExporterFilterFactory, init)
}

OrgOssPdfreporterEngineExportElementKeyExporterFilterFactory *create_OrgOssPdfreporterEngineExportElementKeyExporterFilterFactory_init() {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineExportElementKeyExporterFilterFactory, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineExportElementKeyExporterFilterFactory)
