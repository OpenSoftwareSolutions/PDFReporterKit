//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/fill/JRFillGenericElement.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/util/HashMap.h"
#include "java/util/Iterator.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "org/oss/pdfreporter/engine/JRDefaultStyleProvider.h"
#include "org/oss/pdfreporter/engine/JRElement.h"
#include "org/oss/pdfreporter/engine/JRException.h"
#include "org/oss/pdfreporter/engine/JRExpression.h"
#include "org/oss/pdfreporter/engine/JRExpressionCollector.h"
#include "org/oss/pdfreporter/engine/JRGenericElement.h"
#include "org/oss/pdfreporter/engine/JRGenericElementParameter.h"
#include "org/oss/pdfreporter/engine/JRGenericElementType.h"
#include "org/oss/pdfreporter/engine/JRGenericPrintElement.h"
#include "org/oss/pdfreporter/engine/JROrigin.h"
#include "org/oss/pdfreporter/engine/JRPrintElement.h"
#include "org/oss/pdfreporter/engine/JRVisitor.h"
#include "org/oss/pdfreporter/engine/JasperPrint.h"
#include "org/oss/pdfreporter/engine/fill/JRBaseFiller.h"
#include "org/oss/pdfreporter/engine/fill/JRFillCloneFactory.h"
#include "org/oss/pdfreporter/engine/fill/JRFillCloneable.h"
#include "org/oss/pdfreporter/engine/fill/JRFillElement.h"
#include "org/oss/pdfreporter/engine/fill/JRFillGenericElement.h"
#include "org/oss/pdfreporter/engine/fill/JRFillObjectFactory.h"
#include "org/oss/pdfreporter/engine/fill/JRRecordedValuesGenericPrintElement.h"
#include "org/oss/pdfreporter/engine/fill/JRTemplateElement.h"
#include "org/oss/pdfreporter/engine/fill/JRTemplateGenericElement.h"
#include "org/oss/pdfreporter/engine/fill/JRTemplateGenericPrintElement.h"
#include "org/oss/pdfreporter/engine/type/EvaluationTimeEnum.h"
#include "org/oss/pdfreporter/uses/java/util/UUID.h"

@interface OrgOssPdfreporterEngineFillJRFillGenericElement () {
 @public
  IOSObjectArray *parameters_;
  id<JavaUtilMap> parameterValues_;
}

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillGenericElement, parameters_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillGenericElement, parameterValues_, id<JavaUtilMap>)

@implementation OrgOssPdfreporterEngineFillJRFillGenericElement

- (instancetype)initWithOrgOssPdfreporterEngineFillJRBaseFiller:(OrgOssPdfreporterEngineFillJRBaseFiller *)filler
                    withOrgOssPdfreporterEngineJRGenericElement:(id<OrgOssPdfreporterEngineJRGenericElement>)element
             withOrgOssPdfreporterEngineFillJRFillObjectFactory:(OrgOssPdfreporterEngineFillJRFillObjectFactory *)factory {
  OrgOssPdfreporterEngineFillJRFillGenericElement_initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineJRGenericElement_withOrgOssPdfreporterEngineFillJRFillObjectFactory_(self, filler, element, factory);
  return self;
}

- (instancetype)initWithOrgOssPdfreporterEngineFillJRFillGenericElement:(OrgOssPdfreporterEngineFillJRFillGenericElement *)element
                      withOrgOssPdfreporterEngineFillJRFillCloneFactory:(OrgOssPdfreporterEngineFillJRFillCloneFactory *)factory {
  OrgOssPdfreporterEngineFillJRFillGenericElement_initWithOrgOssPdfreporterEngineFillJRFillGenericElement_withOrgOssPdfreporterEngineFillJRFillCloneFactory_(self, element, factory);
  return self;
}

- (void)evaluateWithByte:(jbyte)evaluation {
  [self initDelayedEvaluations];
  [self reset];
  [self evaluatePrintWhenExpressionWithByte:evaluation];
  if ([self isPrintWhenExpressionNull] || [self isPrintWhenTrue]) {
    if ([self isEvaluateNow]) {
      [self evaluateElementWithByte:evaluation];
    }
  }
}

- (void)collectDelayedEvaluations {
  [super collectDelayedEvaluations];
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(parameters_))->size_; i++) {
    id<OrgOssPdfreporterEngineJRGenericElementParameter> parameter = IOSObjectArray_Get(parameters_, i);
    [self collectDelayedEvaluationsWithOrgOssPdfreporterEngineJRExpression:[((id<OrgOssPdfreporterEngineJRGenericElementParameter>) nil_chk(parameter)) getValueExpression]];
  }
}

- (void)evaluateElementWithByte:(jbyte)evaluation {
  [self evaluatePropertiesWithByte:evaluation];
  [self evaluateStyleWithByte:evaluation];
  [((id<JavaUtilMap>) nil_chk(parameterValues_)) clear];
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(parameters_))->size_; i++) {
    id<OrgOssPdfreporterEngineJRGenericElementParameter> parameter = IOSObjectArray_Get(parameters_, i);
    id value = nil;
    id<OrgOssPdfreporterEngineJRExpression> valueExpression = [((id<OrgOssPdfreporterEngineJRGenericElementParameter>) nil_chk(parameter)) getValueExpression];
    if (valueExpression != nil) {
      value = [self evaluateExpressionWithOrgOssPdfreporterEngineJRExpression:valueExpression withByte:evaluation];
    }
    if (value != nil || ![parameter isSkipWhenEmpty]) {
      (void) [((id<JavaUtilMap>) nil_chk(parameterValues_)) putWithId:[parameter getName] withId:value];
    }
  }
}

- (jboolean)prepareWithInt:(jint)availableHeight
               withBoolean:(jboolean)isOverflow {
  jboolean willOverflow = false;
  [super prepareWithInt:availableHeight withBoolean:isOverflow];
  if (![self isToPrint]) {
    return willOverflow;
  }
  jboolean isToPrint = true;
  jboolean isReprinted = false;
  if (isOverflow && [self isAlreadyPrinted] && ![self isPrintWhenDetailOverflows]) {
    isToPrint = false;
  }
  if (isToPrint && availableHeight < [self getRelativeY] + [self getHeight]) {
    isToPrint = false;
    willOverflow = true;
  }
  if (isToPrint && isOverflow && [self isPrintWhenDetailOverflows] && ([self isAlreadyPrinted] || ![self isPrintRepeatedValues])) {
    isReprinted = true;
  }
  [self setToPrintWithBoolean:isToPrint];
  [self setReprintedWithBoolean:isReprinted];
  return willOverflow;
}

- (id<OrgOssPdfreporterEngineJRPrintElement>)fill {
  OrgOssPdfreporterEngineFillJRTemplateGenericPrintElement *printElement;
  if ([self isEvaluateAuto]) {
    OrgOssPdfreporterEngineFillJRRecordedValuesGenericPrintElement *recordedValuesElement = new_OrgOssPdfreporterEngineFillJRRecordedValuesGenericPrintElement_initWithOrgOssPdfreporterEngineFillJRTemplateGenericElement_withInt_withInt_([self getTemplate], elementId_, ((IOSObjectArray *) nil_chk(parameters_))->size_);
    [self copyBasicAttributesWithOrgOssPdfreporterEngineJRGenericPrintElement:recordedValuesElement];
    [self initDelayedEvaluationPrintWithOrgOssPdfreporterEngineFillJRRecordedValuesPrintElement:recordedValuesElement];
    printElement = recordedValuesElement;
  }
  else {
    printElement = new_OrgOssPdfreporterEngineFillJRTemplateGenericPrintElement_initWithOrgOssPdfreporterEngineFillJRTemplateGenericElement_withInt_withInt_([self getTemplate], elementId_, ((IOSObjectArray *) nil_chk(parameters_))->size_);
    [self copyBasicAttributesWithOrgOssPdfreporterEngineJRGenericPrintElement:printElement];
    if ([self isEvaluateNow]) {
      [self copy__WithOrgOssPdfreporterEngineJRGenericPrintElement:printElement];
    }
    else {
      [((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler_)) addBoundElementWithOrgOssPdfreporterEngineFillJRFillElement:self withOrgOssPdfreporterEngineJRPrintElement:printElement withOrgOssPdfreporterEngineTypeEvaluationTimeEnum:[self getEvaluationTimeValue] withNSString:[self getEvaluationGroupName] withOrgOssPdfreporterEngineFillJRFillBand:band_];
    }
  }
  return printElement;
}

- (void)copyBasicAttributesWithOrgOssPdfreporterEngineJRGenericPrintElement:(id<OrgOssPdfreporterEngineJRGenericPrintElement>)printElement {
  [((id<OrgOssPdfreporterEngineJRGenericPrintElement>) nil_chk(printElement)) setUUIDWithOrgOssPdfreporterUsesJavaUtilUUID:[self getUUID]];
  [printElement setXWithInt:[self getX]];
  [printElement setYWithInt:[self getRelativeY]];
  [printElement setWidthWithInt:[self getWidth]];
  [printElement setHeightWithInt:[self getStretchHeight]];
}

- (OrgOssPdfreporterEngineFillJRTemplateGenericElement *)getTemplate {
  return (OrgOssPdfreporterEngineFillJRTemplateGenericElement *) cast_chk([self getElementTemplate], [OrgOssPdfreporterEngineFillJRTemplateGenericElement class]);
}

- (OrgOssPdfreporterEngineFillJRTemplateElement *)createElementTemplate {
  return new_OrgOssPdfreporterEngineFillJRTemplateGenericElement_initWithOrgOssPdfreporterEngineJROrigin_withOrgOssPdfreporterEngineJRDefaultStyleProvider_withOrgOssPdfreporterEngineJRGenericElement_([self getElementOrigin], [((OrgOssPdfreporterEngineJasperPrint *) nil_chk([((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler_)) getJasperPrint])) getDefaultStyleProvider], self);
}

- (void)copy__WithOrgOssPdfreporterEngineJRGenericPrintElement:(id<OrgOssPdfreporterEngineJRGenericPrintElement>)printElement {
  for (id<JavaUtilIterator> it = [((id<JavaUtilSet>) nil_chk([((id<JavaUtilMap>) nil_chk(parameterValues_)) entrySet])) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    id<JavaUtilMap_Entry> entry_ = [it next];
    NSString *name = [((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey];
    id value = [entry_ getValue];
    [((id<OrgOssPdfreporterEngineJRGenericPrintElement>) nil_chk(printElement)) setParameterValueWithNSString:name withId:value];
  }
  [self transferPropertiesWithOrgOssPdfreporterEngineJRPrintElement:printElement];
}

- (void)resolveElementWithOrgOssPdfreporterEngineJRPrintElement:(id<OrgOssPdfreporterEngineJRPrintElement>)element
                                                       withByte:(jbyte)evaluation {
  id<OrgOssPdfreporterEngineJRGenericPrintElement> genericElement = (id<OrgOssPdfreporterEngineJRGenericPrintElement>) cast_check(element, OrgOssPdfreporterEngineJRGenericPrintElement_class_());
  [self evaluateElementWithByte:evaluation];
  [self copy__WithOrgOssPdfreporterEngineJRGenericPrintElement:genericElement];
}

- (void)rewind {
}

- (OrgOssPdfreporterEngineJRGenericElementType *)getGenericType {
  return [((id<OrgOssPdfreporterEngineJRGenericElement>) nil_chk(((id<OrgOssPdfreporterEngineJRGenericElement>) cast_check(parent_, OrgOssPdfreporterEngineJRGenericElement_class_())))) getGenericType];
}

- (IOSObjectArray *)getParameters {
  return parameters_;
}

- (void)collectExpressionsWithOrgOssPdfreporterEngineJRExpressionCollector:(OrgOssPdfreporterEngineJRExpressionCollector *)collector {
  [((OrgOssPdfreporterEngineJRExpressionCollector *) nil_chk(collector)) collectWithOrgOssPdfreporterEngineJRGenericElement:self];
}

- (void)visitWithOrgOssPdfreporterEngineJRVisitor:(id<OrgOssPdfreporterEngineJRVisitor>)visitor {
  [((id<OrgOssPdfreporterEngineJRVisitor>) nil_chk(visitor)) visitGenericElementWithOrgOssPdfreporterEngineJRGenericElement:self];
}

- (id<OrgOssPdfreporterEngineFillJRFillCloneable>)createCloneWithOrgOssPdfreporterEngineFillJRFillCloneFactory:(OrgOssPdfreporterEngineFillJRFillCloneFactory *)factory {
  return new_OrgOssPdfreporterEngineFillJRFillGenericElement_initWithOrgOssPdfreporterEngineFillJRFillGenericElement_withOrgOssPdfreporterEngineFillJRFillCloneFactory_(self, factory);
}

- (OrgOssPdfreporterEngineTypeEvaluationTimeEnum *)getEvaluationTimeValue {
  return [((id<OrgOssPdfreporterEngineJRGenericElement>) nil_chk(((id<OrgOssPdfreporterEngineJRGenericElement>) cast_check(parent_, OrgOssPdfreporterEngineJRGenericElement_class_())))) getEvaluationTimeValue];
}

- (NSString *)getEvaluationGroupName {
  return [((id<OrgOssPdfreporterEngineJRGenericElement>) nil_chk(((id<OrgOssPdfreporterEngineJRGenericElement>) cast_check(parent_, OrgOssPdfreporterEngineJRGenericElement_class_())))) getEvaluationGroupName];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgOssPdfreporterEngineFillJRBaseFiller:withOrgOssPdfreporterEngineJRGenericElement:withOrgOssPdfreporterEngineFillJRFillObjectFactory:", "JRFillGenericElement", NULL, 0x1, NULL, NULL },
    { "initWithOrgOssPdfreporterEngineFillJRFillGenericElement:withOrgOssPdfreporterEngineFillJRFillCloneFactory:", "JRFillGenericElement", NULL, 0x1, NULL, NULL },
    { "evaluateWithByte:", "evaluate", "V", 0x4, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "collectDelayedEvaluations", NULL, "V", 0x4, NULL, NULL },
    { "evaluateElementWithByte:", "evaluateElement", "V", 0x4, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "prepareWithInt:withBoolean:", "prepare", "Z", 0x4, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "fill", NULL, "Lorg.oss.pdfreporter.engine.JRPrintElement;", 0x4, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "copyBasicAttributesWithOrgOssPdfreporterEngineJRGenericPrintElement:", "copyBasicAttributes", "V", 0x4, NULL, NULL },
    { "getTemplate", NULL, "Lorg.oss.pdfreporter.engine.fill.JRTemplateGenericElement;", 0x4, NULL, NULL },
    { "createElementTemplate", NULL, "Lorg.oss.pdfreporter.engine.fill.JRTemplateElement;", 0x4, NULL, NULL },
    { "copy__WithOrgOssPdfreporterEngineJRGenericPrintElement:", "copy", "V", 0x4, NULL, NULL },
    { "resolveElementWithOrgOssPdfreporterEngineJRPrintElement:withByte:", "resolveElement", "V", 0x4, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "rewind", NULL, "V", 0x4, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "getGenericType", NULL, "Lorg.oss.pdfreporter.engine.JRGenericElementType;", 0x1, NULL, NULL },
    { "getParameters", NULL, "[Lorg.oss.pdfreporter.engine.JRGenericElementParameter;", 0x1, NULL, NULL },
    { "collectExpressionsWithOrgOssPdfreporterEngineJRExpressionCollector:", "collectExpressions", "V", 0x1, NULL, NULL },
    { "visitWithOrgOssPdfreporterEngineJRVisitor:", "visit", "V", 0x1, NULL, NULL },
    { "createCloneWithOrgOssPdfreporterEngineFillJRFillCloneFactory:", "createClone", "Lorg.oss.pdfreporter.engine.fill.JRFillCloneable;", 0x1, NULL, NULL },
    { "getEvaluationTimeValue", NULL, "Lorg.oss.pdfreporter.engine.type.EvaluationTimeEnum;", 0x1, NULL, NULL },
    { "getEvaluationGroupName", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "parameters_", NULL, 0x2, "[Lorg.oss.pdfreporter.engine.JRGenericElementParameter;", NULL, NULL, .constantValue.asLong = 0 },
    { "parameterValues_", NULL, 0x2, "Ljava.util.Map;", NULL, "Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineFillJRFillGenericElement = { 2, "JRFillGenericElement", "org.oss.pdfreporter.engine.fill", NULL, 0x1, 20, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineFillJRFillGenericElement;
}

@end

void OrgOssPdfreporterEngineFillJRFillGenericElement_initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineJRGenericElement_withOrgOssPdfreporterEngineFillJRFillObjectFactory_(OrgOssPdfreporterEngineFillJRFillGenericElement *self, OrgOssPdfreporterEngineFillJRBaseFiller *filler, id<OrgOssPdfreporterEngineJRGenericElement> element, OrgOssPdfreporterEngineFillJRFillObjectFactory *factory) {
  OrgOssPdfreporterEngineFillJRFillElement_initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineJRElement_withOrgOssPdfreporterEngineFillJRFillObjectFactory_(self, filler, element, factory);
  self->parameterValues_ = new_JavaUtilHashMap_init();
  self->parameters_ = [((id<OrgOssPdfreporterEngineJRGenericElement>) nil_chk(element)) getParameters];
}

OrgOssPdfreporterEngineFillJRFillGenericElement *new_OrgOssPdfreporterEngineFillJRFillGenericElement_initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineJRGenericElement_withOrgOssPdfreporterEngineFillJRFillObjectFactory_(OrgOssPdfreporterEngineFillJRBaseFiller *filler, id<OrgOssPdfreporterEngineJRGenericElement> element, OrgOssPdfreporterEngineFillJRFillObjectFactory *factory) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineFillJRFillGenericElement, initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineJRGenericElement_withOrgOssPdfreporterEngineFillJRFillObjectFactory_, filler, element, factory)
}

OrgOssPdfreporterEngineFillJRFillGenericElement *create_OrgOssPdfreporterEngineFillJRFillGenericElement_initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineJRGenericElement_withOrgOssPdfreporterEngineFillJRFillObjectFactory_(OrgOssPdfreporterEngineFillJRBaseFiller *filler, id<OrgOssPdfreporterEngineJRGenericElement> element, OrgOssPdfreporterEngineFillJRFillObjectFactory *factory) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineFillJRFillGenericElement, initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineJRGenericElement_withOrgOssPdfreporterEngineFillJRFillObjectFactory_, filler, element, factory)
}

void OrgOssPdfreporterEngineFillJRFillGenericElement_initWithOrgOssPdfreporterEngineFillJRFillGenericElement_withOrgOssPdfreporterEngineFillJRFillCloneFactory_(OrgOssPdfreporterEngineFillJRFillGenericElement *self, OrgOssPdfreporterEngineFillJRFillGenericElement *element, OrgOssPdfreporterEngineFillJRFillCloneFactory *factory) {
  OrgOssPdfreporterEngineFillJRFillElement_initWithOrgOssPdfreporterEngineFillJRFillElement_withOrgOssPdfreporterEngineFillJRFillCloneFactory_(self, element, factory);
  self->parameterValues_ = new_JavaUtilHashMap_init();
  self->parameters_ = ((OrgOssPdfreporterEngineFillJRFillGenericElement *) nil_chk(element))->parameters_;
}

OrgOssPdfreporterEngineFillJRFillGenericElement *new_OrgOssPdfreporterEngineFillJRFillGenericElement_initWithOrgOssPdfreporterEngineFillJRFillGenericElement_withOrgOssPdfreporterEngineFillJRFillCloneFactory_(OrgOssPdfreporterEngineFillJRFillGenericElement *element, OrgOssPdfreporterEngineFillJRFillCloneFactory *factory) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineFillJRFillGenericElement, initWithOrgOssPdfreporterEngineFillJRFillGenericElement_withOrgOssPdfreporterEngineFillJRFillCloneFactory_, element, factory)
}

OrgOssPdfreporterEngineFillJRFillGenericElement *create_OrgOssPdfreporterEngineFillJRFillGenericElement_initWithOrgOssPdfreporterEngineFillJRFillGenericElement_withOrgOssPdfreporterEngineFillJRFillCloneFactory_(OrgOssPdfreporterEngineFillJRFillGenericElement *element, OrgOssPdfreporterEngineFillJRFillCloneFactory *factory) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineFillJRFillGenericElement, initWithOrgOssPdfreporterEngineFillJRFillGenericElement_withOrgOssPdfreporterEngineFillJRFillCloneFactory_, element, factory)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineFillJRFillGenericElement)
