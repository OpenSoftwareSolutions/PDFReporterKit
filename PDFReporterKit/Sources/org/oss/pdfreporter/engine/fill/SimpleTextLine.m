//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/fill/SimpleTextLine.java
//

#include "J2ObjC_source.h"
#include "org/oss/pdfreporter/engine/fill/SimpleTextLine.h"

@interface OrgOssPdfreporterEngineFillSimpleTextLine () {
 @public
  jfloat ascent_;
  jfloat descent_;
  jfloat leading_;
  jint characterCount_;
  jboolean leftToRight_;
  jfloat advance_;
}

@end

@implementation OrgOssPdfreporterEngineFillSimpleTextLine

- (jfloat)getAscent {
  return ascent_;
}

- (jfloat)getDescent {
  return descent_;
}

- (jfloat)getLeading {
  return leading_;
}

- (jint)getCharacterCount {
  return characterCount_;
}

- (jboolean)isLeftToRight {
  return leftToRight_;
}

- (jfloat)getAdvance {
  return advance_;
}

- (void)setAscentWithFloat:(jfloat)ascent {
  self->ascent_ = ascent;
}

- (void)setDescentWithFloat:(jfloat)descent {
  self->descent_ = descent;
}

- (void)setLeadingWithFloat:(jfloat)leading {
  self->leading_ = leading;
}

- (void)setCharacterCountWithInt:(jint)characterCount {
  self->characterCount_ = characterCount;
}

- (void)setLeftToRightWithBoolean:(jboolean)leftToRight {
  self->leftToRight_ = leftToRight;
}

- (void)setAdvanceWithFloat:(jfloat)advance {
  self->advance_ = advance;
}

- (NSString *)description {
  return JreStrcat("$F$F$F$I$Z$FC", @"{ascent: ", ascent_, @", descent: ", descent_, @", leading: ", leading_, @", characterCount: ", characterCount_, @", leftToRight: ", leftToRight_, @", advance: ", advance_, '}');
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterEngineFillSimpleTextLine_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getAscent", NULL, "F", 0x1, NULL, NULL },
    { "getDescent", NULL, "F", 0x1, NULL, NULL },
    { "getLeading", NULL, "F", 0x1, NULL, NULL },
    { "getCharacterCount", NULL, "I", 0x1, NULL, NULL },
    { "isLeftToRight", NULL, "Z", 0x1, NULL, NULL },
    { "getAdvance", NULL, "F", 0x1, NULL, NULL },
    { "setAscentWithFloat:", "setAscent", "V", 0x1, NULL, NULL },
    { "setDescentWithFloat:", "setDescent", "V", 0x1, NULL, NULL },
    { "setLeadingWithFloat:", "setLeading", "V", 0x1, NULL, NULL },
    { "setCharacterCountWithInt:", "setCharacterCount", "V", 0x1, NULL, NULL },
    { "setLeftToRightWithBoolean:", "setLeftToRight", "V", 0x1, NULL, NULL },
    { "setAdvanceWithFloat:", "setAdvance", "V", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "init", "SimpleTextLine", NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "ascent_", NULL, 0x2, "F", NULL, NULL, .constantValue.asLong = 0 },
    { "descent_", NULL, 0x2, "F", NULL, NULL, .constantValue.asLong = 0 },
    { "leading_", NULL, 0x2, "F", NULL, NULL, .constantValue.asLong = 0 },
    { "characterCount_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "leftToRight_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "advance_", NULL, 0x2, "F", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineFillSimpleTextLine = { 2, "SimpleTextLine", "org.oss.pdfreporter.engine.fill", NULL, 0x1, 14, methods, 6, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineFillSimpleTextLine;
}

@end

void OrgOssPdfreporterEngineFillSimpleTextLine_init(OrgOssPdfreporterEngineFillSimpleTextLine *self) {
  NSObject_init(self);
}

OrgOssPdfreporterEngineFillSimpleTextLine *new_OrgOssPdfreporterEngineFillSimpleTextLine_init() {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineFillSimpleTextLine, init)
}

OrgOssPdfreporterEngineFillSimpleTextLine *create_OrgOssPdfreporterEngineFillSimpleTextLine_init() {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineFillSimpleTextLine, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineFillSimpleTextLine)
