//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/fill/JRTemplatePrintText.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Boolean.h"
#include "java/lang/Integer.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/Map.h"
#include "org/oss/pdfreporter/engine/DefaultJasperReportsContext.h"
#include "org/oss/pdfreporter/engine/JRAnchor.h"
#include "org/oss/pdfreporter/engine/JRCommonText.h"
#include "org/oss/pdfreporter/engine/JRConstants.h"
#include "org/oss/pdfreporter/engine/JRFont.h"
#include "org/oss/pdfreporter/engine/JRLineBox.h"
#include "org/oss/pdfreporter/engine/JRParagraph.h"
#include "org/oss/pdfreporter/engine/JRPrintHyperlinkParameters.h"
#include "org/oss/pdfreporter/engine/JRStyledTextAttributeSelector.h"
#include "org/oss/pdfreporter/engine/PrintElementVisitor.h"
#include "org/oss/pdfreporter/engine/fill/JRTemplateElement.h"
#include "org/oss/pdfreporter/engine/fill/JRTemplatePrintElement.h"
#include "org/oss/pdfreporter/engine/fill/JRTemplatePrintText.h"
#include "org/oss/pdfreporter/engine/fill/JRTemplateText.h"
#include "org/oss/pdfreporter/engine/fill/TextFormat.h"
#include "org/oss/pdfreporter/engine/type/HorizontalAlignEnum.h"
#include "org/oss/pdfreporter/engine/type/HyperlinkTargetEnum.h"
#include "org/oss/pdfreporter/engine/type/HyperlinkTypeEnum.h"
#include "org/oss/pdfreporter/engine/type/LineSpacingEnum.h"
#include "org/oss/pdfreporter/engine/type/RotationEnum.h"
#include "org/oss/pdfreporter/engine/type/RunDirectionEnum.h"
#include "org/oss/pdfreporter/engine/type/VerticalAlignEnum.h"
#include "org/oss/pdfreporter/engine/util/JRStyledText.h"
#include "org/oss/pdfreporter/engine/util/JRStyledTextParser.h"
#include "org/oss/pdfreporter/engine/util/JRStyledTextUtil.h"
#include "org/oss/pdfreporter/text/bundle/StringLocale.h"

@interface OrgOssPdfreporterEngineFillJRTemplatePrintText () {
 @public
  NSString *text_;
  JavaLangInteger *textTruncateIndex_;
  NSString *textTruncateSuffix_;
  IOSShortArray *lineBreakOffsets_;
  id value_;
  jfloat lineSpacingFactor_;
  jfloat leadingOffset_;
  OrgOssPdfreporterEngineTypeRunDirectionEnum *runDirectionValue_;
  jfloat textHeight_;
  id<OrgOssPdfreporterEngineFillTextFormat> textFormat_;
  NSString *anchorName_;
  NSString *hyperlinkReference_;
  NSString *hyperlinkAnchor_;
  JavaLangInteger *hyperlinkPage_;
  NSString *hyperlinkTooltip_;
  OrgOssPdfreporterEngineJRPrintHyperlinkParameters *hyperlinkParameters_;
  jint PSEUDO_SERIAL_VERSION_UID_;
  jbyte runDirection_;
}

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRTemplatePrintText, text_, NSString *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRTemplatePrintText, textTruncateIndex_, JavaLangInteger *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRTemplatePrintText, textTruncateSuffix_, NSString *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRTemplatePrintText, lineBreakOffsets_, IOSShortArray *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRTemplatePrintText, value_, id)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRTemplatePrintText, runDirectionValue_, OrgOssPdfreporterEngineTypeRunDirectionEnum *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRTemplatePrintText, textFormat_, id<OrgOssPdfreporterEngineFillTextFormat>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRTemplatePrintText, anchorName_, NSString *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRTemplatePrintText, hyperlinkReference_, NSString *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRTemplatePrintText, hyperlinkAnchor_, NSString *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRTemplatePrintText, hyperlinkPage_, JavaLangInteger *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRTemplatePrintText, hyperlinkTooltip_, NSString *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRTemplatePrintText, hyperlinkParameters_, OrgOssPdfreporterEngineJRPrintHyperlinkParameters *)

inline jlong OrgOssPdfreporterEngineFillJRTemplatePrintText_get_serialVersionUID();
#define OrgOssPdfreporterEngineFillJRTemplatePrintText_serialVersionUID 10200LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgOssPdfreporterEngineFillJRTemplatePrintText, serialVersionUID, jlong)

@implementation OrgOssPdfreporterEngineFillJRTemplatePrintText

- (instancetype)initWithOrgOssPdfreporterEngineFillJRTemplateText:(OrgOssPdfreporterEngineFillJRTemplateText *)text {
  OrgOssPdfreporterEngineFillJRTemplatePrintText_initWithOrgOssPdfreporterEngineFillJRTemplateText_(self, text);
  return self;
}

- (instancetype)initWithOrgOssPdfreporterEngineFillJRTemplateText:(OrgOssPdfreporterEngineFillJRTemplateText *)text
                                                          withInt:(jint)sourceElementId {
  OrgOssPdfreporterEngineFillJRTemplatePrintText_initWithOrgOssPdfreporterEngineFillJRTemplateText_withInt_(self, text, sourceElementId);
  return self;
}

- (NSString *)getText {
  return [((OrgOssPdfreporterEngineUtilJRStyledTextUtil *) nil_chk(OrgOssPdfreporterEngineUtilJRStyledTextUtil_getInstanceWithOrgOssPdfreporterEngineJasperReportsContext_(OrgOssPdfreporterEngineDefaultJasperReportsContext_getInstance()))) getTruncatedTextWithOrgOssPdfreporterEngineJRPrintText:self];
}

- (void)setTextWithNSString:(NSString *)text {
  self->text_ = text;
}

- (JavaLangInteger *)getTextTruncateIndex {
  return textTruncateIndex_;
}

- (void)setTextTruncateIndexWithJavaLangInteger:(JavaLangInteger *)textTruncateIndex {
  self->textTruncateIndex_ = textTruncateIndex;
}

- (NSString *)getTextTruncateSuffix {
  return textTruncateSuffix_;
}

- (void)setTextTruncateSuffixWithNSString:(NSString *)textTruncateSuffix {
  self->textTruncateSuffix_ = textTruncateSuffix;
}

- (IOSShortArray *)getLineBreakOffsets {
  return lineBreakOffsets_;
}

- (void)setLineBreakOffsetsWithShortArray:(IOSShortArray *)lineBreakOffsets {
  self->lineBreakOffsets_ = lineBreakOffsets;
}

- (NSString *)getFullText {
  NSString *fullText = self->text_;
  if (textTruncateIndex_ == nil && textTruncateSuffix_ != nil) {
    (void) JreStrAppendStrong(&fullText, "$", textTruncateSuffix_);
  }
  return fullText;
}

- (NSString *)getOriginalText {
  return text_;
}

- (OrgOssPdfreporterEngineUtilJRStyledText *)getStyledTextWithOrgOssPdfreporterEngineJRStyledTextAttributeSelector:(OrgOssPdfreporterEngineJRStyledTextAttributeSelector *)attributeSelector {
  return [((OrgOssPdfreporterEngineUtilJRStyledTextUtil *) nil_chk(OrgOssPdfreporterEngineUtilJRStyledTextUtil_getInstanceWithOrgOssPdfreporterEngineJasperReportsContext_(OrgOssPdfreporterEngineDefaultJasperReportsContext_getInstance()))) getStyledTextWithOrgOssPdfreporterEngineJRPrintText:self withOrgOssPdfreporterEngineJRStyledTextAttributeSelector:attributeSelector];
}

- (OrgOssPdfreporterEngineUtilJRStyledText *)getFullStyledTextWithOrgOssPdfreporterEngineJRStyledTextAttributeSelector:(OrgOssPdfreporterEngineJRStyledTextAttributeSelector *)attributeSelector {
  if ([self getFullText] == nil) {
    return nil;
  }
  return [((OrgOssPdfreporterEngineUtilJRStyledTextParser *) nil_chk(OrgOssPdfreporterEngineUtilJRStyledTextParser_getInstance())) getStyledTextWithJavaUtilMap:[((OrgOssPdfreporterEngineJRStyledTextAttributeSelector *) nil_chk(attributeSelector)) getStyledTextAttributesWithOrgOssPdfreporterEngineJRPrintText:self] withNSString:[self getFullText] withBoolean:![((NSString *) nil_chk(OrgOssPdfreporterEngineJRCommonText_MARKUP_NONE)) isEqual:[self getMarkup]] withOrgOssPdfreporterTextBundleStringLocale:OrgOssPdfreporterEngineJRStyledTextAttributeSelector_getTextLocaleWithOrgOssPdfreporterEngineJRPrintText_(self)];
}

- (id)getValue {
  return value_;
}

- (void)setValueWithId:(id)value {
  self->value_ = value;
}

- (jfloat)getLineSpacingFactor {
  return lineSpacingFactor_;
}

- (void)setLineSpacingFactorWithFloat:(jfloat)lineSpacingFactor {
  self->lineSpacingFactor_ = lineSpacingFactor;
}

- (jfloat)getLeadingOffset {
  return leadingOffset_;
}

- (void)setLeadingOffsetWithFloat:(jfloat)leadingOffset {
  self->leadingOffset_ = leadingOffset;
}

- (OrgOssPdfreporterEngineTypeHorizontalAlignEnum *)getHorizontalAlignmentValue {
  return [((OrgOssPdfreporterEngineFillJRTemplateText *) nil_chk(((OrgOssPdfreporterEngineFillJRTemplateText *) cast_chk(self->template__, [OrgOssPdfreporterEngineFillJRTemplateText class])))) getHorizontalAlignmentValue];
}

- (OrgOssPdfreporterEngineTypeHorizontalAlignEnum *)getOwnHorizontalAlignmentValue {
  return [((OrgOssPdfreporterEngineFillJRTemplateText *) nil_chk(((OrgOssPdfreporterEngineFillJRTemplateText *) cast_chk(self->template__, [OrgOssPdfreporterEngineFillJRTemplateText class])))) getOwnHorizontalAlignmentValue];
}

- (void)setHorizontalAlignmentWithOrgOssPdfreporterEngineTypeHorizontalAlignEnum:(OrgOssPdfreporterEngineTypeHorizontalAlignEnum *)horizontalAlignment {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (OrgOssPdfreporterEngineTypeVerticalAlignEnum *)getVerticalAlignmentValue {
  return [((OrgOssPdfreporterEngineFillJRTemplateText *) nil_chk(((OrgOssPdfreporterEngineFillJRTemplateText *) cast_chk(self->template__, [OrgOssPdfreporterEngineFillJRTemplateText class])))) getVerticalAlignmentValue];
}

- (OrgOssPdfreporterEngineTypeVerticalAlignEnum *)getOwnVerticalAlignmentValue {
  return [((OrgOssPdfreporterEngineFillJRTemplateText *) nil_chk(((OrgOssPdfreporterEngineFillJRTemplateText *) cast_chk(self->template__, [OrgOssPdfreporterEngineFillJRTemplateText class])))) getOwnVerticalAlignmentValue];
}

- (void)setVerticalAlignmentWithOrgOssPdfreporterEngineTypeVerticalAlignEnum:(OrgOssPdfreporterEngineTypeVerticalAlignEnum *)verticalAlignment {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (OrgOssPdfreporterEngineTypeRotationEnum *)getRotationValue {
  return [((OrgOssPdfreporterEngineFillJRTemplateText *) nil_chk(((OrgOssPdfreporterEngineFillJRTemplateText *) cast_chk(self->template__, [OrgOssPdfreporterEngineFillJRTemplateText class])))) getRotationValue];
}

- (OrgOssPdfreporterEngineTypeRotationEnum *)getOwnRotationValue {
  return [((OrgOssPdfreporterEngineFillJRTemplateText *) nil_chk(((OrgOssPdfreporterEngineFillJRTemplateText *) cast_chk(self->template__, [OrgOssPdfreporterEngineFillJRTemplateText class])))) getOwnRotationValue];
}

- (void)setRotationWithOrgOssPdfreporterEngineTypeRotationEnum:(OrgOssPdfreporterEngineTypeRotationEnum *)rotation {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (OrgOssPdfreporterEngineTypeRunDirectionEnum *)getRunDirectionValue {
  return self->runDirectionValue_;
}

- (void)setRunDirectionWithOrgOssPdfreporterEngineTypeRunDirectionEnum:(OrgOssPdfreporterEngineTypeRunDirectionEnum *)runDirectionValue {
  self->runDirectionValue_ = runDirectionValue;
}

- (jfloat)getTextHeight {
  return textHeight_;
}

- (void)setTextHeightWithFloat:(jfloat)textHeight {
  self->textHeight_ = textHeight;
}

- (OrgOssPdfreporterEngineTypeLineSpacingEnum *)getLineSpacingValue {
  return [((id<OrgOssPdfreporterEngineJRParagraph>) nil_chk([self getParagraph])) getLineSpacing];
}

- (OrgOssPdfreporterEngineTypeLineSpacingEnum *)getOwnLineSpacingValue {
  return [((id<OrgOssPdfreporterEngineJRParagraph>) nil_chk([self getParagraph])) getOwnLineSpacing];
}

- (void)setLineSpacingWithOrgOssPdfreporterEngineTypeLineSpacingEnum:(OrgOssPdfreporterEngineTypeLineSpacingEnum *)lineSpacing {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (NSString *)getMarkup {
  return [((OrgOssPdfreporterEngineFillJRTemplateText *) nil_chk(((OrgOssPdfreporterEngineFillJRTemplateText *) cast_chk(template__, [OrgOssPdfreporterEngineFillJRTemplateText class])))) getMarkup];
}

- (NSString *)getOwnMarkup {
  return [((OrgOssPdfreporterEngineFillJRTemplateText *) nil_chk(((OrgOssPdfreporterEngineFillJRTemplateText *) cast_chk(template__, [OrgOssPdfreporterEngineFillJRTemplateText class])))) getOwnMarkup];
}

- (void)setMarkupWithNSString:(NSString *)markup {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (id<OrgOssPdfreporterEngineJRLineBox>)getLineBox {
  return [((OrgOssPdfreporterEngineFillJRTemplateText *) nil_chk(((OrgOssPdfreporterEngineFillJRTemplateText *) cast_chk(template__, [OrgOssPdfreporterEngineFillJRTemplateText class])))) getLineBox];
}

- (id<OrgOssPdfreporterEngineJRParagraph>)getParagraph {
  return [((OrgOssPdfreporterEngineFillJRTemplateText *) nil_chk(((OrgOssPdfreporterEngineFillJRTemplateText *) cast_chk(template__, [OrgOssPdfreporterEngineFillJRTemplateText class])))) getParagraph];
}

- (id<OrgOssPdfreporterEngineJRFont>)getFont {
  return (OrgOssPdfreporterEngineFillJRTemplateText *) cast_chk(template__, [OrgOssPdfreporterEngineFillJRTemplateText class]);
}

- (void)setFontWithOrgOssPdfreporterEngineJRFont:(id<OrgOssPdfreporterEngineJRFont>)font {
}

- (void)setTextFormatWithOrgOssPdfreporterEngineFillTextFormat:(id<OrgOssPdfreporterEngineFillTextFormat>)textFormat {
  self->textFormat_ = textFormat;
}

- (NSString *)getAnchorName {
  return anchorName_;
}

- (void)setAnchorNameWithNSString:(NSString *)anchorName {
  self->anchorName_ = anchorName;
}

- (OrgOssPdfreporterEngineTypeHyperlinkTypeEnum *)getHyperlinkTypeValue {
  return [((OrgOssPdfreporterEngineFillJRTemplateText *) nil_chk(((OrgOssPdfreporterEngineFillJRTemplateText *) cast_chk(self->template__, [OrgOssPdfreporterEngineFillJRTemplateText class])))) getHyperlinkTypeValue];
}

- (void)setHyperlinkTypeWithOrgOssPdfreporterEngineTypeHyperlinkTypeEnum:(OrgOssPdfreporterEngineTypeHyperlinkTypeEnum *)hyperlinkType {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (OrgOssPdfreporterEngineTypeHyperlinkTargetEnum *)getHyperlinkTargetValue {
  return [((OrgOssPdfreporterEngineFillJRTemplateText *) nil_chk(((OrgOssPdfreporterEngineFillJRTemplateText *) cast_chk(self->template__, [OrgOssPdfreporterEngineFillJRTemplateText class])))) getHyperlinkTargetValue];
}

- (void)setHyperlinkTargetWithOrgOssPdfreporterEngineTypeHyperlinkTargetEnum:(OrgOssPdfreporterEngineTypeHyperlinkTargetEnum *)hyperlinkTarget {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (NSString *)getLinkTarget {
  return [((OrgOssPdfreporterEngineFillJRTemplateText *) nil_chk(((OrgOssPdfreporterEngineFillJRTemplateText *) cast_chk(template__, [OrgOssPdfreporterEngineFillJRTemplateText class])))) getLinkTarget];
}

- (void)setLinkTargetWithNSString:(NSString *)linkTarget {
}

- (void)setLinkTargetWithByte:(jbyte)hyperlinkTarget {
}

- (NSString *)getHyperlinkReference {
  return hyperlinkReference_;
}

- (void)setHyperlinkReferenceWithNSString:(NSString *)hyperlinkReference {
  self->hyperlinkReference_ = hyperlinkReference;
}

- (NSString *)getHyperlinkAnchor {
  return hyperlinkAnchor_;
}

- (void)setHyperlinkAnchorWithNSString:(NSString *)hyperlinkAnchor {
  self->hyperlinkAnchor_ = hyperlinkAnchor;
}

- (JavaLangInteger *)getHyperlinkPage {
  return hyperlinkPage_;
}

- (void)setHyperlinkPageWithJavaLangInteger:(JavaLangInteger *)hyperlinkPage {
  self->hyperlinkPage_ = hyperlinkPage;
}

- (jint)getBookmarkLevel {
  return bookmarkLevel_;
}

- (void)setBookmarkLevelWithInt:(jint)bookmarkLevel {
  self->bookmarkLevel_ = bookmarkLevel;
}

- (NSString *)getFontName {
  return [((OrgOssPdfreporterEngineFillJRTemplateText *) nil_chk(((OrgOssPdfreporterEngineFillJRTemplateText *) cast_chk(template__, [OrgOssPdfreporterEngineFillJRTemplateText class])))) getFontName];
}

- (NSString *)getOwnFontName {
  return [((OrgOssPdfreporterEngineFillJRTemplateText *) nil_chk(((OrgOssPdfreporterEngineFillJRTemplateText *) cast_chk(template__, [OrgOssPdfreporterEngineFillJRTemplateText class])))) getOwnFontName];
}

- (void)setFontNameWithNSString:(NSString *)fontName {
}

- (jboolean)isBold {
  return [((OrgOssPdfreporterEngineFillJRTemplateText *) nil_chk(((OrgOssPdfreporterEngineFillJRTemplateText *) cast_chk(template__, [OrgOssPdfreporterEngineFillJRTemplateText class])))) isBold];
}

- (JavaLangBoolean *)isOwnBold {
  return [((OrgOssPdfreporterEngineFillJRTemplateText *) nil_chk(((OrgOssPdfreporterEngineFillJRTemplateText *) cast_chk(template__, [OrgOssPdfreporterEngineFillJRTemplateText class])))) isOwnBold];
}

- (void)setBoldWithBoolean:(jboolean)isBold {
}

- (void)setBoldWithJavaLangBoolean:(JavaLangBoolean *)isBold {
}

- (jboolean)isItalic {
  return [((OrgOssPdfreporterEngineFillJRTemplateText *) nil_chk(((OrgOssPdfreporterEngineFillJRTemplateText *) cast_chk(template__, [OrgOssPdfreporterEngineFillJRTemplateText class])))) isItalic];
}

- (JavaLangBoolean *)isOwnItalic {
  return [((OrgOssPdfreporterEngineFillJRTemplateText *) nil_chk(((OrgOssPdfreporterEngineFillJRTemplateText *) cast_chk(template__, [OrgOssPdfreporterEngineFillJRTemplateText class])))) isOwnItalic];
}

- (void)setItalicWithBoolean:(jboolean)isItalic {
}

- (void)setItalicWithJavaLangBoolean:(JavaLangBoolean *)isItalic {
}

- (jboolean)isUnderline {
  return [((OrgOssPdfreporterEngineFillJRTemplateText *) nil_chk(((OrgOssPdfreporterEngineFillJRTemplateText *) cast_chk(template__, [OrgOssPdfreporterEngineFillJRTemplateText class])))) isUnderline];
}

- (JavaLangBoolean *)isOwnUnderline {
  return [((OrgOssPdfreporterEngineFillJRTemplateText *) nil_chk(((OrgOssPdfreporterEngineFillJRTemplateText *) cast_chk(template__, [OrgOssPdfreporterEngineFillJRTemplateText class])))) isOwnUnderline];
}

- (void)setUnderlineWithBoolean:(jboolean)isUnderline {
}

- (void)setUnderlineWithJavaLangBoolean:(JavaLangBoolean *)isUnderline {
}

- (jboolean)isStrikeThrough {
  return [((OrgOssPdfreporterEngineFillJRTemplateText *) nil_chk(((OrgOssPdfreporterEngineFillJRTemplateText *) cast_chk(template__, [OrgOssPdfreporterEngineFillJRTemplateText class])))) isStrikeThrough];
}

- (JavaLangBoolean *)isOwnStrikeThrough {
  return [((OrgOssPdfreporterEngineFillJRTemplateText *) nil_chk(((OrgOssPdfreporterEngineFillJRTemplateText *) cast_chk(template__, [OrgOssPdfreporterEngineFillJRTemplateText class])))) isOwnStrikeThrough];
}

- (void)setStrikeThroughWithBoolean:(jboolean)isStrikeThrough {
  [self setStrikeThroughWithJavaLangBoolean:isStrikeThrough ? JreLoadStatic(JavaLangBoolean, TRUE) : JreLoadStatic(JavaLangBoolean, FALSE)];
}

- (void)setStrikeThroughWithJavaLangBoolean:(JavaLangBoolean *)isStrikeThrough {
}

- (jint)getFontSize {
  return [((OrgOssPdfreporterEngineFillJRTemplateText *) nil_chk(((OrgOssPdfreporterEngineFillJRTemplateText *) cast_chk(template__, [OrgOssPdfreporterEngineFillJRTemplateText class])))) getFontSize];
}

- (JavaLangInteger *)getOwnFontSize {
  return [((OrgOssPdfreporterEngineFillJRTemplateText *) nil_chk(((OrgOssPdfreporterEngineFillJRTemplateText *) cast_chk(template__, [OrgOssPdfreporterEngineFillJRTemplateText class])))) getOwnFontSize];
}

- (void)setFontSizeWithInt:(jint)fontSize {
}

- (void)setFontSizeWithJavaLangInteger:(JavaLangInteger *)fontSize {
}

- (NSString *)getPdfFontName {
  return [((OrgOssPdfreporterEngineFillJRTemplateText *) nil_chk(((OrgOssPdfreporterEngineFillJRTemplateText *) cast_chk(template__, [OrgOssPdfreporterEngineFillJRTemplateText class])))) getPdfFontName];
}

- (NSString *)getOwnPdfFontName {
  return [((OrgOssPdfreporterEngineFillJRTemplateText *) nil_chk(((OrgOssPdfreporterEngineFillJRTemplateText *) cast_chk(template__, [OrgOssPdfreporterEngineFillJRTemplateText class])))) getOwnPdfFontName];
}

- (void)setPdfFontNameWithNSString:(NSString *)pdfFontName {
}

- (NSString *)getPdfEncoding {
  return [((OrgOssPdfreporterEngineFillJRTemplateText *) nil_chk(((OrgOssPdfreporterEngineFillJRTemplateText *) cast_chk(template__, [OrgOssPdfreporterEngineFillJRTemplateText class])))) getPdfEncoding];
}

- (NSString *)getOwnPdfEncoding {
  return [((OrgOssPdfreporterEngineFillJRTemplateText *) nil_chk(((OrgOssPdfreporterEngineFillJRTemplateText *) cast_chk(template__, [OrgOssPdfreporterEngineFillJRTemplateText class])))) getOwnPdfEncoding];
}

- (void)setPdfEncodingWithNSString:(NSString *)pdfEncoding {
}

- (jboolean)isPdfEmbedded {
  return [((OrgOssPdfreporterEngineFillJRTemplateText *) nil_chk(((OrgOssPdfreporterEngineFillJRTemplateText *) cast_chk(template__, [OrgOssPdfreporterEngineFillJRTemplateText class])))) isPdfEmbedded];
}

- (JavaLangBoolean *)isOwnPdfEmbedded {
  return [((OrgOssPdfreporterEngineFillJRTemplateText *) nil_chk(((OrgOssPdfreporterEngineFillJRTemplateText *) cast_chk(template__, [OrgOssPdfreporterEngineFillJRTemplateText class])))) isOwnPdfEmbedded];
}

- (void)setPdfEmbeddedWithBoolean:(jboolean)isPdfEmbedded {
}

- (void)setPdfEmbeddedWithJavaLangBoolean:(JavaLangBoolean *)isPdfEmbedded {
}

- (NSString *)getValueClassName {
  return textFormat_ == nil ? [((OrgOssPdfreporterEngineFillJRTemplateText *) nil_chk(((OrgOssPdfreporterEngineFillJRTemplateText *) cast_chk(template__, [OrgOssPdfreporterEngineFillJRTemplateText class])))) getValueClassName] : [textFormat_ getValueClassName];
}

- (NSString *)getPattern {
  return textFormat_ == nil ? [((OrgOssPdfreporterEngineFillJRTemplateText *) nil_chk(((OrgOssPdfreporterEngineFillJRTemplateText *) cast_chk(template__, [OrgOssPdfreporterEngineFillJRTemplateText class])))) getPattern] : [textFormat_ getPattern];
}

- (NSString *)getFormatFactoryClass {
  return textFormat_ == nil ? [((OrgOssPdfreporterEngineFillJRTemplateText *) nil_chk(((OrgOssPdfreporterEngineFillJRTemplateText *) cast_chk(template__, [OrgOssPdfreporterEngineFillJRTemplateText class])))) getFormatFactoryClass] : [textFormat_ getFormatFactoryClass];
}

- (NSString *)getLocaleCode {
  return textFormat_ == nil ? [((OrgOssPdfreporterEngineFillJRTemplateText *) nil_chk(((OrgOssPdfreporterEngineFillJRTemplateText *) cast_chk(template__, [OrgOssPdfreporterEngineFillJRTemplateText class])))) getLocaleCode] : [textFormat_ getLocaleCode];
}

- (NSString *)getTimeZoneId {
  return textFormat_ == nil ? [((OrgOssPdfreporterEngineFillJRTemplateText *) nil_chk(((OrgOssPdfreporterEngineFillJRTemplateText *) cast_chk(template__, [OrgOssPdfreporterEngineFillJRTemplateText class])))) getTimeZoneId] : [textFormat_ getTimeZoneId];
}

- (OrgOssPdfreporterEngineJRPrintHyperlinkParameters *)getHyperlinkParameters {
  return hyperlinkParameters_;
}

- (void)setHyperlinkParametersWithOrgOssPdfreporterEngineJRPrintHyperlinkParameters:(OrgOssPdfreporterEngineJRPrintHyperlinkParameters *)hyperlinkParameters {
  self->hyperlinkParameters_ = hyperlinkParameters;
}

- (NSString *)getLinkType {
  return [((OrgOssPdfreporterEngineFillJRTemplateText *) nil_chk(((OrgOssPdfreporterEngineFillJRTemplateText *) cast_chk(template__, [OrgOssPdfreporterEngineFillJRTemplateText class])))) getLinkType];
}

- (void)setLinkTypeWithNSString:(NSString *)type {
}

- (NSString *)getHyperlinkTooltip {
  return hyperlinkTooltip_;
}

- (void)setHyperlinkTooltipWithNSString:(NSString *)hyperlinkTooltip {
  self->hyperlinkTooltip_ = hyperlinkTooltip;
}

- (void)acceptWithOrgOssPdfreporterEnginePrintElementVisitor:(id<OrgOssPdfreporterEnginePrintElementVisitor>)visitor
                                                      withId:(id)arg {
  [((id<OrgOssPdfreporterEnginePrintElementVisitor>) nil_chk(visitor)) visitWithOrgOssPdfreporterEngineJRPrintText:self withId:arg];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgOssPdfreporterEngineFillJRTemplateText:", "JRTemplatePrintText", NULL, 0x1, NULL, NULL },
    { "initWithOrgOssPdfreporterEngineFillJRTemplateText:withInt:", "JRTemplatePrintText", NULL, 0x1, NULL, NULL },
    { "getText", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "setTextWithNSString:", "setText", "V", 0x1, NULL, NULL },
    { "getTextTruncateIndex", NULL, "Ljava.lang.Integer;", 0x1, NULL, NULL },
    { "setTextTruncateIndexWithJavaLangInteger:", "setTextTruncateIndex", "V", 0x1, NULL, NULL },
    { "getTextTruncateSuffix", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "setTextTruncateSuffixWithNSString:", "setTextTruncateSuffix", "V", 0x1, NULL, NULL },
    { "getLineBreakOffsets", NULL, "[S", 0x1, NULL, NULL },
    { "setLineBreakOffsetsWithShortArray:", "setLineBreakOffsets", "V", 0x1, NULL, NULL },
    { "getFullText", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getOriginalText", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getStyledTextWithOrgOssPdfreporterEngineJRStyledTextAttributeSelector:", "getStyledText", "Lorg.oss.pdfreporter.engine.util.JRStyledText;", 0x1, NULL, NULL },
    { "getFullStyledTextWithOrgOssPdfreporterEngineJRStyledTextAttributeSelector:", "getFullStyledText", "Lorg.oss.pdfreporter.engine.util.JRStyledText;", 0x1, NULL, NULL },
    { "getValue", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "setValueWithId:", "setValue", "V", 0x1, NULL, NULL },
    { "getLineSpacingFactor", NULL, "F", 0x1, NULL, NULL },
    { "setLineSpacingFactorWithFloat:", "setLineSpacingFactor", "V", 0x1, NULL, NULL },
    { "getLeadingOffset", NULL, "F", 0x1, NULL, NULL },
    { "setLeadingOffsetWithFloat:", "setLeadingOffset", "V", 0x1, NULL, NULL },
    { "getHorizontalAlignmentValue", NULL, "Lorg.oss.pdfreporter.engine.type.HorizontalAlignEnum;", 0x1, NULL, NULL },
    { "getOwnHorizontalAlignmentValue", NULL, "Lorg.oss.pdfreporter.engine.type.HorizontalAlignEnum;", 0x1, NULL, NULL },
    { "setHorizontalAlignmentWithOrgOssPdfreporterEngineTypeHorizontalAlignEnum:", "setHorizontalAlignment", "V", 0x1, NULL, NULL },
    { "getVerticalAlignmentValue", NULL, "Lorg.oss.pdfreporter.engine.type.VerticalAlignEnum;", 0x1, NULL, NULL },
    { "getOwnVerticalAlignmentValue", NULL, "Lorg.oss.pdfreporter.engine.type.VerticalAlignEnum;", 0x1, NULL, NULL },
    { "setVerticalAlignmentWithOrgOssPdfreporterEngineTypeVerticalAlignEnum:", "setVerticalAlignment", "V", 0x1, NULL, NULL },
    { "getRotationValue", NULL, "Lorg.oss.pdfreporter.engine.type.RotationEnum;", 0x1, NULL, NULL },
    { "getOwnRotationValue", NULL, "Lorg.oss.pdfreporter.engine.type.RotationEnum;", 0x1, NULL, NULL },
    { "setRotationWithOrgOssPdfreporterEngineTypeRotationEnum:", "setRotation", "V", 0x1, NULL, NULL },
    { "getRunDirectionValue", NULL, "Lorg.oss.pdfreporter.engine.type.RunDirectionEnum;", 0x1, NULL, NULL },
    { "setRunDirectionWithOrgOssPdfreporterEngineTypeRunDirectionEnum:", "setRunDirection", "V", 0x1, NULL, NULL },
    { "getTextHeight", NULL, "F", 0x1, NULL, NULL },
    { "setTextHeightWithFloat:", "setTextHeight", "V", 0x1, NULL, NULL },
    { "getLineSpacingValue", NULL, "Lorg.oss.pdfreporter.engine.type.LineSpacingEnum;", 0x1, NULL, NULL },
    { "getOwnLineSpacingValue", NULL, "Lorg.oss.pdfreporter.engine.type.LineSpacingEnum;", 0x1, NULL, NULL },
    { "setLineSpacingWithOrgOssPdfreporterEngineTypeLineSpacingEnum:", "setLineSpacing", "V", 0x1, NULL, NULL },
    { "getMarkup", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getOwnMarkup", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "setMarkupWithNSString:", "setMarkup", "V", 0x1, NULL, NULL },
    { "getLineBox", NULL, "Lorg.oss.pdfreporter.engine.JRLineBox;", 0x1, NULL, NULL },
    { "getParagraph", NULL, "Lorg.oss.pdfreporter.engine.JRParagraph;", 0x1, NULL, NULL },
    { "getFont", NULL, "Lorg.oss.pdfreporter.engine.JRFont;", 0x1, NULL, NULL },
    { "setFontWithOrgOssPdfreporterEngineJRFont:", "setFont", "V", 0x1, NULL, NULL },
    { "setTextFormatWithOrgOssPdfreporterEngineFillTextFormat:", "setTextFormat", "V", 0x1, NULL, NULL },
    { "getAnchorName", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "setAnchorNameWithNSString:", "setAnchorName", "V", 0x1, NULL, NULL },
    { "getHyperlinkTypeValue", NULL, "Lorg.oss.pdfreporter.engine.type.HyperlinkTypeEnum;", 0x1, NULL, NULL },
    { "setHyperlinkTypeWithOrgOssPdfreporterEngineTypeHyperlinkTypeEnum:", "setHyperlinkType", "V", 0x1, NULL, NULL },
    { "getHyperlinkTargetValue", NULL, "Lorg.oss.pdfreporter.engine.type.HyperlinkTargetEnum;", 0x1, NULL, NULL },
    { "setHyperlinkTargetWithOrgOssPdfreporterEngineTypeHyperlinkTargetEnum:", "setHyperlinkTarget", "V", 0x1, NULL, NULL },
    { "getLinkTarget", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "setLinkTargetWithNSString:", "setLinkTarget", "V", 0x1, NULL, NULL },
    { "setLinkTargetWithByte:", "setLinkTarget", "V", 0x1, NULL, NULL },
    { "getHyperlinkReference", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "setHyperlinkReferenceWithNSString:", "setHyperlinkReference", "V", 0x1, NULL, NULL },
    { "getHyperlinkAnchor", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "setHyperlinkAnchorWithNSString:", "setHyperlinkAnchor", "V", 0x1, NULL, NULL },
    { "getHyperlinkPage", NULL, "Ljava.lang.Integer;", 0x1, NULL, NULL },
    { "setHyperlinkPageWithJavaLangInteger:", "setHyperlinkPage", "V", 0x1, NULL, NULL },
    { "getBookmarkLevel", NULL, "I", 0x1, NULL, NULL },
    { "setBookmarkLevelWithInt:", "setBookmarkLevel", "V", 0x1, NULL, NULL },
    { "getFontName", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getOwnFontName", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "setFontNameWithNSString:", "setFontName", "V", 0x1, NULL, NULL },
    { "isBold", NULL, "Z", 0x1, NULL, NULL },
    { "isOwnBold", NULL, "Ljava.lang.Boolean;", 0x1, NULL, NULL },
    { "setBoldWithBoolean:", "setBold", "V", 0x1, NULL, NULL },
    { "setBoldWithJavaLangBoolean:", "setBold", "V", 0x1, NULL, NULL },
    { "isItalic", NULL, "Z", 0x1, NULL, NULL },
    { "isOwnItalic", NULL, "Ljava.lang.Boolean;", 0x1, NULL, NULL },
    { "setItalicWithBoolean:", "setItalic", "V", 0x1, NULL, NULL },
    { "setItalicWithJavaLangBoolean:", "setItalic", "V", 0x1, NULL, NULL },
    { "isUnderline", NULL, "Z", 0x1, NULL, NULL },
    { "isOwnUnderline", NULL, "Ljava.lang.Boolean;", 0x1, NULL, NULL },
    { "setUnderlineWithBoolean:", "setUnderline", "V", 0x1, NULL, NULL },
    { "setUnderlineWithJavaLangBoolean:", "setUnderline", "V", 0x1, NULL, NULL },
    { "isStrikeThrough", NULL, "Z", 0x1, NULL, NULL },
    { "isOwnStrikeThrough", NULL, "Ljava.lang.Boolean;", 0x1, NULL, NULL },
    { "setStrikeThroughWithBoolean:", "setStrikeThrough", "V", 0x1, NULL, NULL },
    { "setStrikeThroughWithJavaLangBoolean:", "setStrikeThrough", "V", 0x1, NULL, NULL },
    { "getFontSize", NULL, "I", 0x1, NULL, NULL },
    { "getOwnFontSize", NULL, "Ljava.lang.Integer;", 0x1, NULL, NULL },
    { "setFontSizeWithInt:", "setFontSize", "V", 0x1, NULL, NULL },
    { "setFontSizeWithJavaLangInteger:", "setFontSize", "V", 0x1, NULL, NULL },
    { "getPdfFontName", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getOwnPdfFontName", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "setPdfFontNameWithNSString:", "setPdfFontName", "V", 0x1, NULL, NULL },
    { "getPdfEncoding", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getOwnPdfEncoding", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "setPdfEncodingWithNSString:", "setPdfEncoding", "V", 0x1, NULL, NULL },
    { "isPdfEmbedded", NULL, "Z", 0x1, NULL, NULL },
    { "isOwnPdfEmbedded", NULL, "Ljava.lang.Boolean;", 0x1, NULL, NULL },
    { "setPdfEmbeddedWithBoolean:", "setPdfEmbedded", "V", 0x1, NULL, NULL },
    { "setPdfEmbeddedWithJavaLangBoolean:", "setPdfEmbedded", "V", 0x1, NULL, NULL },
    { "getValueClassName", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getPattern", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getFormatFactoryClass", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getLocaleCode", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getTimeZoneId", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getHyperlinkParameters", NULL, "Lorg.oss.pdfreporter.engine.JRPrintHyperlinkParameters;", 0x1, NULL, NULL },
    { "setHyperlinkParametersWithOrgOssPdfreporterEngineJRPrintHyperlinkParameters:", "setHyperlinkParameters", "V", 0x1, NULL, NULL },
    { "getLinkType", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "setLinkTypeWithNSString:", "setLinkType", "V", 0x1, NULL, NULL },
    { "getHyperlinkTooltip", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "setHyperlinkTooltipWithNSString:", "setHyperlinkTooltip", "V", 0x1, NULL, NULL },
    { "acceptWithOrgOssPdfreporterEnginePrintElementVisitor:withId:", "accept", "V", 0x1, NULL, "<T:Ljava/lang/Object;>(Lorg/oss/pdfreporter/engine/PrintElementVisitor<TT;>;TT;)V" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "serialVersionUID", 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgOssPdfreporterEngineFillJRTemplatePrintText_serialVersionUID },
    { "text_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "textTruncateIndex_", NULL, 0x2, "Ljava.lang.Integer;", NULL, NULL, .constantValue.asLong = 0 },
    { "textTruncateSuffix_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "lineBreakOffsets_", NULL, 0x2, "[S", NULL, NULL, .constantValue.asLong = 0 },
    { "value_", NULL, 0x2, "Ljava.lang.Object;", NULL, NULL, .constantValue.asLong = 0 },
    { "lineSpacingFactor_", NULL, 0x2, "F", NULL, NULL, .constantValue.asLong = 0 },
    { "leadingOffset_", NULL, 0x2, "F", NULL, NULL, .constantValue.asLong = 0 },
    { "runDirectionValue_", NULL, 0x2, "Lorg.oss.pdfreporter.engine.type.RunDirectionEnum;", NULL, NULL, .constantValue.asLong = 0 },
    { "textHeight_", NULL, 0x2, "F", NULL, NULL, .constantValue.asLong = 0 },
    { "textFormat_", NULL, 0x2, "Lorg.oss.pdfreporter.engine.fill.TextFormat;", NULL, NULL, .constantValue.asLong = 0 },
    { "anchorName_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "hyperlinkReference_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "hyperlinkAnchor_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "hyperlinkPage_", NULL, 0x2, "Ljava.lang.Integer;", NULL, NULL, .constantValue.asLong = 0 },
    { "hyperlinkTooltip_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "hyperlinkParameters_", NULL, 0x2, "Lorg.oss.pdfreporter.engine.JRPrintHyperlinkParameters;", NULL, NULL, .constantValue.asLong = 0 },
    { "bookmarkLevel_", NULL, 0x4, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "PSEUDO_SERIAL_VERSION_UID_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "runDirection_", NULL, 0x2, "B", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineFillJRTemplatePrintText = { 2, "JRTemplatePrintText", "org.oss.pdfreporter.engine.fill", NULL, 0x1, 106, methods, 20, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineFillJRTemplatePrintText;
}

@end

void OrgOssPdfreporterEngineFillJRTemplatePrintText_initWithOrgOssPdfreporterEngineFillJRTemplateText_(OrgOssPdfreporterEngineFillJRTemplatePrintText *self, OrgOssPdfreporterEngineFillJRTemplateText *text) {
  OrgOssPdfreporterEngineFillJRTemplatePrintElement_initWithOrgOssPdfreporterEngineFillJRTemplateElement_(self, text);
  self->text_ = @"";
  self->bookmarkLevel_ = OrgOssPdfreporterEngineJRAnchor_NO_BOOKMARK;
  self->PSEUDO_SERIAL_VERSION_UID_ = OrgOssPdfreporterEngineJRConstants_PSEUDO_SERIAL_VERSION_UID;
}

OrgOssPdfreporterEngineFillJRTemplatePrintText *new_OrgOssPdfreporterEngineFillJRTemplatePrintText_initWithOrgOssPdfreporterEngineFillJRTemplateText_(OrgOssPdfreporterEngineFillJRTemplateText *text) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineFillJRTemplatePrintText, initWithOrgOssPdfreporterEngineFillJRTemplateText_, text)
}

OrgOssPdfreporterEngineFillJRTemplatePrintText *create_OrgOssPdfreporterEngineFillJRTemplatePrintText_initWithOrgOssPdfreporterEngineFillJRTemplateText_(OrgOssPdfreporterEngineFillJRTemplateText *text) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineFillJRTemplatePrintText, initWithOrgOssPdfreporterEngineFillJRTemplateText_, text)
}

void OrgOssPdfreporterEngineFillJRTemplatePrintText_initWithOrgOssPdfreporterEngineFillJRTemplateText_withInt_(OrgOssPdfreporterEngineFillJRTemplatePrintText *self, OrgOssPdfreporterEngineFillJRTemplateText *text, jint sourceElementId) {
  OrgOssPdfreporterEngineFillJRTemplatePrintElement_initWithOrgOssPdfreporterEngineFillJRTemplateElement_withInt_(self, text, sourceElementId);
  self->text_ = @"";
  self->bookmarkLevel_ = OrgOssPdfreporterEngineJRAnchor_NO_BOOKMARK;
  self->PSEUDO_SERIAL_VERSION_UID_ = OrgOssPdfreporterEngineJRConstants_PSEUDO_SERIAL_VERSION_UID;
}

OrgOssPdfreporterEngineFillJRTemplatePrintText *new_OrgOssPdfreporterEngineFillJRTemplatePrintText_initWithOrgOssPdfreporterEngineFillJRTemplateText_withInt_(OrgOssPdfreporterEngineFillJRTemplateText *text, jint sourceElementId) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineFillJRTemplatePrintText, initWithOrgOssPdfreporterEngineFillJRTemplateText_withInt_, text, sourceElementId)
}

OrgOssPdfreporterEngineFillJRTemplatePrintText *create_OrgOssPdfreporterEngineFillJRTemplatePrintText_initWithOrgOssPdfreporterEngineFillJRTemplateText_withInt_(OrgOssPdfreporterEngineFillJRTemplateText *text, jint sourceElementId) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineFillJRTemplatePrintText, initWithOrgOssPdfreporterEngineFillJRTemplateText_withInt_, text, sourceElementId)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineFillJRTemplatePrintText)
