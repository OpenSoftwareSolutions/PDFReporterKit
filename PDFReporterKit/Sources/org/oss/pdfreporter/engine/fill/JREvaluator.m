//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/fill/JREvaluator.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalAccessException.h"
#include "java/lang/InstantiationException.h"
#include "java/lang/Integer.h"
#include "java/lang/NullPointerException.h"
#include "java/util/Calendar.h"
#include "java/util/Date.h"
#include "java/util/HashMap.h"
#include "java/util/Locale.h"
#include "java/util/Map.h"
#include "java/util/MissingResourceException.h"
#include "java/util/logging/Level.h"
#include "java/util/logging/Logger.h"
#include "org/oss/pdfreporter/engine/JRException.h"
#include "org/oss/pdfreporter/engine/JRExpression.h"
#include "org/oss/pdfreporter/engine/JRParameter.h"
#include "org/oss/pdfreporter/engine/JRRuntimeException.h"
#include "org/oss/pdfreporter/engine/fill/FillFunctionContext.h"
#include "org/oss/pdfreporter/engine/fill/IJRFillParameter.h"
#include "org/oss/pdfreporter/engine/fill/JREvaluator.h"
#include "org/oss/pdfreporter/engine/fill/JRExpressionEvalException.h"
#include "org/oss/pdfreporter/engine/type/WhenResourceMissingTypeEnum.h"
#include "org/oss/pdfreporter/functions/FunctionSupport.h"
#include "org/oss/pdfreporter/registry/ApiRegistry.h"
#include "org/oss/pdfreporter/text/bundle/ITextBundle.h"
#include "org/oss/pdfreporter/text/bundle/StringLocale.h"
#include "org/oss/pdfreporter/text/format/IMessageFormat.h"
#include "org/oss/pdfreporter/text/format/factory/IFormatFactory.h"

@interface OrgOssPdfreporterEngineFillJREvaluator () {
 @public
  id<OrgOssPdfreporterEngineFillIJRFillParameter> resourceBundle_;
  OrgOssPdfreporterEngineTypeWhenResourceMissingTypeEnum *whenResourceMissingType_;
  id<OrgOssPdfreporterEngineFillIJRFillParameter> locale_;
  id<JavaUtilMap> functions_;
  OrgOssPdfreporterEngineFillFillFunctionContext *functionContext_;
}

- (id<OrgOssPdfreporterTextFormatIMessageFormat>)getMessageFormatWithNSString:(NSString *)pattern;

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJREvaluator, resourceBundle_, id<OrgOssPdfreporterEngineFillIJRFillParameter>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJREvaluator, whenResourceMissingType_, OrgOssPdfreporterEngineTypeWhenResourceMissingTypeEnum *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJREvaluator, locale_, id<OrgOssPdfreporterEngineFillIJRFillParameter>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJREvaluator, functions_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJREvaluator, functionContext_, OrgOssPdfreporterEngineFillFillFunctionContext *)

inline JavaUtilLoggingLogger *OrgOssPdfreporterEngineFillJREvaluator_get_logger();
static JavaUtilLoggingLogger *OrgOssPdfreporterEngineFillJREvaluator_logger;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterEngineFillJREvaluator, logger, JavaUtilLoggingLogger *)

__attribute__((unused)) static id<OrgOssPdfreporterTextFormatIMessageFormat> OrgOssPdfreporterEngineFillJREvaluator_getMessageFormatWithNSString_(OrgOssPdfreporterEngineFillJREvaluator *self, NSString *pattern);

J2OBJC_INITIALIZED_DEFN(OrgOssPdfreporterEngineFillJREvaluator)

@implementation OrgOssPdfreporterEngineFillJREvaluator

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterEngineFillJREvaluator_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)init__WithJavaUtilMap:(id<JavaUtilMap>)parametersMap
              withJavaUtilMap:(id<JavaUtilMap>)fieldsMap
              withJavaUtilMap:(id<JavaUtilMap>)variablesMap
withOrgOssPdfreporterEngineTypeWhenResourceMissingTypeEnum:(OrgOssPdfreporterEngineTypeWhenResourceMissingTypeEnum *)resourceMissingType {
  self->whenResourceMissingType_ = resourceMissingType;
  resourceBundle_ = [((id<JavaUtilMap>) nil_chk(parametersMap)) getWithId:OrgOssPdfreporterEngineJRParameter_REPORT_RESOURCE_BUNDLE];
  self->locale_ = [parametersMap getWithId:OrgOssPdfreporterEngineJRParameter_REPORT_LOCALE];
  functions_ = new_JavaUtilHashMap_init();
  functionContext_ = new_OrgOssPdfreporterEngineFillFillFunctionContext_initWithJavaUtilMap_(parametersMap);
  [self customizedInitWithJavaUtilMap:parametersMap withJavaUtilMap:fieldsMap withJavaUtilMap:variablesMap];
}

- (id)getFunctionSupportWithIOSClass:(IOSClass *)clazz {
  NSString *classId = [((IOSClass *) nil_chk(clazz)) getName];
  if (![((id<JavaUtilMap>) nil_chk(functions_)) containsKeyWithId:classId]) {
    @try {
      id<OrgOssPdfreporterFunctionsFunctionSupport> functionSupport = [clazz newInstance];
      [((id<OrgOssPdfreporterFunctionsFunctionSupport>) nil_chk(functionSupport)) init__WithOrgOssPdfreporterFunctionsFunctionContext:functionContext_];
      (void) [((id<JavaUtilMap>) nil_chk(functions_)) putWithId:classId withId:functionSupport];
    }
    @catch (JavaLangIllegalAccessException *e) {
      @throw new_OrgOssPdfreporterEngineJRRuntimeException_initWithNSException_(e);
    }
    @catch (JavaLangInstantiationException *e) {
      @throw new_OrgOssPdfreporterEngineJRRuntimeException_initWithNSException_(e);
    }
  }
  return [((id<JavaUtilMap>) nil_chk(functions_)) getWithId:classId];
}

- (NSString *)msgWithNSString:(NSString *)pattern
                       withId:(id)arg0 {
  return [((id<OrgOssPdfreporterTextFormatIMessageFormat>) nil_chk(OrgOssPdfreporterEngineFillJREvaluator_getMessageFormatWithNSString_(self, pattern))) formatWithNSObjectArray:[IOSObjectArray newArrayWithObjects:(id[]){ arg0 } count:1 type:NSObject_class_()]];
}

- (NSString *)msgWithNSString:(NSString *)pattern
                       withId:(id)arg0
                       withId:(id)arg1 {
  return [((id<OrgOssPdfreporterTextFormatIMessageFormat>) nil_chk(OrgOssPdfreporterEngineFillJREvaluator_getMessageFormatWithNSString_(self, pattern))) formatWithNSObjectArray:[IOSObjectArray newArrayWithObjects:(id[]){ arg0, arg1 } count:2 type:NSObject_class_()]];
}

- (NSString *)msgWithNSString:(NSString *)pattern
                       withId:(id)arg0
                       withId:(id)arg1
                       withId:(id)arg2 {
  return [((id<OrgOssPdfreporterTextFormatIMessageFormat>) nil_chk(OrgOssPdfreporterEngineFillJREvaluator_getMessageFormatWithNSString_(self, pattern))) formatWithNSObjectArray:[IOSObjectArray newArrayWithObjects:(id[]){ arg0, arg1, arg2 } count:3 type:NSObject_class_()]];
}

- (NSString *)msgWithNSString:(NSString *)pattern
            withNSObjectArray:(IOSObjectArray *)args {
  return [((id<OrgOssPdfreporterTextFormatIMessageFormat>) nil_chk(OrgOssPdfreporterEngineFillJREvaluator_getMessageFormatWithNSString_(self, pattern))) formatWithNSObjectArray:args];
}

- (NSString *)strWithNSString:(NSString *)key {
  NSString *str = nil;
  @try {
    str = [((id<OrgOssPdfreporterTextBundleITextBundle>) nil_chk(((id<OrgOssPdfreporterTextBundleITextBundle>) cast_check([((id<OrgOssPdfreporterEngineFillIJRFillParameter>) nil_chk(resourceBundle_)) getValue], OrgOssPdfreporterTextBundleITextBundle_class_())))) getStringWithNSString:key];
  }
  @catch (JavaLangNullPointerException *e) {
    str = [self handleMissingResourceWithNSString:key withJavaLangException:e];
  }
  @catch (JavaUtilMissingResourceException *e) {
    str = [self handleMissingResourceWithNSString:key withJavaLangException:e];
  }
  return str;
}

- (id)evaluateWithOrgOssPdfreporterEngineJRExpression:(id<OrgOssPdfreporterEngineJRExpression>)expression {
  id value = nil;
  if (expression != nil) {
    @try {
      value = [self evaluateWithInt:[expression getId]];
      if ([((JavaUtilLoggingLogger *) nil_chk(OrgOssPdfreporterEngineFillJREvaluator_logger)) isLoggableWithJavaUtilLoggingLevel:JreLoadStatic(JavaUtilLoggingLevel, FINEST)]) {
        NSString *msg = value == nil ? nil : [value description];
        if ([value isKindOfClass:[JavaUtilDate class]]) {
          JavaUtilCalendar *cal = JavaUtilCalendar_getInstance();
          [((JavaUtilCalendar *) nil_chk(cal)) setTimeWithJavaUtilDate:(JavaUtilDate *) cast_chk(value, [JavaUtilDate class])];
          msg = NSString_formatWithNSString_withNSObjectArray_(@"%04d-%02d-%02d %02d:%02d:%02d", [IOSObjectArray newArrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_([cal getWithInt:JavaUtilCalendar_YEAR]), JavaLangInteger_valueOfWithInt_([cal getWithInt:JavaUtilCalendar_MONTH] + 1), JavaLangInteger_valueOfWithInt_([cal getWithInt:JavaUtilCalendar_DAY_OF_MONTH]), JavaLangInteger_valueOfWithInt_([cal getWithInt:JavaUtilCalendar_HOUR_OF_DAY]), JavaLangInteger_valueOfWithInt_([cal getWithInt:JavaUtilCalendar_MINUTE]), JavaLangInteger_valueOfWithInt_([cal getWithInt:JavaUtilCalendar_SECOND]) } count:6 type:NSObject_class_()]);
        }
        [OrgOssPdfreporterEngineFillJREvaluator_logger finestWithNSString:JreStrcat("$I$$", @"evaluate: ", [expression getId], @" = ", msg)];
      }
    }
    @catch (JavaLangNullPointerException *e) {
    }
    @catch (NSException *e) {
      @throw new_OrgOssPdfreporterEngineFillJRExpressionEvalException_initWithOrgOssPdfreporterEngineJRExpression_withNSException_(expression, e);
    }
  }
  return value;
}

- (id)evaluateOldWithOrgOssPdfreporterEngineJRExpression:(id<OrgOssPdfreporterEngineJRExpression>)expression {
  id value = nil;
  if (expression != nil) {
    @try {
      value = [self evaluateOldWithInt:[expression getId]];
      [((JavaUtilLoggingLogger *) nil_chk(OrgOssPdfreporterEngineFillJREvaluator_logger)) finestWithNSString:JreStrcat("$I$@", @"evaluateOld: ", [expression getId], @" = ", value)];
    }
    @catch (JavaLangNullPointerException *e) {
    }
    @catch (NSException *e) {
      @throw new_OrgOssPdfreporterEngineFillJRExpressionEvalException_initWithOrgOssPdfreporterEngineJRExpression_withNSException_(expression, e);
    }
  }
  return value;
}

- (id)evaluateEstimatedWithOrgOssPdfreporterEngineJRExpression:(id<OrgOssPdfreporterEngineJRExpression>)expression {
  id value = nil;
  if (expression != nil) {
    @try {
      value = [self evaluateEstimatedWithInt:[expression getId]];
      [((JavaUtilLoggingLogger *) nil_chk(OrgOssPdfreporterEngineFillJREvaluator_logger)) finestWithNSString:JreStrcat("$I$@", @"evaluateEstimated: ", [expression getId], @" = ", value)];
    }
    @catch (JavaLangNullPointerException *e) {
    }
    @catch (NSException *e) {
      @throw new_OrgOssPdfreporterEngineFillJRExpressionEvalException_initWithOrgOssPdfreporterEngineJRExpression_withNSException_(expression, e);
    }
  }
  return value;
}

- (NSString *)handleMissingResourceWithNSString:(NSString *)key
                          withJavaLangException:(JavaLangException *)e {
  NSString *str;
  switch ([whenResourceMissingType_ ordinal]) {
    case OrgOssPdfreporterEngineTypeWhenResourceMissingTypeEnum_Enum_EMPTY:
    {
      str = @"";
      break;
    }
    case OrgOssPdfreporterEngineTypeWhenResourceMissingTypeEnum_Enum_KEY:
    {
      str = key;
      break;
    }
    case OrgOssPdfreporterEngineTypeWhenResourceMissingTypeEnum_Enum_ERROR:
    {
      @throw new_OrgOssPdfreporterEngineJRRuntimeException_initWithNSString_withNSException_(JreStrcat("$$$", @"Resource not found for key \"", key, @"\"."), e);
    }
    case OrgOssPdfreporterEngineTypeWhenResourceMissingTypeEnum_Enum_NULL:
    default:
    {
      str = nil;
      break;
    }
  }
  return str;
}

- (void)customizedInitWithJavaUtilMap:(id<JavaUtilMap>)parametersMap
                      withJavaUtilMap:(id<JavaUtilMap>)fieldsMap
                      withJavaUtilMap:(id<JavaUtilMap>)variablesMap {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (id)evaluateWithInt:(jint)id_ {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id)evaluateOldWithInt:(jint)id_ {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id)evaluateEstimatedWithInt:(jint)id_ {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<OrgOssPdfreporterTextFormatIMessageFormat>)getMessageFormatWithNSString:(NSString *)pattern {
  return OrgOssPdfreporterEngineFillJREvaluator_getMessageFormatWithNSString_(self, pattern);
}

+ (void)initialize {
  if (self == [OrgOssPdfreporterEngineFillJREvaluator class]) {
    OrgOssPdfreporterEngineFillJREvaluator_logger = JavaUtilLoggingLogger_getLoggerWithNSString_([OrgOssPdfreporterEngineFillJREvaluator_class_() getName]);
    J2OBJC_SET_INITIALIZED(OrgOssPdfreporterEngineFillJREvaluator)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "JREvaluator", NULL, 0x4, NULL, NULL },
    { "init__WithJavaUtilMap:withJavaUtilMap:withJavaUtilMap:withOrgOssPdfreporterEngineTypeWhenResourceMissingTypeEnum:", "init", "V", 0x1, "Lorg.oss.pdfreporter.engine.JRException;", "(Ljava/util/Map<Ljava/lang/String;Lorg/oss/pdfreporter/engine/fill/IJRFillParameter;>;Ljava/util/Map<Ljava/lang/String;Lorg/oss/pdfreporter/engine/fill/JRFillField;>;Ljava/util/Map<Ljava/lang/String;Lorg/oss/pdfreporter/engine/fill/JRFillVariable;>;Lorg/oss/pdfreporter/engine/type/WhenResourceMissingTypeEnum;)V" },
    { "getFunctionSupportWithIOSClass:", "getFunctionSupport", "TT;", 0x1, NULL, "<T::Lorg/oss/pdfreporter/functions/FunctionSupport;>(Ljava/lang/Class<TT;>;)TT;" },
    { "msgWithNSString:withId:", "msg", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "msgWithNSString:withId:withId:", "msg", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "msgWithNSString:withId:withId:withId:", "msg", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "msgWithNSString:withNSObjectArray:", "msg", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "strWithNSString:", "str", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "evaluateWithOrgOssPdfreporterEngineJRExpression:", "evaluate", "Ljava.lang.Object;", 0x1, "Lorg.oss.pdfreporter.engine.fill.JRExpressionEvalException;", NULL },
    { "evaluateOldWithOrgOssPdfreporterEngineJRExpression:", "evaluateOld", "Ljava.lang.Object;", 0x1, "Lorg.oss.pdfreporter.engine.fill.JRExpressionEvalException;", NULL },
    { "evaluateEstimatedWithOrgOssPdfreporterEngineJRExpression:", "evaluateEstimated", "Ljava.lang.Object;", 0x1, "Lorg.oss.pdfreporter.engine.fill.JRExpressionEvalException;", NULL },
    { "handleMissingResourceWithNSString:withJavaLangException:", "handleMissingResource", "Ljava.lang.String;", 0x4, "Lorg.oss.pdfreporter.engine.JRRuntimeException;", NULL },
    { "customizedInitWithJavaUtilMap:withJavaUtilMap:withJavaUtilMap:", "customizedInit", "V", 0x404, "Lorg.oss.pdfreporter.engine.JRException;", "(Ljava/util/Map<Ljava/lang/String;Lorg/oss/pdfreporter/engine/fill/IJRFillParameter;>;Ljava/util/Map<Ljava/lang/String;Lorg/oss/pdfreporter/engine/fill/JRFillField;>;Ljava/util/Map<Ljava/lang/String;Lorg/oss/pdfreporter/engine/fill/JRFillVariable;>;)V" },
    { "evaluateWithInt:", "evaluate", "Ljava.lang.Object;", 0x404, "Ljava.lang.Throwable;", NULL },
    { "evaluateOldWithInt:", "evaluateOld", "Ljava.lang.Object;", 0x404, "Ljava.lang.Throwable;", NULL },
    { "evaluateEstimatedWithInt:", "evaluateEstimated", "Ljava.lang.Object;", 0x404, "Ljava.lang.Throwable;", NULL },
    { "getMessageFormatWithNSString:", "getMessageFormat", "Lorg.oss.pdfreporter.text.format.IMessageFormat;", 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "logger", "logger", 0x1a, "Ljava.util.logging.Logger;", &OrgOssPdfreporterEngineFillJREvaluator_logger, NULL, .constantValue.asLong = 0 },
    { "resourceBundle_", NULL, 0x2, "Lorg.oss.pdfreporter.engine.fill.IJRFillParameter;", NULL, NULL, .constantValue.asLong = 0 },
    { "whenResourceMissingType_", NULL, 0x2, "Lorg.oss.pdfreporter.engine.type.WhenResourceMissingTypeEnum;", NULL, NULL, .constantValue.asLong = 0 },
    { "locale_", NULL, 0x2, "Lorg.oss.pdfreporter.engine.fill.IJRFillParameter;", NULL, NULL, .constantValue.asLong = 0 },
    { "functions_", NULL, 0x2, "Ljava.util.Map;", NULL, "Ljava/util/Map<Ljava/lang/String;Lorg/oss/pdfreporter/functions/FunctionSupport;>;", .constantValue.asLong = 0 },
    { "functionContext_", NULL, 0x2, "Lorg.oss.pdfreporter.engine.fill.FillFunctionContext;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineFillJREvaluator = { 2, "JREvaluator", "org.oss.pdfreporter.engine.fill", NULL, 0x401, 17, methods, 6, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineFillJREvaluator;
}

@end

void OrgOssPdfreporterEngineFillJREvaluator_init(OrgOssPdfreporterEngineFillJREvaluator *self) {
  NSObject_init(self);
}

id<OrgOssPdfreporterTextFormatIMessageFormat> OrgOssPdfreporterEngineFillJREvaluator_getMessageFormatWithNSString_(OrgOssPdfreporterEngineFillJREvaluator *self, NSString *pattern) {
  return [((id<OrgOssPdfreporterTextFormatFactoryIFormatFactory>) nil_chk(OrgOssPdfreporterRegistryApiRegistry_getIFormatFactoryWithOrgOssPdfreporterTextFormatFactoryIFormatFactory_FormatType_(JreLoadEnum(OrgOssPdfreporterTextFormatFactoryIFormatFactory_FormatType, DEFAULT)))) newMessageFormatWithNSString:pattern withJavaUtilLocale:[((OrgOssPdfreporterTextBundleStringLocale *) nil_chk(((OrgOssPdfreporterTextBundleStringLocale *) cast_chk([((id<OrgOssPdfreporterEngineFillIJRFillParameter>) nil_chk(self->locale_)) getValue], [OrgOssPdfreporterTextBundleStringLocale class])))) toLocale]];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineFillJREvaluator)
