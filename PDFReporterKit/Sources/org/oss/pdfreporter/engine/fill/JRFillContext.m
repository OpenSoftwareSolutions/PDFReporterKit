//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/fill/JRFillContext.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/HashMap.h"
#include "java/util/List.h"
#include "java/util/Locale.h"
#include "java/util/Map.h"
#include "java/util/TimeZone.h"
#include "java/util/concurrent/atomic/AtomicInteger.h"
#include "org/oss/pdfreporter/data/cache/DataCacheHandler.h"
#include "org/oss/pdfreporter/data/cache/DataRecorder.h"
#include "org/oss/pdfreporter/data/cache/DataSnapshot.h"
#include "org/oss/pdfreporter/engine/Deduplicable.h"
#include "org/oss/pdfreporter/engine/JRException.h"
#include "org/oss/pdfreporter/engine/JRPrintImage.h"
#include "org/oss/pdfreporter/engine/JRPrintPage.h"
#include "org/oss/pdfreporter/engine/JRTemplate.h"
#include "org/oss/pdfreporter/engine/JasperReport.h"
#include "org/oss/pdfreporter/engine/JasperReportsContext.h"
#include "org/oss/pdfreporter/engine/ReportContext.h"
#include "org/oss/pdfreporter/engine/fill/FillDatasetPosition.h"
#include "org/oss/pdfreporter/engine/fill/JRBaseFiller.h"
#include "org/oss/pdfreporter/engine/fill/JRFillContext.h"
#include "org/oss/pdfreporter/engine/fill/JRVirtualizationContext.h"
#include "org/oss/pdfreporter/engine/query/JRQueryExecuter.h"
#include "org/oss/pdfreporter/engine/util/DeduplicableRegistry.h"
#include "org/oss/pdfreporter/engine/util/Pair.h"
#include "org/oss/pdfreporter/text/format/factory/IFormatFactory.h"

@interface OrgOssPdfreporterEngineFillJRFillContext () {
 @public
  OrgOssPdfreporterEngineFillJRBaseFiller *masterFiller_;
  id<JavaUtilMap> loadedImages_;
  id<JavaUtilMap> loadedSubreports_;
  id<JavaUtilMap> loadedTemplates_;
  OrgOssPdfreporterEngineUtilDeduplicableRegistry *deduplicableRegistry_;
  jboolean usingVirtualizer_;
  id<OrgOssPdfreporterEngineJRPrintPage> printPage_;
  jboolean ignorePagination_;
  id<OrgOssPdfreporterEngineQueryJRQueryExecuter> queryExecuter_;
  id<OrgOssPdfreporterEngineJasperReportsContext> jasperReportsContext_;
  id<OrgOssPdfreporterEngineReportContext> reportContext_;
  id<OrgOssPdfreporterDataCacheDataCacheHandler> cacheHandler_;
  id<OrgOssPdfreporterDataCacheDataSnapshot> dataSnapshot_;
  id<OrgOssPdfreporterDataCacheDataRecorder> dataRecorder_;
  id<JavaUtilList> recordedData_;
  OrgOssPdfreporterEngineFillJRVirtualizationContext *virtualizationContext_;
  id<OrgOssPdfreporterTextFormatFactoryIFormatFactory> masterFormatFactory_;
  JavaUtilLocale *masterLocale_;
  JavaUtilTimeZone *masterTimeZone_;
  volatile_jboolean canceled_;
  JavaUtilConcurrentAtomicAtomicInteger *fillerIdSeq_;
  JavaUtilConcurrentAtomicAtomicInteger *fillElementSeq_;
  id<JavaUtilMap> fillCaches_;
}

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillContext, masterFiller_, OrgOssPdfreporterEngineFillJRBaseFiller *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillContext, loadedImages_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillContext, loadedSubreports_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillContext, loadedTemplates_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillContext, deduplicableRegistry_, OrgOssPdfreporterEngineUtilDeduplicableRegistry *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillContext, printPage_, id<OrgOssPdfreporterEngineJRPrintPage>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillContext, queryExecuter_, id<OrgOssPdfreporterEngineQueryJRQueryExecuter>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillContext, jasperReportsContext_, id<OrgOssPdfreporterEngineJasperReportsContext>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillContext, reportContext_, id<OrgOssPdfreporterEngineReportContext>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillContext, cacheHandler_, id<OrgOssPdfreporterDataCacheDataCacheHandler>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillContext, dataSnapshot_, id<OrgOssPdfreporterDataCacheDataSnapshot>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillContext, dataRecorder_, id<OrgOssPdfreporterDataCacheDataRecorder>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillContext, recordedData_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillContext, virtualizationContext_, OrgOssPdfreporterEngineFillJRVirtualizationContext *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillContext, masterFormatFactory_, id<OrgOssPdfreporterTextFormatFactoryIFormatFactory>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillContext, masterLocale_, JavaUtilLocale *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillContext, masterTimeZone_, JavaUtilTimeZone *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillContext, fillerIdSeq_, JavaUtilConcurrentAtomicAtomicInteger *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillContext, fillElementSeq_, JavaUtilConcurrentAtomicAtomicInteger *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillContext, fillCaches_, id<JavaUtilMap>)

@interface OrgOssPdfreporterEngineFillJRFillContext_FillCacheDisposable : NSObject

@end

@implementation OrgOssPdfreporterEngineFillJRFillContext

- (instancetype)initWithOrgOssPdfreporterEngineFillJRBaseFiller:(OrgOssPdfreporterEngineFillJRBaseFiller *)masterFiller {
  OrgOssPdfreporterEngineFillJRFillContext_initWithOrgOssPdfreporterEngineFillJRBaseFiller_(self, masterFiller);
  return self;
}

- (OrgOssPdfreporterEngineFillJRBaseFiller *)getMasterFiller {
  return masterFiller_;
}

- (jboolean)hasLoadedImageWithId:(id)source {
  return [((id<JavaUtilMap>) nil_chk(loadedImages_)) containsKeyWithId:source];
}

- (id<OrgOssPdfreporterEngineJRPrintImage>)getLoadedImageWithId:(id)source {
  return [((id<JavaUtilMap>) nil_chk(loadedImages_)) getWithId:source];
}

- (void)registerLoadedImageWithId:(id)source
withOrgOssPdfreporterEngineJRPrintImage:(id<OrgOssPdfreporterEngineJRPrintImage>)image {
  (void) [((id<JavaUtilMap>) nil_chk(loadedImages_)) putWithId:source withId:image];
  if (usingVirtualizer_) {
    [((OrgOssPdfreporterEngineFillJRVirtualizationContext *) nil_chk(virtualizationContext_)) cacheRendererWithOrgOssPdfreporterEngineJRPrintImage:image];
  }
}

- (jboolean)hasLoadedSubreportWithId:(id)source {
  return [((id<JavaUtilMap>) nil_chk(loadedSubreports_)) containsKeyWithId:source];
}

- (OrgOssPdfreporterEngineJasperReport *)getLoadedSubreportWithId:(id)source {
  return [((id<JavaUtilMap>) nil_chk(loadedSubreports_)) getWithId:source];
}

- (void)registerLoadedSubreportWithId:(id)source
withOrgOssPdfreporterEngineJasperReport:(OrgOssPdfreporterEngineJasperReport *)subreport {
  (void) [((id<JavaUtilMap>) nil_chk(loadedSubreports_)) putWithId:source withId:subreport];
}

- (void)setUsingVirtualizerWithBoolean:(jboolean)usingVirtualizer {
  self->usingVirtualizer_ = usingVirtualizer;
  if (usingVirtualizer && virtualizationContext_ == nil) {
    virtualizationContext_ = new_OrgOssPdfreporterEngineFillJRVirtualizationContext_initWithOrgOssPdfreporterEngineJasperReportsContext_(jasperReportsContext_);
  }
}

- (jboolean)isUsingVirtualizer {
  return usingVirtualizer_;
}

- (void)setPrintPageWithOrgOssPdfreporterEngineJRPrintPage:(id<OrgOssPdfreporterEngineJRPrintPage>)page {
  printPage_ = page;
}

- (id<OrgOssPdfreporterEngineJRPrintPage>)getPrintPage {
  return printPage_;
}

- (void)setIgnorePaginationWithBoolean:(jboolean)ignorePagination {
  self->ignorePagination_ = ignorePagination;
}

- (jboolean)isIgnorePagination {
  return ignorePagination_;
}

- (void)setRunningQueryExecuterWithOrgOssPdfreporterEngineQueryJRQueryExecuter:(id<OrgOssPdfreporterEngineQueryJRQueryExecuter>)queryExecuter {
  @synchronized(self) {
    self->queryExecuter_ = queryExecuter;
  }
}

- (void)clearRunningQueryExecuter {
  @synchronized(self) {
    self->queryExecuter_ = nil;
  }
}

- (jboolean)cancelRunningQuery {
  @synchronized(self) {
    if (queryExecuter_ != nil) {
      return [queryExecuter_ cancelQuery];
    }
    return false;
  }
}

- (void)ensureMasterPageAvailable {
  if (usingVirtualizer_) {
    (void) [((id<OrgOssPdfreporterEngineJRPrintPage>) nil_chk(printPage_)) getElements];
  }
}

- (OrgOssPdfreporterEngineFillJRVirtualizationContext *)getVirtualizationContext {
  return virtualizationContext_;
}

- (id<OrgOssPdfreporterTextFormatFactoryIFormatFactory>)getMasterFormatFactory {
  return masterFormatFactory_;
}

- (void)setMasterFormatFactoryWithOrgOssPdfreporterTextFormatFactoryIFormatFactory:(id<OrgOssPdfreporterTextFormatFactoryIFormatFactory>)masterFormatFactory {
  self->masterFormatFactory_ = masterFormatFactory;
}

- (JavaUtilLocale *)getMasterLocale {
  return masterLocale_;
}

- (void)setMasterLocaleWithJavaUtilLocale:(JavaUtilLocale *)masterLocale {
  self->masterLocale_ = masterLocale;
}

- (JavaUtilTimeZone *)getMasterTimeZone {
  return masterTimeZone_;
}

- (void)setMasterTimeZoneWithJavaUtilTimeZone:(JavaUtilTimeZone *)masterTimeZone {
  self->masterTimeZone_ = masterTimeZone;
}

- (jboolean)hasLoadedTemplateWithId:(id)source {
  return [((id<JavaUtilMap>) nil_chk(loadedTemplates_)) containsKeyWithId:source];
}

- (id<OrgOssPdfreporterEngineJRTemplate>)getLoadedTemplateWithId:(id)source {
  return [((id<JavaUtilMap>) nil_chk(loadedTemplates_)) getWithId:source];
}

- (void)registerLoadedTemplateWithId:(id)source
withOrgOssPdfreporterEngineJRTemplate:(id<OrgOssPdfreporterEngineJRTemplate>)template_ {
  (void) [((id<JavaUtilMap>) nil_chk(loadedTemplates_)) putWithId:source withId:template_];
}

- (id)deduplicateWithOrgOssPdfreporterEngineDeduplicable:(id<OrgOssPdfreporterEngineDeduplicable>)object {
  return [((OrgOssPdfreporterEngineUtilDeduplicableRegistry *) nil_chk(deduplicableRegistry_)) deduplicateWithOrgOssPdfreporterEngineDeduplicable:object];
}

- (jint)generateFillElementId {
  return [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(fillElementSeq_)) incrementAndGet];
}

- (jint)generatedFillerId {
  return [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(fillerIdSeq_)) incrementAndGet];
}

- (id<OrgOssPdfreporterEngineReportContext>)getReportContext {
  return reportContext_;
}

- (void)setReportContextWithOrgOssPdfreporterEngineReportContext:(id<OrgOssPdfreporterEngineReportContext>)reportContext {
  self->reportContext_ = reportContext;
  self->cacheHandler_ = (id<OrgOssPdfreporterDataCacheDataCacheHandler>) cast_check([self getContextParameterValueWithNSString:OrgOssPdfreporterDataCacheDataCacheHandler_PARAMETER_DATA_CACHE_HANDLER], OrgOssPdfreporterDataCacheDataCacheHandler_class_());
  if (cacheHandler_ != nil) {
    if ([cacheHandler_ isSnapshotPopulated]) {
      dataSnapshot_ = [((id<OrgOssPdfreporterDataCacheDataCacheHandler>) nil_chk(cacheHandler_)) getDataSnapshot];
    }
    else if ([((id<OrgOssPdfreporterDataCacheDataCacheHandler>) nil_chk(cacheHandler_)) isRecordingEnabled]) {
      dataRecorder_ = [((id<OrgOssPdfreporterDataCacheDataCacheHandler>) nil_chk(cacheHandler_)) createDataRecorder];
      recordedData_ = new_JavaUtilArrayList_init();
    }
  }
}

- (id)getContextParameterValueWithNSString:(NSString *)parameterName {
  if (reportContext_ == nil) {
    return nil;
  }
  id value = [reportContext_ getParameterValueWithNSString:parameterName];
  return value;
}

- (id<OrgOssPdfreporterDataCacheDataCacheHandler>)getCacheHandler {
  return cacheHandler_;
}

- (id<OrgOssPdfreporterDataCacheDataSnapshot>)getDataSnapshot {
  return dataSnapshot_;
}

- (jboolean)hasDataSnapshot {
  return dataSnapshot_ != nil;
}

- (id<OrgOssPdfreporterDataCacheDataRecorder>)getDataRecorder {
  return dataRecorder_;
}

- (void)addDataRecordResultWithOrgOssPdfreporterEngineFillFillDatasetPosition:(OrgOssPdfreporterEngineFillFillDatasetPosition *)fillPosition
                                                                       withId:(id)recorded {
  [((id<JavaUtilList>) nil_chk(recordedData_)) addWithId:new_OrgOssPdfreporterEngineUtilPair_initWithId_withId_(fillPosition, recorded)];
}

- (void)cacheDone {
  if (dataRecorder_ != nil && [dataRecorder_ isEnabled]) {
    for (OrgOssPdfreporterEngineUtilPair * __strong recorededItem in nil_chk(recordedData_)) {
      [((id<OrgOssPdfreporterDataCacheDataRecorder>) nil_chk(dataRecorder_)) addRecordResultWithId:[((OrgOssPdfreporterEngineUtilPair *) nil_chk(recorededItem)) first] withId:[recorededItem second]];
    }
    [dataRecorder_ setSnapshotPopulated];
  }
}

- (void)markCanceled {
  JreAssignVolatileBoolean(&canceled_, true);
}

- (jboolean)isCanceled {
  return JreLoadVolatileBoolean(&canceled_);
}

- (id)getFillCacheWithNSString:(NSString *)key {
  return [((id<JavaUtilMap>) nil_chk(fillCaches_)) getWithId:key];
}

- (void)setFillCacheWithNSString:(NSString *)key
                          withId:(id)value {
  (void) [((id<JavaUtilMap>) nil_chk(fillCaches_)) putWithId:key withId:value];
}

- (void)dispose {
  for (id __strong cacheObject in nil_chk([((id<JavaUtilMap>) nil_chk(fillCaches_)) values])) {
    if ([OrgOssPdfreporterEngineFillJRFillContext_FillCacheDisposable_class_() isInstance:cacheObject]) {
      [((id<OrgOssPdfreporterEngineFillJRFillContext_FillCacheDisposable>) nil_chk(((id<OrgOssPdfreporterEngineFillJRFillContext_FillCacheDisposable>) cast_check(cacheObject, OrgOssPdfreporterEngineFillJRFillContext_FillCacheDisposable_class_())))) dispose];
    }
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgOssPdfreporterEngineFillJRBaseFiller:", "JRFillContext", NULL, 0x1, NULL, NULL },
    { "getMasterFiller", NULL, "Lorg.oss.pdfreporter.engine.fill.JRBaseFiller;", 0x1, NULL, NULL },
    { "hasLoadedImageWithId:", "hasLoadedImage", "Z", 0x1, NULL, NULL },
    { "getLoadedImageWithId:", "getLoadedImage", "Lorg.oss.pdfreporter.engine.JRPrintImage;", 0x1, NULL, NULL },
    { "registerLoadedImageWithId:withOrgOssPdfreporterEngineJRPrintImage:", "registerLoadedImage", "V", 0x1, NULL, NULL },
    { "hasLoadedSubreportWithId:", "hasLoadedSubreport", "Z", 0x1, NULL, NULL },
    { "getLoadedSubreportWithId:", "getLoadedSubreport", "Lorg.oss.pdfreporter.engine.JasperReport;", 0x1, NULL, NULL },
    { "registerLoadedSubreportWithId:withOrgOssPdfreporterEngineJasperReport:", "registerLoadedSubreport", "V", 0x1, NULL, NULL },
    { "setUsingVirtualizerWithBoolean:", "setUsingVirtualizer", "V", 0x1, NULL, NULL },
    { "isUsingVirtualizer", NULL, "Z", 0x1, NULL, NULL },
    { "setPrintPageWithOrgOssPdfreporterEngineJRPrintPage:", "setPrintPage", "V", 0x1, NULL, NULL },
    { "getPrintPage", NULL, "Lorg.oss.pdfreporter.engine.JRPrintPage;", 0x1, NULL, NULL },
    { "setIgnorePaginationWithBoolean:", "setIgnorePagination", "V", 0x1, NULL, NULL },
    { "isIgnorePagination", NULL, "Z", 0x1, NULL, NULL },
    { "setRunningQueryExecuterWithOrgOssPdfreporterEngineQueryJRQueryExecuter:", "setRunningQueryExecuter", "V", 0x21, NULL, NULL },
    { "clearRunningQueryExecuter", NULL, "V", 0x21, NULL, NULL },
    { "cancelRunningQuery", NULL, "Z", 0x21, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "ensureMasterPageAvailable", NULL, "V", 0x1, NULL, NULL },
    { "getVirtualizationContext", NULL, "Lorg.oss.pdfreporter.engine.fill.JRVirtualizationContext;", 0x1, NULL, NULL },
    { "getMasterFormatFactory", NULL, "Lorg.oss.pdfreporter.text.format.factory.IFormatFactory;", 0x1, NULL, NULL },
    { "setMasterFormatFactoryWithOrgOssPdfreporterTextFormatFactoryIFormatFactory:", "setMasterFormatFactory", "V", 0x1, NULL, NULL },
    { "getMasterLocale", NULL, "Ljava.util.Locale;", 0x1, NULL, NULL },
    { "setMasterLocaleWithJavaUtilLocale:", "setMasterLocale", "V", 0x1, NULL, NULL },
    { "getMasterTimeZone", NULL, "Ljava.util.TimeZone;", 0x1, NULL, NULL },
    { "setMasterTimeZoneWithJavaUtilTimeZone:", "setMasterTimeZone", "V", 0x1, NULL, NULL },
    { "hasLoadedTemplateWithId:", "hasLoadedTemplate", "Z", 0x1, NULL, NULL },
    { "getLoadedTemplateWithId:", "getLoadedTemplate", "Lorg.oss.pdfreporter.engine.JRTemplate;", 0x1, NULL, NULL },
    { "registerLoadedTemplateWithId:withOrgOssPdfreporterEngineJRTemplate:", "registerLoadedTemplate", "V", 0x1, NULL, NULL },
    { "deduplicateWithOrgOssPdfreporterEngineDeduplicable:", "deduplicate", "TT;", 0x1, NULL, "<T::Lorg/oss/pdfreporter/engine/Deduplicable;>(TT;)TT;" },
    { "generateFillElementId", NULL, "I", 0x1, NULL, NULL },
    { "generatedFillerId", NULL, "I", 0x4, NULL, NULL },
    { "getReportContext", NULL, "Lorg.oss.pdfreporter.engine.ReportContext;", 0x1, NULL, NULL },
    { "setReportContextWithOrgOssPdfreporterEngineReportContext:", "setReportContext", "V", 0x1, NULL, NULL },
    { "getContextParameterValueWithNSString:", "getContextParameterValue", "Ljava.lang.Object;", 0x4, NULL, NULL },
    { "getCacheHandler", NULL, "Lorg.oss.pdfreporter.data.cache.DataCacheHandler;", 0x1, NULL, NULL },
    { "getDataSnapshot", NULL, "Lorg.oss.pdfreporter.data.cache.DataSnapshot;", 0x1, NULL, NULL },
    { "hasDataSnapshot", NULL, "Z", 0x1, NULL, NULL },
    { "getDataRecorder", NULL, "Lorg.oss.pdfreporter.data.cache.DataRecorder;", 0x1, NULL, NULL },
    { "addDataRecordResultWithOrgOssPdfreporterEngineFillFillDatasetPosition:withId:", "addDataRecordResult", "V", 0x1, NULL, NULL },
    { "cacheDone", NULL, "V", 0x1, NULL, NULL },
    { "markCanceled", NULL, "V", 0x1, NULL, NULL },
    { "isCanceled", NULL, "Z", 0x1, NULL, NULL },
    { "getFillCacheWithNSString:", "getFillCache", "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "setFillCacheWithNSString:withId:", "setFillCache", "V", 0x1, NULL, NULL },
    { "dispose", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "masterFiller_", NULL, 0x12, "Lorg.oss.pdfreporter.engine.fill.JRBaseFiller;", NULL, NULL, .constantValue.asLong = 0 },
    { "loadedImages_", NULL, 0x2, "Ljava.util.Map;", NULL, "Ljava/util/Map<Ljava/lang/Object;Lorg/oss/pdfreporter/engine/JRPrintImage;>;", .constantValue.asLong = 0 },
    { "loadedSubreports_", NULL, 0x2, "Ljava.util.Map;", NULL, "Ljava/util/Map<Ljava/lang/Object;Lorg/oss/pdfreporter/engine/JasperReport;>;", .constantValue.asLong = 0 },
    { "loadedTemplates_", NULL, 0x2, "Ljava.util.Map;", NULL, "Ljava/util/Map<Ljava/lang/Object;Lorg/oss/pdfreporter/engine/JRTemplate;>;", .constantValue.asLong = 0 },
    { "deduplicableRegistry_", NULL, 0x2, "Lorg.oss.pdfreporter.engine.util.DeduplicableRegistry;", NULL, NULL, .constantValue.asLong = 0 },
    { "usingVirtualizer_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "printPage_", NULL, 0x2, "Lorg.oss.pdfreporter.engine.JRPrintPage;", NULL, NULL, .constantValue.asLong = 0 },
    { "ignorePagination_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "queryExecuter_", NULL, 0x2, "Lorg.oss.pdfreporter.engine.query.JRQueryExecuter;", NULL, NULL, .constantValue.asLong = 0 },
    { "jasperReportsContext_", NULL, 0x2, "Lorg.oss.pdfreporter.engine.JasperReportsContext;", NULL, NULL, .constantValue.asLong = 0 },
    { "reportContext_", NULL, 0x2, "Lorg.oss.pdfreporter.engine.ReportContext;", NULL, NULL, .constantValue.asLong = 0 },
    { "cacheHandler_", NULL, 0x2, "Lorg.oss.pdfreporter.data.cache.DataCacheHandler;", NULL, NULL, .constantValue.asLong = 0 },
    { "dataSnapshot_", NULL, 0x2, "Lorg.oss.pdfreporter.data.cache.DataSnapshot;", NULL, NULL, .constantValue.asLong = 0 },
    { "dataRecorder_", NULL, 0x2, "Lorg.oss.pdfreporter.data.cache.DataRecorder;", NULL, NULL, .constantValue.asLong = 0 },
    { "recordedData_", NULL, 0x2, "Ljava.util.List;", NULL, "Ljava/util/List<Lorg/oss/pdfreporter/engine/util/Pair<Lorg/oss/pdfreporter/engine/fill/FillDatasetPosition;Ljava/lang/Object;>;>;", .constantValue.asLong = 0 },
    { "virtualizationContext_", NULL, 0x2, "Lorg.oss.pdfreporter.engine.fill.JRVirtualizationContext;", NULL, NULL, .constantValue.asLong = 0 },
    { "masterFormatFactory_", NULL, 0x2, "Lorg.oss.pdfreporter.text.format.factory.IFormatFactory;", NULL, NULL, .constantValue.asLong = 0 },
    { "masterLocale_", NULL, 0x2, "Ljava.util.Locale;", NULL, NULL, .constantValue.asLong = 0 },
    { "masterTimeZone_", NULL, 0x2, "Ljava.util.TimeZone;", NULL, NULL, .constantValue.asLong = 0 },
    { "canceled_", NULL, 0x42, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "fillerIdSeq_", NULL, 0x12, "Ljava.util.concurrent.atomic.AtomicInteger;", NULL, NULL, .constantValue.asLong = 0 },
    { "fillElementSeq_", NULL, 0x12, "Ljava.util.concurrent.atomic.AtomicInteger;", NULL, NULL, .constantValue.asLong = 0 },
    { "fillCaches_", NULL, 0x2, "Ljava.util.Map;", NULL, "Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;", .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lorg.oss.pdfreporter.engine.fill.JRFillContext$FillCacheDisposable;"};
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineFillJRFillContext = { 2, "JRFillContext", "org.oss.pdfreporter.engine.fill", NULL, 0x1, 45, methods, 23, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_OrgOssPdfreporterEngineFillJRFillContext;
}

@end

void OrgOssPdfreporterEngineFillJRFillContext_initWithOrgOssPdfreporterEngineFillJRBaseFiller_(OrgOssPdfreporterEngineFillJRFillContext *self, OrgOssPdfreporterEngineFillJRBaseFiller *masterFiller) {
  NSObject_init(self);
  self->fillerIdSeq_ = new_JavaUtilConcurrentAtomicAtomicInteger_init();
  self->fillElementSeq_ = new_JavaUtilConcurrentAtomicAtomicInteger_init();
  self->fillCaches_ = new_JavaUtilHashMap_init();
  self->masterFiller_ = masterFiller;
  self->jasperReportsContext_ = [((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(masterFiller)) getJasperReportsContext];
  self->loadedImages_ = new_JavaUtilHashMap_init();
  self->loadedSubreports_ = new_JavaUtilHashMap_init();
  self->loadedTemplates_ = new_JavaUtilHashMap_init();
  self->deduplicableRegistry_ = new_OrgOssPdfreporterEngineUtilDeduplicableRegistry_init();
}

OrgOssPdfreporterEngineFillJRFillContext *new_OrgOssPdfreporterEngineFillJRFillContext_initWithOrgOssPdfreporterEngineFillJRBaseFiller_(OrgOssPdfreporterEngineFillJRBaseFiller *masterFiller) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineFillJRFillContext, initWithOrgOssPdfreporterEngineFillJRBaseFiller_, masterFiller)
}

OrgOssPdfreporterEngineFillJRFillContext *create_OrgOssPdfreporterEngineFillJRFillContext_initWithOrgOssPdfreporterEngineFillJRBaseFiller_(OrgOssPdfreporterEngineFillJRBaseFiller *masterFiller) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineFillJRFillContext, initWithOrgOssPdfreporterEngineFillJRBaseFiller_, masterFiller)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineFillJRFillContext)

@implementation OrgOssPdfreporterEngineFillJRFillContext_FillCacheDisposable

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "dispose", NULL, "V", 0x401, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineFillJRFillContext_FillCacheDisposable = { 2, "FillCacheDisposable", "org.oss.pdfreporter.engine.fill", "JRFillContext", 0x609, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineFillJRFillContext_FillCacheDisposable;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineFillJRFillContext_FillCacheDisposable)
