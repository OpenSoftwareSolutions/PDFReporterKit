//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/fill/JRFillTextElement.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgOssPdfreporterEngineFillJRFillTextElement")
#ifdef RESTRICT_OrgOssPdfreporterEngineFillJRFillTextElement
#define INCLUDE_ALL_OrgOssPdfreporterEngineFillJRFillTextElement 0
#else
#define INCLUDE_ALL_OrgOssPdfreporterEngineFillJRFillTextElement 1
#endif
#undef RESTRICT_OrgOssPdfreporterEngineFillJRFillTextElement

#if !defined (OrgOssPdfreporterEngineFillJRFillTextElement_) && (INCLUDE_ALL_OrgOssPdfreporterEngineFillJRFillTextElement || defined(INCLUDE_OrgOssPdfreporterEngineFillJRFillTextElement))
#define OrgOssPdfreporterEngineFillJRFillTextElement_

#define RESTRICT_OrgOssPdfreporterEngineFillJRFillElement 1
#define INCLUDE_OrgOssPdfreporterEngineFillJRFillElement 1
#include "org/oss/pdfreporter/engine/fill/JRFillElement.h"

#define RESTRICT_OrgOssPdfreporterEngineJRTextElement 1
#define INCLUDE_OrgOssPdfreporterEngineJRTextElement 1
#include "org/oss/pdfreporter/engine/JRTextElement.h"

@class IOSObjectArray;
@class IOSShortArray;
@class JavaLangBoolean;
@class JavaLangInteger;
@class OrgOssPdfreporterEngineFillJRBaseFiller;
@class OrgOssPdfreporterEngineFillJRFillCloneFactory;
@class OrgOssPdfreporterEngineFillJRFillObjectFactory;
@class OrgOssPdfreporterEngineTypeHorizontalAlignEnum;
@class OrgOssPdfreporterEngineTypeLineSpacingEnum;
@class OrgOssPdfreporterEngineTypeModeEnum;
@class OrgOssPdfreporterEngineTypeRotationEnum;
@class OrgOssPdfreporterEngineTypeRunDirectionEnum;
@class OrgOssPdfreporterEngineTypeVerticalAlignEnum;
@class OrgOssPdfreporterEngineUtilJRStyledText;
@protocol JavaUtilMap;
@protocol OrgOssPdfreporterEngineJRFont;
@protocol OrgOssPdfreporterEngineJRLineBox;
@protocol OrgOssPdfreporterEngineJRParagraph;
@protocol OrgOssPdfreporterEngineJRPrintText;
@protocol OrgOssPdfreporterEngineUtilMarkupProcessor;
@protocol OrgOssPdfreporterGeometryIColor;

@interface OrgOssPdfreporterEngineFillJRFillTextElement : OrgOssPdfreporterEngineFillJRFillElement < OrgOssPdfreporterEngineJRTextElement > {
 @public
  id<OrgOssPdfreporterEngineJRLineBox> initLineBox_;
  id<OrgOssPdfreporterEngineJRParagraph> initParagraph_;
  id<OrgOssPdfreporterEngineJRLineBox> lineBox_;
  id<OrgOssPdfreporterEngineJRParagraph> paragraph_;
}

+ (NSString *)PROPERTY_CONSUME_SPACE_ON_OVERFLOW;

#pragma mark Public

- (id<OrgOssPdfreporterGeometryIColor>)getDefaultLineColor;

- (id<OrgOssPdfreporterEngineJRFont>)getFont;

- (NSString *)getFontName;

- (jint)getFontSize;

- (OrgOssPdfreporterEngineTypeHorizontalAlignEnum *)getHorizontalAlignmentValue;

- (id<OrgOssPdfreporterEngineJRLineBox>)getLineBox;

- (OrgOssPdfreporterEngineTypeLineSpacingEnum *)getLineSpacingValue;

- (NSString *)getMarkup;

- (OrgOssPdfreporterEngineTypeModeEnum *)getModeValue;

- (NSString *)getOwnFontName;

- (JavaLangInteger *)getOwnFontSize;

- (OrgOssPdfreporterEngineTypeHorizontalAlignEnum *)getOwnHorizontalAlignmentValue;

- (OrgOssPdfreporterEngineTypeLineSpacingEnum *)getOwnLineSpacingValue;

- (NSString *)getOwnMarkup;

- (NSString *)getOwnPdfEncoding;

- (NSString *)getOwnPdfFontName;

- (OrgOssPdfreporterEngineTypeRotationEnum *)getOwnRotationValue;

- (OrgOssPdfreporterEngineTypeVerticalAlignEnum *)getOwnVerticalAlignmentValue;

- (id<OrgOssPdfreporterEngineJRParagraph>)getParagraph;

- (NSString *)getPdfEncoding;

- (NSString *)getPdfFontName;

- (OrgOssPdfreporterEngineTypeRotationEnum *)getRotationValue;

- (OrgOssPdfreporterEngineTypeRunDirectionEnum *)getRunDirectionValue;

- (NSString *)getText;

- (OrgOssPdfreporterEngineTypeVerticalAlignEnum *)getVerticalAlignmentValue;

- (jboolean)isBold;

- (jboolean)isItalic;

- (JavaLangBoolean *)isOwnBold;

- (JavaLangBoolean *)isOwnItalic;

- (JavaLangBoolean *)isOwnPdfEmbedded;

- (JavaLangBoolean *)isOwnStrikeThrough;

- (JavaLangBoolean *)isOwnUnderline;

- (jboolean)isPdfEmbedded;

- (jboolean)isStrikeThrough;

- (jboolean)isUnderline;

- (void)setBoldWithBoolean:(jboolean)isBold;

- (void)setBoldWithJavaLangBoolean:(JavaLangBoolean *)isBold;

- (void)setFontNameWithNSString:(NSString *)fontName;

- (void)setFontSizeWithInt:(jint)size;

- (void)setFontSizeWithJavaLangInteger:(JavaLangInteger *)size;

- (void)setHeightWithInt:(jint)height;

- (void)setHorizontalAlignmentWithOrgOssPdfreporterEngineTypeHorizontalAlignEnum:(OrgOssPdfreporterEngineTypeHorizontalAlignEnum *)horizontalAlignment;

- (void)setItalicWithBoolean:(jboolean)isItalic;

- (void)setItalicWithJavaLangBoolean:(JavaLangBoolean *)isItalic;

- (void)setLineSpacingWithOrgOssPdfreporterEngineTypeLineSpacingEnum:(OrgOssPdfreporterEngineTypeLineSpacingEnum *)lineSpacing;

- (void)setMarkupWithNSString:(NSString *)markup;

- (void)setPdfEmbeddedWithBoolean:(jboolean)isPdfEmbedded;

- (void)setPdfEmbeddedWithJavaLangBoolean:(JavaLangBoolean *)isPdfEmbedded;

- (void)setPdfEncodingWithNSString:(NSString *)pdfEncoding;

- (void)setPdfFontNameWithNSString:(NSString *)pdfFontName;

- (void)setRotationWithOrgOssPdfreporterEngineTypeRotationEnum:(OrgOssPdfreporterEngineTypeRotationEnum *)rotation;

- (void)setStrikeThroughWithBoolean:(jboolean)isStrikeThrough;

- (void)setStrikeThroughWithJavaLangBoolean:(JavaLangBoolean *)isStrikeThrough;

- (void)setUnderlineWithBoolean:(jboolean)isUnderline;

- (void)setUnderlineWithJavaLangBoolean:(JavaLangBoolean *)isUnderline;

- (void)setVerticalAlignmentWithOrgOssPdfreporterEngineTypeVerticalAlignEnum:(OrgOssPdfreporterEngineTypeVerticalAlignEnum *)verticalAlignment;

- (void)setWidthWithInt:(jint)width;

#pragma mark Protected

- (instancetype)initWithOrgOssPdfreporterEngineFillJRBaseFiller:(OrgOssPdfreporterEngineFillJRBaseFiller *)filler
                       withOrgOssPdfreporterEngineJRTextElement:(id<OrgOssPdfreporterEngineJRTextElement>)textElement
             withOrgOssPdfreporterEngineFillJRFillObjectFactory:(OrgOssPdfreporterEngineFillJRFillObjectFactory *)factory;

- (instancetype)initWithOrgOssPdfreporterEngineFillJRFillTextElement:(OrgOssPdfreporterEngineFillJRFillTextElement *)textElement
                   withOrgOssPdfreporterEngineFillJRFillCloneFactory:(OrgOssPdfreporterEngineFillJRFillCloneFactory *)factory;

- (jboolean)canOverflow;

- (void)chopTextElementWithInt:(jint)availableStretchHeight;

- (void)ensureTextMeasurer;

- (void)evaluateStyleWithByte:(jbyte)evaluation;

- (jfloat)getLeadingOffset;

- (IOSShortArray *)getLineBreakOffsets;

- (jfloat)getLineSpacingFactor;

- (id<OrgOssPdfreporterEngineUtilMarkupProcessor>)getMarkupProcessorWithNSString:(NSString *)markup;

- (jint)getPrintElementHeight;

- (NSString *)getRawText;

- (OrgOssPdfreporterEngineUtilJRStyledText *)getStyledText;

- (id<JavaUtilMap>)getStyledTextAttributes;

- (jint)getTextEnd;

- (jfloat)getTextHeight;

- (jint)getTextStart;

- (NSString *)getTextTruncateSuffix;

- (NSString *)processMarkupTextWithNSString:(NSString *)text;

- (void)reset;

- (void)resetTextChunk;

- (void)rewind;

- (void)setLeadingOffsetWithFloat:(jfloat)leadingOffset;

- (void)setLineBreakOffsetsWithShortArray:(IOSShortArray *)lineBreakOffsets;

- (void)setLineSpacingFactorWithFloat:(jfloat)lineSpacingFactor;

- (void)setPrintTextWithOrgOssPdfreporterEngineJRPrintText:(id<OrgOssPdfreporterEngineJRPrintText>)printText;

- (void)setRawTextWithNSString:(NSString *)rawText;

- (void)setTextEndWithInt:(jint)textEnd;

- (void)setTextHeightWithFloat:(jfloat)textHeight;

- (void)setTextStartWithInt:(jint)textStart;

- (void)setTextTruncateSuffixWithNSString:(NSString *)textTruncateSuffix;

@end

J2OBJC_STATIC_INIT(OrgOssPdfreporterEngineFillJRFillTextElement)

J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillTextElement, initLineBox_, id<OrgOssPdfreporterEngineJRLineBox>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillTextElement, initParagraph_, id<OrgOssPdfreporterEngineJRParagraph>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillTextElement, lineBox_, id<OrgOssPdfreporterEngineJRLineBox>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillTextElement, paragraph_, id<OrgOssPdfreporterEngineJRParagraph>)

inline NSString *OrgOssPdfreporterEngineFillJRFillTextElement_get_PROPERTY_CONSUME_SPACE_ON_OVERFLOW();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgOssPdfreporterEngineFillJRFillTextElement_PROPERTY_CONSUME_SPACE_ON_OVERFLOW;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterEngineFillJRFillTextElement, PROPERTY_CONSUME_SPACE_ON_OVERFLOW, NSString *)

FOUNDATION_EXPORT void OrgOssPdfreporterEngineFillJRFillTextElement_initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineJRTextElement_withOrgOssPdfreporterEngineFillJRFillObjectFactory_(OrgOssPdfreporterEngineFillJRFillTextElement *self, OrgOssPdfreporterEngineFillJRBaseFiller *filler, id<OrgOssPdfreporterEngineJRTextElement> textElement, OrgOssPdfreporterEngineFillJRFillObjectFactory *factory);

FOUNDATION_EXPORT void OrgOssPdfreporterEngineFillJRFillTextElement_initWithOrgOssPdfreporterEngineFillJRFillTextElement_withOrgOssPdfreporterEngineFillJRFillCloneFactory_(OrgOssPdfreporterEngineFillJRFillTextElement *self, OrgOssPdfreporterEngineFillJRFillTextElement *textElement, OrgOssPdfreporterEngineFillJRFillCloneFactory *factory);

J2OBJC_TYPE_LITERAL_HEADER(OrgOssPdfreporterEngineFillJRFillTextElement)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgOssPdfreporterEngineFillJRFillTextElement")
