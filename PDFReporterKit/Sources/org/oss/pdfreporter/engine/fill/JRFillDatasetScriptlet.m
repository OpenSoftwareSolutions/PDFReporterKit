//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/fill/JRFillDatasetScriptlet.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "org/oss/pdfreporter/engine/JRAbstractScriptlet.h"
#include "org/oss/pdfreporter/engine/JRScriptletException.h"
#include "org/oss/pdfreporter/engine/fill/JRFillDataset.h"
#include "org/oss/pdfreporter/engine/fill/JRFillDatasetScriptlet.h"

@interface OrgOssPdfreporterEngineFillJRFillDatasetScriptlet () {
 @public
  OrgOssPdfreporterEngineFillJRFillDataset *dataset_;
}

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillDatasetScriptlet, dataset_, OrgOssPdfreporterEngineFillJRFillDataset *)

@implementation OrgOssPdfreporterEngineFillJRFillDatasetScriptlet

- (instancetype)initWithOrgOssPdfreporterEngineFillJRFillDataset:(OrgOssPdfreporterEngineFillJRFillDataset *)dataset {
  OrgOssPdfreporterEngineFillJRFillDatasetScriptlet_initWithOrgOssPdfreporterEngineFillJRFillDataset_(self, dataset);
  return self;
}

- (void)setDataWithJavaUtilMap:(id<JavaUtilMap>)parsm
               withJavaUtilMap:(id<JavaUtilMap>)fldsm
               withJavaUtilMap:(id<JavaUtilMap>)varsm
withOrgOssPdfreporterEngineFillJRFillGroupArray:(IOSObjectArray *)grps {
  [super setDataWithJavaUtilMap:parsm withJavaUtilMap:fldsm withJavaUtilMap:varsm withOrgOssPdfreporterEngineFillJRFillGroupArray:grps];
  for (id<JavaUtilIterator> it = [((id<JavaUtilList>) nil_chk(((OrgOssPdfreporterEngineFillJRFillDataset *) nil_chk(dataset_))->scriptlets_)) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk([it next])) setDataWithJavaUtilMap:parsm withJavaUtilMap:fldsm withJavaUtilMap:varsm withOrgOssPdfreporterEngineFillJRFillGroupArray:grps];
  }
}

- (void)beforeReportInit {
  for (id<JavaUtilIterator> it = [((id<JavaUtilList>) nil_chk(((OrgOssPdfreporterEngineFillJRFillDataset *) nil_chk(dataset_))->scriptlets_)) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk([it next])) beforeReportInit];
  }
}

- (void)afterReportInit {
  for (id<JavaUtilIterator> it = [((id<JavaUtilList>) nil_chk(((OrgOssPdfreporterEngineFillJRFillDataset *) nil_chk(dataset_))->scriptlets_)) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk([it next])) afterReportInit];
  }
}

- (void)beforePageInit {
  for (id<JavaUtilIterator> it = [((id<JavaUtilList>) nil_chk(((OrgOssPdfreporterEngineFillJRFillDataset *) nil_chk(dataset_))->scriptlets_)) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk([it next])) beforePageInit];
  }
}

- (void)afterPageInit {
  for (id<JavaUtilIterator> it = [((id<JavaUtilList>) nil_chk(((OrgOssPdfreporterEngineFillJRFillDataset *) nil_chk(dataset_))->scriptlets_)) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk([it next])) afterPageInit];
  }
}

- (void)beforeColumnInit {
  for (id<JavaUtilIterator> it = [((id<JavaUtilList>) nil_chk(((OrgOssPdfreporterEngineFillJRFillDataset *) nil_chk(dataset_))->scriptlets_)) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk([it next])) beforeColumnInit];
  }
}

- (void)afterColumnInit {
  for (id<JavaUtilIterator> it = [((id<JavaUtilList>) nil_chk(((OrgOssPdfreporterEngineFillJRFillDataset *) nil_chk(dataset_))->scriptlets_)) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk([it next])) afterColumnInit];
  }
}

- (void)beforeGroupInitWithNSString:(NSString *)groupName {
  for (id<JavaUtilIterator> it = [((id<JavaUtilList>) nil_chk(((OrgOssPdfreporterEngineFillJRFillDataset *) nil_chk(dataset_))->scriptlets_)) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk([it next])) beforeGroupInitWithNSString:groupName];
  }
}

- (void)afterGroupInitWithNSString:(NSString *)groupName {
  for (id<JavaUtilIterator> it = [((id<JavaUtilList>) nil_chk(((OrgOssPdfreporterEngineFillJRFillDataset *) nil_chk(dataset_))->scriptlets_)) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk([it next])) afterGroupInitWithNSString:groupName];
  }
}

- (void)beforeDetailEval {
  for (id<JavaUtilIterator> it = [((id<JavaUtilList>) nil_chk(((OrgOssPdfreporterEngineFillJRFillDataset *) nil_chk(dataset_))->scriptlets_)) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk([it next])) beforeDetailEval];
  }
}

- (void)afterDetailEval {
  for (id<JavaUtilIterator> it = [((id<JavaUtilList>) nil_chk(((OrgOssPdfreporterEngineFillJRFillDataset *) nil_chk(dataset_))->scriptlets_)) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    [((OrgOssPdfreporterEngineJRAbstractScriptlet *) nil_chk([it next])) afterDetailEval];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgOssPdfreporterEngineFillJRFillDataset:", "JRFillDatasetScriptlet", NULL, 0x1, NULL, NULL },
    { "setDataWithJavaUtilMap:withJavaUtilMap:withJavaUtilMap:withOrgOssPdfreporterEngineFillJRFillGroupArray:", "setData", "V", 0x1, NULL, "(Ljava/util/Map<Ljava/lang/String;Lorg/oss/pdfreporter/engine/fill/IJRFillParameter;>;Ljava/util/Map<Ljava/lang/String;Lorg/oss/pdfreporter/engine/fill/JRFillField;>;Ljava/util/Map<Ljava/lang/String;Lorg/oss/pdfreporter/engine/fill/JRFillVariable;>;[Lorg/oss/pdfreporter/engine/fill/JRFillGroup;)V" },
    { "beforeReportInit", NULL, "V", 0x1, "Lorg.oss.pdfreporter.engine.JRScriptletException;", NULL },
    { "afterReportInit", NULL, "V", 0x1, "Lorg.oss.pdfreporter.engine.JRScriptletException;", NULL },
    { "beforePageInit", NULL, "V", 0x1, "Lorg.oss.pdfreporter.engine.JRScriptletException;", NULL },
    { "afterPageInit", NULL, "V", 0x1, "Lorg.oss.pdfreporter.engine.JRScriptletException;", NULL },
    { "beforeColumnInit", NULL, "V", 0x1, "Lorg.oss.pdfreporter.engine.JRScriptletException;", NULL },
    { "afterColumnInit", NULL, "V", 0x1, "Lorg.oss.pdfreporter.engine.JRScriptletException;", NULL },
    { "beforeGroupInitWithNSString:", "beforeGroupInit", "V", 0x1, "Lorg.oss.pdfreporter.engine.JRScriptletException;", NULL },
    { "afterGroupInitWithNSString:", "afterGroupInit", "V", 0x1, "Lorg.oss.pdfreporter.engine.JRScriptletException;", NULL },
    { "beforeDetailEval", NULL, "V", 0x1, "Lorg.oss.pdfreporter.engine.JRScriptletException;", NULL },
    { "afterDetailEval", NULL, "V", 0x1, "Lorg.oss.pdfreporter.engine.JRScriptletException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "dataset_", NULL, 0x2, "Lorg.oss.pdfreporter.engine.fill.JRFillDataset;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineFillJRFillDatasetScriptlet = { 2, "JRFillDatasetScriptlet", "org.oss.pdfreporter.engine.fill", NULL, 0x1, 12, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineFillJRFillDatasetScriptlet;
}

@end

void OrgOssPdfreporterEngineFillJRFillDatasetScriptlet_initWithOrgOssPdfreporterEngineFillJRFillDataset_(OrgOssPdfreporterEngineFillJRFillDatasetScriptlet *self, OrgOssPdfreporterEngineFillJRFillDataset *dataset) {
  OrgOssPdfreporterEngineJRAbstractScriptlet_init(self);
  self->dataset_ = dataset;
}

OrgOssPdfreporterEngineFillJRFillDatasetScriptlet *new_OrgOssPdfreporterEngineFillJRFillDatasetScriptlet_initWithOrgOssPdfreporterEngineFillJRFillDataset_(OrgOssPdfreporterEngineFillJRFillDataset *dataset) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineFillJRFillDatasetScriptlet, initWithOrgOssPdfreporterEngineFillJRFillDataset_, dataset)
}

OrgOssPdfreporterEngineFillJRFillDatasetScriptlet *create_OrgOssPdfreporterEngineFillJRFillDatasetScriptlet_initWithOrgOssPdfreporterEngineFillJRFillDataset_(OrgOssPdfreporterEngineFillJRFillDataset *dataset) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineFillJRFillDatasetScriptlet, initWithOrgOssPdfreporterEngineFillJRFillDataset_, dataset)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineFillJRFillDatasetScriptlet)
