//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/fill/JRFillCellContents.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Float.h"
#include "java/lang/Integer.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/HashMap.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "org/oss/pdfreporter/crosstabs/JRCellContents.h"
#include "org/oss/pdfreporter/crosstabs/fill/JRFillCrosstabObjectFactory.h"
#include "org/oss/pdfreporter/crosstabs/type/CrosstabColumnPositionEnum.h"
#include "org/oss/pdfreporter/crosstabs/type/CrosstabRowPositionEnum.h"
#include "org/oss/pdfreporter/engine/JRDefaultStyleProvider.h"
#include "org/oss/pdfreporter/engine/JRElement.h"
#include "org/oss/pdfreporter/engine/JRException.h"
#include "org/oss/pdfreporter/engine/JRFrame.h"
#include "org/oss/pdfreporter/engine/JRLineBox.h"
#include "org/oss/pdfreporter/engine/JROrigin.h"
#include "org/oss/pdfreporter/engine/JRPrintElement.h"
#include "org/oss/pdfreporter/engine/JRPrintFrame.h"
#include "org/oss/pdfreporter/engine/JRPropertiesHolder.h"
#include "org/oss/pdfreporter/engine/JRPropertiesMap.h"
#include "org/oss/pdfreporter/engine/JRStyle.h"
#include "org/oss/pdfreporter/engine/JasperPrint.h"
#include "org/oss/pdfreporter/engine/base/JRBoxPen.h"
#include "org/oss/pdfreporter/engine/fill/JRBaseFiller.h"
#include "org/oss/pdfreporter/engine/fill/JRClonePool.h"
#include "org/oss/pdfreporter/engine/fill/JRFillCellContents.h"
#include "org/oss/pdfreporter/engine/fill/JRFillCloneFactory.h"
#include "org/oss/pdfreporter/engine/fill/JRFillCloneable.h"
#include "org/oss/pdfreporter/engine/fill/JRFillContext.h"
#include "org/oss/pdfreporter/engine/fill/JRFillElement.h"
#include "org/oss/pdfreporter/engine/fill/JRFillElementContainer.h"
#include "org/oss/pdfreporter/engine/fill/JRFillElementGroup.h"
#include "org/oss/pdfreporter/engine/fill/JROriginProvider.h"
#include "org/oss/pdfreporter/engine/fill/JRTemplateFrame.h"
#include "org/oss/pdfreporter/engine/fill/JRTemplatePrintFrame.h"
#include "org/oss/pdfreporter/engine/type/ModeEnum.h"
#include "org/oss/pdfreporter/geometry/IColor.h"
#include "org/oss/pdfreporter/uses/org/apache/commons/collections/ReferenceMap.h"

@interface OrgOssPdfreporterEngineFillJRFillCellContents () {
 @public
  id<JavaUtilMap> transformedContentsCache_;
  id<JavaUtilMap> boxContentsCache_;
  OrgOssPdfreporterEngineFillJRClonePool *clonePool_;
  id<OrgOssPdfreporterEngineFillJROriginProvider> originProvider_;
  jint elementId_;
  OrgOssPdfreporterEngineFillJRFillCellContents *original_;
  id<OrgOssPdfreporterCrosstabsJRCellContents> parentCell_;
  NSString *cellType_;
  id<OrgOssPdfreporterEngineJRLineBox> lineBox_;
  jint height_;
  jint width_;
  jint x_;
  jint y_;
  jint verticalSpan_;
  OrgOssPdfreporterCrosstabsTypeCrosstabRowPositionEnum *verticalPositionType_;
  jint horizontalSpan_;
  id<JavaUtilMap> templateFrames_;
  id<OrgOssPdfreporterEngineJRDefaultStyleProvider> defaultStyleProvider_;
  id<OrgOssPdfreporterEngineJRStyle> initStyle_;
  jint prepareStretchHeight_;
}

- (void)initTemplatesMap OBJC_METHOD_FAMILY_NONE;

- (void)transformWithInt:(jint)newWidth
                 withInt:(jint)newHeight
withOrgOssPdfreporterCrosstabsTypeCrosstabColumnPositionEnum:(OrgOssPdfreporterCrosstabsTypeCrosstabColumnPositionEnum *)xPosition
withOrgOssPdfreporterCrosstabsTypeCrosstabRowPositionEnum:(OrgOssPdfreporterCrosstabsTypeCrosstabRowPositionEnum *)yPosition;

- (void)transformElementsWithInt:(jint)newWidth
                         withInt:(jint)newHeight
withOrgOssPdfreporterCrosstabsTypeCrosstabColumnPositionEnum:(OrgOssPdfreporterCrosstabsTypeCrosstabColumnPositionEnum *)xPosition
withOrgOssPdfreporterCrosstabsTypeCrosstabRowPositionEnum:(OrgOssPdfreporterCrosstabsTypeCrosstabRowPositionEnum *)yPosition;

+ (void)transformElementsWithOrgOssPdfreporterEngineJRElementArray:(IOSObjectArray *)elements
                                                        withDouble:(jdouble)scaleX
                                                           withInt:(jint)offsetX
                                                        withDouble:(jdouble)scaleY
                                                           withInt:(jint)offsetY;

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillCellContents, transformedContentsCache_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillCellContents, boxContentsCache_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillCellContents, clonePool_, OrgOssPdfreporterEngineFillJRClonePool *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillCellContents, originProvider_, id<OrgOssPdfreporterEngineFillJROriginProvider>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillCellContents, original_, OrgOssPdfreporterEngineFillJRFillCellContents *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillCellContents, parentCell_, id<OrgOssPdfreporterCrosstabsJRCellContents>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillCellContents, cellType_, NSString *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillCellContents, lineBox_, id<OrgOssPdfreporterEngineJRLineBox>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillCellContents, verticalPositionType_, OrgOssPdfreporterCrosstabsTypeCrosstabRowPositionEnum *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillCellContents, templateFrames_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillCellContents, defaultStyleProvider_, id<OrgOssPdfreporterEngineJRDefaultStyleProvider>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillCellContents, initStyle_, id<OrgOssPdfreporterEngineJRStyle>)

__attribute__((unused)) static void OrgOssPdfreporterEngineFillJRFillCellContents_initTemplatesMap(OrgOssPdfreporterEngineFillJRFillCellContents *self);

__attribute__((unused)) static void OrgOssPdfreporterEngineFillJRFillCellContents_transformWithInt_withInt_withOrgOssPdfreporterCrosstabsTypeCrosstabColumnPositionEnum_withOrgOssPdfreporterCrosstabsTypeCrosstabRowPositionEnum_(OrgOssPdfreporterEngineFillJRFillCellContents *self, jint newWidth, jint newHeight, OrgOssPdfreporterCrosstabsTypeCrosstabColumnPositionEnum *xPosition, OrgOssPdfreporterCrosstabsTypeCrosstabRowPositionEnum *yPosition);

__attribute__((unused)) static void OrgOssPdfreporterEngineFillJRFillCellContents_transformElementsWithInt_withInt_withOrgOssPdfreporterCrosstabsTypeCrosstabColumnPositionEnum_withOrgOssPdfreporterCrosstabsTypeCrosstabRowPositionEnum_(OrgOssPdfreporterEngineFillJRFillCellContents *self, jint newWidth, jint newHeight, OrgOssPdfreporterCrosstabsTypeCrosstabColumnPositionEnum *xPosition, OrgOssPdfreporterCrosstabsTypeCrosstabRowPositionEnum *yPosition);

__attribute__((unused)) static void OrgOssPdfreporterEngineFillJRFillCellContents_transformElementsWithOrgOssPdfreporterEngineJRElementArray_withDouble_withInt_withDouble_withInt_(IOSObjectArray *elements, jdouble scaleX, jint offsetX, jdouble scaleY, jint offsetY);

@implementation OrgOssPdfreporterEngineFillJRFillCellContents

- (instancetype)initWithOrgOssPdfreporterEngineFillJRBaseFiller:(OrgOssPdfreporterEngineFillJRBaseFiller *)filler
                   withOrgOssPdfreporterCrosstabsJRCellContents:(id<OrgOssPdfreporterCrosstabsJRCellContents>)cell
                                                   withNSString:(NSString *)cellType
  withOrgOssPdfreporterCrosstabsFillJRFillCrosstabObjectFactory:(OrgOssPdfreporterCrosstabsFillJRFillCrosstabObjectFactory *)factory {
  OrgOssPdfreporterEngineFillJRFillCellContents_initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterCrosstabsJRCellContents_withNSString_withOrgOssPdfreporterCrosstabsFillJRFillCrosstabObjectFactory_(self, filler, cell, cellType, factory);
  return self;
}

- (void)initTemplatesMap {
  OrgOssPdfreporterEngineFillJRFillCellContents_initTemplatesMap(self);
}

- (instancetype)initWithOrgOssPdfreporterEngineFillJRFillCellContents:(OrgOssPdfreporterEngineFillJRFillCellContents *)cellContents
                    withOrgOssPdfreporterEngineFillJRFillCloneFactory:(OrgOssPdfreporterEngineFillJRFillCloneFactory *)factory {
  OrgOssPdfreporterEngineFillJRFillCellContents_initWithOrgOssPdfreporterEngineFillJRFillCellContents_withOrgOssPdfreporterEngineFillJRFillCloneFactory_(self, cellContents, factory);
  return self;
}

- (id<OrgOssPdfreporterGeometryIColor>)getBackcolor {
  return [((id<OrgOssPdfreporterCrosstabsJRCellContents>) nil_chk(parentCell_)) getBackcolor];
}

- (id<OrgOssPdfreporterEngineJRLineBox>)getLineBox {
  return lineBox_;
}

- (void)setBoxWithOrgOssPdfreporterEngineJRLineBox:(id<OrgOssPdfreporterEngineJRLineBox>)box {
  self->lineBox_ = box;
  OrgOssPdfreporterEngineFillJRFillCellContents_initTemplatesMap(self);
}

- (jint)getHeight {
  return height_;
}

- (jint)getWidth {
  return width_;
}

- (void)setHeightWithInt:(jint)height {
  self->height_ = height;
}

- (void)setWidthWithInt:(jint)width {
  self->width_ = width;
}

- (OrgOssPdfreporterEngineFillJRFillCellContents *)getBoxContentsWithBoolean:(jboolean)left
                                                                 withBoolean:(jboolean)right
                                                                 withBoolean:(jboolean)top {
  if (lineBox_ == nil) {
    return self;
  }
  jboolean copyLeft = left && [((JavaLangFloat *) nil_chk([((id<OrgOssPdfreporterEngineBaseJRBoxPen>) nil_chk([lineBox_ getLeftPen])) getLineWidth])) floatValue] <= 0.0f && [((JavaLangFloat *) nil_chk([((id<OrgOssPdfreporterEngineBaseJRBoxPen>) nil_chk([((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk(lineBox_)) getRightPen])) getLineWidth])) floatValue] > 0.0f;
  jboolean copyRight = right && [((JavaLangFloat *) nil_chk([((id<OrgOssPdfreporterEngineBaseJRBoxPen>) nil_chk([((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk(lineBox_)) getRightPen])) getLineWidth])) floatValue] <= 0.0f && [((JavaLangFloat *) nil_chk([((id<OrgOssPdfreporterEngineBaseJRBoxPen>) nil_chk([((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk(lineBox_)) getLeftPen])) getLineWidth])) floatValue] > 0.0f;
  jboolean copyTop = top && [((JavaLangFloat *) nil_chk([((id<OrgOssPdfreporterEngineBaseJRBoxPen>) nil_chk([((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk(lineBox_)) getTopPen])) getLineWidth])) floatValue] <= 0.0f && [((JavaLangFloat *) nil_chk([((id<OrgOssPdfreporterEngineBaseJRBoxPen>) nil_chk([((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk(lineBox_)) getBottomPen])) getLineWidth])) floatValue] > 0.0f;
  if (!(copyLeft || copyRight || copyTop)) {
    return self;
  }
  id key = new_OrgOssPdfreporterEngineFillJRFillCellContents_BoxContents_initWithBoolean_withBoolean_withBoolean_(copyLeft, copyRight, copyTop);
  OrgOssPdfreporterEngineFillJRFillCellContents *boxContents = [((id<JavaUtilMap>) nil_chk(boxContentsCache_)) getWithId:key];
  if (boxContents == nil) {
    boxContents = (OrgOssPdfreporterEngineFillJRFillCellContents *) cast_chk([self createClone], [OrgOssPdfreporterEngineFillJRFillCellContents class]);
    id<OrgOssPdfreporterEngineJRLineBox> newBox = [((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk(lineBox_)) cloneWithOrgOssPdfreporterEngineJRBoxContainer:self];
    if (copyLeft) {
      [((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk(newBox)) copyLeftPenWithOrgOssPdfreporterEngineBaseJRBoxPen:[((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk(lineBox_)) getRightPen]];
    }
    if (copyRight) {
      [((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk(newBox)) copyRightPenWithOrgOssPdfreporterEngineBaseJRBoxPen:[((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk(lineBox_)) getLeftPen]];
    }
    if (copyTop) {
      [((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk(newBox)) copyTopPenWithOrgOssPdfreporterEngineBaseJRBoxPen:[((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk(lineBox_)) getBottomPen]];
    }
    [((OrgOssPdfreporterEngineFillJRFillCellContents *) nil_chk(boxContents)) setBoxWithOrgOssPdfreporterEngineJRLineBox:newBox];
    (void) [boxContentsCache_ putWithId:(OrgOssPdfreporterEngineFillJRFillCellContents_BoxContents *) cast_chk(key, [OrgOssPdfreporterEngineFillJRFillCellContents_BoxContents class]) withId:boxContents];
  }
  return boxContents;
}

- (OrgOssPdfreporterEngineFillJRFillCellContents *)getTransformedContentsWithInt:(jint)newWidth
                                                                         withInt:(jint)newHeight
                    withOrgOssPdfreporterCrosstabsTypeCrosstabColumnPositionEnum:(OrgOssPdfreporterCrosstabsTypeCrosstabColumnPositionEnum *)xPosition
                       withOrgOssPdfreporterCrosstabsTypeCrosstabRowPositionEnum:(OrgOssPdfreporterCrosstabsTypeCrosstabRowPositionEnum *)yPosition {
  if (([self getHeight] == newHeight) && ([self getWidth] == newWidth)) {
    return self;
  }
  if (newHeight < [self getHeight] || newWidth < [self getWidth]) {
    @throw new_OrgOssPdfreporterEngineJRException_initWithNSString_(@"Cannot shrink cell contents.");
  }
  id key = new_OrgOssPdfreporterEngineFillJRFillCellContents_StretchedContents_initWithInt_withInt_withOrgOssPdfreporterCrosstabsTypeCrosstabColumnPositionEnum_withOrgOssPdfreporterCrosstabsTypeCrosstabRowPositionEnum_(newWidth, newHeight, xPosition, yPosition);
  OrgOssPdfreporterEngineFillJRFillCellContents *transformedCell = [((id<JavaUtilMap>) nil_chk(transformedContentsCache_)) getWithId:key];
  if (transformedCell == nil) {
    transformedCell = (OrgOssPdfreporterEngineFillJRFillCellContents *) cast_chk([self createClone], [OrgOssPdfreporterEngineFillJRFillCellContents class]);
    OrgOssPdfreporterEngineFillJRFillCellContents_transformWithInt_withInt_withOrgOssPdfreporterCrosstabsTypeCrosstabColumnPositionEnum_withOrgOssPdfreporterCrosstabsTypeCrosstabRowPositionEnum_(nil_chk(transformedCell), newWidth, newHeight, xPosition, yPosition);
    (void) [transformedContentsCache_ putWithId:(OrgOssPdfreporterEngineFillJRFillCellContents_StretchedContents *) cast_chk(key, [OrgOssPdfreporterEngineFillJRFillCellContents_StretchedContents class]) withId:transformedCell];
  }
  return transformedCell;
}

- (void)transformWithInt:(jint)newWidth
                 withInt:(jint)newHeight
withOrgOssPdfreporterCrosstabsTypeCrosstabColumnPositionEnum:(OrgOssPdfreporterCrosstabsTypeCrosstabColumnPositionEnum *)xPosition
withOrgOssPdfreporterCrosstabsTypeCrosstabRowPositionEnum:(OrgOssPdfreporterCrosstabsTypeCrosstabRowPositionEnum *)yPosition {
  OrgOssPdfreporterEngineFillJRFillCellContents_transformWithInt_withInt_withOrgOssPdfreporterCrosstabsTypeCrosstabColumnPositionEnum_withOrgOssPdfreporterCrosstabsTypeCrosstabRowPositionEnum_(self, newWidth, newHeight, xPosition, yPosition);
}

- (void)transformElementsWithInt:(jint)newWidth
                         withInt:(jint)newHeight
withOrgOssPdfreporterCrosstabsTypeCrosstabColumnPositionEnum:(OrgOssPdfreporterCrosstabsTypeCrosstabColumnPositionEnum *)xPosition
withOrgOssPdfreporterCrosstabsTypeCrosstabRowPositionEnum:(OrgOssPdfreporterCrosstabsTypeCrosstabRowPositionEnum *)yPosition {
  OrgOssPdfreporterEngineFillJRFillCellContents_transformElementsWithInt_withInt_withOrgOssPdfreporterCrosstabsTypeCrosstabColumnPositionEnum_withOrgOssPdfreporterCrosstabsTypeCrosstabRowPositionEnum_(self, newWidth, newHeight, xPosition, yPosition);
}

+ (void)transformElementsWithOrgOssPdfreporterEngineJRElementArray:(IOSObjectArray *)elements
                                                        withDouble:(jdouble)scaleX
                                                           withInt:(jint)offsetX
                                                        withDouble:(jdouble)scaleY
                                                           withInt:(jint)offsetY {
  OrgOssPdfreporterEngineFillJRFillCellContents_transformElementsWithOrgOssPdfreporterEngineJRElementArray_withDouble_withInt_withDouble_withInt_(elements, scaleX, offsetX, scaleY, offsetY);
}

- (void)prepareWithInt:(jint)availableHeight {
  [self initFill];
  [self resetElements];
  [self prepareElementsWithInt:availableHeight withBoolean:true];
  prepareStretchHeight_ = [self getStretchHeight];
}

- (id<OrgOssPdfreporterEngineJRPrintFrame>)fill {
  [self stretchElements];
  [self moveBandBottomElements];
  [self removeBlankElements];
  OrgOssPdfreporterEngineFillJRTemplatePrintFrame *printCell = new_OrgOssPdfreporterEngineFillJRTemplatePrintFrame_initWithOrgOssPdfreporterEngineFillJRTemplateFrame_withInt_([self getTemplateFrame], elementId_);
  [printCell setXWithInt:x_];
  [printCell setYWithInt:y_];
  [printCell setWidthWithInt:width_];
  [self fillElementsWithOrgOssPdfreporterEngineJRPrintElementContainer:printCell];
  [self verticallyPositionElementsWithOrgOssPdfreporterEngineFillJRTemplatePrintFrame:printCell];
  [printCell setHeightWithInt:[self getPrintHeight]];
  [self setCellPropertiesWithOrgOssPdfreporterEngineFillJRTemplatePrintFrame:printCell];
  return printCell;
}

- (void)setCellPropertiesWithOrgOssPdfreporterEngineFillJRTemplatePrintFrame:(OrgOssPdfreporterEngineFillJRTemplatePrintFrame *)printCell {
  if (verticalSpan_ > 1) {
    [((OrgOssPdfreporterEngineJRPropertiesMap *) nil_chk([((OrgOssPdfreporterEngineFillJRTemplatePrintFrame *) nil_chk(printCell)) getPropertiesMap])) setPropertyWithNSString:OrgOssPdfreporterCrosstabsJRCellContents_PROPERTY_ROW_SPAN withNSString:JavaLangInteger_toStringWithInt_(verticalSpan_)];
  }
  if (horizontalSpan_ > 1) {
    [((OrgOssPdfreporterEngineJRPropertiesMap *) nil_chk([((OrgOssPdfreporterEngineFillJRTemplatePrintFrame *) nil_chk(printCell)) getPropertiesMap])) setPropertyWithNSString:OrgOssPdfreporterCrosstabsJRCellContents_PROPERTY_COLUMN_SPAN withNSString:JavaLangInteger_toStringWithInt_(horizontalSpan_)];
  }
}

- (OrgOssPdfreporterEngineFillJRTemplateFrame *)getTemplateFrame {
  id<OrgOssPdfreporterEngineJRStyle> style = [self getStyle];
  OrgOssPdfreporterEngineFillJRTemplateFrame *template_ = [((id<JavaUtilMap>) nil_chk(templateFrames_)) getWithId:style];
  if (template_ == nil) {
    template_ = new_OrgOssPdfreporterEngineFillJRTemplateFrame_initWithOrgOssPdfreporterEngineJROrigin_withOrgOssPdfreporterEngineJRDefaultStyleProvider_withOrgOssPdfreporterEngineFillJRFillCellContents_([self getOrigin], [((OrgOssPdfreporterEngineJasperPrint *) nil_chk([((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler_)) getJasperPrint])) getDefaultStyleProvider], self);
    [((OrgOssPdfreporterEngineJRPropertiesMap *) nil_chk([template_ getPropertiesMap])) setPropertyWithNSString:OrgOssPdfreporterCrosstabsJRCellContents_PROPERTY_TYPE withNSString:cellType_];
    template_ = [((OrgOssPdfreporterEngineFillJRFillContext *) nil_chk(((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler_))->fillContext_)) deduplicateWithOrgOssPdfreporterEngineDeduplicable:template_];
    (void) [((id<JavaUtilMap>) nil_chk(templateFrames_)) putWithId:style withId:template_];
  }
  return template_;
}

- (OrgOssPdfreporterEngineJROrigin *)getOrigin {
  return originProvider_ == nil ? nil : [originProvider_ getOrigin];
}

- (void)verticallyPositionElementsWithOrgOssPdfreporterEngineFillJRTemplatePrintFrame:(OrgOssPdfreporterEngineFillJRTemplatePrintFrame *)printCell {
  jint positionOffset;
  switch ([verticalPositionType_ ordinal]) {
    case OrgOssPdfreporterCrosstabsTypeCrosstabRowPositionEnum_Enum_MIDDLE:
    positionOffset = ([self getStretchHeight] - prepareStretchHeight_) / 2;
    break;
    case OrgOssPdfreporterCrosstabsTypeCrosstabRowPositionEnum_Enum_BOTTOM:
    positionOffset = [self getStretchHeight] - prepareStretchHeight_;
    break;
    default:
    positionOffset = 0;
    break;
  }
  if (positionOffset != 0) {
    id<JavaUtilList> printElements = [((OrgOssPdfreporterEngineFillJRTemplatePrintFrame *) nil_chk(printCell)) getElements];
    jint positionY = [self getStretchHeight] - positionOffset;
    jboolean outside = false;
    for (id<JavaUtilIterator> it = [((id<JavaUtilList>) nil_chk(printElements)) iterator]; !outside && [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
      id<OrgOssPdfreporterEngineJRPrintElement> element = [((id<JavaUtilIterator>) nil_chk(it)) next];
      outside = ([((id<OrgOssPdfreporterEngineJRPrintElement>) nil_chk(element)) getY] + [element getHeight] > positionY);
    }
    if (!outside) {
      for (id<JavaUtilIterator> it = [printElements iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
        id<OrgOssPdfreporterEngineJRPrintElement> element = [it next];
        [((id<OrgOssPdfreporterEngineJRPrintElement>) nil_chk(element)) setYWithInt:[element getY] + positionOffset];
      }
    }
  }
}

- (jint)getPrintHeight {
  return [self getStretchHeight] + [self getTopPadding] + [self getBottomPadding];
}

- (void)stretchToWithInt:(jint)stretchHeight {
  [self setStretchHeightWithInt:stretchHeight - [self getTopPadding] - [self getBottomPadding]];
}

- (jint)getContainerHeight {
  return [self getHeight] - [self getTopPadding] - [self getBottomPadding];
}

- (jint)getTopPadding {
  return lineBox_ == nil ? 0 : [((JavaLangInteger *) nil_chk([lineBox_ getTopPadding])) intValue];
}

- (jint)getBottomPadding {
  return lineBox_ == nil ? 0 : [((JavaLangInteger *) nil_chk([lineBox_ getBottomPadding])) intValue];
}

- (id<OrgOssPdfreporterEngineFillJRFillCloneable>)createClone {
  OrgOssPdfreporterEngineFillJRFillCloneFactory *factory = new_OrgOssPdfreporterEngineFillJRFillCloneFactory_init();
  return [self createCloneWithOrgOssPdfreporterEngineFillJRFillCloneFactory:factory];
}

- (id<OrgOssPdfreporterEngineFillJRFillCloneable>)createCloneWithOrgOssPdfreporterEngineFillJRFillCloneFactory:(OrgOssPdfreporterEngineFillJRFillCloneFactory *)factory {
  return new_OrgOssPdfreporterEngineFillJRFillCellContents_initWithOrgOssPdfreporterEngineFillJRFillCellContents_withOrgOssPdfreporterEngineFillJRFillCloneFactory_(self, factory);
}

- (OrgOssPdfreporterEngineFillJRFillCellContents *)getWorkingClone {
  OrgOssPdfreporterEngineFillJRFillCellContents *clone = (OrgOssPdfreporterEngineFillJRFillCellContents *) cast_chk([((OrgOssPdfreporterEngineFillJRClonePool *) nil_chk(clonePool_)) getClone], [OrgOssPdfreporterEngineFillJRFillCellContents class]);
  ((OrgOssPdfreporterEngineFillJRFillCellContents *) nil_chk(clone))->original_ = self;
  return clone;
}

- (void)releaseWorkingClone {
  [((OrgOssPdfreporterEngineFillJRClonePool *) nil_chk(((OrgOssPdfreporterEngineFillJRFillCellContents *) nil_chk(original_))->clonePool_)) releaseCloneWithId:self];
}

- (void)setXWithInt:(jint)x {
  self->x_ = x;
}

- (void)setYWithInt:(jint)y {
  self->y_ = y;
}

- (jint)getVerticalSpan {
  return verticalSpan_;
}

- (void)setVerticalSpanWithInt:(jint)span {
  verticalSpan_ = span;
}

- (void)setVerticalPositionTypeWithOrgOssPdfreporterCrosstabsTypeCrosstabRowPositionEnum:(OrgOssPdfreporterCrosstabsTypeCrosstabRowPositionEnum *)positionType {
  self->verticalPositionType_ = positionType;
}

- (jint)getHorizontalSpan {
  return horizontalSpan_;
}

- (void)setHorizontalSpanWithInt:(jint)horizontalSpan {
  self->horizontalSpan_ = horizontalSpan;
}

- (void)evaluateWithByte:(jbyte)evaluation {
  [self evaluateConditionalStylesWithByte:evaluation];
  [super evaluateWithByte:evaluation];
}

- (id<OrgOssPdfreporterEngineJRDefaultStyleProvider>)getDefaultStyleProvider {
  return defaultStyleProvider_;
}

- (id<OrgOssPdfreporterEngineJRStyle>)getStyle {
  id<OrgOssPdfreporterEngineJRStyle> crtStyle = initStyle_;
  jboolean isUsingDefaultStyle = false;
  if (crtStyle == nil) {
    crtStyle = [((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler_)) getDefaultStyle];
    isUsingDefaultStyle = true;
  }
  id<OrgOssPdfreporterEngineJRStyle> evalStyle = [self getEvaluatedConditionalStyleWithOrgOssPdfreporterEngineJRStyle:crtStyle];
  if (isUsingDefaultStyle && evalStyle == crtStyle) {
    evalStyle = nil;
  }
  return evalStyle;
}

- (void)initConditionalStyles {
  [super initConditionalStyles];
  [self collectConditionalStyleWithOrgOssPdfreporterEngineJRStyle:initStyle_];
}

- (OrgOssPdfreporterEngineTypeModeEnum *)getModeValue {
  return [((id<OrgOssPdfreporterCrosstabsJRCellContents>) nil_chk(parentCell_)) getModeValue];
}

- (NSString *)getStyleNameReference {
  return nil;
}

- (void)setStyleWithOrgOssPdfreporterEngineJRStyle:(id<OrgOssPdfreporterEngineJRStyle>)style {
  self->initStyle_ = style;
  [self collectConditionalStyleWithOrgOssPdfreporterEngineJRStyle:style];
}

- (void)setStyleNameReferenceWithNSString:(NSString *)name {
  @throw new_JavaLangUnsupportedOperationException_initWithNSString_(@"Style name references not allowed at fill time");
}

- (id<OrgOssPdfreporterGeometryIColor>)getDefaultLineColor {
  return [((id<OrgOssPdfreporterCrosstabsJRCellContents>) nil_chk(parentCell_)) getDefaultLineColor];
}

- (jboolean)hasProperties {
  return [((id<OrgOssPdfreporterCrosstabsJRCellContents>) nil_chk(parentCell_)) hasProperties];
}

- (OrgOssPdfreporterEngineJRPropertiesMap *)getPropertiesMap {
  return [((id<OrgOssPdfreporterCrosstabsJRCellContents>) nil_chk(parentCell_)) getPropertiesMap];
}

- (id<OrgOssPdfreporterEngineJRPropertiesHolder>)getParentProperties {
  return nil;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgOssPdfreporterEngineFillJRBaseFiller:withOrgOssPdfreporterCrosstabsJRCellContents:withNSString:withOrgOssPdfreporterCrosstabsFillJRFillCrosstabObjectFactory:", "JRFillCellContents", NULL, 0x1, NULL, NULL },
    { "initTemplatesMap", NULL, "V", 0x2, NULL, NULL },
    { "initWithOrgOssPdfreporterEngineFillJRFillCellContents:withOrgOssPdfreporterEngineFillJRFillCloneFactory:", "JRFillCellContents", NULL, 0x4, NULL, NULL },
    { "getBackcolor", NULL, "Lorg.oss.pdfreporter.geometry.IColor;", 0x1, NULL, NULL },
    { "getLineBox", NULL, "Lorg.oss.pdfreporter.engine.JRLineBox;", 0x1, NULL, NULL },
    { "setBoxWithOrgOssPdfreporterEngineJRLineBox:", "setBox", "V", 0x4, NULL, NULL },
    { "getHeight", NULL, "I", 0x1, NULL, NULL },
    { "getWidth", NULL, "I", 0x1, NULL, NULL },
    { "setHeightWithInt:", "setHeight", "V", 0x4, NULL, NULL },
    { "setWidthWithInt:", "setWidth", "V", 0x4, NULL, NULL },
    { "getBoxContentsWithBoolean:withBoolean:withBoolean:", "getBoxContents", "Lorg.oss.pdfreporter.engine.fill.JRFillCellContents;", 0x1, NULL, NULL },
    { "getTransformedContentsWithInt:withInt:withOrgOssPdfreporterCrosstabsTypeCrosstabColumnPositionEnum:withOrgOssPdfreporterCrosstabsTypeCrosstabRowPositionEnum:", "getTransformedContents", "Lorg.oss.pdfreporter.engine.fill.JRFillCellContents;", 0x1, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "transformWithInt:withInt:withOrgOssPdfreporterCrosstabsTypeCrosstabColumnPositionEnum:withOrgOssPdfreporterCrosstabsTypeCrosstabRowPositionEnum:", "transform", "V", 0x2, NULL, NULL },
    { "transformElementsWithInt:withInt:withOrgOssPdfreporterCrosstabsTypeCrosstabColumnPositionEnum:withOrgOssPdfreporterCrosstabsTypeCrosstabRowPositionEnum:", "transformElements", "V", 0x2, NULL, NULL },
    { "transformElementsWithOrgOssPdfreporterEngineJRElementArray:withDouble:withInt:withDouble:withInt:", "transformElements", "V", 0xa, NULL, NULL },
    { "prepareWithInt:", "prepare", "V", 0x4, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "fill", NULL, "Lorg.oss.pdfreporter.engine.JRPrintFrame;", 0x4, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "setCellPropertiesWithOrgOssPdfreporterEngineFillJRTemplatePrintFrame:", "setCellProperties", "V", 0x4, NULL, NULL },
    { "getTemplateFrame", NULL, "Lorg.oss.pdfreporter.engine.fill.JRTemplateFrame;", 0x4, NULL, NULL },
    { "getOrigin", NULL, "Lorg.oss.pdfreporter.engine.JROrigin;", 0x4, NULL, NULL },
    { "verticallyPositionElementsWithOrgOssPdfreporterEngineFillJRTemplatePrintFrame:", "verticallyPositionElements", "V", 0x4, NULL, NULL },
    { "getPrintHeight", NULL, "I", 0x4, NULL, NULL },
    { "stretchToWithInt:", "stretchTo", "V", 0x4, NULL, NULL },
    { "getContainerHeight", NULL, "I", 0x4, NULL, NULL },
    { "getTopPadding", NULL, "I", 0x4, NULL, NULL },
    { "getBottomPadding", NULL, "I", 0x4, NULL, NULL },
    { "createClone", NULL, "Lorg.oss.pdfreporter.engine.fill.JRFillCloneable;", 0x1, NULL, NULL },
    { "createCloneWithOrgOssPdfreporterEngineFillJRFillCloneFactory:", "createClone", "Lorg.oss.pdfreporter.engine.fill.JRFillCloneable;", 0x1, NULL, NULL },
    { "getWorkingClone", NULL, "Lorg.oss.pdfreporter.engine.fill.JRFillCellContents;", 0x1, NULL, NULL },
    { "releaseWorkingClone", NULL, "V", 0x1, NULL, NULL },
    { "setXWithInt:", "setX", "V", 0x1, NULL, NULL },
    { "setYWithInt:", "setY", "V", 0x1, NULL, NULL },
    { "getVerticalSpan", NULL, "I", 0x1, NULL, NULL },
    { "setVerticalSpanWithInt:", "setVerticalSpan", "V", 0x1, NULL, NULL },
    { "setVerticalPositionTypeWithOrgOssPdfreporterCrosstabsTypeCrosstabRowPositionEnum:", "setVerticalPositionType", "V", 0x1, NULL, NULL },
    { "getHorizontalSpan", NULL, "I", 0x1, NULL, NULL },
    { "setHorizontalSpanWithInt:", "setHorizontalSpan", "V", 0x1, NULL, NULL },
    { "evaluateWithByte:", "evaluate", "V", 0x4, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "getDefaultStyleProvider", NULL, "Lorg.oss.pdfreporter.engine.JRDefaultStyleProvider;", 0x1, NULL, NULL },
    { "getStyle", NULL, "Lorg.oss.pdfreporter.engine.JRStyle;", 0x1, NULL, NULL },
    { "initConditionalStyles", NULL, "V", 0x4, NULL, NULL },
    { "getModeValue", NULL, "Lorg.oss.pdfreporter.engine.type.ModeEnum;", 0x1, NULL, NULL },
    { "getStyleNameReference", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "setStyleWithOrgOssPdfreporterEngineJRStyle:", "setStyle", "V", 0x1, NULL, NULL },
    { "setStyleNameReferenceWithNSString:", "setStyleNameReference", "V", 0x1, NULL, NULL },
    { "getDefaultLineColor", NULL, "Lorg.oss.pdfreporter.geometry.IColor;", 0x1, NULL, NULL },
    { "hasProperties", NULL, "Z", 0x1, NULL, NULL },
    { "getPropertiesMap", NULL, "Lorg.oss.pdfreporter.engine.JRPropertiesMap;", 0x1, NULL, NULL },
    { "getParentProperties", NULL, "Lorg.oss.pdfreporter.engine.JRPropertiesHolder;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "transformedContentsCache_", NULL, 0x12, "Ljava.util.Map;", NULL, "Ljava/util/Map<Lorg/oss/pdfreporter/engine/fill/JRFillCellContents$StretchedContents;Lorg/oss/pdfreporter/engine/fill/JRFillCellContents;>;", .constantValue.asLong = 0 },
    { "boxContentsCache_", NULL, 0x12, "Ljava.util.Map;", NULL, "Ljava/util/Map<Lorg/oss/pdfreporter/engine/fill/JRFillCellContents$BoxContents;Lorg/oss/pdfreporter/engine/fill/JRFillCellContents;>;", .constantValue.asLong = 0 },
    { "clonePool_", NULL, 0x12, "Lorg.oss.pdfreporter.engine.fill.JRClonePool;", NULL, NULL, .constantValue.asLong = 0 },
    { "originProvider_", NULL, 0x12, "Lorg.oss.pdfreporter.engine.fill.JROriginProvider;", NULL, NULL, .constantValue.asLong = 0 },
    { "elementId_", NULL, 0x12, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "original_", NULL, 0x2, "Lorg.oss.pdfreporter.engine.fill.JRFillCellContents;", NULL, NULL, .constantValue.asLong = 0 },
    { "parentCell_", NULL, 0x12, "Lorg.oss.pdfreporter.crosstabs.JRCellContents;", NULL, NULL, .constantValue.asLong = 0 },
    { "cellType_", NULL, 0x12, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "lineBox_", NULL, 0x2, "Lorg.oss.pdfreporter.engine.JRLineBox;", NULL, NULL, .constantValue.asLong = 0 },
    { "height_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "width_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "x_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "y_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "verticalSpan_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "verticalPositionType_", NULL, 0x2, "Lorg.oss.pdfreporter.crosstabs.type.CrosstabRowPositionEnum;", NULL, NULL, .constantValue.asLong = 0 },
    { "horizontalSpan_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "templateFrames_", NULL, 0x2, "Ljava.util.Map;", NULL, "Ljava/util/Map<Lorg/oss/pdfreporter/engine/JRStyle;Lorg/oss/pdfreporter/engine/fill/JRTemplateFrame;>;", .constantValue.asLong = 0 },
    { "defaultStyleProvider_", NULL, 0x2, "Lorg.oss.pdfreporter.engine.JRDefaultStyleProvider;", NULL, NULL, .constantValue.asLong = 0 },
    { "initStyle_", NULL, 0x2, "Lorg.oss.pdfreporter.engine.JRStyle;", NULL, NULL, .constantValue.asLong = 0 },
    { "prepareStretchHeight_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lorg.oss.pdfreporter.engine.fill.JRFillCellContents$BoxContents;", "Lorg.oss.pdfreporter.engine.fill.JRFillCellContents$StretchedContents;"};
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineFillJRFillCellContents = { 2, "JRFillCellContents", "org.oss.pdfreporter.engine.fill", NULL, 0x1, 49, methods, 20, fields, 0, NULL, 2, inner_classes, NULL, NULL };
  return &_OrgOssPdfreporterEngineFillJRFillCellContents;
}

@end

void OrgOssPdfreporterEngineFillJRFillCellContents_initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterCrosstabsJRCellContents_withNSString_withOrgOssPdfreporterCrosstabsFillJRFillCrosstabObjectFactory_(OrgOssPdfreporterEngineFillJRFillCellContents *self, OrgOssPdfreporterEngineFillJRBaseFiller *filler, id<OrgOssPdfreporterCrosstabsJRCellContents> cell, NSString *cellType, OrgOssPdfreporterCrosstabsFillJRFillCrosstabObjectFactory *factory) {
  OrgOssPdfreporterEngineFillJRFillElementContainer_initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineJRElementGroup_withOrgOssPdfreporterEngineFillJRFillObjectFactory_(self, filler, cell, factory);
  self->verticalPositionType_ = JreLoadEnum(OrgOssPdfreporterCrosstabsTypeCrosstabRowPositionEnum, TOP);
  self->defaultStyleProvider_ = [((OrgOssPdfreporterCrosstabsFillJRFillCrosstabObjectFactory *) nil_chk(factory)) getDefaultStyleProvider];
  self->parentCell_ = cell;
  self->cellType_ = cellType;
  self->elementId_ = [((OrgOssPdfreporterEngineFillJRFillContext *) nil_chk([((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler)) getFillContext])) generateFillElementId];
  self->lineBox_ = [((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk([((id<OrgOssPdfreporterCrosstabsJRCellContents>) nil_chk(cell)) getLineBox])) cloneWithOrgOssPdfreporterEngineJRBoxContainer:self];
  self->width_ = [cell getWidth];
  self->height_ = [cell getHeight];
  [factory registerDelayedStyleSetterWithOrgOssPdfreporterEngineJRStyleSetter:self withOrgOssPdfreporterEngineJRStyleContainer:self->parentCell_];
  [self initElements];
  [self initConditionalStyles];
  OrgOssPdfreporterEngineFillJRFillCellContents_initTemplatesMap(self);
  self->originProvider_ = [factory getParentOriginProvider];
  [self setElementOriginProviderWithOrgOssPdfreporterEngineFillJROriginProvider:self->originProvider_];
  self->transformedContentsCache_ = new_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_init();
  self->boxContentsCache_ = new_JavaUtilHashMap_init();
  self->clonePool_ = new_OrgOssPdfreporterEngineFillJRClonePool_initWithOrgOssPdfreporterEngineFillJRFillCloneable_withBoolean_withBoolean_(self, true, true);
}

OrgOssPdfreporterEngineFillJRFillCellContents *new_OrgOssPdfreporterEngineFillJRFillCellContents_initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterCrosstabsJRCellContents_withNSString_withOrgOssPdfreporterCrosstabsFillJRFillCrosstabObjectFactory_(OrgOssPdfreporterEngineFillJRBaseFiller *filler, id<OrgOssPdfreporterCrosstabsJRCellContents> cell, NSString *cellType, OrgOssPdfreporterCrosstabsFillJRFillCrosstabObjectFactory *factory) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineFillJRFillCellContents, initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterCrosstabsJRCellContents_withNSString_withOrgOssPdfreporterCrosstabsFillJRFillCrosstabObjectFactory_, filler, cell, cellType, factory)
}

OrgOssPdfreporterEngineFillJRFillCellContents *create_OrgOssPdfreporterEngineFillJRFillCellContents_initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterCrosstabsJRCellContents_withNSString_withOrgOssPdfreporterCrosstabsFillJRFillCrosstabObjectFactory_(OrgOssPdfreporterEngineFillJRBaseFiller *filler, id<OrgOssPdfreporterCrosstabsJRCellContents> cell, NSString *cellType, OrgOssPdfreporterCrosstabsFillJRFillCrosstabObjectFactory *factory) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineFillJRFillCellContents, initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterCrosstabsJRCellContents_withNSString_withOrgOssPdfreporterCrosstabsFillJRFillCrosstabObjectFactory_, filler, cell, cellType, factory)
}

void OrgOssPdfreporterEngineFillJRFillCellContents_initTemplatesMap(OrgOssPdfreporterEngineFillJRFillCellContents *self) {
  self->templateFrames_ = new_JavaUtilHashMap_init();
}

void OrgOssPdfreporterEngineFillJRFillCellContents_initWithOrgOssPdfreporterEngineFillJRFillCellContents_withOrgOssPdfreporterEngineFillJRFillCloneFactory_(OrgOssPdfreporterEngineFillJRFillCellContents *self, OrgOssPdfreporterEngineFillJRFillCellContents *cellContents, OrgOssPdfreporterEngineFillJRFillCloneFactory *factory) {
  OrgOssPdfreporterEngineFillJRFillElementContainer_initWithOrgOssPdfreporterEngineFillJRFillElementContainer_withOrgOssPdfreporterEngineFillJRFillCloneFactory_(self, cellContents, factory);
  self->verticalPositionType_ = JreLoadEnum(OrgOssPdfreporterCrosstabsTypeCrosstabRowPositionEnum, TOP);
  self->defaultStyleProvider_ = ((OrgOssPdfreporterEngineFillJRFillCellContents *) nil_chk(cellContents))->defaultStyleProvider_;
  self->parentCell_ = cellContents->parentCell_;
  self->cellType_ = cellContents->cellType_;
  self->elementId_ = cellContents->elementId_;
  self->lineBox_ = [((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk([cellContents getLineBox])) cloneWithOrgOssPdfreporterEngineJRBoxContainer:self];
  self->width_ = cellContents->width_;
  self->height_ = cellContents->height_;
  self->initStyle_ = cellContents->initStyle_;
  [self initElements];
  [self initConditionalStyles];
  self->templateFrames_ = cellContents->templateFrames_;
  self->originProvider_ = cellContents->originProvider_;
  self->transformedContentsCache_ = new_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_init();
  self->boxContentsCache_ = new_JavaUtilHashMap_init();
  self->clonePool_ = new_OrgOssPdfreporterEngineFillJRClonePool_initWithOrgOssPdfreporterEngineFillJRFillCloneable_withBoolean_withBoolean_(self, true, true);
  self->verticalPositionType_ = cellContents->verticalPositionType_;
}

OrgOssPdfreporterEngineFillJRFillCellContents *new_OrgOssPdfreporterEngineFillJRFillCellContents_initWithOrgOssPdfreporterEngineFillJRFillCellContents_withOrgOssPdfreporterEngineFillJRFillCloneFactory_(OrgOssPdfreporterEngineFillJRFillCellContents *cellContents, OrgOssPdfreporterEngineFillJRFillCloneFactory *factory) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineFillJRFillCellContents, initWithOrgOssPdfreporterEngineFillJRFillCellContents_withOrgOssPdfreporterEngineFillJRFillCloneFactory_, cellContents, factory)
}

OrgOssPdfreporterEngineFillJRFillCellContents *create_OrgOssPdfreporterEngineFillJRFillCellContents_initWithOrgOssPdfreporterEngineFillJRFillCellContents_withOrgOssPdfreporterEngineFillJRFillCloneFactory_(OrgOssPdfreporterEngineFillJRFillCellContents *cellContents, OrgOssPdfreporterEngineFillJRFillCloneFactory *factory) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineFillJRFillCellContents, initWithOrgOssPdfreporterEngineFillJRFillCellContents_withOrgOssPdfreporterEngineFillJRFillCloneFactory_, cellContents, factory)
}

void OrgOssPdfreporterEngineFillJRFillCellContents_transformWithInt_withInt_withOrgOssPdfreporterCrosstabsTypeCrosstabColumnPositionEnum_withOrgOssPdfreporterCrosstabsTypeCrosstabRowPositionEnum_(OrgOssPdfreporterEngineFillJRFillCellContents *self, jint newWidth, jint newHeight, OrgOssPdfreporterCrosstabsTypeCrosstabColumnPositionEnum *xPosition, OrgOssPdfreporterCrosstabsTypeCrosstabRowPositionEnum *yPosition) {
  OrgOssPdfreporterEngineFillJRFillCellContents_transformElementsWithInt_withInt_withOrgOssPdfreporterCrosstabsTypeCrosstabColumnPositionEnum_withOrgOssPdfreporterCrosstabsTypeCrosstabRowPositionEnum_(self, newWidth, newHeight, xPosition, yPosition);
  self->width_ = newWidth;
  self->height_ = newHeight;
}

void OrgOssPdfreporterEngineFillJRFillCellContents_transformElementsWithInt_withInt_withOrgOssPdfreporterCrosstabsTypeCrosstabColumnPositionEnum_withOrgOssPdfreporterCrosstabsTypeCrosstabRowPositionEnum_(OrgOssPdfreporterEngineFillJRFillCellContents *self, jint newWidth, jint newHeight, OrgOssPdfreporterCrosstabsTypeCrosstabColumnPositionEnum *xPosition, OrgOssPdfreporterCrosstabsTypeCrosstabRowPositionEnum *yPosition) {
  if ((self->height_ == newHeight || yPosition == JreLoadEnum(OrgOssPdfreporterCrosstabsTypeCrosstabRowPositionEnum, TOP)) && (self->width_ == newWidth || xPosition == JreLoadEnum(OrgOssPdfreporterCrosstabsTypeCrosstabColumnPositionEnum, LEFT))) {
    return;
  }
  jdouble scaleX = -1.0;
  jint offsetX = 0;
  switch ([xPosition ordinal]) {
    case OrgOssPdfreporterCrosstabsTypeCrosstabColumnPositionEnum_Enum_CENTER:
    offsetX = (newWidth - self->width_) / 2;
    break;
    case OrgOssPdfreporterCrosstabsTypeCrosstabColumnPositionEnum_Enum_RIGHT:
    offsetX = newWidth - self->width_;
    break;
    case OrgOssPdfreporterCrosstabsTypeCrosstabColumnPositionEnum_Enum_STRETCH:
    scaleX = ((jdouble) newWidth) / self->width_;
    break;
  }
  jdouble scaleY = -1.0;
  jint offsetY = 0;
  switch ([yPosition ordinal]) {
    case OrgOssPdfreporterCrosstabsTypeCrosstabRowPositionEnum_Enum_MIDDLE:
    offsetY = (newHeight - self->height_) / 2;
    break;
    case OrgOssPdfreporterCrosstabsTypeCrosstabRowPositionEnum_Enum_BOTTOM:
    offsetY = newHeight - self->height_;
    break;
    case OrgOssPdfreporterCrosstabsTypeCrosstabRowPositionEnum_Enum_STRETCH:
    scaleY = ((jdouble) newHeight) / self->height_;
    break;
  }
  OrgOssPdfreporterEngineFillJRFillCellContents_transformElementsWithOrgOssPdfreporterEngineJRElementArray_withDouble_withInt_withDouble_withInt_([self getElements], scaleX, offsetX, scaleY, offsetY);
}

void OrgOssPdfreporterEngineFillJRFillCellContents_transformElementsWithOrgOssPdfreporterEngineJRElementArray_withDouble_withInt_withDouble_withInt_(IOSObjectArray *elements, jdouble scaleX, jint offsetX, jdouble scaleY, jint offsetY) {
  OrgOssPdfreporterEngineFillJRFillCellContents_initialize();
  if (elements != nil) {
    for (jint i = 0; i < elements->size_; i++) {
      OrgOssPdfreporterEngineFillJRFillElement *element = (OrgOssPdfreporterEngineFillJRFillElement *) cast_chk(IOSObjectArray_Get(elements, i), [OrgOssPdfreporterEngineFillJRFillElement class]);
      if (scaleX != -1.0) {
        [((OrgOssPdfreporterEngineFillJRFillElement *) nil_chk(element)) setXWithInt:JreFpToInt(([element getX] * scaleX))];
        [element setWidthWithInt:JreFpToInt(([element getWidth] * scaleX))];
      }
      if (offsetX != 0) {
        [((OrgOssPdfreporterEngineFillJRFillElement *) nil_chk(element)) setXWithInt:[element getX] + offsetX];
      }
      if (scaleY != -1.0) {
        [((OrgOssPdfreporterEngineFillJRFillElement *) nil_chk(element)) setYWithInt:JreFpToInt(([element getY] * scaleY))];
        [element setHeightWithInt:JreFpToInt(([element getHeight] * scaleY))];
      }
      if (offsetY != 0) {
        [((OrgOssPdfreporterEngineFillJRFillElement *) nil_chk(element)) setYWithInt:[element getY] + offsetY];
      }
      if ([OrgOssPdfreporterEngineJRFrame_class_() isInstance:element]) {
        IOSObjectArray *frameElements = [((id<OrgOssPdfreporterEngineJRFrame>) nil_chk(((id<OrgOssPdfreporterEngineJRFrame>) cast_check(element, OrgOssPdfreporterEngineJRFrame_class_())))) getElements];
        OrgOssPdfreporterEngineFillJRFillCellContents_transformElementsWithOrgOssPdfreporterEngineJRElementArray_withDouble_withInt_withDouble_withInt_(frameElements, scaleX, offsetX, scaleY, offsetY);
      }
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineFillJRFillCellContents)

@implementation OrgOssPdfreporterEngineFillJRFillCellContents_BoxContents

- (instancetype)initWithBoolean:(jboolean)left
                    withBoolean:(jboolean)right
                    withBoolean:(jboolean)top {
  OrgOssPdfreporterEngineFillJRFillCellContents_BoxContents_initWithBoolean_withBoolean_withBoolean_(self, left, right, top);
  return self;
}

- (jboolean)isEqual:(id)obj {
  if (obj == self) {
    return true;
  }
  OrgOssPdfreporterEngineFillJRFillCellContents_BoxContents *b = (OrgOssPdfreporterEngineFillJRFillCellContents_BoxContents *) cast_chk(obj, [OrgOssPdfreporterEngineFillJRFillCellContents_BoxContents class]);
  return ((OrgOssPdfreporterEngineFillJRFillCellContents_BoxContents *) nil_chk(b))->left_ == left_ && b->right_ == right_ && b->top_ == top_;
}

- (NSUInteger)hash {
  return hashCode_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithBoolean:withBoolean:withBoolean:", "BoxContents", NULL, 0x1, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "left_", NULL, 0x10, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "right_", NULL, 0x10, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "top_", NULL, 0x10, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "hashCode_", NULL, 0x10, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineFillJRFillCellContents_BoxContents = { 2, "BoxContents", "org.oss.pdfreporter.engine.fill", "JRFillCellContents", 0xc, 3, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineFillJRFillCellContents_BoxContents;
}

@end

void OrgOssPdfreporterEngineFillJRFillCellContents_BoxContents_initWithBoolean_withBoolean_withBoolean_(OrgOssPdfreporterEngineFillJRFillCellContents_BoxContents *self, jboolean left, jboolean right, jboolean top) {
  NSObject_init(self);
  self->left_ = left;
  self->right_ = right;
  self->top_ = top;
  jint hash_ = left ? 1231 : 1237;
  hash_ = 31 * hash_ + (right ? 1231 : 1237);
  hash_ = 31 * hash_ + (top ? 1231 : 1237);
  self->hashCode_ = hash_;
}

OrgOssPdfreporterEngineFillJRFillCellContents_BoxContents *new_OrgOssPdfreporterEngineFillJRFillCellContents_BoxContents_initWithBoolean_withBoolean_withBoolean_(jboolean left, jboolean right, jboolean top) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineFillJRFillCellContents_BoxContents, initWithBoolean_withBoolean_withBoolean_, left, right, top)
}

OrgOssPdfreporterEngineFillJRFillCellContents_BoxContents *create_OrgOssPdfreporterEngineFillJRFillCellContents_BoxContents_initWithBoolean_withBoolean_withBoolean_(jboolean left, jboolean right, jboolean top) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineFillJRFillCellContents_BoxContents, initWithBoolean_withBoolean_withBoolean_, left, right, top)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineFillJRFillCellContents_BoxContents)

@implementation OrgOssPdfreporterEngineFillJRFillCellContents_StretchedContents

- (instancetype)initWithInt:(jint)newWidth
                    withInt:(jint)newHeight
withOrgOssPdfreporterCrosstabsTypeCrosstabColumnPositionEnum:(OrgOssPdfreporterCrosstabsTypeCrosstabColumnPositionEnum *)xPosition
withOrgOssPdfreporterCrosstabsTypeCrosstabRowPositionEnum:(OrgOssPdfreporterCrosstabsTypeCrosstabRowPositionEnum *)yPosition {
  OrgOssPdfreporterEngineFillJRFillCellContents_StretchedContents_initWithInt_withInt_withOrgOssPdfreporterCrosstabsTypeCrosstabColumnPositionEnum_withOrgOssPdfreporterCrosstabsTypeCrosstabRowPositionEnum_(self, newWidth, newHeight, xPosition, yPosition);
  return self;
}

- (jboolean)isEqual:(id)o {
  if (o == self) {
    return true;
  }
  OrgOssPdfreporterEngineFillJRFillCellContents_StretchedContents *s = (OrgOssPdfreporterEngineFillJRFillCellContents_StretchedContents *) cast_chk(o, [OrgOssPdfreporterEngineFillJRFillCellContents_StretchedContents class]);
  return ((OrgOssPdfreporterEngineFillJRFillCellContents_StretchedContents *) nil_chk(s))->newHeight_ == newHeight_ && s->newWidth_ == newWidth_ && s->xPosition_ == xPosition_ && s->yPosition_ == yPosition_;
}

- (NSUInteger)hash {
  return hashCode_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithInt:withInt:withOrgOssPdfreporterCrosstabsTypeCrosstabColumnPositionEnum:withOrgOssPdfreporterCrosstabsTypeCrosstabRowPositionEnum:", "StretchedContents", NULL, 0x0, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "newHeight_", NULL, 0x10, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "newWidth_", NULL, 0x10, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "hashCode_", NULL, 0x10, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "xPosition_", NULL, 0x10, "Lorg.oss.pdfreporter.crosstabs.type.CrosstabColumnPositionEnum;", NULL, NULL, .constantValue.asLong = 0 },
    { "yPosition_", NULL, 0x10, "Lorg.oss.pdfreporter.crosstabs.type.CrosstabRowPositionEnum;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineFillJRFillCellContents_StretchedContents = { 2, "StretchedContents", "org.oss.pdfreporter.engine.fill", "JRFillCellContents", 0xc, 3, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineFillJRFillCellContents_StretchedContents;
}

@end

void OrgOssPdfreporterEngineFillJRFillCellContents_StretchedContents_initWithInt_withInt_withOrgOssPdfreporterCrosstabsTypeCrosstabColumnPositionEnum_withOrgOssPdfreporterCrosstabsTypeCrosstabRowPositionEnum_(OrgOssPdfreporterEngineFillJRFillCellContents_StretchedContents *self, jint newWidth, jint newHeight, OrgOssPdfreporterCrosstabsTypeCrosstabColumnPositionEnum *xPosition, OrgOssPdfreporterCrosstabsTypeCrosstabRowPositionEnum *yPosition) {
  NSObject_init(self);
  self->newHeight_ = newHeight;
  self->newWidth_ = newWidth;
  self->xPosition_ = xPosition;
  self->yPosition_ = yPosition;
  jint hash_ = newHeight;
  hash_ = 31 * hash_ + newWidth;
  hash_ = 31 * hash_ + [((OrgOssPdfreporterCrosstabsTypeCrosstabColumnPositionEnum *) nil_chk(xPosition)) getValue];
  hash_ = 31 * hash_ + [((OrgOssPdfreporterCrosstabsTypeCrosstabRowPositionEnum *) nil_chk(yPosition)) getValue];
  self->hashCode_ = hash_;
}

OrgOssPdfreporterEngineFillJRFillCellContents_StretchedContents *new_OrgOssPdfreporterEngineFillJRFillCellContents_StretchedContents_initWithInt_withInt_withOrgOssPdfreporterCrosstabsTypeCrosstabColumnPositionEnum_withOrgOssPdfreporterCrosstabsTypeCrosstabRowPositionEnum_(jint newWidth, jint newHeight, OrgOssPdfreporterCrosstabsTypeCrosstabColumnPositionEnum *xPosition, OrgOssPdfreporterCrosstabsTypeCrosstabRowPositionEnum *yPosition) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineFillJRFillCellContents_StretchedContents, initWithInt_withInt_withOrgOssPdfreporterCrosstabsTypeCrosstabColumnPositionEnum_withOrgOssPdfreporterCrosstabsTypeCrosstabRowPositionEnum_, newWidth, newHeight, xPosition, yPosition)
}

OrgOssPdfreporterEngineFillJRFillCellContents_StretchedContents *create_OrgOssPdfreporterEngineFillJRFillCellContents_StretchedContents_initWithInt_withInt_withOrgOssPdfreporterCrosstabsTypeCrosstabColumnPositionEnum_withOrgOssPdfreporterCrosstabsTypeCrosstabRowPositionEnum_(jint newWidth, jint newHeight, OrgOssPdfreporterCrosstabsTypeCrosstabColumnPositionEnum *xPosition, OrgOssPdfreporterCrosstabsTypeCrosstabRowPositionEnum *yPosition) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineFillJRFillCellContents_StretchedContents, initWithInt_withInt_withOrgOssPdfreporterCrosstabsTypeCrosstabColumnPositionEnum_withOrgOssPdfreporterCrosstabsTypeCrosstabRowPositionEnum_, newWidth, newHeight, xPosition, yPosition)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineFillJRFillCellContents_StretchedContents)
