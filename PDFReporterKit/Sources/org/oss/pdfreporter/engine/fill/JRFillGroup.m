//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/fill/JRFillGroup.java
//

#include "J2ObjC_source.h"
#include "java/lang/UnsupportedOperationException.h"
#include "org/oss/pdfreporter/engine/JRExpression.h"
#include "org/oss/pdfreporter/engine/JRGroup.h"
#include "org/oss/pdfreporter/engine/JROrigin.h"
#include "org/oss/pdfreporter/engine/JRSection.h"
#include "org/oss/pdfreporter/engine/JRVariable.h"
#include "org/oss/pdfreporter/engine/JasperReport.h"
#include "org/oss/pdfreporter/engine/fill/JRBaseFiller.h"
#include "org/oss/pdfreporter/engine/fill/JRFillGroup.h"
#include "org/oss/pdfreporter/engine/fill/JRFillObjectFactory.h"
#include "org/oss/pdfreporter/engine/fill/JRFillSection.h"
#include "org/oss/pdfreporter/engine/fill/JRFillVariable.h"
#include "org/oss/pdfreporter/engine/type/BandTypeEnum.h"
#include "org/oss/pdfreporter/engine/type/FooterPositionEnum.h"

@interface OrgOssPdfreporterEngineFillJRFillGroup () {
 @public
  OrgOssPdfreporterEngineFillJRFillSection *groupHeaderSection_;
  OrgOssPdfreporterEngineFillJRFillSection *groupFooterSection_;
  id<OrgOssPdfreporterEngineJRVariable> countVariable_;
  jboolean startNewColumn_;
  jboolean startNewPage_;
  jboolean resetPageNumber_;
  jboolean hasChanged_;
  jboolean isTopLevelChange_;
  jboolean isHeaderPrinted_;
  jboolean isFooterPrinted_;
}

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillGroup, groupHeaderSection_, OrgOssPdfreporterEngineFillJRFillSection *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillGroup, groupFooterSection_, OrgOssPdfreporterEngineFillJRFillSection *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillGroup, countVariable_, id<OrgOssPdfreporterEngineJRVariable>)

@implementation OrgOssPdfreporterEngineFillJRFillGroup

- (instancetype)initWithOrgOssPdfreporterEngineJRGroup:(id<OrgOssPdfreporterEngineJRGroup>)group
    withOrgOssPdfreporterEngineFillJRFillObjectFactory:(OrgOssPdfreporterEngineFillJRFillObjectFactory *)factory {
  OrgOssPdfreporterEngineFillJRFillGroup_initWithOrgOssPdfreporterEngineJRGroup_withOrgOssPdfreporterEngineFillJRFillObjectFactory_(self, group, factory);
  return self;
}

- (NSString *)getName {
  return [((id<OrgOssPdfreporterEngineJRGroup>) nil_chk(parent_)) getName];
}

- (id<OrgOssPdfreporterEngineJRExpression>)getExpression {
  return [((id<OrgOssPdfreporterEngineJRGroup>) nil_chk(parent_)) getExpression];
}

- (jboolean)isStartNewColumn {
  return startNewColumn_;
}

- (void)setStartNewColumnWithBoolean:(jboolean)isStart {
  self->startNewColumn_ = isStart;
}

- (jboolean)isStartNewPage {
  return startNewPage_;
}

- (void)setStartNewPageWithBoolean:(jboolean)isStart {
  self->startNewPage_ = isStart;
}

- (jboolean)isResetPageNumber {
  return resetPageNumber_;
}

- (void)setResetPageNumberWithBoolean:(jboolean)isReset {
  self->resetPageNumber_ = isReset;
}

- (jboolean)isReprintHeaderOnEachPage {
  return [((id<OrgOssPdfreporterEngineJRGroup>) nil_chk(parent_)) isReprintHeaderOnEachPage];
}

- (void)setReprintHeaderOnEachPageWithBoolean:(jboolean)isReprint {
}

- (jint)getMinHeightToStartNewPage {
  return [((id<OrgOssPdfreporterEngineJRGroup>) nil_chk(parent_)) getMinHeightToStartNewPage];
}

- (void)setMinHeightToStartNewPageWithInt:(jint)minHeight {
}

- (OrgOssPdfreporterEngineTypeFooterPositionEnum *)getFooterPositionValue {
  return [((id<OrgOssPdfreporterEngineJRGroup>) nil_chk(parent_)) getFooterPositionValue];
}

- (void)setFooterPositionWithOrgOssPdfreporterEngineTypeFooterPositionEnum:(OrgOssPdfreporterEngineTypeFooterPositionEnum *)footerPosition {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (jboolean)isKeepTogether {
  return [((id<OrgOssPdfreporterEngineJRGroup>) nil_chk(parent_)) isKeepTogether];
}

- (void)setKeepTogetherWithBoolean:(jboolean)keepTogether {
}

- (id<OrgOssPdfreporterEngineJRSection>)getGroupHeaderSection {
  return groupHeaderSection_;
}

- (id<OrgOssPdfreporterEngineJRSection>)getGroupFooterSection {
  return groupFooterSection_;
}

- (id<OrgOssPdfreporterEngineJRVariable>)getCountVariable {
  return countVariable_;
}

- (jboolean)hasChanged {
  return hasChanged_;
}

- (void)setHasChangedWithBoolean:(jboolean)hasChanged {
  self->hasChanged_ = hasChanged;
}

- (jboolean)isTopLevelChange {
  return isTopLevelChange_;
}

- (void)setTopLevelChangeWithBoolean:(jboolean)isTopLevelChange {
  self->isTopLevelChange_ = isTopLevelChange;
}

- (jboolean)isHeaderPrinted {
  return isHeaderPrinted_;
}

- (void)setHeaderPrintedWithBoolean:(jboolean)isHeaderPrinted {
  self->isHeaderPrinted_ = isHeaderPrinted;
}

- (jboolean)isFooterPrinted {
  return isFooterPrinted_;
}

- (void)setFooterPrintedWithBoolean:(jboolean)isFooterPrinted {
  self->isFooterPrinted_ = isFooterPrinted;
}

- (id)clone {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (id)copyWithZone:(NSZone *)zone {
  return [self clone];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgOssPdfreporterEngineJRGroup:withOrgOssPdfreporterEngineFillJRFillObjectFactory:", "JRFillGroup", NULL, 0x1, NULL, NULL },
    { "getName", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getExpression", NULL, "Lorg.oss.pdfreporter.engine.JRExpression;", 0x1, NULL, NULL },
    { "isStartNewColumn", NULL, "Z", 0x1, NULL, NULL },
    { "setStartNewColumnWithBoolean:", "setStartNewColumn", "V", 0x1, NULL, NULL },
    { "isStartNewPage", NULL, "Z", 0x1, NULL, NULL },
    { "setStartNewPageWithBoolean:", "setStartNewPage", "V", 0x1, NULL, NULL },
    { "isResetPageNumber", NULL, "Z", 0x1, NULL, NULL },
    { "setResetPageNumberWithBoolean:", "setResetPageNumber", "V", 0x1, NULL, NULL },
    { "isReprintHeaderOnEachPage", NULL, "Z", 0x1, NULL, NULL },
    { "setReprintHeaderOnEachPageWithBoolean:", "setReprintHeaderOnEachPage", "V", 0x1, NULL, NULL },
    { "getMinHeightToStartNewPage", NULL, "I", 0x1, NULL, NULL },
    { "setMinHeightToStartNewPageWithInt:", "setMinHeightToStartNewPage", "V", 0x1, NULL, NULL },
    { "getFooterPositionValue", NULL, "Lorg.oss.pdfreporter.engine.type.FooterPositionEnum;", 0x1, NULL, NULL },
    { "setFooterPositionWithOrgOssPdfreporterEngineTypeFooterPositionEnum:", "setFooterPosition", "V", 0x1, NULL, NULL },
    { "isKeepTogether", NULL, "Z", 0x1, NULL, NULL },
    { "setKeepTogetherWithBoolean:", "setKeepTogether", "V", 0x1, NULL, NULL },
    { "getGroupHeaderSection", NULL, "Lorg.oss.pdfreporter.engine.JRSection;", 0x1, NULL, NULL },
    { "getGroupFooterSection", NULL, "Lorg.oss.pdfreporter.engine.JRSection;", 0x1, NULL, NULL },
    { "getCountVariable", NULL, "Lorg.oss.pdfreporter.engine.JRVariable;", 0x1, NULL, NULL },
    { "hasChanged", NULL, "Z", 0x1, NULL, NULL },
    { "setHasChangedWithBoolean:", "setHasChanged", "V", 0x1, NULL, NULL },
    { "isTopLevelChange", NULL, "Z", 0x1, NULL, NULL },
    { "setTopLevelChangeWithBoolean:", "setTopLevelChange", "V", 0x1, NULL, NULL },
    { "isHeaderPrinted", NULL, "Z", 0x1, NULL, NULL },
    { "setHeaderPrintedWithBoolean:", "setHeaderPrinted", "V", 0x1, NULL, NULL },
    { "isFooterPrinted", NULL, "Z", 0x1, NULL, NULL },
    { "setFooterPrintedWithBoolean:", "setFooterPrinted", "V", 0x1, NULL, NULL },
    { "clone", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "parent_", NULL, 0x4, "Lorg.oss.pdfreporter.engine.JRGroup;", NULL, NULL, .constantValue.asLong = 0 },
    { "groupHeaderSection_", NULL, 0x2, "Lorg.oss.pdfreporter.engine.fill.JRFillSection;", NULL, NULL, .constantValue.asLong = 0 },
    { "groupFooterSection_", NULL, 0x2, "Lorg.oss.pdfreporter.engine.fill.JRFillSection;", NULL, NULL, .constantValue.asLong = 0 },
    { "countVariable_", NULL, 0x2, "Lorg.oss.pdfreporter.engine.JRVariable;", NULL, NULL, .constantValue.asLong = 0 },
    { "startNewColumn_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "startNewPage_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "resetPageNumber_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "hasChanged_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "isTopLevelChange_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "isHeaderPrinted_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "isFooterPrinted_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineFillJRFillGroup = { 2, "JRFillGroup", "org.oss.pdfreporter.engine.fill", NULL, 0x1, 29, methods, 11, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineFillJRFillGroup;
}

@end

void OrgOssPdfreporterEngineFillJRFillGroup_initWithOrgOssPdfreporterEngineJRGroup_withOrgOssPdfreporterEngineFillJRFillObjectFactory_(OrgOssPdfreporterEngineFillJRFillGroup *self, id<OrgOssPdfreporterEngineJRGroup> group, OrgOssPdfreporterEngineFillJRFillObjectFactory *factory) {
  NSObject_init(self);
  self->hasChanged_ = true;
  self->isFooterPrinted_ = true;
  [((OrgOssPdfreporterEngineFillJRFillObjectFactory *) nil_chk(factory)) putWithId:group withId:self];
  self->parent_ = group;
  NSString *reportName = [((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk([factory getFiller])) isSubreport] ? [((OrgOssPdfreporterEngineJasperReport *) nil_chk([((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk([factory getFiller])) getJasperReport])) getName] : nil;
  self->groupHeaderSection_ = [factory getSectionWithOrgOssPdfreporterEngineJRSection:[((id<OrgOssPdfreporterEngineJRGroup>) nil_chk(group)) getGroupHeaderSection]];
  if (self->groupHeaderSection_ != ((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk([factory getFiller]))->missingFillSection_) {
    [((OrgOssPdfreporterEngineFillJRFillSection *) nil_chk(self->groupHeaderSection_)) setOriginWithOrgOssPdfreporterEngineJROrigin:new_OrgOssPdfreporterEngineJROrigin_initWithNSString_withNSString_withOrgOssPdfreporterEngineTypeBandTypeEnum_(reportName, [group getName], JreLoadEnum(OrgOssPdfreporterEngineTypeBandTypeEnum, GROUP_HEADER))];
  }
  self->groupFooterSection_ = [factory getSectionWithOrgOssPdfreporterEngineJRSection:[group getGroupFooterSection]];
  if (self->groupFooterSection_ != ((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk([factory getFiller]))->missingFillSection_) {
    [((OrgOssPdfreporterEngineFillJRFillSection *) nil_chk(self->groupFooterSection_)) setOriginWithOrgOssPdfreporterEngineJROrigin:new_OrgOssPdfreporterEngineJROrigin_initWithNSString_withNSString_withOrgOssPdfreporterEngineTypeBandTypeEnum_(reportName, [group getName], JreLoadEnum(OrgOssPdfreporterEngineTypeBandTypeEnum, GROUP_FOOTER))];
  }
  self->countVariable_ = [factory getVariableWithOrgOssPdfreporterEngineJRVariable:[group getCountVariable]];
  self->startNewColumn_ = [((id<OrgOssPdfreporterEngineJRGroup>) nil_chk(self->parent_)) isStartNewColumn];
  self->startNewPage_ = [((id<OrgOssPdfreporterEngineJRGroup>) nil_chk(self->parent_)) isStartNewPage];
  self->resetPageNumber_ = [((id<OrgOssPdfreporterEngineJRGroup>) nil_chk(self->parent_)) isResetPageNumber];
}

OrgOssPdfreporterEngineFillJRFillGroup *new_OrgOssPdfreporterEngineFillJRFillGroup_initWithOrgOssPdfreporterEngineJRGroup_withOrgOssPdfreporterEngineFillJRFillObjectFactory_(id<OrgOssPdfreporterEngineJRGroup> group, OrgOssPdfreporterEngineFillJRFillObjectFactory *factory) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineFillJRFillGroup, initWithOrgOssPdfreporterEngineJRGroup_withOrgOssPdfreporterEngineFillJRFillObjectFactory_, group, factory)
}

OrgOssPdfreporterEngineFillJRFillGroup *create_OrgOssPdfreporterEngineFillJRFillGroup_initWithOrgOssPdfreporterEngineJRGroup_withOrgOssPdfreporterEngineFillJRFillObjectFactory_(id<OrgOssPdfreporterEngineJRGroup> group, OrgOssPdfreporterEngineFillJRFillObjectFactory *factory) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineFillJRFillGroup, initWithOrgOssPdfreporterEngineJRGroup_withOrgOssPdfreporterEngineFillJRFillObjectFactory_, group, factory)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineFillJRFillGroup)
