//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/fill/JRFillCloneFactory.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"
#include "org/oss/pdfreporter/engine/fill/JRFillCloneFactory.h"
#include "org/oss/pdfreporter/engine/fill/JRFillCloneable.h"

@interface OrgOssPdfreporterEngineFillJRFillCloneFactory () {
 @public
  id<JavaUtilMap> cloneMap_;
}

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillCloneFactory, cloneMap_, id<JavaUtilMap>)

@implementation OrgOssPdfreporterEngineFillJRFillCloneFactory

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterEngineFillJRFillCloneFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<OrgOssPdfreporterEngineFillJRFillCloneable>)getCachedWithOrgOssPdfreporterEngineFillJRFillCloneable:(id<OrgOssPdfreporterEngineFillJRFillCloneable>)original {
  return [((id<JavaUtilMap>) nil_chk(cloneMap_)) getWithId:original];
}

- (void)putWithOrgOssPdfreporterEngineFillJRFillCloneable:(id<OrgOssPdfreporterEngineFillJRFillCloneable>)original
           withOrgOssPdfreporterEngineFillJRFillCloneable:(id<OrgOssPdfreporterEngineFillJRFillCloneable>)clone {
  (void) [((id<JavaUtilMap>) nil_chk(cloneMap_)) putWithId:original withId:clone];
}

- (id<OrgOssPdfreporterEngineFillJRFillCloneable>)getCloneWithOrgOssPdfreporterEngineFillJRFillCloneable:(id<OrgOssPdfreporterEngineFillJRFillCloneable>)original {
  id<OrgOssPdfreporterEngineFillJRFillCloneable> clone;
  if (original == nil) {
    clone = nil;
  }
  else {
    clone = [self getCachedWithOrgOssPdfreporterEngineFillJRFillCloneable:original];
    if (clone == nil) {
      clone = [original createCloneWithOrgOssPdfreporterEngineFillJRFillCloneFactory:self];
    }
  }
  return clone;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "JRFillCloneFactory", NULL, 0x1, NULL, NULL },
    { "getCachedWithOrgOssPdfreporterEngineFillJRFillCloneable:", "getCached", "Lorg.oss.pdfreporter.engine.fill.JRFillCloneable;", 0x4, NULL, NULL },
    { "putWithOrgOssPdfreporterEngineFillJRFillCloneable:withOrgOssPdfreporterEngineFillJRFillCloneable:", "put", "V", 0x1, NULL, NULL },
    { "getCloneWithOrgOssPdfreporterEngineFillJRFillCloneable:", "getClone", "Lorg.oss.pdfreporter.engine.fill.JRFillCloneable;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "cloneMap_", NULL, 0x2, "Ljava.util.Map;", NULL, "Ljava/util/Map<Lorg/oss/pdfreporter/engine/fill/JRFillCloneable;Lorg/oss/pdfreporter/engine/fill/JRFillCloneable;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineFillJRFillCloneFactory = { 2, "JRFillCloneFactory", "org.oss.pdfreporter.engine.fill", NULL, 0x1, 4, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineFillJRFillCloneFactory;
}

@end

void OrgOssPdfreporterEngineFillJRFillCloneFactory_init(OrgOssPdfreporterEngineFillJRFillCloneFactory *self) {
  NSObject_init(self);
  self->cloneMap_ = new_JavaUtilHashMap_init();
}

OrgOssPdfreporterEngineFillJRFillCloneFactory *new_OrgOssPdfreporterEngineFillJRFillCloneFactory_init() {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineFillJRFillCloneFactory, init)
}

OrgOssPdfreporterEngineFillJRFillCloneFactory *create_OrgOssPdfreporterEngineFillJRFillCloneFactory_init() {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineFillJRFillCloneFactory, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineFillJRFillCloneFactory)
