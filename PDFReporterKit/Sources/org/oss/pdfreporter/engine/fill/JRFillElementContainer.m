//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/fill/JRFillElementContainer.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Boolean.h"
#include "java/lang/Math.h"
#include "java/lang/StringBuffer.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/HashMap.h"
#include "java/util/HashSet.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "org/oss/pdfreporter/engine/JRConditionalStyle.h"
#include "org/oss/pdfreporter/engine/JRElement.h"
#include "org/oss/pdfreporter/engine/JRElementGroup.h"
#include "org/oss/pdfreporter/engine/JRException.h"
#include "org/oss/pdfreporter/engine/JRExpression.h"
#include "org/oss/pdfreporter/engine/JRFrame.h"
#include "org/oss/pdfreporter/engine/JROrigin.h"
#include "org/oss/pdfreporter/engine/JRPrintElement.h"
#include "org/oss/pdfreporter/engine/JRPrintElementContainer.h"
#include "org/oss/pdfreporter/engine/JRStyle.h"
#include "org/oss/pdfreporter/engine/JasperPrint.h"
#include "org/oss/pdfreporter/engine/base/JRBaseStyle.h"
#include "org/oss/pdfreporter/engine/fill/JRBaseFiller.h"
#include "org/oss/pdfreporter/engine/fill/JRFillBreak.h"
#include "org/oss/pdfreporter/engine/fill/JRFillCloneFactory.h"
#include "org/oss/pdfreporter/engine/fill/JRFillContext.h"
#include "org/oss/pdfreporter/engine/fill/JRFillCrosstab.h"
#include "org/oss/pdfreporter/engine/fill/JRFillElement.h"
#include "org/oss/pdfreporter/engine/fill/JRFillElementContainer.h"
#include "org/oss/pdfreporter/engine/fill/JRFillElementGroup.h"
#include "org/oss/pdfreporter/engine/fill/JRFillExpressionEvaluator.h"
#include "org/oss/pdfreporter/engine/fill/JRFillFrame.h"
#include "org/oss/pdfreporter/engine/fill/JRFillObjectFactory.h"
#include "org/oss/pdfreporter/engine/fill/JRFillSubreport.h"
#include "org/oss/pdfreporter/engine/fill/JROriginProvider.h"
#include "org/oss/pdfreporter/engine/fill/JRPrintBand.h"
#include "org/oss/pdfreporter/engine/fill/JRYComparator.h"
#include "org/oss/pdfreporter/engine/type/PositionTypeEnum.h"
#include "org/oss/pdfreporter/engine/type/StretchTypeEnum.h"
#include "org/oss/pdfreporter/engine/util/JRStyleResolver.h"

@interface OrgOssPdfreporterEngineFillJRFillElementContainer () {
 @public
  IOSObjectArray *ySortedElements_;
  IOSObjectArray *stretchElements_;
  IOSObjectArray *bandBottomElements_;
  IOSObjectArray *removableElements_;
  jboolean willOverflow_;
  jboolean currentOverflow_;
  jboolean currentOverflowAllowed_;
  jint stretchHeight_;
  jint firstY_;
}

- (void)initDeepElements OBJC_METHOD_FAMILY_NONE;

+ (void)collectDeepElementsWithOrgOssPdfreporterEngineJRElementArray:(IOSObjectArray *)elements
                                                    withJavaUtilList:(id<JavaUtilList>)deepElementsList;

- (void)setDependentElements;

- (jint)getElementFirstYWithOrgOssPdfreporterEngineFillJRFillElement:(OrgOssPdfreporterEngineFillJRFillElement *)element;

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillElementContainer, ySortedElements_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillElementContainer, stretchElements_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillElementContainer, bandBottomElements_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillElementContainer, removableElements_, IOSObjectArray *)

__attribute__((unused)) static void OrgOssPdfreporterEngineFillJRFillElementContainer_initDeepElements(OrgOssPdfreporterEngineFillJRFillElementContainer *self);

__attribute__((unused)) static void OrgOssPdfreporterEngineFillJRFillElementContainer_collectDeepElementsWithOrgOssPdfreporterEngineJRElementArray_withJavaUtilList_(IOSObjectArray *elements, id<JavaUtilList> deepElementsList);

__attribute__((unused)) static void OrgOssPdfreporterEngineFillJRFillElementContainer_setDependentElements(OrgOssPdfreporterEngineFillJRFillElementContainer *self);

__attribute__((unused)) static jint OrgOssPdfreporterEngineFillJRFillElementContainer_getElementFirstYWithOrgOssPdfreporterEngineFillJRFillElement_(OrgOssPdfreporterEngineFillJRFillElementContainer *self, OrgOssPdfreporterEngineFillJRFillElement *element);

@interface OrgOssPdfreporterEngineFillJRFillElementContainer_$1 : NSObject < OrgOssPdfreporterEngineFillJRBaseFiller_DefaultStyleListener > {
 @public
  OrgOssPdfreporterEngineFillJRFillElementContainer *this$0_;
}

- (void)defaultStyleSetWithOrgOssPdfreporterEngineJRStyle:(id<OrgOssPdfreporterEngineJRStyle>)style;

- (instancetype)initWithOrgOssPdfreporterEngineFillJRFillElementContainer:(OrgOssPdfreporterEngineFillJRFillElementContainer *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgOssPdfreporterEngineFillJRFillElementContainer_$1)

J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillElementContainer_$1, this$0_, OrgOssPdfreporterEngineFillJRFillElementContainer *)

__attribute__((unused)) static void OrgOssPdfreporterEngineFillJRFillElementContainer_$1_initWithOrgOssPdfreporterEngineFillJRFillElementContainer_(OrgOssPdfreporterEngineFillJRFillElementContainer_$1 *self, OrgOssPdfreporterEngineFillJRFillElementContainer *outer$);

__attribute__((unused)) static OrgOssPdfreporterEngineFillJRFillElementContainer_$1 *new_OrgOssPdfreporterEngineFillJRFillElementContainer_$1_initWithOrgOssPdfreporterEngineFillJRFillElementContainer_(OrgOssPdfreporterEngineFillJRFillElementContainer *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgOssPdfreporterEngineFillJRFillElementContainer_$1 *create_OrgOssPdfreporterEngineFillJRFillElementContainer_$1_initWithOrgOssPdfreporterEngineFillJRFillElementContainer_(OrgOssPdfreporterEngineFillJRFillElementContainer *outer$);

J2OBJC_TYPE_LITERAL_HEADER(OrgOssPdfreporterEngineFillJRFillElementContainer_$1)

@implementation OrgOssPdfreporterEngineFillJRFillElementContainer

- (instancetype)initWithOrgOssPdfreporterEngineFillJRBaseFiller:(OrgOssPdfreporterEngineFillJRBaseFiller *)filler
                      withOrgOssPdfreporterEngineJRElementGroup:(id<OrgOssPdfreporterEngineJRElementGroup>)container
             withOrgOssPdfreporterEngineFillJRFillObjectFactory:(OrgOssPdfreporterEngineFillJRFillObjectFactory *)factory {
  OrgOssPdfreporterEngineFillJRFillElementContainer_initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineJRElementGroup_withOrgOssPdfreporterEngineFillJRFillObjectFactory_(self, filler, container, factory);
  return self;
}

- (instancetype)initWithOrgOssPdfreporterEngineFillJRFillElementContainer:(OrgOssPdfreporterEngineFillJRFillElementContainer *)container
                        withOrgOssPdfreporterEngineFillJRFillCloneFactory:(OrgOssPdfreporterEngineFillJRFillCloneFactory *)factory {
  OrgOssPdfreporterEngineFillJRFillElementContainer_initWithOrgOssPdfreporterEngineFillJRFillElementContainer_withOrgOssPdfreporterEngineFillJRFillCloneFactory_(self, container, factory);
  return self;
}

- (void)initDeepElements {
  OrgOssPdfreporterEngineFillJRFillElementContainer_initDeepElements(self);
}

+ (void)collectDeepElementsWithOrgOssPdfreporterEngineJRElementArray:(IOSObjectArray *)elements
                                                    withJavaUtilList:(id<JavaUtilList>)deepElementsList {
  OrgOssPdfreporterEngineFillJRFillElementContainer_collectDeepElementsWithOrgOssPdfreporterEngineJRElementArray_withJavaUtilList_(elements, deepElementsList);
}

- (void)initElements {
  hasPrintWhenOverflowElement_ = false;
  if (elements_ != nil && elements_->size_ > 0) {
    id<JavaUtilList> sortedElemsList = new_JavaUtilArrayList_init();
    id<JavaUtilList> stretchElemsList = new_JavaUtilArrayList_init();
    id<JavaUtilList> bandBottomElemsList = new_JavaUtilArrayList_init();
    id<JavaUtilList> removableElemsList = new_JavaUtilArrayList_init();
    for (jint i = 0; i < ((IOSObjectArray *) nil_chk(elements_))->size_; i++) {
      OrgOssPdfreporterEngineFillJRFillElement *element = IOSObjectArray_Get(elements_, i);
      [sortedElemsList addWithId:element];
      if ([((OrgOssPdfreporterEngineFillJRFillElement *) nil_chk(element)) getPositionTypeValue] == JreLoadEnum(OrgOssPdfreporterEngineTypePositionTypeEnum, FIX_RELATIVE_TO_BOTTOM)) {
        [bandBottomElemsList addWithId:element];
      }
      if ([element getStretchTypeValue] != JreLoadEnum(OrgOssPdfreporterEngineTypeStretchTypeEnum, NO_STRETCH)) {
        [stretchElemsList addWithId:element];
      }
      if ([element isRemoveLineWhenBlank]) {
        [removableElemsList addWithId:element];
      }
      if ([element isPrintWhenDetailOverflows]) {
        hasPrintWhenOverflowElement_ = true;
      }
    }
    JavaUtilCollections_sortWithJavaUtilList_withJavaUtilComparator_(sortedElemsList, new_OrgOssPdfreporterEngineFillJRYComparator_init());
    ySortedElements_ = [IOSObjectArray newArrayWithLength:((IOSObjectArray *) nil_chk(elements_))->size_ type:OrgOssPdfreporterEngineFillJRFillElement_class_()];
    (void) [sortedElemsList toArrayWithNSObjectArray:ySortedElements_];
    stretchElements_ = [IOSObjectArray newArrayWithLength:[stretchElemsList size] type:OrgOssPdfreporterEngineFillJRFillElement_class_()];
    (void) [stretchElemsList toArrayWithNSObjectArray:stretchElements_];
    bandBottomElements_ = [IOSObjectArray newArrayWithLength:[bandBottomElemsList size] type:OrgOssPdfreporterEngineFillJRFillElement_class_()];
    (void) [bandBottomElemsList toArrayWithNSObjectArray:bandBottomElements_];
    removableElements_ = [IOSObjectArray newArrayWithLength:[removableElemsList size] type:OrgOssPdfreporterEngineFillJRFillElement_class_()];
    (void) [removableElemsList toArrayWithNSObjectArray:removableElements_];
  }
  OrgOssPdfreporterEngineFillJRFillElementContainer_setDependentElements(self);
}

- (void)setDependentElements {
  OrgOssPdfreporterEngineFillJRFillElementContainer_setDependentElements(self);
}

- (void)evaluateWithByte:(jbyte)evaluation {
  IOSObjectArray *allElements = [self getElements];
  if (allElements != nil && allElements->size_ > 0) {
    for (jint i = 0; i < allElements->size_; i++) {
      OrgOssPdfreporterEngineFillJRFillElement *element = (OrgOssPdfreporterEngineFillJRFillElement *) cast_chk(IOSObjectArray_Get(allElements, i), [OrgOssPdfreporterEngineFillJRFillElement class]);
      [((OrgOssPdfreporterEngineFillJRFillElement *) nil_chk(element)) setCurrentEvaluationWithByte:evaluation];
      [element evaluateWithByte:evaluation];
    }
  }
}

- (void)resetElements {
  if (ySortedElements_ != nil && ySortedElements_->size_ > 0) {
    for (jint i = 0; i < ((IOSObjectArray *) nil_chk(ySortedElements_))->size_; i++) {
      OrgOssPdfreporterEngineFillJRFillElement *element = IOSObjectArray_Get(ySortedElements_, i);
      [((OrgOssPdfreporterEngineFillJRFillElement *) nil_chk(element)) reset];
      if (!isOverflow_) {
        [element setAlreadyPrintedWithBoolean:false];
      }
    }
  }
}

- (jboolean)willOverflow {
  return willOverflow_;
}

- (void)initFill {
  isOverflow_ = willOverflow_;
  firstY_ = 0;
  firstYElement_ = nil;
}

- (void)prepareElementsWithInt:(jint)availableHeight
                   withBoolean:(jboolean)isOverflowAllowed {
  currentOverflow_ = false;
  currentOverflowAllowed_ = isOverflowAllowed;
  jint maxBandStretch = 0;
  jint bandStretch = 0;
  firstY_ = isOverflow_ ? [self getContainerHeight] : 0;
  firstYElement_ = nil;
  jboolean isFirstYFound = false;
  if (ySortedElements_ != nil && ySortedElements_->size_ > 0) {
    for (jint i = 0; i < ((IOSObjectArray *) nil_chk(ySortedElements_))->size_; i++) {
      OrgOssPdfreporterEngineFillJRFillElement *element = IOSObjectArray_Get(ySortedElements_, i);
      currentOverflow_ = ([((OrgOssPdfreporterEngineFillJRFillElement *) nil_chk(element)) prepareWithInt:availableHeight + OrgOssPdfreporterEngineFillJRFillElementContainer_getElementFirstYWithOrgOssPdfreporterEngineFillJRFillElement_(self, element) withBoolean:isOverflow_] || currentOverflow_);
      [element moveDependantElements];
      if ([element isToPrint]) {
        if (isOverflow_) {
          if ([element isReprinted]) {
            firstY_ = 0;
          }
          else if (!isFirstYFound) {
            firstY_ = [element getY];
          }
          isFirstYFound = true;
        }
        firstYElement_ = element;
        bandStretch = [element getRelativeY] + [element getStretchHeight] - [element getY] - [element getHeight];
        if (bandStretch > maxBandStretch) {
          maxBandStretch = bandStretch;
        }
      }
    }
  }
  if (maxBandStretch > availableHeight - [self getContainerHeight] + firstY_) {
    currentOverflow_ = true;
  }
  if (currentOverflow_) {
    stretchHeight_ = availableHeight + firstY_;
  }
  else {
    stretchHeight_ = [self getContainerHeight] + maxBandStretch;
  }
  willOverflow_ = (currentOverflow_ && isOverflowAllowed);
}

- (jboolean)isCurrentOverflow {
  return currentOverflow_;
}

- (jboolean)isCurrentOverflowAllowed {
  return currentOverflowAllowed_;
}

- (jint)getElementFirstYWithOrgOssPdfreporterEngineFillJRFillElement:(OrgOssPdfreporterEngineFillJRFillElement *)element {
  return OrgOssPdfreporterEngineFillJRFillElementContainer_getElementFirstYWithOrgOssPdfreporterEngineFillJRFillElement_(self, element);
}

- (void)setStretchHeightWithInt:(jint)stretchHeight {
  if (stretchHeight > self->stretchHeight_) {
    self->stretchHeight_ = stretchHeight;
  }
}

- (void)stretchElements {
  if (stretchElements_ != nil && stretchElements_->size_ > 0) {
    for (jint i = 0; i < ((IOSObjectArray *) nil_chk(stretchElements_))->size_; i++) {
      OrgOssPdfreporterEngineFillJRFillElement *element = IOSObjectArray_Get(stretchElements_, i);
      [((OrgOssPdfreporterEngineFillJRFillElement *) nil_chk(element)) stretchElementWithInt:stretchHeight_ - [self getContainerHeight]];
      [element moveDependantElements];
    }
  }
  if (ySortedElements_ != nil && ySortedElements_->size_ > 0) {
    for (jint i = 0; i < ((IOSObjectArray *) nil_chk(ySortedElements_))->size_; i++) {
      OrgOssPdfreporterEngineFillJRFillElement *element = IOSObjectArray_Get(ySortedElements_, i);
      [((OrgOssPdfreporterEngineFillJRFillElement *) nil_chk(element)) stretchHeightFinal];
    }
  }
}

- (jint)getStretchHeight {
  return stretchHeight_;
}

- (void)moveBandBottomElements {
  if (bandBottomElements_ != nil && bandBottomElements_->size_ > 0) {
    for (jint i = 0; i < ((IOSObjectArray *) nil_chk(bandBottomElements_))->size_; i++) {
      OrgOssPdfreporterEngineFillJRFillElement *element = IOSObjectArray_Get(bandBottomElements_, i);
      [((OrgOssPdfreporterEngineFillJRFillElement *) nil_chk(element)) setRelativeYWithInt:[element getY] + stretchHeight_ - [self getContainerHeight]];
      [element setToPrintWithBoolean:[element isToPrint] && !willOverflow_];
    }
  }
}

- (void)removeBlankElements {
  IOSObjectArray *remElems = removableElements_;
  if (remElems != nil && remElems->size_ > 0) {
    IOSObjectArray *elems = ySortedElements_;
    for (jint i = 0; i < remElems->size_; i++) {
      OrgOssPdfreporterEngineFillJRFillElement *iElem = (OrgOssPdfreporterEngineFillJRFillElement *) cast_chk(IOSObjectArray_Get(remElems, i), [OrgOssPdfreporterEngineFillJRFillElement class]);
      jint blankHeight;
      if ([((OrgOssPdfreporterEngineFillJRFillElement *) nil_chk(iElem)) isToPrint]) {
        blankHeight = [iElem getHeight] - [iElem getStretchHeight];
      }
      else {
        blankHeight = [iElem getHeight];
      }
      if (blankHeight > 0 && [iElem getRelativeY] + [iElem getStretchHeight] <= stretchHeight_ && [iElem getRelativeY] >= firstY_) {
        jint blankY = [iElem getRelativeY] + [iElem getHeight] - blankHeight;
        jboolean isToRemove = true;
        for (jint j = 0; j < ((IOSObjectArray *) nil_chk(elems))->size_; j++) {
          OrgOssPdfreporterEngineFillJRFillElement *jElem = (OrgOssPdfreporterEngineFillJRFillElement *) cast_chk(IOSObjectArray_Get(elems, j), [OrgOssPdfreporterEngineFillJRFillElement class]);
          if (iElem != jElem && [((OrgOssPdfreporterEngineFillJRFillElement *) nil_chk(jElem)) isToPrint]) {
            jint top = JavaLangMath_minWithInt_withInt_(blankY, [((OrgOssPdfreporterEngineFillJRFillElement *) nil_chk(jElem)) getRelativeY]);
            jint bottom = JavaLangMath_maxWithInt_withInt_(blankY + blankHeight, [jElem getRelativeY] + [jElem getStretchHeight]);
            if (blankHeight + [jElem getStretchHeight] > bottom - top) {
              isToRemove = false;
              break;
            }
          }
        }
        if (isToRemove) {
          for (jint j = 0; j < elems->size_; j++) {
            OrgOssPdfreporterEngineFillJRFillElement *jElem = (OrgOssPdfreporterEngineFillJRFillElement *) cast_chk(IOSObjectArray_Get(elems, j), [OrgOssPdfreporterEngineFillJRFillElement class]);
            if ([((OrgOssPdfreporterEngineFillJRFillElement *) nil_chk(jElem)) getRelativeY] >= blankY + blankHeight) {
              [jElem setRelativeYWithInt:[jElem getRelativeY] - blankHeight];
            }
          }
          stretchHeight_ = stretchHeight_ - blankHeight;
        }
      }
    }
  }
}

- (void)fillElementsWithOrgOssPdfreporterEngineJRPrintElementContainer:(id<OrgOssPdfreporterEngineJRPrintElementContainer>)printContainer {
  IOSObjectArray *allElements = [self getElements];
  if (allElements != nil && allElements->size_ > 0) {
    for (jint i = 0; i < allElements->size_; i++) {
      OrgOssPdfreporterEngineFillJRFillElement *element = (OrgOssPdfreporterEngineFillJRFillElement *) cast_chk(IOSObjectArray_Get(allElements, i), [OrgOssPdfreporterEngineFillJRFillElement class]);
      [((OrgOssPdfreporterEngineFillJRFillElement *) nil_chk(element)) setRelativeYWithInt:[element getRelativeY] - firstY_];
      if ([element getRelativeY] + [element getStretchHeight] > stretchHeight_ - firstY_) {
        [element setToPrintWithBoolean:false];
      }
      [element setAlreadyPrintedWithBoolean:[element isToPrint] || [element isAlreadyPrinted]];
      if ([element isToPrint]) {
        id<OrgOssPdfreporterEngineJRPrintElement> printElement = [element fill];
        if (printElement != nil) {
          [((id<OrgOssPdfreporterEngineJRPrintElementContainer>) nil_chk(printContainer)) addElementWithOrgOssPdfreporterEngineJRPrintElement:printElement];
          if ([element isKindOfClass:[OrgOssPdfreporterEngineFillJRFillSubreport class]]) {
            OrgOssPdfreporterEngineFillJRFillSubreport *subreport = (OrgOssPdfreporterEngineFillJRFillSubreport *) cast_chk(element, [OrgOssPdfreporterEngineFillJRFillSubreport class]);
            id<JavaUtilList> styles = [((OrgOssPdfreporterEngineJasperPrint *) nil_chk([((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(subreport->subreportFiller_)) getJasperPrint])) getStylesList];
            for (jint j = 0; j < [((id<JavaUtilList>) nil_chk(styles)) size]; j++) {
              [((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler_)) addPrintStyleWithOrgOssPdfreporterEngineJRStyle:[styles getWithInt:j]];
            }
            id<JavaUtilList> origins = [((OrgOssPdfreporterEngineJasperPrint *) nil_chk([((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(subreport->subreportFiller_)) getJasperPrint])) getOriginsList];
            for (jint j = 0; j < [((id<JavaUtilList>) nil_chk(origins)) size]; j++) {
              [((OrgOssPdfreporterEngineJasperPrint *) nil_chk([((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler_)) getJasperPrint])) addOriginWithOrgOssPdfreporterEngineJROrigin:[origins getWithInt:j]];
            }
            id<JavaUtilCollection> printElements = [subreport getPrintElements];
            [self addSubElementsWithOrgOssPdfreporterEngineJRPrintElementContainer:printContainer withOrgOssPdfreporterEngineFillJRFillElement:element withJavaUtilCollection:printElements];
            [subreport subreportPageFilled];
          }
        }
        else if ([element isKindOfClass:[OrgOssPdfreporterEngineFillJRFillCrosstab class]]) {
          id<JavaUtilList> printElements = [((OrgOssPdfreporterEngineFillJRFillCrosstab *) cast_chk(element, [OrgOssPdfreporterEngineFillJRFillCrosstab class])) getPrintElements];
          [self addSubElementsWithOrgOssPdfreporterEngineJRPrintElementContainer:printContainer withOrgOssPdfreporterEngineFillJRFillElement:element withJavaUtilCollection:printElements];
        }
      }
    }
  }
  [((id<OrgOssPdfreporterEngineJRPrintElementContainer>) nil_chk(printContainer)) setHeightWithInt:stretchHeight_ - firstY_];
}

- (void)addSubElementsWithOrgOssPdfreporterEngineJRPrintElementContainer:(id<OrgOssPdfreporterEngineJRPrintElementContainer>)printContainer
                            withOrgOssPdfreporterEngineFillJRFillElement:(OrgOssPdfreporterEngineFillJRFillElement *)element
                                                  withJavaUtilCollection:(id<JavaUtilCollection>)printElements {
  if ([printContainer isKindOfClass:[OrgOssPdfreporterEngineFillJRPrintBand class]]) {
    [((OrgOssPdfreporterEngineFillJRPrintBand *) nil_chk(((OrgOssPdfreporterEngineFillJRPrintBand *) cast_chk(printContainer, [OrgOssPdfreporterEngineFillJRPrintBand class])))) addOffsetElementsWithJavaUtilCollection:printElements withInt:[((OrgOssPdfreporterEngineFillJRFillElement *) nil_chk(element)) getX] withInt:[element getRelativeY]];
  }
  else {
    if (printElements != nil && [printElements size] > 0) {
      for (id<JavaUtilIterator> it = [printElements iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
        id<OrgOssPdfreporterEngineJRPrintElement> printElement = [it next];
        [((id<OrgOssPdfreporterEngineJRPrintElement>) nil_chk(printElement)) setXWithInt:[((OrgOssPdfreporterEngineFillJRFillElement *) nil_chk(element)) getX] + [printElement getX]];
        [printElement setYWithInt:[element getRelativeY] + [printElement getY]];
        [((id<OrgOssPdfreporterEngineJRPrintElementContainer>) nil_chk(printContainer)) addElementWithOrgOssPdfreporterEngineJRPrintElement:printElement];
      }
    }
  }
}

- (void)rewind {
  if (ySortedElements_ != nil && ySortedElements_->size_ > 0) {
    for (jint i = 0; i < ((IOSObjectArray *) nil_chk(ySortedElements_))->size_; i++) {
      OrgOssPdfreporterEngineFillJRFillElement *element = IOSObjectArray_Get(ySortedElements_, i);
      [((OrgOssPdfreporterEngineFillJRFillElement *) nil_chk(element)) rewind];
      [element setAlreadyPrintedWithBoolean:false];
    }
  }
  willOverflow_ = false;
}

- (jint)getFirstY {
  return firstY_;
}

- (jint)getContainerHeight {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)initConditionalStyles {
  [((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler_)) addDefaultStyleListenerWithOrgOssPdfreporterEngineFillJRBaseFiller_DefaultStyleListener:new_OrgOssPdfreporterEngineFillJRFillElementContainer_$1_initWithOrgOssPdfreporterEngineFillJRFillElementContainer_(self)];
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(deepElements_))->size_; i++) {
    id<OrgOssPdfreporterEngineJRStyle> style = ((OrgOssPdfreporterEngineFillJRFillElement *) nil_chk(IOSObjectArray_Get(deepElements_, i)))->initStyle_;
    [self collectConditionalStyleWithOrgOssPdfreporterEngineJRStyle:style];
  }
  if (deepElements_->size_ > 0) {
    for (jint i = 0; i < ((IOSObjectArray *) nil_chk(deepElements_))->size_; i++) {
      [((OrgOssPdfreporterEngineFillJRFillElement *) nil_chk(IOSObjectArray_Get(deepElements_, i))) setConditionalStylesContainerWithOrgOssPdfreporterEngineFillJRFillElementContainer:self];
    }
  }
}

- (void)collectConditionalStyleWithOrgOssPdfreporterEngineJRStyle:(id<OrgOssPdfreporterEngineJRStyle>)style {
  if (style != nil) {
    [((id<JavaUtilSet>) nil_chk(stylesToEvaluate_)) addWithId:style];
  }
}

- (void)evaluateConditionalStylesWithByte:(jbyte)evaluation {
  for (id<JavaUtilIterator> it = [((id<JavaUtilSet>) nil_chk(stylesToEvaluate_)) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    (void) [self evaluateConditionalStyleWithOrgOssPdfreporterEngineJRStyle:[it next] withByte:evaluation];
  }
}

- (id<OrgOssPdfreporterEngineJRStyle>)evaluateConditionalStyleWithOrgOssPdfreporterEngineJRStyle:(id<OrgOssPdfreporterEngineJRStyle>)initialStyle
                                                                                        withByte:(jbyte)evaluation {
  id<OrgOssPdfreporterEngineJRStyle> consolidatedStyle = initialStyle;
  JavaLangStringBuffer *code = new_JavaLangStringBuffer_init();
  id<JavaUtilList> condStylesToApply = new_JavaUtilArrayList_init();
  jboolean anyTrue = [self buildConsolidatedStyleWithOrgOssPdfreporterEngineJRStyle:initialStyle withByte:evaluation withJavaLangStringBuffer:code withJavaUtilList:condStylesToApply];
  if (anyTrue) {
    NSString *consolidatedStyleName = JreStrcat("$C$", [((id<OrgOssPdfreporterEngineJRStyle>) nil_chk(initialStyle)) getName], '|', [code description]);
    consolidatedStyle = [((id<JavaUtilMap>) nil_chk([((OrgOssPdfreporterEngineJasperPrint *) nil_chk([((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler_)) getJasperPrint])) getStylesMap])) getWithId:consolidatedStyleName];
    if (consolidatedStyle == nil) {
      OrgOssPdfreporterEngineBaseJRBaseStyle *style = new_OrgOssPdfreporterEngineBaseJRBaseStyle_initWithNSString_(consolidatedStyleName);
      for (jint j = [condStylesToApply size] - 1; j >= 0; j--) {
        OrgOssPdfreporterEngineUtilJRStyleResolver_appendStyleWithOrgOssPdfreporterEngineJRStyle_withOrgOssPdfreporterEngineJRStyle_(style, [condStylesToApply getWithInt:j]);
      }
      style = [((OrgOssPdfreporterEngineFillJRFillContext *) nil_chk(((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler_))->fillContext_)) deduplicateWithOrgOssPdfreporterEngineDeduplicable:style];
      [((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler_)) addPrintStyleWithOrgOssPdfreporterEngineJRStyle:style];
      consolidatedStyle = style;
    }
  }
  (void) [((id<JavaUtilMap>) nil_chk(evaluatedStyles_)) putWithId:initialStyle withId:consolidatedStyle];
  return consolidatedStyle;
}

- (jboolean)buildConsolidatedStyleWithOrgOssPdfreporterEngineJRStyle:(id<OrgOssPdfreporterEngineJRStyle>)style
                                                            withByte:(jbyte)evaluation
                                            withJavaLangStringBuffer:(JavaLangStringBuffer *)code
                                                    withJavaUtilList:(id<JavaUtilList>)condStylesToApply {
  jboolean anyTrue = false;
  IOSObjectArray *conditionalStyles = [((id<OrgOssPdfreporterEngineJRStyle>) nil_chk(style)) getConditionalStyles];
  if (conditionalStyles != nil && conditionalStyles->size_ > 0) {
    for (jint j = 0; j < conditionalStyles->size_; j++) {
      id<OrgOssPdfreporterEngineJRConditionalStyle> conditionalStyle = IOSObjectArray_Get(conditionalStyles, j);
      JavaLangBoolean *expressionValue = (JavaLangBoolean *) cast_chk([((id<OrgOssPdfreporterEngineFillJRFillExpressionEvaluator>) nil_chk(expressionEvaluator_)) evaluateWithOrgOssPdfreporterEngineJRExpression:[((id<OrgOssPdfreporterEngineJRConditionalStyle>) nil_chk(conditionalStyle)) getConditionExpression] withByte:evaluation], [JavaLangBoolean class]);
      jboolean condition;
      if (expressionValue == nil) {
        condition = false;
      }
      else {
        condition = [expressionValue booleanValue];
      }
      (void) [((JavaLangStringBuffer *) nil_chk(code)) appendWithChar:condition ? '1' : '0'];
      anyTrue = (anyTrue | condition);
      if (condition) {
        [((id<JavaUtilList>) nil_chk(condStylesToApply)) addWithId:conditionalStyle];
      }
    }
  }
  [((id<JavaUtilList>) nil_chk(condStylesToApply)) addWithId:style];
  if ([style getStyle] != nil) {
    anyTrue = (anyTrue | [self buildConsolidatedStyleWithOrgOssPdfreporterEngineJRStyle:[style getStyle] withByte:evaluation withJavaLangStringBuffer:code withJavaUtilList:condStylesToApply]);
  }
  return anyTrue;
}

- (id<OrgOssPdfreporterEngineJRStyle>)getEvaluatedConditionalStyleWithOrgOssPdfreporterEngineJRStyle:(id<OrgOssPdfreporterEngineJRStyle>)parentStyle {
  return [((id<JavaUtilMap>) nil_chk(evaluatedStyles_)) getWithId:parentStyle];
}

- (void)setElementOriginProviderWithOrgOssPdfreporterEngineFillJROriginProvider:(id<OrgOssPdfreporterEngineFillJROriginProvider>)originProvider {
  if (originProvider != nil) {
    for (jint i = 0; i < ((IOSObjectArray *) nil_chk(deepElements_))->size_; i++) {
      [((OrgOssPdfreporterEngineFillJRFillElement *) nil_chk(IOSObjectArray_Get(deepElements_, i))) setOriginProviderWithOrgOssPdfreporterEngineFillJROriginProvider:originProvider];
    }
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgOssPdfreporterEngineFillJRBaseFiller:withOrgOssPdfreporterEngineJRElementGroup:withOrgOssPdfreporterEngineFillJRFillObjectFactory:", "JRFillElementContainer", NULL, 0x4, NULL, NULL },
    { "initWithOrgOssPdfreporterEngineFillJRFillElementContainer:withOrgOssPdfreporterEngineFillJRFillCloneFactory:", "JRFillElementContainer", NULL, 0x4, NULL, NULL },
    { "initDeepElements", NULL, "V", 0x2, NULL, NULL },
    { "collectDeepElementsWithOrgOssPdfreporterEngineJRElementArray:withJavaUtilList:", "collectDeepElements", "V", 0xa, NULL, "([Lorg/oss/pdfreporter/engine/JRElement;Ljava/util/List<Lorg/oss/pdfreporter/engine/fill/JRFillElement;>;)V" },
    { "initElements", NULL, "V", 0x14, NULL, NULL },
    { "setDependentElements", NULL, "V", 0x2, NULL, NULL },
    { "evaluateWithByte:", "evaluate", "V", 0x4, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "resetElements", NULL, "V", 0x4, NULL, NULL },
    { "willOverflow", NULL, "Z", 0x1, NULL, NULL },
    { "initFill", NULL, "V", 0x4, NULL, NULL },
    { "prepareElementsWithInt:withBoolean:", "prepareElements", "V", 0x4, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "isCurrentOverflow", NULL, "Z", 0x1, NULL, NULL },
    { "isCurrentOverflowAllowed", NULL, "Z", 0x1, NULL, NULL },
    { "getElementFirstYWithOrgOssPdfreporterEngineFillJRFillElement:", "getElementFirstY", "I", 0x2, NULL, NULL },
    { "setStretchHeightWithInt:", "setStretchHeight", "V", 0x4, NULL, NULL },
    { "stretchElements", NULL, "V", 0x4, NULL, NULL },
    { "getStretchHeight", NULL, "I", 0x4, NULL, NULL },
    { "moveBandBottomElements", NULL, "V", 0x4, NULL, NULL },
    { "removeBlankElements", NULL, "V", 0x4, NULL, NULL },
    { "fillElementsWithOrgOssPdfreporterEngineJRPrintElementContainer:", "fillElements", "V", 0x1, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "addSubElementsWithOrgOssPdfreporterEngineJRPrintElementContainer:withOrgOssPdfreporterEngineFillJRFillElement:withJavaUtilCollection:", "addSubElements", "V", 0x4, NULL, "(Lorg/oss/pdfreporter/engine/JRPrintElementContainer;Lorg/oss/pdfreporter/engine/fill/JRFillElement;Ljava/util/Collection<+Lorg/oss/pdfreporter/engine/JRPrintElement;>;)V" },
    { "rewind", NULL, "V", 0x4, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "getFirstY", NULL, "I", 0x4, NULL, NULL },
    { "getContainerHeight", NULL, "I", 0x404, NULL, NULL },
    { "initConditionalStyles", NULL, "V", 0x4, NULL, NULL },
    { "collectConditionalStyleWithOrgOssPdfreporterEngineJRStyle:", "collectConditionalStyle", "V", 0x4, NULL, NULL },
    { "evaluateConditionalStylesWithByte:", "evaluateConditionalStyles", "V", 0x4, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "evaluateConditionalStyleWithOrgOssPdfreporterEngineJRStyle:withByte:", "evaluateConditionalStyle", "Lorg.oss.pdfreporter.engine.JRStyle;", 0x4, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "buildConsolidatedStyleWithOrgOssPdfreporterEngineJRStyle:withByte:withJavaLangStringBuffer:withJavaUtilList:", "buildConsolidatedStyle", "Z", 0x4, "Lorg.oss.pdfreporter.engine.JRException;", "(Lorg/oss/pdfreporter/engine/JRStyle;BLjava/lang/StringBuffer;Ljava/util/List<Lorg/oss/pdfreporter/engine/JRStyle;>;)Z" },
    { "getEvaluatedConditionalStyleWithOrgOssPdfreporterEngineJRStyle:", "getEvaluatedConditionalStyle", "Lorg.oss.pdfreporter.engine.JRStyle;", 0x1, NULL, NULL },
    { "setElementOriginProviderWithOrgOssPdfreporterEngineFillJROriginProvider:", "setElementOriginProvider", "V", 0x14, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "filler_", NULL, 0x4, "Lorg.oss.pdfreporter.engine.fill.JRBaseFiller;", NULL, NULL, .constantValue.asLong = 0 },
    { "ySortedElements_", NULL, 0x2, "[Lorg.oss.pdfreporter.engine.fill.JRFillElement;", NULL, NULL, .constantValue.asLong = 0 },
    { "stretchElements_", NULL, 0x2, "[Lorg.oss.pdfreporter.engine.fill.JRFillElement;", NULL, NULL, .constantValue.asLong = 0 },
    { "bandBottomElements_", NULL, 0x2, "[Lorg.oss.pdfreporter.engine.fill.JRFillElement;", NULL, NULL, .constantValue.asLong = 0 },
    { "removableElements_", NULL, 0x2, "[Lorg.oss.pdfreporter.engine.fill.JRFillElement;", NULL, NULL, .constantValue.asLong = 0 },
    { "willOverflow_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "isOverflow_", NULL, 0x4, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "currentOverflow_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "currentOverflowAllowed_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "stretchHeight_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "firstY_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "firstYElement_", NULL, 0x4, "Lorg.oss.pdfreporter.engine.fill.JRFillElement;", NULL, NULL, .constantValue.asLong = 0 },
    { "expressionEvaluator_", NULL, 0x14, "Lorg.oss.pdfreporter.engine.fill.JRFillExpressionEvaluator;", NULL, NULL, .constantValue.asLong = 0 },
    { "deepElements_", NULL, 0x4, "[Lorg.oss.pdfreporter.engine.fill.JRFillElement;", NULL, NULL, .constantValue.asLong = 0 },
    { "stylesToEvaluate_", NULL, 0x4, "Ljava.util.Set;", NULL, "Ljava/util/Set<Lorg/oss/pdfreporter/engine/JRStyle;>;", .constantValue.asLong = 0 },
    { "evaluatedStyles_", NULL, 0x4, "Ljava.util.Map;", NULL, "Ljava/util/Map<Lorg/oss/pdfreporter/engine/JRStyle;Lorg/oss/pdfreporter/engine/JRStyle;>;", .constantValue.asLong = 0 },
    { "hasPrintWhenOverflowElement_", NULL, 0x4, "Z", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineFillJRFillElementContainer = { 2, "JRFillElementContainer", "org.oss.pdfreporter.engine.fill", NULL, 0x401, 31, methods, 17, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineFillJRFillElementContainer;
}

@end

void OrgOssPdfreporterEngineFillJRFillElementContainer_initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineJRElementGroup_withOrgOssPdfreporterEngineFillJRFillObjectFactory_(OrgOssPdfreporterEngineFillJRFillElementContainer *self, OrgOssPdfreporterEngineFillJRBaseFiller *filler, id<OrgOssPdfreporterEngineJRElementGroup> container, OrgOssPdfreporterEngineFillJRFillObjectFactory *factory) {
  OrgOssPdfreporterEngineFillJRFillElementGroup_initWithOrgOssPdfreporterEngineJRElementGroup_withOrgOssPdfreporterEngineFillJRFillObjectFactory_(self, container, factory);
  self->stylesToEvaluate_ = new_JavaUtilHashSet_init();
  self->evaluatedStyles_ = new_JavaUtilHashMap_init();
  self->expressionEvaluator_ = [((OrgOssPdfreporterEngineFillJRFillObjectFactory *) nil_chk(factory)) getExpressionEvaluator];
  OrgOssPdfreporterEngineFillJRFillElementContainer_initDeepElements(self);
  self->filler_ = filler;
}

void OrgOssPdfreporterEngineFillJRFillElementContainer_initWithOrgOssPdfreporterEngineFillJRFillElementContainer_withOrgOssPdfreporterEngineFillJRFillCloneFactory_(OrgOssPdfreporterEngineFillJRFillElementContainer *self, OrgOssPdfreporterEngineFillJRFillElementContainer *container, OrgOssPdfreporterEngineFillJRFillCloneFactory *factory) {
  OrgOssPdfreporterEngineFillJRFillElementGroup_initWithOrgOssPdfreporterEngineFillJRFillElementGroup_withOrgOssPdfreporterEngineFillJRFillCloneFactory_(self, container, factory);
  self->stylesToEvaluate_ = new_JavaUtilHashSet_init();
  self->evaluatedStyles_ = new_JavaUtilHashMap_init();
  self->expressionEvaluator_ = ((OrgOssPdfreporterEngineFillJRFillElementContainer *) nil_chk(container))->expressionEvaluator_;
  OrgOssPdfreporterEngineFillJRFillElementContainer_initDeepElements(self);
  self->filler_ = container->filler_;
}

void OrgOssPdfreporterEngineFillJRFillElementContainer_initDeepElements(OrgOssPdfreporterEngineFillJRFillElementContainer *self) {
  if (self->elements_ == nil) {
    self->deepElements_ = [IOSObjectArray newArrayWithLength:0 type:OrgOssPdfreporterEngineFillJRFillElement_class_()];
  }
  else {
    id<JavaUtilList> deepElementsList = new_JavaUtilArrayList_initWithInt_(self->elements_->size_);
    OrgOssPdfreporterEngineFillJRFillElementContainer_collectDeepElementsWithOrgOssPdfreporterEngineJRElementArray_withJavaUtilList_(self->elements_, deepElementsList);
    self->deepElements_ = [IOSObjectArray newArrayWithLength:[deepElementsList size] type:OrgOssPdfreporterEngineFillJRFillElement_class_()];
    (void) [deepElementsList toArrayWithNSObjectArray:self->deepElements_];
  }
}

void OrgOssPdfreporterEngineFillJRFillElementContainer_collectDeepElementsWithOrgOssPdfreporterEngineJRElementArray_withJavaUtilList_(IOSObjectArray *elements, id<JavaUtilList> deepElementsList) {
  OrgOssPdfreporterEngineFillJRFillElementContainer_initialize();
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(elements))->size_; i++) {
    id<OrgOssPdfreporterEngineJRElement> element = IOSObjectArray_Get(elements, i);
    [((id<JavaUtilList>) nil_chk(deepElementsList)) addWithId:(OrgOssPdfreporterEngineFillJRFillElement *) cast_chk(element, [OrgOssPdfreporterEngineFillJRFillElement class])];
    if ([element isKindOfClass:[OrgOssPdfreporterEngineFillJRFillFrame class]]) {
      id<OrgOssPdfreporterEngineJRFrame> frame = (id<OrgOssPdfreporterEngineJRFrame>) cast_check(element, OrgOssPdfreporterEngineJRFrame_class_());
      OrgOssPdfreporterEngineFillJRFillElementContainer_collectDeepElementsWithOrgOssPdfreporterEngineJRElementArray_withJavaUtilList_([((id<OrgOssPdfreporterEngineJRFrame>) nil_chk(frame)) getElements], deepElementsList);
    }
  }
}

void OrgOssPdfreporterEngineFillJRFillElementContainer_setDependentElements(OrgOssPdfreporterEngineFillJRFillElementContainer *self) {
  if (self->ySortedElements_ != nil && self->ySortedElements_->size_ > 0) {
    for (jint i = 0; i < self->ySortedElements_->size_ - 1; i++) {
      OrgOssPdfreporterEngineFillJRFillElement *iElem = IOSObjectArray_Get(self->ySortedElements_, i);
      jboolean isBreakElem = [iElem isKindOfClass:[OrgOssPdfreporterEngineFillJRFillBreak class]];
      for (jint j = i + 1; j < ((IOSObjectArray *) nil_chk(self->ySortedElements_))->size_; j++) {
        OrgOssPdfreporterEngineFillJRFillElement *jElem = IOSObjectArray_Get(self->ySortedElements_, j);
        jint left = JavaLangMath_minWithInt_withInt_([((OrgOssPdfreporterEngineFillJRFillElement *) nil_chk(iElem)) getX], [((OrgOssPdfreporterEngineFillJRFillElement *) nil_chk(jElem)) getX]);
        jint right = JavaLangMath_maxWithInt_withInt_([iElem getX] + [iElem getWidth], [jElem getX] + [jElem getWidth]);
        if (((isBreakElem && [jElem getPositionTypeValue] == JreLoadEnum(OrgOssPdfreporterEngineTypePositionTypeEnum, FIX_RELATIVE_TO_TOP)) || [jElem getPositionTypeValue] == JreLoadEnum(OrgOssPdfreporterEngineTypePositionTypeEnum, FLOAT)) && [iElem getY] + [iElem getHeight] <= [jElem getY] && [iElem getWidth] + [jElem getWidth] > right - left) {
          [iElem addDependantElementWithOrgOssPdfreporterEngineJRElement:jElem];
        }
      }
    }
  }
}

jint OrgOssPdfreporterEngineFillJRFillElementContainer_getElementFirstYWithOrgOssPdfreporterEngineFillJRFillElement_(OrgOssPdfreporterEngineFillJRFillElementContainer *self, OrgOssPdfreporterEngineFillJRFillElement *element) {
  jint elemFirstY;
  if (!self->isOverflow_ || self->hasPrintWhenOverflowElement_) {
    elemFirstY = 0;
  }
  else if ([((OrgOssPdfreporterEngineFillJRFillElement *) nil_chk(element)) getY] >= self->firstY_) {
    elemFirstY = self->firstY_;
  }
  else {
    elemFirstY = [element getY];
  }
  return elemFirstY;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineFillJRFillElementContainer)

@implementation OrgOssPdfreporterEngineFillJRFillElementContainer_$1

- (void)defaultStyleSetWithOrgOssPdfreporterEngineJRStyle:(id<OrgOssPdfreporterEngineJRStyle>)style {
  [this$0_ collectConditionalStyleWithOrgOssPdfreporterEngineJRStyle:style];
}

- (instancetype)initWithOrgOssPdfreporterEngineFillJRFillElementContainer:(OrgOssPdfreporterEngineFillJRFillElementContainer *)outer$ {
  OrgOssPdfreporterEngineFillJRFillElementContainer_$1_initWithOrgOssPdfreporterEngineFillJRFillElementContainer_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "defaultStyleSetWithOrgOssPdfreporterEngineJRStyle:", "defaultStyleSet", "V", 0x1, NULL, NULL },
    { "initWithOrgOssPdfreporterEngineFillJRFillElementContainer:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.oss.pdfreporter.engine.fill.JRFillElementContainer;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "OrgOssPdfreporterEngineFillJRFillElementContainer", "initConditionalStyles" };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineFillJRFillElementContainer_$1 = { 2, "", "org.oss.pdfreporter.engine.fill", "JRFillElementContainer", 0x8008, 2, methods, 1, fields, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_OrgOssPdfreporterEngineFillJRFillElementContainer_$1;
}

@end

void OrgOssPdfreporterEngineFillJRFillElementContainer_$1_initWithOrgOssPdfreporterEngineFillJRFillElementContainer_(OrgOssPdfreporterEngineFillJRFillElementContainer_$1 *self, OrgOssPdfreporterEngineFillJRFillElementContainer *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

OrgOssPdfreporterEngineFillJRFillElementContainer_$1 *new_OrgOssPdfreporterEngineFillJRFillElementContainer_$1_initWithOrgOssPdfreporterEngineFillJRFillElementContainer_(OrgOssPdfreporterEngineFillJRFillElementContainer *outer$) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineFillJRFillElementContainer_$1, initWithOrgOssPdfreporterEngineFillJRFillElementContainer_, outer$)
}

OrgOssPdfreporterEngineFillJRFillElementContainer_$1 *create_OrgOssPdfreporterEngineFillJRFillElementContainer_$1_initWithOrgOssPdfreporterEngineFillJRFillElementContainer_(OrgOssPdfreporterEngineFillJRFillElementContainer *outer$) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineFillJRFillElementContainer_$1, initWithOrgOssPdfreporterEngineFillJRFillElementContainer_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineFillJRFillElementContainer_$1)
