//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/fill/JRFillDatasetRun.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/Map.h"
#include "org/oss/pdfreporter/data/cache/DataCacheHandler.h"
#include "org/oss/pdfreporter/engine/JRDataSource.h"
#include "org/oss/pdfreporter/engine/JRDatasetRun.h"
#include "org/oss/pdfreporter/engine/JRException.h"
#include "org/oss/pdfreporter/engine/JRExpression.h"
#include "org/oss/pdfreporter/engine/JRParameter.h"
#include "org/oss/pdfreporter/engine/JRPropertiesHolder.h"
#include "org/oss/pdfreporter/engine/JRPropertiesMap.h"
#include "org/oss/pdfreporter/engine/JRPropertiesUtil.h"
#include "org/oss/pdfreporter/engine/JRQuery.h"
#include "org/oss/pdfreporter/engine/JRScriptletException.h"
#include "org/oss/pdfreporter/engine/fill/FillDatasetPosition.h"
#include "org/oss/pdfreporter/engine/fill/IJRFillParameter.h"
#include "org/oss/pdfreporter/engine/fill/JRBaseFiller.h"
#include "org/oss/pdfreporter/engine/fill/JRCalculator.h"
#include "org/oss/pdfreporter/engine/fill/JRFillContext.h"
#include "org/oss/pdfreporter/engine/fill/JRFillDataset.h"
#include "org/oss/pdfreporter/engine/fill/JRFillDatasetRun.h"
#include "org/oss/pdfreporter/engine/fill/JRFillElementDataset.h"
#include "org/oss/pdfreporter/engine/fill/JRFillObjectFactory.h"
#include "org/oss/pdfreporter/engine/fill/JRFillSubreport.h"
#include "org/oss/pdfreporter/engine/type/IncrementTypeEnum.h"
#include "org/oss/pdfreporter/engine/type/ResetTypeEnum.h"
#include "org/oss/pdfreporter/sql/IConnection.h"
#include "org/oss/pdfreporter/uses/java/util/UUID.h"

@implementation OrgOssPdfreporterEngineFillJRFillDatasetRun

- (instancetype)initWithOrgOssPdfreporterEngineFillJRBaseFiller:(OrgOssPdfreporterEngineFillJRBaseFiller *)filler
                        withOrgOssPdfreporterEngineJRDatasetRun:(id<OrgOssPdfreporterEngineJRDatasetRun>)datasetRun
             withOrgOssPdfreporterEngineFillJRFillObjectFactory:(OrgOssPdfreporterEngineFillJRFillObjectFactory *)factory {
  OrgOssPdfreporterEngineFillJRFillDatasetRun_initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineJRDatasetRun_withOrgOssPdfreporterEngineFillJRFillObjectFactory_(self, filler, datasetRun, factory);
  return self;
}

- (instancetype)initWithOrgOssPdfreporterEngineFillJRBaseFiller:(OrgOssPdfreporterEngineFillJRBaseFiller *)filler
                        withOrgOssPdfreporterEngineJRDatasetRun:(id<OrgOssPdfreporterEngineJRDatasetRun>)datasetRun
                   withOrgOssPdfreporterEngineFillJRFillDataset:(OrgOssPdfreporterEngineFillJRFillDataset *)dataset {
  OrgOssPdfreporterEngineFillJRFillDatasetRun_initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineJRDatasetRun_withOrgOssPdfreporterEngineFillJRFillDataset_(self, filler, datasetRun, dataset);
  return self;
}

- (void)evaluateWithOrgOssPdfreporterEngineFillJRFillElementDataset:(OrgOssPdfreporterEngineFillJRFillElementDataset *)elementDataset
                                                           withByte:(jbyte)evaluation {
  id<JavaUtilMap> parameterValues = OrgOssPdfreporterEngineFillJRFillSubreport_getParameterValuesWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineJRExpression_withOrgOssPdfreporterEngineJRDatasetParameterArray_withByte_withBoolean_withBoolean_withBoolean_(filler_, parametersMapExpression_, parameters_, evaluation, false, [((OrgOssPdfreporterEngineFillJRFillDataset *) nil_chk(dataset_)) getResourceBundle] != nil, false);
  @try {
    OrgOssPdfreporterEngineFillFillDatasetPosition *datasetPosition = new_OrgOssPdfreporterEngineFillFillDatasetPosition_initWithOrgOssPdfreporterEngineFillFillDatasetPosition_(((OrgOssPdfreporterEngineFillJRFillDataset *) nil_chk(((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler_))->mainDataset_))->fillPosition_);
    [datasetPosition addAttributeWithNSString:@"datasetRunUUID" withId:[self getUUID]];
    [((OrgOssPdfreporterEngineFillJRFillDataset *) nil_chk(filler_->mainDataset_)) setCacheRecordIndexWithOrgOssPdfreporterEngineFillFillDatasetPosition:datasetPosition withByte:evaluation];
    [dataset_ setFillPositionWithOrgOssPdfreporterEngineFillFillDatasetPosition:datasetPosition];
    NSString *cacheIncludedProp = OrgOssPdfreporterEngineJRPropertiesUtil_getOwnPropertyWithOrgOssPdfreporterEngineJRPropertiesHolder_withNSString_(self, OrgOssPdfreporterDataCacheDataCacheHandler_PROPERTY_INCLUDED);
    jboolean cacheIncluded = OrgOssPdfreporterEngineJRPropertiesUtil_asBooleanWithNSString_withBoolean_(cacheIncludedProp, true);
    [dataset_ setCacheSkippedWithBoolean:!cacheIncluded];
    if (dataSourceExpression_ != nil) {
      if (!([((OrgOssPdfreporterEngineFillJRFillContext *) nil_chk(filler_->fillContext_)) hasDataSnapshot] && cacheIncluded)) {
        id<OrgOssPdfreporterEngineJRDataSource> dataSource = (id<OrgOssPdfreporterEngineJRDataSource>) cast_check([filler_ evaluateExpressionWithOrgOssPdfreporterEngineJRExpression:dataSourceExpression_ withByte:evaluation], OrgOssPdfreporterEngineJRDataSource_class_());
        [dataset_ setDatasourceParameterValueWithJavaUtilMap:parameterValues withOrgOssPdfreporterEngineJRDataSource:dataSource];
      }
    }
    else if (connectionExpression_ != nil) {
      id<OrgOssPdfreporterSqlIConnection> connection = (id<OrgOssPdfreporterSqlIConnection>) cast_check([filler_ evaluateExpressionWithOrgOssPdfreporterEngineJRExpression:connectionExpression_ withByte:evaluation], OrgOssPdfreporterSqlIConnection_class_());
      [dataset_ setConnectionParameterValueWithJavaUtilMap:parameterValues withOrgOssPdfreporterSqlIConnection:connection];
    }
    [self copyConnectionParameterWithJavaUtilMap:parameterValues];
    [dataset_ initCalculator];
    [dataset_ setParameterValuesWithJavaUtilMap:parameterValues];
    [dataset_ initDatasource];
    [dataset_ filterElementDatasetsWithOrgOssPdfreporterEngineFillJRFillElementDataset:elementDataset];
    [self iterate];
  }
  @finally {
    [dataset_ closeDatasource];
    [dataset_ disposeParameterContributors];
    [dataset_ restoreElementDatasets];
  }
}

- (void)copyConnectionParameterWithJavaUtilMap:(id<JavaUtilMap>)parameterValues {
  id<OrgOssPdfreporterEngineJRQuery> query = [((OrgOssPdfreporterEngineFillJRFillDataset *) nil_chk(dataset_)) getQuery];
  if (query != nil) {
    NSString *language = [query getLanguage];
    if (connectionExpression_ == nil && ([((NSString *) nil_chk(language)) isEqual:@"sql"] || [language isEqual:@"SQL"]) && ![((id<JavaUtilMap>) nil_chk(parameterValues)) containsKeyWithId:OrgOssPdfreporterEngineJRParameter_REPORT_CONNECTION]) {
      id<OrgOssPdfreporterEngineFillIJRFillParameter> connParam = [((id<JavaUtilMap>) nil_chk([((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler_)) getParametersMap])) getWithId:OrgOssPdfreporterEngineJRParameter_REPORT_CONNECTION];
      id<OrgOssPdfreporterSqlIConnection> connection = (id<OrgOssPdfreporterSqlIConnection>) cast_check([((id<OrgOssPdfreporterEngineFillIJRFillParameter>) nil_chk(connParam)) getValue], OrgOssPdfreporterSqlIConnection_class_());
      (void) [((id<JavaUtilMap>) nil_chk(parameterValues)) putWithId:OrgOssPdfreporterEngineJRParameter_REPORT_CONNECTION withId:connection];
    }
  }
}

- (void)iterate {
  [((OrgOssPdfreporterEngineFillJRFillDataset *) nil_chk(dataset_)) start];
  [self init__];
  if ([self advanceDataset]) {
    [self detail];
    while ([self advanceDataset]) {
      [self checkInterrupted];
      [self group];
      [self detail];
    }
  }
}

- (jboolean)advanceDataset {
  return [((OrgOssPdfreporterEngineFillJRFillDataset *) nil_chk(dataset_)) next];
}

- (void)checkInterrupted {
  [((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler_)) checkInterrupted];
}

- (void)group {
  [((OrgOssPdfreporterEngineFillJRCalculator *) nil_chk(((OrgOssPdfreporterEngineFillJRFillDataset *) nil_chk(dataset_))->calculator_)) estimateGroupRuptures];
  [((OrgOssPdfreporterEngineFillJRCalculator *) nil_chk(dataset_->calculator_)) initializeVariablesWithOrgOssPdfreporterEngineTypeResetTypeEnum:JreLoadEnum(OrgOssPdfreporterEngineTypeResetTypeEnum, GROUP) withOrgOssPdfreporterEngineTypeIncrementTypeEnum:JreLoadEnum(OrgOssPdfreporterEngineTypeIncrementTypeEnum, GROUP)];
}

- (void)init__ {
  [((OrgOssPdfreporterEngineFillJRCalculator *) nil_chk(((OrgOssPdfreporterEngineFillJRFillDataset *) nil_chk(dataset_))->calculator_)) initializeVariablesWithOrgOssPdfreporterEngineTypeResetTypeEnum:JreLoadEnum(OrgOssPdfreporterEngineTypeResetTypeEnum, REPORT) withOrgOssPdfreporterEngineTypeIncrementTypeEnum:JreLoadEnum(OrgOssPdfreporterEngineTypeIncrementTypeEnum, REPORT)];
}

- (void)detail {
  [((OrgOssPdfreporterEngineFillJRCalculator *) nil_chk(((OrgOssPdfreporterEngineFillJRFillDataset *) nil_chk(dataset_))->calculator_)) calculateVariables];
}

- (NSString *)getDatasetName {
  return [((OrgOssPdfreporterEngineFillJRFillDataset *) nil_chk(dataset_)) getName];
}

- (id<OrgOssPdfreporterEngineJRExpression>)getParametersMapExpression {
  return parametersMapExpression_;
}

- (IOSObjectArray *)getParameters {
  return parameters_;
}

- (id<OrgOssPdfreporterEngineJRExpression>)getConnectionExpression {
  return connectionExpression_;
}

- (id<OrgOssPdfreporterEngineJRExpression>)getDataSourceExpression {
  return dataSourceExpression_;
}

- (OrgOssPdfreporterEngineFillJRFillDataset *)getDataset {
  return dataset_;
}

- (OrgOssPdfreporterUsesJavaUtilUUID *)getUUID {
  return [((id<OrgOssPdfreporterEngineJRDatasetRun>) nil_chk(parentDatasetRun_)) getUUID];
}

- (id)clone {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (jboolean)hasProperties {
  return [((id<OrgOssPdfreporterEngineJRDatasetRun>) nil_chk(parentDatasetRun_)) hasProperties];
}

- (OrgOssPdfreporterEngineJRPropertiesMap *)getPropertiesMap {
  return [((id<OrgOssPdfreporterEngineJRDatasetRun>) nil_chk(parentDatasetRun_)) getPropertiesMap];
}

- (id<OrgOssPdfreporterEngineJRPropertiesHolder>)getParentProperties {
  return nil;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self clone];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgOssPdfreporterEngineFillJRBaseFiller:withOrgOssPdfreporterEngineJRDatasetRun:withOrgOssPdfreporterEngineFillJRFillObjectFactory:", "JRFillDatasetRun", NULL, 0x1, NULL, NULL },
    { "initWithOrgOssPdfreporterEngineFillJRBaseFiller:withOrgOssPdfreporterEngineJRDatasetRun:withOrgOssPdfreporterEngineFillJRFillDataset:", "JRFillDatasetRun", NULL, 0x4, NULL, NULL },
    { "evaluateWithOrgOssPdfreporterEngineFillJRFillElementDataset:withByte:", "evaluate", "V", 0x1, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "copyConnectionParameterWithJavaUtilMap:", "copyConnectionParameter", "V", 0x4, NULL, "(Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;)V" },
    { "iterate", NULL, "V", 0x4, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "advanceDataset", NULL, "Z", 0x4, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "checkInterrupted", NULL, "V", 0x4, NULL, NULL },
    { "group", NULL, "V", 0x4, "Lorg.oss.pdfreporter.engine.JRException;Lorg.oss.pdfreporter.engine.JRScriptletException;", NULL },
    { "init__", "init", "V", 0x4, "Lorg.oss.pdfreporter.engine.JRScriptletException;Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "detail", NULL, "V", 0x4, "Lorg.oss.pdfreporter.engine.JRScriptletException;Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "getDatasetName", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getParametersMapExpression", NULL, "Lorg.oss.pdfreporter.engine.JRExpression;", 0x1, NULL, NULL },
    { "getParameters", NULL, "[Lorg.oss.pdfreporter.engine.JRDatasetParameter;", 0x1, NULL, NULL },
    { "getConnectionExpression", NULL, "Lorg.oss.pdfreporter.engine.JRExpression;", 0x1, NULL, NULL },
    { "getDataSourceExpression", NULL, "Lorg.oss.pdfreporter.engine.JRExpression;", 0x1, NULL, NULL },
    { "getDataset", NULL, "Lorg.oss.pdfreporter.engine.fill.JRFillDataset;", 0x4, NULL, NULL },
    { "getUUID", NULL, "Lorg.oss.pdfreporter.uses.java.util.UUID;", 0x1, NULL, NULL },
    { "clone", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "hasProperties", NULL, "Z", 0x1, NULL, NULL },
    { "getPropertiesMap", NULL, "Lorg.oss.pdfreporter.engine.JRPropertiesMap;", 0x1, NULL, NULL },
    { "getParentProperties", NULL, "Lorg.oss.pdfreporter.engine.JRPropertiesHolder;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "filler_", NULL, 0x14, "Lorg.oss.pdfreporter.engine.fill.JRBaseFiller;", NULL, NULL, .constantValue.asLong = 0 },
    { "parentDatasetRun_", NULL, 0x14, "Lorg.oss.pdfreporter.engine.JRDatasetRun;", NULL, NULL, .constantValue.asLong = 0 },
    { "dataset_", NULL, 0x14, "Lorg.oss.pdfreporter.engine.fill.JRFillDataset;", NULL, NULL, .constantValue.asLong = 0 },
    { "parametersMapExpression_", NULL, 0x4, "Lorg.oss.pdfreporter.engine.JRExpression;", NULL, NULL, .constantValue.asLong = 0 },
    { "parameters_", NULL, 0x4, "[Lorg.oss.pdfreporter.engine.JRDatasetParameter;", NULL, NULL, .constantValue.asLong = 0 },
    { "connectionExpression_", NULL, 0x4, "Lorg.oss.pdfreporter.engine.JRExpression;", NULL, NULL, .constantValue.asLong = 0 },
    { "dataSourceExpression_", NULL, 0x4, "Lorg.oss.pdfreporter.engine.JRExpression;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineFillJRFillDatasetRun = { 2, "JRFillDatasetRun", "org.oss.pdfreporter.engine.fill", NULL, 0x1, 21, methods, 7, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineFillJRFillDatasetRun;
}

@end

void OrgOssPdfreporterEngineFillJRFillDatasetRun_initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineJRDatasetRun_withOrgOssPdfreporterEngineFillJRFillObjectFactory_(OrgOssPdfreporterEngineFillJRFillDatasetRun *self, OrgOssPdfreporterEngineFillJRBaseFiller *filler, id<OrgOssPdfreporterEngineJRDatasetRun> datasetRun, OrgOssPdfreporterEngineFillJRFillObjectFactory *factory) {
  OrgOssPdfreporterEngineFillJRFillDatasetRun_initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineJRDatasetRun_withOrgOssPdfreporterEngineFillJRFillDataset_(self, filler, datasetRun, [((id<JavaUtilMap>) nil_chk(((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler))->datasetMap_)) getWithId:[((id<OrgOssPdfreporterEngineJRDatasetRun>) nil_chk(datasetRun)) getDatasetName]]);
  [((OrgOssPdfreporterEngineFillJRFillObjectFactory *) nil_chk(factory)) putWithId:datasetRun withId:self];
}

OrgOssPdfreporterEngineFillJRFillDatasetRun *new_OrgOssPdfreporterEngineFillJRFillDatasetRun_initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineJRDatasetRun_withOrgOssPdfreporterEngineFillJRFillObjectFactory_(OrgOssPdfreporterEngineFillJRBaseFiller *filler, id<OrgOssPdfreporterEngineJRDatasetRun> datasetRun, OrgOssPdfreporterEngineFillJRFillObjectFactory *factory) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineFillJRFillDatasetRun, initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineJRDatasetRun_withOrgOssPdfreporterEngineFillJRFillObjectFactory_, filler, datasetRun, factory)
}

OrgOssPdfreporterEngineFillJRFillDatasetRun *create_OrgOssPdfreporterEngineFillJRFillDatasetRun_initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineJRDatasetRun_withOrgOssPdfreporterEngineFillJRFillObjectFactory_(OrgOssPdfreporterEngineFillJRBaseFiller *filler, id<OrgOssPdfreporterEngineJRDatasetRun> datasetRun, OrgOssPdfreporterEngineFillJRFillObjectFactory *factory) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineFillJRFillDatasetRun, initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineJRDatasetRun_withOrgOssPdfreporterEngineFillJRFillObjectFactory_, filler, datasetRun, factory)
}

void OrgOssPdfreporterEngineFillJRFillDatasetRun_initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineJRDatasetRun_withOrgOssPdfreporterEngineFillJRFillDataset_(OrgOssPdfreporterEngineFillJRFillDatasetRun *self, OrgOssPdfreporterEngineFillJRBaseFiller *filler, id<OrgOssPdfreporterEngineJRDatasetRun> datasetRun, OrgOssPdfreporterEngineFillJRFillDataset *dataset) {
  NSObject_init(self);
  self->filler_ = filler;
  self->dataset_ = dataset;
  self->parentDatasetRun_ = datasetRun;
  self->parametersMapExpression_ = [((id<OrgOssPdfreporterEngineJRDatasetRun>) nil_chk(datasetRun)) getParametersMapExpression];
  self->parameters_ = [datasetRun getParameters];
  self->connectionExpression_ = [datasetRun getConnectionExpression];
  self->dataSourceExpression_ = [datasetRun getDataSourceExpression];
}

OrgOssPdfreporterEngineFillJRFillDatasetRun *new_OrgOssPdfreporterEngineFillJRFillDatasetRun_initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineJRDatasetRun_withOrgOssPdfreporterEngineFillJRFillDataset_(OrgOssPdfreporterEngineFillJRBaseFiller *filler, id<OrgOssPdfreporterEngineJRDatasetRun> datasetRun, OrgOssPdfreporterEngineFillJRFillDataset *dataset) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineFillJRFillDatasetRun, initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineJRDatasetRun_withOrgOssPdfreporterEngineFillJRFillDataset_, filler, datasetRun, dataset)
}

OrgOssPdfreporterEngineFillJRFillDatasetRun *create_OrgOssPdfreporterEngineFillJRFillDatasetRun_initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineJRDatasetRun_withOrgOssPdfreporterEngineFillJRFillDataset_(OrgOssPdfreporterEngineFillJRBaseFiller *filler, id<OrgOssPdfreporterEngineJRDatasetRun> datasetRun, OrgOssPdfreporterEngineFillJRFillDataset *dataset) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineFillJRFillDatasetRun, initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineJRDatasetRun_withOrgOssPdfreporterEngineFillJRFillDataset_, filler, datasetRun, dataset)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineFillJRFillDatasetRun)
