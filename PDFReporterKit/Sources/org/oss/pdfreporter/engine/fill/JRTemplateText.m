//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/fill/JRTemplateText.java
//

#include "J2ObjC_source.h"
#include "java/lang/Boolean.h"
#include "java/lang/Byte.h"
#include "java/lang/Integer.h"
#include "org/oss/pdfreporter/engine/JRConstants.h"
#include "org/oss/pdfreporter/engine/JRDefaultStyleProvider.h"
#include "org/oss/pdfreporter/engine/JRFont.h"
#include "org/oss/pdfreporter/engine/JRHyperlinkHelper.h"
#include "org/oss/pdfreporter/engine/JRLineBox.h"
#include "org/oss/pdfreporter/engine/JROrigin.h"
#include "org/oss/pdfreporter/engine/JRParagraph.h"
#include "org/oss/pdfreporter/engine/JRStaticText.h"
#include "org/oss/pdfreporter/engine/JRStyle.h"
#include "org/oss/pdfreporter/engine/JRTextElement.h"
#include "org/oss/pdfreporter/engine/JRTextField.h"
#include "org/oss/pdfreporter/engine/base/JRBaseLineBox.h"
#include "org/oss/pdfreporter/engine/base/JRBaseParagraph.h"
#include "org/oss/pdfreporter/engine/fill/JRTemplateElement.h"
#include "org/oss/pdfreporter/engine/fill/JRTemplateText.h"
#include "org/oss/pdfreporter/engine/type/HorizontalAlignEnum.h"
#include "org/oss/pdfreporter/engine/type/HyperlinkTargetEnum.h"
#include "org/oss/pdfreporter/engine/type/HyperlinkTypeEnum.h"
#include "org/oss/pdfreporter/engine/type/LineSpacingEnum.h"
#include "org/oss/pdfreporter/engine/type/ModeEnum.h"
#include "org/oss/pdfreporter/engine/type/RotationEnum.h"
#include "org/oss/pdfreporter/engine/type/VerticalAlignEnum.h"
#include "org/oss/pdfreporter/engine/util/JRStyleResolver.h"
#include "org/oss/pdfreporter/engine/util/ObjectUtils.h"
#include "org/oss/pdfreporter/geometry/IColor.h"

@interface OrgOssPdfreporterEngineFillJRTemplateText () {
 @public
  OrgOssPdfreporterEngineTypeHorizontalAlignEnum *horizontalAlignmentValue_;
  OrgOssPdfreporterEngineTypeVerticalAlignEnum *verticalAlignmentValue_;
  OrgOssPdfreporterEngineTypeRotationEnum *rotationValue_;
  NSString *markup_;
  NSString *linkType_;
  NSString *linkTarget_;
  jint PSEUDO_SERIAL_VERSION_UID_JRTemplateText_;
  JavaLangByte *horizontalAlignment_;
  JavaLangByte *verticalAlignment_;
  JavaLangByte *rotation_;
  JavaLangByte *lineSpacing_;
  OrgOssPdfreporterEngineTypeLineSpacingEnum *lineSpacingValue_;
  JavaLangByte *border_;
  JavaLangByte *topBorder_;
  JavaLangByte *leftBorder_;
  JavaLangByte *bottomBorder_;
  JavaLangByte *rightBorder_;
  id<OrgOssPdfreporterGeometryIColor> borderColor_;
  id<OrgOssPdfreporterGeometryIColor> topBorderColor_;
  id<OrgOssPdfreporterGeometryIColor> leftBorderColor_;
  id<OrgOssPdfreporterGeometryIColor> bottomBorderColor_;
  id<OrgOssPdfreporterGeometryIColor> rightBorderColor_;
  JavaLangInteger *padding_;
  JavaLangInteger *topPadding_;
  JavaLangInteger *leftPadding_;
  JavaLangInteger *bottomPadding_;
  JavaLangInteger *rightPadding_;
  JavaLangBoolean *isStyledText_;
  jbyte hyperlinkType_;
  jbyte hyperlinkTarget_;
}

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRTemplateText, horizontalAlignmentValue_, OrgOssPdfreporterEngineTypeHorizontalAlignEnum *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRTemplateText, verticalAlignmentValue_, OrgOssPdfreporterEngineTypeVerticalAlignEnum *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRTemplateText, rotationValue_, OrgOssPdfreporterEngineTypeRotationEnum *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRTemplateText, markup_, NSString *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRTemplateText, linkType_, NSString *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRTemplateText, linkTarget_, NSString *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRTemplateText, horizontalAlignment_, JavaLangByte *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRTemplateText, verticalAlignment_, JavaLangByte *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRTemplateText, rotation_, JavaLangByte *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRTemplateText, lineSpacing_, JavaLangByte *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRTemplateText, lineSpacingValue_, OrgOssPdfreporterEngineTypeLineSpacingEnum *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRTemplateText, border_, JavaLangByte *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRTemplateText, topBorder_, JavaLangByte *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRTemplateText, leftBorder_, JavaLangByte *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRTemplateText, bottomBorder_, JavaLangByte *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRTemplateText, rightBorder_, JavaLangByte *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRTemplateText, borderColor_, id<OrgOssPdfreporterGeometryIColor>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRTemplateText, topBorderColor_, id<OrgOssPdfreporterGeometryIColor>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRTemplateText, leftBorderColor_, id<OrgOssPdfreporterGeometryIColor>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRTemplateText, bottomBorderColor_, id<OrgOssPdfreporterGeometryIColor>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRTemplateText, rightBorderColor_, id<OrgOssPdfreporterGeometryIColor>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRTemplateText, padding_, JavaLangInteger *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRTemplateText, topPadding_, JavaLangInteger *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRTemplateText, leftPadding_, JavaLangInteger *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRTemplateText, bottomPadding_, JavaLangInteger *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRTemplateText, rightPadding_, JavaLangInteger *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRTemplateText, isStyledText_, JavaLangBoolean *)

inline jlong OrgOssPdfreporterEngineFillJRTemplateText_get_serialVersionUID();
#define OrgOssPdfreporterEngineFillJRTemplateText_serialVersionUID 10200LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgOssPdfreporterEngineFillJRTemplateText, serialVersionUID, jlong)

@implementation OrgOssPdfreporterEngineFillJRTemplateText

- (instancetype)initWithOrgOssPdfreporterEngineJROrigin:(OrgOssPdfreporterEngineJROrigin *)origin
      withOrgOssPdfreporterEngineJRDefaultStyleProvider:(id<OrgOssPdfreporterEngineJRDefaultStyleProvider>)defaultStyleProvider
                withOrgOssPdfreporterEngineJRStaticText:(id<OrgOssPdfreporterEngineJRStaticText>)staticText {
  OrgOssPdfreporterEngineFillJRTemplateText_initWithOrgOssPdfreporterEngineJROrigin_withOrgOssPdfreporterEngineJRDefaultStyleProvider_withOrgOssPdfreporterEngineJRStaticText_(self, origin, defaultStyleProvider, staticText);
  return self;
}

- (instancetype)initWithOrgOssPdfreporterEngineJROrigin:(OrgOssPdfreporterEngineJROrigin *)origin
      withOrgOssPdfreporterEngineJRDefaultStyleProvider:(id<OrgOssPdfreporterEngineJRDefaultStyleProvider>)defaultStyleProvider
                 withOrgOssPdfreporterEngineJRTextField:(id<OrgOssPdfreporterEngineJRTextField>)textField {
  OrgOssPdfreporterEngineFillJRTemplateText_initWithOrgOssPdfreporterEngineJROrigin_withOrgOssPdfreporterEngineJRDefaultStyleProvider_withOrgOssPdfreporterEngineJRTextField_(self, origin, defaultStyleProvider, textField);
  return self;
}

- (instancetype)initWithOrgOssPdfreporterEngineJROrigin:(OrgOssPdfreporterEngineJROrigin *)origin
      withOrgOssPdfreporterEngineJRDefaultStyleProvider:(id<OrgOssPdfreporterEngineJRDefaultStyleProvider>)defaultStyleProvider {
  OrgOssPdfreporterEngineFillJRTemplateText_initWithOrgOssPdfreporterEngineJROrigin_withOrgOssPdfreporterEngineJRDefaultStyleProvider_(self, origin, defaultStyleProvider);
  return self;
}

- (void)setStaticTextWithOrgOssPdfreporterEngineJRStaticText:(id<OrgOssPdfreporterEngineJRStaticText>)staticText {
  [self setTextElementWithOrgOssPdfreporterEngineJRTextElement:staticText];
}

- (void)setTextFieldWithOrgOssPdfreporterEngineJRTextField:(id<OrgOssPdfreporterEngineJRTextField>)textField {
  [self setTextElementWithOrgOssPdfreporterEngineJRTextElement:textField];
  [self setLinkTypeWithNSString:[((id<OrgOssPdfreporterEngineJRTextField>) nil_chk(textField)) getLinkType]];
  [self setLinkTargetWithNSString:[textField getLinkTarget]];
}

- (void)setTextElementWithOrgOssPdfreporterEngineJRTextElement:(id<OrgOssPdfreporterEngineJRTextElement>)textElement {
  [super setElementWithOrgOssPdfreporterEngineJRElement:textElement];
  [self copyLineBoxWithOrgOssPdfreporterEngineJRLineBox:[((id<OrgOssPdfreporterEngineJRTextElement>) nil_chk(textElement)) getLineBox]];
  [self copyParagraphWithOrgOssPdfreporterEngineJRParagraph:[textElement getParagraph]];
  fontName_ = [textElement getOwnFontName];
  isBold_ = [textElement isOwnBold];
  isItalic_ = [textElement isOwnItalic];
  isUnderline_ = [textElement isOwnUnderline];
  isStrikeThrough_ = [textElement isOwnStrikeThrough];
  fontSize_ = [textElement getOwnFontSize];
  pdfFontName_ = [textElement getOwnPdfFontName];
  pdfEncoding_ = [textElement getOwnPdfEncoding];
  isPdfEmbedded_ = [textElement isOwnPdfEmbedded];
  horizontalAlignmentValue_ = [textElement getOwnHorizontalAlignmentValue];
  verticalAlignmentValue_ = [textElement getOwnVerticalAlignmentValue];
  rotationValue_ = [textElement getOwnRotationValue];
  markup_ = [textElement getOwnMarkup];
}

- (void)copyLineBoxWithOrgOssPdfreporterEngineJRLineBox:(id<OrgOssPdfreporterEngineJRLineBox>)box {
  lineBox_ = [((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk(box)) cloneWithOrgOssPdfreporterEngineJRBoxContainer:self];
}

- (void)copyParagraphWithOrgOssPdfreporterEngineJRParagraph:(id<OrgOssPdfreporterEngineJRParagraph>)prg {
  paragraph_ = [((id<OrgOssPdfreporterEngineJRParagraph>) nil_chk(prg)) cloneWithOrgOssPdfreporterEngineJRParagraphContainer:self];
}

- (OrgOssPdfreporterEngineTypeModeEnum *)getModeValue {
  return OrgOssPdfreporterEngineUtilJRStyleResolver_getModeWithOrgOssPdfreporterEngineJRCommonElement_withOrgOssPdfreporterEngineTypeModeEnum_(self, JreLoadEnum(OrgOssPdfreporterEngineTypeModeEnum, TRANSPARENT));
}

- (OrgOssPdfreporterEngineTypeHorizontalAlignEnum *)getHorizontalAlignmentValue {
  return OrgOssPdfreporterEngineUtilJRStyleResolver_getHorizontalAlignmentValueWithOrgOssPdfreporterEngineJRAlignment_(self);
}

- (OrgOssPdfreporterEngineTypeHorizontalAlignEnum *)getOwnHorizontalAlignmentValue {
  return horizontalAlignmentValue_;
}

- (void)setHorizontalAlignmentWithOrgOssPdfreporterEngineTypeHorizontalAlignEnum:(OrgOssPdfreporterEngineTypeHorizontalAlignEnum *)horizontalAlignmentValue {
  self->horizontalAlignmentValue_ = horizontalAlignmentValue;
}

- (OrgOssPdfreporterEngineTypeVerticalAlignEnum *)getVerticalAlignmentValue {
  return OrgOssPdfreporterEngineUtilJRStyleResolver_getVerticalAlignmentValueWithOrgOssPdfreporterEngineJRAlignment_(self);
}

- (OrgOssPdfreporterEngineTypeVerticalAlignEnum *)getOwnVerticalAlignmentValue {
  return verticalAlignmentValue_;
}

- (void)setVerticalAlignmentWithOrgOssPdfreporterEngineTypeVerticalAlignEnum:(OrgOssPdfreporterEngineTypeVerticalAlignEnum *)verticalAlignmentValue {
  self->verticalAlignmentValue_ = verticalAlignmentValue;
}

- (OrgOssPdfreporterEngineTypeRotationEnum *)getRotationValue {
  return OrgOssPdfreporterEngineUtilJRStyleResolver_getRotationValueWithOrgOssPdfreporterEngineJRCommonText_(self);
}

- (OrgOssPdfreporterEngineTypeRotationEnum *)getOwnRotationValue {
  return self->rotationValue_;
}

- (void)setRotationWithOrgOssPdfreporterEngineTypeRotationEnum:(OrgOssPdfreporterEngineTypeRotationEnum *)rotationValue {
  self->rotationValue_ = rotationValue;
}

- (OrgOssPdfreporterEngineTypeLineSpacingEnum *)getLineSpacingValue {
  return [((id<OrgOssPdfreporterEngineJRParagraph>) nil_chk([self getParagraph])) getLineSpacing];
}

- (OrgOssPdfreporterEngineTypeLineSpacingEnum *)getOwnLineSpacingValue {
  return [((id<OrgOssPdfreporterEngineJRParagraph>) nil_chk([self getParagraph])) getOwnLineSpacing];
}

- (void)setLineSpacingWithOrgOssPdfreporterEngineTypeLineSpacingEnum:(OrgOssPdfreporterEngineTypeLineSpacingEnum *)lineSpacing {
  [((id<OrgOssPdfreporterEngineJRParagraph>) nil_chk([self getParagraph])) setLineSpacingWithOrgOssPdfreporterEngineTypeLineSpacingEnum:lineSpacing];
}

- (NSString *)getMarkup {
  return OrgOssPdfreporterEngineUtilJRStyleResolver_getMarkupWithOrgOssPdfreporterEngineJRCommonText_(self);
}

- (NSString *)getOwnMarkup {
  return markup_;
}

- (void)setMarkupWithNSString:(NSString *)markup {
  self->markup_ = markup;
}

- (id<OrgOssPdfreporterEngineJRLineBox>)getLineBox {
  return lineBox_;
}

- (id<OrgOssPdfreporterEngineJRParagraph>)getParagraph {
  return paragraph_;
}

- (id<OrgOssPdfreporterEngineJRFont>)getFont {
  return self;
}

- (OrgOssPdfreporterEngineTypeHyperlinkTypeEnum *)getHyperlinkTypeValue {
  return OrgOssPdfreporterEngineJRHyperlinkHelper_getHyperlinkTypeValueWithNSString_([self getLinkType]);
}

- (jbyte)getHyperlinkTarget {
  return [((OrgOssPdfreporterEngineTypeHyperlinkTargetEnum *) nil_chk([self getHyperlinkTargetValue])) getValue];
}

- (OrgOssPdfreporterEngineTypeHyperlinkTargetEnum *)getHyperlinkTargetValue {
  return OrgOssPdfreporterEngineJRHyperlinkHelper_getHyperlinkTargetValueWithNSString_([self getLinkTarget]);
}

- (NSString *)getFontName {
  return OrgOssPdfreporterEngineUtilJRStyleResolver_getFontNameWithOrgOssPdfreporterEngineJRFont_(self);
}

- (NSString *)getOwnFontName {
  return fontName_;
}

- (void)setFontNameWithNSString:(NSString *)fontName {
  self->fontName_ = fontName;
}

- (jboolean)isBold {
  return OrgOssPdfreporterEngineUtilJRStyleResolver_isBoldWithOrgOssPdfreporterEngineJRFont_(self);
}

- (JavaLangBoolean *)isOwnBold {
  return isBold_;
}

- (void)setBoldWithBoolean:(jboolean)isBold {
  [self setBoldWithJavaLangBoolean:isBold ? JreLoadStatic(JavaLangBoolean, TRUE) : JreLoadStatic(JavaLangBoolean, FALSE)];
}

- (void)setBoldWithJavaLangBoolean:(JavaLangBoolean *)isBold {
  self->isBold_ = isBold;
}

- (jboolean)isItalic {
  return OrgOssPdfreporterEngineUtilJRStyleResolver_isItalicWithOrgOssPdfreporterEngineJRFont_(self);
}

- (JavaLangBoolean *)isOwnItalic {
  return isItalic_;
}

- (void)setItalicWithBoolean:(jboolean)isItalic {
  [self setItalicWithJavaLangBoolean:isItalic ? JreLoadStatic(JavaLangBoolean, TRUE) : JreLoadStatic(JavaLangBoolean, FALSE)];
}

- (void)setItalicWithJavaLangBoolean:(JavaLangBoolean *)isItalic {
  self->isItalic_ = isItalic;
}

- (jboolean)isUnderline {
  return OrgOssPdfreporterEngineUtilJRStyleResolver_isUnderlineWithOrgOssPdfreporterEngineJRFont_(self);
}

- (JavaLangBoolean *)isOwnUnderline {
  return isUnderline_;
}

- (void)setUnderlineWithBoolean:(jboolean)isUnderline {
  [self setUnderlineWithJavaLangBoolean:isUnderline ? JreLoadStatic(JavaLangBoolean, TRUE) : JreLoadStatic(JavaLangBoolean, FALSE)];
}

- (void)setUnderlineWithJavaLangBoolean:(JavaLangBoolean *)isUnderline {
  self->isUnderline_ = isUnderline;
}

- (jboolean)isStrikeThrough {
  return OrgOssPdfreporterEngineUtilJRStyleResolver_isStrikeThroughWithOrgOssPdfreporterEngineJRFont_(self);
}

- (JavaLangBoolean *)isOwnStrikeThrough {
  return isStrikeThrough_;
}

- (void)setStrikeThroughWithBoolean:(jboolean)isStrikeThrough {
  [self setStrikeThroughWithJavaLangBoolean:isStrikeThrough ? JreLoadStatic(JavaLangBoolean, TRUE) : JreLoadStatic(JavaLangBoolean, FALSE)];
}

- (void)setStrikeThroughWithJavaLangBoolean:(JavaLangBoolean *)isStrikeThrough {
  self->isStrikeThrough_ = isStrikeThrough;
}

- (jint)getFontSize {
  return OrgOssPdfreporterEngineUtilJRStyleResolver_getFontSizeWithOrgOssPdfreporterEngineJRFont_(self);
}

- (JavaLangInteger *)getOwnFontSize {
  return fontSize_;
}

- (void)setFontSizeWithInt:(jint)fontSize {
  [self setFontSizeWithJavaLangInteger:JavaLangInteger_valueOfWithInt_(fontSize)];
}

- (void)setFontSizeWithJavaLangInteger:(JavaLangInteger *)fontSize {
  self->fontSize_ = fontSize;
}

- (NSString *)getPdfFontName {
  return OrgOssPdfreporterEngineUtilJRStyleResolver_getPdfFontNameWithOrgOssPdfreporterEngineJRFont_(self);
}

- (NSString *)getOwnPdfFontName {
  return pdfFontName_;
}

- (void)setPdfFontNameWithNSString:(NSString *)pdfFontName {
  self->pdfFontName_ = pdfFontName;
}

- (NSString *)getPdfEncoding {
  return OrgOssPdfreporterEngineUtilJRStyleResolver_getPdfEncodingWithOrgOssPdfreporterEngineJRFont_(self);
}

- (NSString *)getOwnPdfEncoding {
  return pdfEncoding_;
}

- (void)setPdfEncodingWithNSString:(NSString *)pdfEncoding {
  self->pdfEncoding_ = pdfEncoding;
}

- (jboolean)isPdfEmbedded {
  return OrgOssPdfreporterEngineUtilJRStyleResolver_isPdfEmbeddedWithOrgOssPdfreporterEngineJRFont_(self);
}

- (JavaLangBoolean *)isOwnPdfEmbedded {
  return isPdfEmbedded_;
}

- (void)setPdfEmbeddedWithBoolean:(jboolean)isPdfEmbedded {
  [self setPdfEmbeddedWithJavaLangBoolean:isPdfEmbedded ? JreLoadStatic(JavaLangBoolean, TRUE) : JreLoadStatic(JavaLangBoolean, FALSE)];
}

- (void)setPdfEmbeddedWithJavaLangBoolean:(JavaLangBoolean *)isPdfEmbedded {
  self->isPdfEmbedded_ = isPdfEmbedded;
}

- (id<OrgOssPdfreporterEngineJRStyle>)getStyle {
  return parentStyle_;
}

- (NSString *)getPattern {
  return pattern_;
}

- (void)setPatternWithNSString:(NSString *)pattern {
  self->pattern_ = pattern;
}

- (NSString *)getValueClassName {
  return valueClassName_;
}

- (void)setValueClassNameWithNSString:(NSString *)valueClassName {
  self->valueClassName_ = valueClassName;
}

- (NSString *)getFormatFactoryClass {
  return formatFactoryClass_;
}

- (void)setFormatFactoryClassWithNSString:(NSString *)formatFactoryClass {
  self->formatFactoryClass_ = formatFactoryClass;
}

- (NSString *)getLocaleCode {
  return localeCode_;
}

- (void)setLocaleCodeWithNSString:(NSString *)localeCode {
  self->localeCode_ = localeCode;
}

- (NSString *)getTimeZoneId {
  return timeZoneId_;
}

- (void)setTimeZoneIdWithNSString:(NSString *)timeZoneId {
  self->timeZoneId_ = timeZoneId;
}

- (NSString *)getLinkType {
  return linkType_;
}

- (void)setLinkTypeWithNSString:(NSString *)linkType {
  self->linkType_ = linkType;
}

- (void)setLinkTargetWithNSString:(NSString *)linkTarget {
  self->linkTarget_ = linkTarget;
}

- (NSString *)getLinkTarget {
  return linkTarget_;
}

- (id<OrgOssPdfreporterGeometryIColor>)getDefaultLineColor {
  return [self getForecolor];
}

- (jint)getHashCode {
  OrgOssPdfreporterEngineUtilObjectUtils_HashCode *hash_ = OrgOssPdfreporterEngineUtilObjectUtils_hash__();
  [self addTemplateHashWithOrgOssPdfreporterEngineUtilObjectUtils_HashCode:hash_];
  [((OrgOssPdfreporterEngineUtilObjectUtils_HashCode *) nil_chk(hash_)) addWithId:horizontalAlignmentValue_];
  [hash_ addWithId:verticalAlignmentValue_];
  [hash_ addWithId:rotationValue_];
  [hash_ addWithId:markup_];
  [hash_ addWithId:linkType_];
  [hash_ addWithId:linkTarget_];
  [hash_ addIdenticalWithId:lineBox_];
  [hash_ addIdenticalWithId:paragraph_];
  [hash_ addWithId:fontName_];
  [hash_ addWithId:isBold_];
  [hash_ addWithId:isItalic_];
  [hash_ addWithId:isUnderline_];
  [hash_ addWithId:isStrikeThrough_];
  [hash_ addWithId:fontSize_];
  [hash_ addWithId:pdfFontName_];
  [hash_ addWithId:pdfEncoding_];
  [hash_ addWithId:isPdfEmbedded_];
  [hash_ addWithId:valueClassName_];
  [hash_ addWithId:pattern_];
  [hash_ addWithId:formatFactoryClass_];
  [hash_ addWithId:localeCode_];
  [hash_ addWithId:timeZoneId_];
  return [hash_ getHashCode];
}

- (jboolean)isIdenticalWithId:(id)object {
  if (self == object) {
    return true;
  }
  if (!([object isKindOfClass:[OrgOssPdfreporterEngineFillJRTemplateText class]])) {
    return false;
  }
  OrgOssPdfreporterEngineFillJRTemplateText *template_ = (OrgOssPdfreporterEngineFillJRTemplateText *) cast_chk(object, [OrgOssPdfreporterEngineFillJRTemplateText class]);
  return [self templateIdenticalWithOrgOssPdfreporterEngineFillJRTemplateElement:template_] && OrgOssPdfreporterEngineUtilObjectUtils_equalsWithJavaLangEnum_withJavaLangEnum_(horizontalAlignmentValue_, ((OrgOssPdfreporterEngineFillJRTemplateText *) nil_chk(template_))->horizontalAlignmentValue_) && OrgOssPdfreporterEngineUtilObjectUtils_equalsWithJavaLangEnum_withJavaLangEnum_(verticalAlignmentValue_, template_->verticalAlignmentValue_) && OrgOssPdfreporterEngineUtilObjectUtils_equalsWithJavaLangEnum_withJavaLangEnum_(rotationValue_, template_->rotationValue_) && OrgOssPdfreporterEngineUtilObjectUtils_equalsWithId_withId_(markup_, template_->markup_) && OrgOssPdfreporterEngineUtilObjectUtils_equalsWithId_withId_(linkType_, template_->linkType_) && OrgOssPdfreporterEngineUtilObjectUtils_equalsWithId_withId_(linkTarget_, template_->linkTarget_) && OrgOssPdfreporterEngineUtilObjectUtils_identicalWithId_withId_(lineBox_, template_->lineBox_) && OrgOssPdfreporterEngineUtilObjectUtils_identicalWithId_withId_(paragraph_, template_->paragraph_) && OrgOssPdfreporterEngineUtilObjectUtils_equalsWithId_withId_(fontName_, template_->fontName_) && OrgOssPdfreporterEngineUtilObjectUtils_equalsWithId_withId_(isBold_, template_->isBold_) && OrgOssPdfreporterEngineUtilObjectUtils_equalsWithId_withId_(isItalic_, template_->isItalic_) && OrgOssPdfreporterEngineUtilObjectUtils_equalsWithId_withId_(isUnderline_, template_->isUnderline_) && OrgOssPdfreporterEngineUtilObjectUtils_equalsWithId_withId_(isStrikeThrough_, template_->isStrikeThrough_) && OrgOssPdfreporterEngineUtilObjectUtils_equalsWithId_withId_(fontSize_, template_->fontSize_) && OrgOssPdfreporterEngineUtilObjectUtils_equalsWithId_withId_(pdfFontName_, template_->pdfFontName_) && OrgOssPdfreporterEngineUtilObjectUtils_equalsWithId_withId_(pdfEncoding_, template_->pdfEncoding_) && OrgOssPdfreporterEngineUtilObjectUtils_equalsWithId_withId_(isPdfEmbedded_, template_->isPdfEmbedded_) && OrgOssPdfreporterEngineUtilObjectUtils_equalsWithId_withId_(valueClassName_, template_->valueClassName_) && OrgOssPdfreporterEngineUtilObjectUtils_equalsWithId_withId_(pattern_, template_->pattern_) && OrgOssPdfreporterEngineUtilObjectUtils_equalsWithId_withId_(formatFactoryClass_, template_->formatFactoryClass_) && OrgOssPdfreporterEngineUtilObjectUtils_equalsWithId_withId_(localeCode_, template_->localeCode_) && OrgOssPdfreporterEngineUtilObjectUtils_equalsWithId_withId_(timeZoneId_, template_->timeZoneId_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgOssPdfreporterEngineJROrigin:withOrgOssPdfreporterEngineJRDefaultStyleProvider:withOrgOssPdfreporterEngineJRStaticText:", "JRTemplateText", NULL, 0x4, NULL, NULL },
    { "initWithOrgOssPdfreporterEngineJROrigin:withOrgOssPdfreporterEngineJRDefaultStyleProvider:withOrgOssPdfreporterEngineJRTextField:", "JRTemplateText", NULL, 0x4, NULL, NULL },
    { "initWithOrgOssPdfreporterEngineJROrigin:withOrgOssPdfreporterEngineJRDefaultStyleProvider:", "JRTemplateText", NULL, 0x1, NULL, NULL },
    { "setStaticTextWithOrgOssPdfreporterEngineJRStaticText:", "setStaticText", "V", 0x4, NULL, NULL },
    { "setTextFieldWithOrgOssPdfreporterEngineJRTextField:", "setTextField", "V", 0x4, NULL, NULL },
    { "setTextElementWithOrgOssPdfreporterEngineJRTextElement:", "setTextElement", "V", 0x4, NULL, NULL },
    { "copyLineBoxWithOrgOssPdfreporterEngineJRLineBox:", "copyLineBox", "V", 0x1, NULL, NULL },
    { "copyParagraphWithOrgOssPdfreporterEngineJRParagraph:", "copyParagraph", "V", 0x1, NULL, NULL },
    { "getModeValue", NULL, "Lorg.oss.pdfreporter.engine.type.ModeEnum;", 0x1, NULL, NULL },
    { "getHorizontalAlignmentValue", NULL, "Lorg.oss.pdfreporter.engine.type.HorizontalAlignEnum;", 0x1, NULL, NULL },
    { "getOwnHorizontalAlignmentValue", NULL, "Lorg.oss.pdfreporter.engine.type.HorizontalAlignEnum;", 0x1, NULL, NULL },
    { "setHorizontalAlignmentWithOrgOssPdfreporterEngineTypeHorizontalAlignEnum:", "setHorizontalAlignment", "V", 0x1, NULL, NULL },
    { "getVerticalAlignmentValue", NULL, "Lorg.oss.pdfreporter.engine.type.VerticalAlignEnum;", 0x1, NULL, NULL },
    { "getOwnVerticalAlignmentValue", NULL, "Lorg.oss.pdfreporter.engine.type.VerticalAlignEnum;", 0x1, NULL, NULL },
    { "setVerticalAlignmentWithOrgOssPdfreporterEngineTypeVerticalAlignEnum:", "setVerticalAlignment", "V", 0x1, NULL, NULL },
    { "getRotationValue", NULL, "Lorg.oss.pdfreporter.engine.type.RotationEnum;", 0x1, NULL, NULL },
    { "getOwnRotationValue", NULL, "Lorg.oss.pdfreporter.engine.type.RotationEnum;", 0x1, NULL, NULL },
    { "setRotationWithOrgOssPdfreporterEngineTypeRotationEnum:", "setRotation", "V", 0x1, NULL, NULL },
    { "getLineSpacingValue", NULL, "Lorg.oss.pdfreporter.engine.type.LineSpacingEnum;", 0x1, NULL, NULL },
    { "getOwnLineSpacingValue", NULL, "Lorg.oss.pdfreporter.engine.type.LineSpacingEnum;", 0x1, NULL, NULL },
    { "setLineSpacingWithOrgOssPdfreporterEngineTypeLineSpacingEnum:", "setLineSpacing", "V", 0x1, NULL, NULL },
    { "getMarkup", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getOwnMarkup", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "setMarkupWithNSString:", "setMarkup", "V", 0x1, NULL, NULL },
    { "getLineBox", NULL, "Lorg.oss.pdfreporter.engine.JRLineBox;", 0x1, NULL, NULL },
    { "getParagraph", NULL, "Lorg.oss.pdfreporter.engine.JRParagraph;", 0x1, NULL, NULL },
    { "getFont", NULL, "Lorg.oss.pdfreporter.engine.JRFont;", 0x1, NULL, NULL },
    { "getHyperlinkTypeValue", NULL, "Lorg.oss.pdfreporter.engine.type.HyperlinkTypeEnum;", 0x1, NULL, NULL },
    { "getHyperlinkTarget", NULL, "B", 0x1, NULL, NULL },
    { "getHyperlinkTargetValue", NULL, "Lorg.oss.pdfreporter.engine.type.HyperlinkTargetEnum;", 0x1, NULL, NULL },
    { "getFontName", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getOwnFontName", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "setFontNameWithNSString:", "setFontName", "V", 0x1, NULL, NULL },
    { "isBold", NULL, "Z", 0x1, NULL, NULL },
    { "isOwnBold", NULL, "Ljava.lang.Boolean;", 0x1, NULL, NULL },
    { "setBoldWithBoolean:", "setBold", "V", 0x1, NULL, NULL },
    { "setBoldWithJavaLangBoolean:", "setBold", "V", 0x1, NULL, NULL },
    { "isItalic", NULL, "Z", 0x1, NULL, NULL },
    { "isOwnItalic", NULL, "Ljava.lang.Boolean;", 0x1, NULL, NULL },
    { "setItalicWithBoolean:", "setItalic", "V", 0x1, NULL, NULL },
    { "setItalicWithJavaLangBoolean:", "setItalic", "V", 0x1, NULL, NULL },
    { "isUnderline", NULL, "Z", 0x1, NULL, NULL },
    { "isOwnUnderline", NULL, "Ljava.lang.Boolean;", 0x1, NULL, NULL },
    { "setUnderlineWithBoolean:", "setUnderline", "V", 0x1, NULL, NULL },
    { "setUnderlineWithJavaLangBoolean:", "setUnderline", "V", 0x1, NULL, NULL },
    { "isStrikeThrough", NULL, "Z", 0x1, NULL, NULL },
    { "isOwnStrikeThrough", NULL, "Ljava.lang.Boolean;", 0x1, NULL, NULL },
    { "setStrikeThroughWithBoolean:", "setStrikeThrough", "V", 0x1, NULL, NULL },
    { "setStrikeThroughWithJavaLangBoolean:", "setStrikeThrough", "V", 0x1, NULL, NULL },
    { "getFontSize", NULL, "I", 0x1, NULL, NULL },
    { "getOwnFontSize", NULL, "Ljava.lang.Integer;", 0x1, NULL, NULL },
    { "setFontSizeWithInt:", "setFontSize", "V", 0x1, NULL, NULL },
    { "setFontSizeWithJavaLangInteger:", "setFontSize", "V", 0x1, NULL, NULL },
    { "getPdfFontName", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getOwnPdfFontName", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "setPdfFontNameWithNSString:", "setPdfFontName", "V", 0x1, NULL, NULL },
    { "getPdfEncoding", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getOwnPdfEncoding", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "setPdfEncodingWithNSString:", "setPdfEncoding", "V", 0x1, NULL, NULL },
    { "isPdfEmbedded", NULL, "Z", 0x1, NULL, NULL },
    { "isOwnPdfEmbedded", NULL, "Ljava.lang.Boolean;", 0x1, NULL, NULL },
    { "setPdfEmbeddedWithBoolean:", "setPdfEmbedded", "V", 0x1, NULL, NULL },
    { "setPdfEmbeddedWithJavaLangBoolean:", "setPdfEmbedded", "V", 0x1, NULL, NULL },
    { "getStyle", NULL, "Lorg.oss.pdfreporter.engine.JRStyle;", 0x1, NULL, NULL },
    { "getPattern", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "setPatternWithNSString:", "setPattern", "V", 0x1, NULL, NULL },
    { "getValueClassName", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "setValueClassNameWithNSString:", "setValueClassName", "V", 0x1, NULL, NULL },
    { "getFormatFactoryClass", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "setFormatFactoryClassWithNSString:", "setFormatFactoryClass", "V", 0x1, NULL, NULL },
    { "getLocaleCode", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "setLocaleCodeWithNSString:", "setLocaleCode", "V", 0x1, NULL, NULL },
    { "getTimeZoneId", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "setTimeZoneIdWithNSString:", "setTimeZoneId", "V", 0x1, NULL, NULL },
    { "getLinkType", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "setLinkTypeWithNSString:", "setLinkType", "V", 0x1, NULL, NULL },
    { "setLinkTargetWithNSString:", "setLinkTarget", "V", 0x4, NULL, NULL },
    { "getLinkTarget", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getDefaultLineColor", NULL, "Lorg.oss.pdfreporter.geometry.IColor;", 0x1, NULL, NULL },
    { "getHashCode", NULL, "I", 0x1, NULL, NULL },
    { "isIdenticalWithId:", "isIdentical", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "serialVersionUID", 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgOssPdfreporterEngineFillJRTemplateText_serialVersionUID },
    { "horizontalAlignmentValue_", NULL, 0x2, "Lorg.oss.pdfreporter.engine.type.HorizontalAlignEnum;", NULL, NULL, .constantValue.asLong = 0 },
    { "verticalAlignmentValue_", NULL, 0x2, "Lorg.oss.pdfreporter.engine.type.VerticalAlignEnum;", NULL, NULL, .constantValue.asLong = 0 },
    { "rotationValue_", NULL, 0x2, "Lorg.oss.pdfreporter.engine.type.RotationEnum;", NULL, NULL, .constantValue.asLong = 0 },
    { "markup_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "linkType_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "linkTarget_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "lineBox_", NULL, 0x4, "Lorg.oss.pdfreporter.engine.JRLineBox;", NULL, NULL, .constantValue.asLong = 0 },
    { "paragraph_", NULL, 0x4, "Lorg.oss.pdfreporter.engine.JRParagraph;", NULL, NULL, .constantValue.asLong = 0 },
    { "fontName_", NULL, 0x4, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "isBold_", NULL, 0x4, "Ljava.lang.Boolean;", NULL, NULL, .constantValue.asLong = 0 },
    { "isItalic_", NULL, 0x4, "Ljava.lang.Boolean;", NULL, NULL, .constantValue.asLong = 0 },
    { "isUnderline_", NULL, 0x4, "Ljava.lang.Boolean;", NULL, NULL, .constantValue.asLong = 0 },
    { "isStrikeThrough_", NULL, 0x4, "Ljava.lang.Boolean;", NULL, NULL, .constantValue.asLong = 0 },
    { "fontSize_", NULL, 0x4, "Ljava.lang.Integer;", NULL, NULL, .constantValue.asLong = 0 },
    { "pdfFontName_", NULL, 0x4, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "pdfEncoding_", NULL, 0x4, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "isPdfEmbedded_", NULL, 0x4, "Ljava.lang.Boolean;", NULL, NULL, .constantValue.asLong = 0 },
    { "valueClassName_", NULL, 0x4, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "pattern_", NULL, 0x4, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "formatFactoryClass_", NULL, 0x4, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "localeCode_", NULL, 0x4, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "timeZoneId_", NULL, 0x4, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "PSEUDO_SERIAL_VERSION_UID_JRTemplateText_", "PSEUDO_SERIAL_VERSION_UID", 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "horizontalAlignment_", NULL, 0x2, "Ljava.lang.Byte;", NULL, NULL, .constantValue.asLong = 0 },
    { "verticalAlignment_", NULL, 0x2, "Ljava.lang.Byte;", NULL, NULL, .constantValue.asLong = 0 },
    { "rotation_", NULL, 0x2, "Ljava.lang.Byte;", NULL, NULL, .constantValue.asLong = 0 },
    { "lineSpacing_", NULL, 0x2, "Ljava.lang.Byte;", NULL, NULL, .constantValue.asLong = 0 },
    { "lineSpacingValue_", NULL, 0x2, "Lorg.oss.pdfreporter.engine.type.LineSpacingEnum;", NULL, NULL, .constantValue.asLong = 0 },
    { "border_", NULL, 0x2, "Ljava.lang.Byte;", NULL, NULL, .constantValue.asLong = 0 },
    { "topBorder_", NULL, 0x2, "Ljava.lang.Byte;", NULL, NULL, .constantValue.asLong = 0 },
    { "leftBorder_", NULL, 0x2, "Ljava.lang.Byte;", NULL, NULL, .constantValue.asLong = 0 },
    { "bottomBorder_", NULL, 0x2, "Ljava.lang.Byte;", NULL, NULL, .constantValue.asLong = 0 },
    { "rightBorder_", NULL, 0x2, "Ljava.lang.Byte;", NULL, NULL, .constantValue.asLong = 0 },
    { "borderColor_", NULL, 0x2, "Lorg.oss.pdfreporter.geometry.IColor;", NULL, NULL, .constantValue.asLong = 0 },
    { "topBorderColor_", NULL, 0x2, "Lorg.oss.pdfreporter.geometry.IColor;", NULL, NULL, .constantValue.asLong = 0 },
    { "leftBorderColor_", NULL, 0x2, "Lorg.oss.pdfreporter.geometry.IColor;", NULL, NULL, .constantValue.asLong = 0 },
    { "bottomBorderColor_", NULL, 0x2, "Lorg.oss.pdfreporter.geometry.IColor;", NULL, NULL, .constantValue.asLong = 0 },
    { "rightBorderColor_", NULL, 0x2, "Lorg.oss.pdfreporter.geometry.IColor;", NULL, NULL, .constantValue.asLong = 0 },
    { "padding_", NULL, 0x2, "Ljava.lang.Integer;", NULL, NULL, .constantValue.asLong = 0 },
    { "topPadding_", NULL, 0x2, "Ljava.lang.Integer;", NULL, NULL, .constantValue.asLong = 0 },
    { "leftPadding_", NULL, 0x2, "Ljava.lang.Integer;", NULL, NULL, .constantValue.asLong = 0 },
    { "bottomPadding_", NULL, 0x2, "Ljava.lang.Integer;", NULL, NULL, .constantValue.asLong = 0 },
    { "rightPadding_", NULL, 0x2, "Ljava.lang.Integer;", NULL, NULL, .constantValue.asLong = 0 },
    { "isStyledText_", NULL, 0x2, "Ljava.lang.Boolean;", NULL, NULL, .constantValue.asLong = 0 },
    { "hyperlinkType_", NULL, 0x2, "B", NULL, NULL, .constantValue.asLong = 0 },
    { "hyperlinkTarget_", NULL, 0x2, "B", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineFillJRTemplateText = { 2, "JRTemplateText", "org.oss.pdfreporter.engine.fill", NULL, 0x1, 81, methods, 47, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineFillJRTemplateText;
}

@end

void OrgOssPdfreporterEngineFillJRTemplateText_initWithOrgOssPdfreporterEngineJROrigin_withOrgOssPdfreporterEngineJRDefaultStyleProvider_withOrgOssPdfreporterEngineJRStaticText_(OrgOssPdfreporterEngineFillJRTemplateText *self, OrgOssPdfreporterEngineJROrigin *origin, id<OrgOssPdfreporterEngineJRDefaultStyleProvider> defaultStyleProvider, id<OrgOssPdfreporterEngineJRStaticText> staticText) {
  OrgOssPdfreporterEngineFillJRTemplateElement_initWithOrgOssPdfreporterEngineJROrigin_withOrgOssPdfreporterEngineJRDefaultStyleProvider_(self, origin, defaultStyleProvider);
  self->PSEUDO_SERIAL_VERSION_UID_JRTemplateText_ = OrgOssPdfreporterEngineJRConstants_PSEUDO_SERIAL_VERSION_UID;
  [self setStaticTextWithOrgOssPdfreporterEngineJRStaticText:staticText];
}

OrgOssPdfreporterEngineFillJRTemplateText *new_OrgOssPdfreporterEngineFillJRTemplateText_initWithOrgOssPdfreporterEngineJROrigin_withOrgOssPdfreporterEngineJRDefaultStyleProvider_withOrgOssPdfreporterEngineJRStaticText_(OrgOssPdfreporterEngineJROrigin *origin, id<OrgOssPdfreporterEngineJRDefaultStyleProvider> defaultStyleProvider, id<OrgOssPdfreporterEngineJRStaticText> staticText) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineFillJRTemplateText, initWithOrgOssPdfreporterEngineJROrigin_withOrgOssPdfreporterEngineJRDefaultStyleProvider_withOrgOssPdfreporterEngineJRStaticText_, origin, defaultStyleProvider, staticText)
}

OrgOssPdfreporterEngineFillJRTemplateText *create_OrgOssPdfreporterEngineFillJRTemplateText_initWithOrgOssPdfreporterEngineJROrigin_withOrgOssPdfreporterEngineJRDefaultStyleProvider_withOrgOssPdfreporterEngineJRStaticText_(OrgOssPdfreporterEngineJROrigin *origin, id<OrgOssPdfreporterEngineJRDefaultStyleProvider> defaultStyleProvider, id<OrgOssPdfreporterEngineJRStaticText> staticText) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineFillJRTemplateText, initWithOrgOssPdfreporterEngineJROrigin_withOrgOssPdfreporterEngineJRDefaultStyleProvider_withOrgOssPdfreporterEngineJRStaticText_, origin, defaultStyleProvider, staticText)
}

void OrgOssPdfreporterEngineFillJRTemplateText_initWithOrgOssPdfreporterEngineJROrigin_withOrgOssPdfreporterEngineJRDefaultStyleProvider_withOrgOssPdfreporterEngineJRTextField_(OrgOssPdfreporterEngineFillJRTemplateText *self, OrgOssPdfreporterEngineJROrigin *origin, id<OrgOssPdfreporterEngineJRDefaultStyleProvider> defaultStyleProvider, id<OrgOssPdfreporterEngineJRTextField> textField) {
  OrgOssPdfreporterEngineFillJRTemplateElement_initWithOrgOssPdfreporterEngineJROrigin_withOrgOssPdfreporterEngineJRDefaultStyleProvider_(self, origin, defaultStyleProvider);
  self->PSEUDO_SERIAL_VERSION_UID_JRTemplateText_ = OrgOssPdfreporterEngineJRConstants_PSEUDO_SERIAL_VERSION_UID;
  [self setTextFieldWithOrgOssPdfreporterEngineJRTextField:textField];
}

OrgOssPdfreporterEngineFillJRTemplateText *new_OrgOssPdfreporterEngineFillJRTemplateText_initWithOrgOssPdfreporterEngineJROrigin_withOrgOssPdfreporterEngineJRDefaultStyleProvider_withOrgOssPdfreporterEngineJRTextField_(OrgOssPdfreporterEngineJROrigin *origin, id<OrgOssPdfreporterEngineJRDefaultStyleProvider> defaultStyleProvider, id<OrgOssPdfreporterEngineJRTextField> textField) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineFillJRTemplateText, initWithOrgOssPdfreporterEngineJROrigin_withOrgOssPdfreporterEngineJRDefaultStyleProvider_withOrgOssPdfreporterEngineJRTextField_, origin, defaultStyleProvider, textField)
}

OrgOssPdfreporterEngineFillJRTemplateText *create_OrgOssPdfreporterEngineFillJRTemplateText_initWithOrgOssPdfreporterEngineJROrigin_withOrgOssPdfreporterEngineJRDefaultStyleProvider_withOrgOssPdfreporterEngineJRTextField_(OrgOssPdfreporterEngineJROrigin *origin, id<OrgOssPdfreporterEngineJRDefaultStyleProvider> defaultStyleProvider, id<OrgOssPdfreporterEngineJRTextField> textField) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineFillJRTemplateText, initWithOrgOssPdfreporterEngineJROrigin_withOrgOssPdfreporterEngineJRDefaultStyleProvider_withOrgOssPdfreporterEngineJRTextField_, origin, defaultStyleProvider, textField)
}

void OrgOssPdfreporterEngineFillJRTemplateText_initWithOrgOssPdfreporterEngineJROrigin_withOrgOssPdfreporterEngineJRDefaultStyleProvider_(OrgOssPdfreporterEngineFillJRTemplateText *self, OrgOssPdfreporterEngineJROrigin *origin, id<OrgOssPdfreporterEngineJRDefaultStyleProvider> defaultStyleProvider) {
  OrgOssPdfreporterEngineFillJRTemplateElement_initWithOrgOssPdfreporterEngineJROrigin_withOrgOssPdfreporterEngineJRDefaultStyleProvider_(self, origin, defaultStyleProvider);
  self->PSEUDO_SERIAL_VERSION_UID_JRTemplateText_ = OrgOssPdfreporterEngineJRConstants_PSEUDO_SERIAL_VERSION_UID;
  self->lineBox_ = new_OrgOssPdfreporterEngineBaseJRBaseLineBox_initWithOrgOssPdfreporterEngineJRBoxContainer_(self);
  self->paragraph_ = new_OrgOssPdfreporterEngineBaseJRBaseParagraph_initWithOrgOssPdfreporterEngineJRParagraphContainer_(self);
}

OrgOssPdfreporterEngineFillJRTemplateText *new_OrgOssPdfreporterEngineFillJRTemplateText_initWithOrgOssPdfreporterEngineJROrigin_withOrgOssPdfreporterEngineJRDefaultStyleProvider_(OrgOssPdfreporterEngineJROrigin *origin, id<OrgOssPdfreporterEngineJRDefaultStyleProvider> defaultStyleProvider) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineFillJRTemplateText, initWithOrgOssPdfreporterEngineJROrigin_withOrgOssPdfreporterEngineJRDefaultStyleProvider_, origin, defaultStyleProvider)
}

OrgOssPdfreporterEngineFillJRTemplateText *create_OrgOssPdfreporterEngineFillJRTemplateText_initWithOrgOssPdfreporterEngineJROrigin_withOrgOssPdfreporterEngineJRDefaultStyleProvider_(OrgOssPdfreporterEngineJROrigin *origin, id<OrgOssPdfreporterEngineJRDefaultStyleProvider> defaultStyleProvider) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineFillJRTemplateText, initWithOrgOssPdfreporterEngineJROrigin_withOrgOssPdfreporterEngineJRDefaultStyleProvider_, origin, defaultStyleProvider)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineFillJRTemplateText)
