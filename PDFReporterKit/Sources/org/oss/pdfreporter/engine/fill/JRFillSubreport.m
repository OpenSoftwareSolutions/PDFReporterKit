//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/fill/JRFillSubreport.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/io/File.h"
#include "java/io/InputStream.h"
#include "java/lang/Boolean.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/HashMap.h"
#include "java/util/HashSet.h"
#include "java/util/List.h"
#include "java/util/Locale.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "java/util/TimeZone.h"
#include "org/oss/pdfreporter/data/cache/DataCacheHandler.h"
#include "org/oss/pdfreporter/engine/JRDataSource.h"
#include "org/oss/pdfreporter/engine/JRDatasetParameter.h"
#include "org/oss/pdfreporter/engine/JRDefaultStyleProvider.h"
#include "org/oss/pdfreporter/engine/JRElement.h"
#include "org/oss/pdfreporter/engine/JRException.h"
#include "org/oss/pdfreporter/engine/JRExpression.h"
#include "org/oss/pdfreporter/engine/JRExpressionCollector.h"
#include "org/oss/pdfreporter/engine/JROrigin.h"
#include "org/oss/pdfreporter/engine/JRParameter.h"
#include "org/oss/pdfreporter/engine/JRPrintElement.h"
#include "org/oss/pdfreporter/engine/JRPrintPage.h"
#include "org/oss/pdfreporter/engine/JRPrintRectangle.h"
#include "org/oss/pdfreporter/engine/JRPropertiesUtil.h"
#include "org/oss/pdfreporter/engine/JRRewindableDataSource.h"
#include "org/oss/pdfreporter/engine/JRRuntimeException.h"
#include "org/oss/pdfreporter/engine/JRScriptlet.h"
#include "org/oss/pdfreporter/engine/JRSubreport.h"
#include "org/oss/pdfreporter/engine/JRSubreportReturnValue.h"
#include "org/oss/pdfreporter/engine/JRVariable.h"
#include "org/oss/pdfreporter/engine/JRVisitor.h"
#include "org/oss/pdfreporter/engine/JasperCompileManager.h"
#include "org/oss/pdfreporter/engine/JasperPrint.h"
#include "org/oss/pdfreporter/engine/JasperReport.h"
#include "org/oss/pdfreporter/engine/JasperReportsContext.h"
#include "org/oss/pdfreporter/engine/ReportContext.h"
#include "org/oss/pdfreporter/engine/base/JRVirtualPrintPage.h"
#include "org/oss/pdfreporter/engine/design/JRDesignSubreportReturnValue.h"
#include "org/oss/pdfreporter/engine/design/JRValidationException.h"
#include "org/oss/pdfreporter/engine/design/JRVerifier.h"
#include "org/oss/pdfreporter/engine/fill/AbstractValueProvider.h"
#include "org/oss/pdfreporter/engine/fill/DatasetExpressionEvaluator.h"
#include "org/oss/pdfreporter/engine/fill/FillContainerContext.h"
#include "org/oss/pdfreporter/engine/fill/FillDatasetPosition.h"
#include "org/oss/pdfreporter/engine/fill/JRBaseFiller.h"
#include "org/oss/pdfreporter/engine/fill/JREvaluator.h"
#include "org/oss/pdfreporter/engine/fill/JRFillBand.h"
#include "org/oss/pdfreporter/engine/fill/JRFillCloneFactory.h"
#include "org/oss/pdfreporter/engine/fill/JRFillCloneable.h"
#include "org/oss/pdfreporter/engine/fill/JRFillContext.h"
#include "org/oss/pdfreporter/engine/fill/JRFillDataset.h"
#include "org/oss/pdfreporter/engine/fill/JRFillElement.h"
#include "org/oss/pdfreporter/engine/fill/JRFillExpressionEvaluator.h"
#include "org/oss/pdfreporter/engine/fill/JRFillObjectFactory.h"
#include "org/oss/pdfreporter/engine/fill/JRFillSubreport.h"
#include "org/oss/pdfreporter/engine/fill/JRFillSubreportReturnValue.h"
#include "org/oss/pdfreporter/engine/fill/JRFillVariable.h"
#include "org/oss/pdfreporter/engine/fill/JRHorizontalFiller.h"
#include "org/oss/pdfreporter/engine/fill/JRIncrementer.h"
#include "org/oss/pdfreporter/engine/fill/JRSubreportRunResult.h"
#include "org/oss/pdfreporter/engine/fill/JRSubreportRunner.h"
#include "org/oss/pdfreporter/engine/fill/JRSubreportRunnerFactory.h"
#include "org/oss/pdfreporter/engine/fill/JRTemplateElement.h"
#include "org/oss/pdfreporter/engine/fill/JRTemplatePrintRectangle.h"
#include "org/oss/pdfreporter/engine/fill/JRTemplateRectangle.h"
#include "org/oss/pdfreporter/engine/fill/JRVerticalFiller.h"
#include "org/oss/pdfreporter/engine/type/CalculationEnum.h"
#include "org/oss/pdfreporter/engine/type/ModeEnum.h"
#include "org/oss/pdfreporter/engine/type/PrintOrderEnum.h"
#include "org/oss/pdfreporter/engine/util/JRLoader.h"
#include "org/oss/pdfreporter/engine/util/JRSingletonCache.h"
#include "org/oss/pdfreporter/engine/util/JRStyleResolver.h"
#include "org/oss/pdfreporter/net/IURL.h"
#include "org/oss/pdfreporter/repo/SubreportUtil.h"
#include "org/oss/pdfreporter/sql/IConnection.h"
#include "org/oss/pdfreporter/text/format/factory/IFormatFactory.h"
#include "org/oss/pdfreporter/uses/java/util/UUID.h"

@interface OrgOssPdfreporterEngineFillJRFillSubreport () {
 @public
  id<JavaUtilMap> parameterValues_;
  IOSObjectArray *parameters_;
  OrgOssPdfreporterEngineFillFillDatasetPosition *datasetPosition_;
  jboolean cacheIncluded_;
  id<OrgOssPdfreporterSqlIConnection> connection_;
  id<OrgOssPdfreporterEngineJRDataSource> dataSource_;
  OrgOssPdfreporterEngineJasperReport *jasperReport_;
  id source_;
  id<JavaUtilMap> loadedEvaluators_;
  IOSObjectArray *returnValues_;
  id<OrgOssPdfreporterEngineJRPrintPage> printPage_;
  id<OrgOssPdfreporterEngineFillJRSubreportRunner> runner_;
  id<JavaUtilSet> checkedReports_;
}

- (OrgOssPdfreporterEngineFillJRFillSubreportReturnValue *)addReturnValueWithOrgOssPdfreporterEngineJRSubreportReturnValue:(id<OrgOssPdfreporterEngineJRSubreportReturnValue>)parentReturnValue
                                                                                                          withJavaUtilList:(id<JavaUtilList>)returnValueList
                                                                        withOrgOssPdfreporterEngineFillJRFillObjectFactory:(OrgOssPdfreporterEngineFillJRFillObjectFactory *)factory;

- (void)checkReturnValues;

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillSubreport, parameterValues_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillSubreport, parameters_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillSubreport, datasetPosition_, OrgOssPdfreporterEngineFillFillDatasetPosition *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillSubreport, connection_, id<OrgOssPdfreporterSqlIConnection>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillSubreport, dataSource_, id<OrgOssPdfreporterEngineJRDataSource>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillSubreport, jasperReport_, OrgOssPdfreporterEngineJasperReport *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillSubreport, source_, id)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillSubreport, loadedEvaluators_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillSubreport, returnValues_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillSubreport, printPage_, id<OrgOssPdfreporterEngineJRPrintPage>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillSubreport, runner_, id<OrgOssPdfreporterEngineFillJRSubreportRunner>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillSubreport, checkedReports_, id<JavaUtilSet>)

inline OrgOssPdfreporterEngineUtilJRSingletonCache *OrgOssPdfreporterEngineFillJRFillSubreport_get_runnerFactoryCache();
static OrgOssPdfreporterEngineUtilJRSingletonCache *OrgOssPdfreporterEngineFillJRFillSubreport_runnerFactoryCache;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterEngineFillJRFillSubreport, runnerFactoryCache, OrgOssPdfreporterEngineUtilJRSingletonCache *)

__attribute__((unused)) static OrgOssPdfreporterEngineFillJRFillSubreportReturnValue *OrgOssPdfreporterEngineFillJRFillSubreport_addReturnValueWithOrgOssPdfreporterEngineJRSubreportReturnValue_withJavaUtilList_withOrgOssPdfreporterEngineFillJRFillObjectFactory_(OrgOssPdfreporterEngineFillJRFillSubreport *self, id<OrgOssPdfreporterEngineJRSubreportReturnValue> parentReturnValue, id<JavaUtilList> returnValueList, OrgOssPdfreporterEngineFillJRFillObjectFactory *factory);

__attribute__((unused)) static void OrgOssPdfreporterEngineFillJRFillSubreport_checkReturnValues(OrgOssPdfreporterEngineFillJRFillSubreport *self);

J2OBJC_INITIALIZED_DEFN(OrgOssPdfreporterEngineFillJRFillSubreport)

@implementation OrgOssPdfreporterEngineFillJRFillSubreport

- (instancetype)initWithOrgOssPdfreporterEngineFillJRBaseFiller:(OrgOssPdfreporterEngineFillJRBaseFiller *)filler
                         withOrgOssPdfreporterEngineJRSubreport:(id<OrgOssPdfreporterEngineJRSubreport>)subreport
             withOrgOssPdfreporterEngineFillJRFillObjectFactory:(OrgOssPdfreporterEngineFillJRFillObjectFactory *)factory {
  OrgOssPdfreporterEngineFillJRFillSubreport_initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineJRSubreport_withOrgOssPdfreporterEngineFillJRFillObjectFactory_(self, filler, subreport, factory);
  return self;
}

- (OrgOssPdfreporterEngineTypeModeEnum *)getModeValue {
  return OrgOssPdfreporterEngineUtilJRStyleResolver_getModeWithOrgOssPdfreporterEngineJRCommonElement_withOrgOssPdfreporterEngineTypeModeEnum_(self, JreLoadEnum(OrgOssPdfreporterEngineTypeModeEnum, TRANSPARENT));
}

- (jboolean)isUsingCache {
  return [((id<OrgOssPdfreporterEngineJRSubreport>) nil_chk(((id<OrgOssPdfreporterEngineJRSubreport>) cast_check(parent_, OrgOssPdfreporterEngineJRSubreport_class_())))) isUsingCache];
}

- (jboolean)usingCache {
  JavaLangBoolean *isUsingCache = [self getUsingCache];
  if (isUsingCache == nil) {
    return [source_ isKindOfClass:[NSString class]];
  }
  return [isUsingCache booleanValue];
}

- (JavaLangBoolean *)isRunToBottom {
  return [((id<OrgOssPdfreporterEngineJRSubreport>) nil_chk(((id<OrgOssPdfreporterEngineJRSubreport>) cast_check(parent_, OrgOssPdfreporterEngineJRSubreport_class_())))) isRunToBottom];
}

- (void)setRunToBottomWithJavaLangBoolean:(JavaLangBoolean *)runToBottom {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (id<OrgOssPdfreporterEngineJRExpression>)getParametersMapExpression {
  return [((id<OrgOssPdfreporterEngineJRSubreport>) nil_chk(((id<OrgOssPdfreporterEngineJRSubreport>) cast_check(parent_, OrgOssPdfreporterEngineJRSubreport_class_())))) getParametersMapExpression];
}

- (IOSObjectArray *)getParameters {
  return parameters_;
}

- (id<OrgOssPdfreporterEngineJRExpression>)getConnectionExpression {
  return [((id<OrgOssPdfreporterEngineJRSubreport>) nil_chk(((id<OrgOssPdfreporterEngineJRSubreport>) cast_check(parent_, OrgOssPdfreporterEngineJRSubreport_class_())))) getConnectionExpression];
}

- (id<OrgOssPdfreporterEngineJRExpression>)getDataSourceExpression {
  return [((id<OrgOssPdfreporterEngineJRSubreport>) nil_chk(((id<OrgOssPdfreporterEngineJRSubreport>) cast_check(parent_, OrgOssPdfreporterEngineJRSubreport_class_())))) getDataSourceExpression];
}

- (id<OrgOssPdfreporterEngineJRExpression>)getExpression {
  return [((id<OrgOssPdfreporterEngineJRSubreport>) nil_chk(((id<OrgOssPdfreporterEngineJRSubreport>) cast_check(parent_, OrgOssPdfreporterEngineJRSubreport_class_())))) getExpression];
}

- (OrgOssPdfreporterEngineFillJRTemplateRectangle *)getJRTemplateRectangle {
  return (OrgOssPdfreporterEngineFillJRTemplateRectangle *) cast_chk([self getElementTemplate], [OrgOssPdfreporterEngineFillJRTemplateRectangle class]);
}

- (OrgOssPdfreporterEngineFillJRTemplateElement *)createElementTemplate {
  return new_OrgOssPdfreporterEngineFillJRTemplateRectangle_initWithOrgOssPdfreporterEngineJROrigin_withOrgOssPdfreporterEngineJRDefaultStyleProvider_withOrgOssPdfreporterEngineJRSubreport_([self getElementOrigin], [((OrgOssPdfreporterEngineJasperPrint *) nil_chk([((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler_)) getJasperPrint])) getDefaultStyleProvider], self);
}

- (id<JavaUtilCollection>)getPrintElements {
  id<JavaUtilCollection> printElements = nil;
  if (printPage_ != nil) {
    printElements = [printPage_ getElements];
  }
  return printElements;
}

- (void)subreportPageFilled {
  if (printPage_ != nil) {
    [((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(subreportFiller_)) subreportPageFilledWithOrgOssPdfreporterEngineJRPrintPage:printPage_];
  }
}

- (void)evaluateWithByte:(jbyte)evaluation {
  [self reset];
  [self evaluatePrintWhenExpressionWithByte:evaluation];
  if ([self isPrintWhenExpressionNull] || [self isPrintWhenTrue]) {
    [self evaluateSubreportWithByte:evaluation];
  }
}

- (OrgOssPdfreporterEngineJasperReport *)evaluateReportWithByte:(jbyte)evaluation {
  OrgOssPdfreporterEngineJasperReport *report = nil;
  id<OrgOssPdfreporterEngineJRExpression> expression = [self getExpression];
  source_ = [self evaluateExpressionWithOrgOssPdfreporterEngineJRExpression:expression withByte:evaluation];
  if (source_ != nil) {
    JavaLangBoolean *isUsingCache = [self getUsingCache];
    if (isUsingCache == nil) {
      isUsingCache = JavaLangBoolean_valueOfWithBoolean_([source_ isKindOfClass:[NSString class]]);
    }
    if ([isUsingCache booleanValue] && [((OrgOssPdfreporterEngineFillJRFillContext *) nil_chk(((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler_))->fillContext_)) hasLoadedSubreportWithId:source_]) {
      report = [((OrgOssPdfreporterEngineFillJRFillContext *) nil_chk(((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler_))->fillContext_)) getLoadedSubreportWithId:source_];
    }
    else {
      if ([source_ isKindOfClass:[OrgOssPdfreporterEngineJasperReport class]]) {
        report = (OrgOssPdfreporterEngineJasperReport *) cast_chk(source_, [OrgOssPdfreporterEngineJasperReport class]);
      }
      else if ([source_ isKindOfClass:[JavaIoInputStream class]]) {
        report = (OrgOssPdfreporterEngineJasperReport *) cast_chk(OrgOssPdfreporterEngineUtilJRLoader_loadObjectWithJavaIoInputStream_((JavaIoInputStream *) cast_chk(source_, [JavaIoInputStream class])), [OrgOssPdfreporterEngineJasperReport class]);
      }
      else if ([OrgOssPdfreporterNetIURL_class_() isInstance:source_]) {
        report = (OrgOssPdfreporterEngineJasperReport *) cast_chk(OrgOssPdfreporterEngineUtilJRLoader_loadObjectWithOrgOssPdfreporterNetIURL_((id<OrgOssPdfreporterNetIURL>) cast_check(source_, OrgOssPdfreporterNetIURL_class_())), [OrgOssPdfreporterEngineJasperReport class]);
      }
      else if ([source_ isKindOfClass:[JavaIoFile class]]) {
        report = (OrgOssPdfreporterEngineJasperReport *) cast_chk(OrgOssPdfreporterEngineUtilJRLoader_loadObjectWithJavaIoFile_((JavaIoFile *) cast_chk(source_, [JavaIoFile class])), [OrgOssPdfreporterEngineJasperReport class]);
      }
      else if ([source_ isKindOfClass:[NSString class]]) {
        report = OrgOssPdfreporterRepoSubreportUtil_loadSubreportWithNSString_((NSString *) cast_chk(source_, [NSString class]));
      }
      else {
        @throw new_OrgOssPdfreporterEngineJRRuntimeException_initWithNSString_(JreStrcat("$$", @"Unknown subreport source class ", [[nil_chk(source_) getClass] getName]));
      }
      if ([isUsingCache booleanValue]) {
        [((OrgOssPdfreporterEngineFillJRFillContext *) nil_chk(((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler_))->fillContext_)) registerLoadedSubreportWithId:source_ withOrgOssPdfreporterEngineJasperReport:report];
      }
    }
  }
  return report;
}

- (void)evaluateSubreportWithByte:(jbyte)evaluation {
  [self evaluatePropertiesWithByte:evaluation];
  [self evaluateStyleWithByte:evaluation];
  jasperReport_ = [self evaluateReportWithByte:evaluation];
  if (jasperReport_ != nil) {
    OrgOssPdfreporterEngineFillJRFillDataset *parentDataset = [((id<OrgOssPdfreporterEngineFillJRFillExpressionEvaluator>) nil_chk(expressionEvaluator_)) getFillDataset];
    datasetPosition_ = new_OrgOssPdfreporterEngineFillFillDatasetPosition_initWithOrgOssPdfreporterEngineFillFillDatasetPosition_(((OrgOssPdfreporterEngineFillJRFillDataset *) nil_chk(parentDataset))->fillPosition_);
    [datasetPosition_ addAttributeWithNSString:@"subreportUUID" withId:[self getUUID]];
    [parentDataset setCacheRecordIndexWithOrgOssPdfreporterEngineFillFillDatasetPosition:datasetPosition_ withByte:evaluation];
    connection_ = (id<OrgOssPdfreporterSqlIConnection>) cast_check([self evaluateExpressionWithOrgOssPdfreporterEngineJRExpression:[self getConnectionExpression] withByte:evaluation], OrgOssPdfreporterSqlIConnection_class_());
    NSString *cacheIncludedProp = OrgOssPdfreporterEngineJRPropertiesUtil_getOwnPropertyWithOrgOssPdfreporterEngineJRPropertiesHolder_withNSString_(self, OrgOssPdfreporterDataCacheDataCacheHandler_PROPERTY_INCLUDED);
    cacheIncluded_ = OrgOssPdfreporterEngineJRPropertiesUtil_asBooleanWithNSString_withBoolean_(cacheIncludedProp, true);
    if ([((OrgOssPdfreporterEngineFillJRFillContext *) nil_chk(((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler_))->fillContext_)) hasDataSnapshot] && cacheIncluded_) {
      dataSource_ = nil;
    }
    else {
      dataSource_ = (id<OrgOssPdfreporterEngineJRDataSource>) cast_check([self evaluateExpressionWithOrgOssPdfreporterEngineJRExpression:[self getDataSourceExpression] withByte:evaluation], OrgOssPdfreporterEngineJRDataSource_class_());
    }
    parameterValues_ = [self evaluateParameterValuesWithByte:evaluation];
    if (subreportFiller_ != nil) {
      [((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler_)) unregisterSubfillerWithOrgOssPdfreporterEngineFillJRBaseFiller:subreportFiller_];
    }
    id<OrgOssPdfreporterEngineFillDatasetExpressionEvaluator> evaluator = [self loadReportEvaluator];
    [self initSubreportFillerWithOrgOssPdfreporterEngineFillDatasetExpressionEvaluator:evaluator];
    [self validateReport];
    [self saveReturnVariables];
  }
}

- (id<JavaUtilMap>)evaluateParameterValuesWithByte:(jbyte)evaluation {
  return OrgOssPdfreporterEngineFillJRFillSubreport_getParameterValuesWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineFillJRFillExpressionEvaluator_withOrgOssPdfreporterEngineJRExpression_withOrgOssPdfreporterEngineJRDatasetParameterArray_withByte_withBoolean_withBoolean_withBoolean_(filler_, expressionEvaluator_, [self getParametersMapExpression], [self getParameters], evaluation, false, [((OrgOssPdfreporterEngineJasperReport *) nil_chk(jasperReport_)) getResourceBundle] != nil, [((OrgOssPdfreporterEngineJasperReport *) nil_chk(jasperReport_)) getFormatFactoryClass] != nil);
}

- (id<OrgOssPdfreporterEngineFillDatasetExpressionEvaluator>)loadReportEvaluator {
  id<OrgOssPdfreporterEngineFillDatasetExpressionEvaluator> evaluator = nil;
  jboolean usingCache = [self usingCache];
  if (usingCache) {
    evaluator = [((id<JavaUtilMap>) nil_chk(loadedEvaluators_)) getWithId:jasperReport_];
  }
  if (evaluator == nil) {
    evaluator = [self createEvaluator];
    if (usingCache) {
      (void) [((id<JavaUtilMap>) nil_chk(loadedEvaluators_)) putWithId:jasperReport_ withId:(OrgOssPdfreporterEngineFillJREvaluator *) cast_chk(evaluator, [OrgOssPdfreporterEngineFillJREvaluator class])];
    }
  }
  return evaluator;
}

- (id<OrgOssPdfreporterEngineFillDatasetExpressionEvaluator>)createEvaluator {
  return [((OrgOssPdfreporterEngineJasperCompileManager *) nil_chk(OrgOssPdfreporterEngineJasperCompileManager_getInstanceWithOrgOssPdfreporterEngineJasperReportsContext_([((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler_)) getJasperReportsContext]))) getEvaluatorWithOrgOssPdfreporterEngineJasperReport:jasperReport_];
}

- (void)initSubreportFillerWithOrgOssPdfreporterEngineFillDatasetExpressionEvaluator:(id<OrgOssPdfreporterEngineFillDatasetExpressionEvaluator>)evaluator {
  switch ([[((OrgOssPdfreporterEngineJasperReport *) nil_chk(jasperReport_)) getPrintOrderValue] ordinal]) {
    case OrgOssPdfreporterEngineTypePrintOrderEnum_Enum_HORIZONTAL:
    {
      subreportFiller_ = new_OrgOssPdfreporterEngineFillJRHorizontalFiller_initWithOrgOssPdfreporterEngineJasperReportsContext_withOrgOssPdfreporterEngineJasperReport_withOrgOssPdfreporterEngineFillDatasetExpressionEvaluator_withOrgOssPdfreporterEngineFillJRFillSubreport_([((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler_)) getJasperReportsContext], jasperReport_, evaluator, self);
      break;
    }
    case OrgOssPdfreporterEngineTypePrintOrderEnum_Enum_VERTICAL:
    {
      subreportFiller_ = new_OrgOssPdfreporterEngineFillJRVerticalFiller_initWithOrgOssPdfreporterEngineJasperReportsContext_withOrgOssPdfreporterEngineJasperReport_withOrgOssPdfreporterEngineFillDatasetExpressionEvaluator_withOrgOssPdfreporterEngineFillJRFillSubreport_([((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler_)) getJasperReportsContext], jasperReport_, evaluator, self);
      break;
    }
    default:
    {
      @throw new_OrgOssPdfreporterEngineJRRuntimeException_initWithNSString_(JreStrcat("$BC", @"Unkown print order ", [((OrgOssPdfreporterEngineTypePrintOrderEnum *) nil_chk([((OrgOssPdfreporterEngineJasperReport *) nil_chk(jasperReport_)) getPrintOrderValue])) getValue], '.'));
    }
  }
  runner_ = [((id<OrgOssPdfreporterEngineFillJRSubreportRunnerFactory>) nil_chk([self getRunnerFactory])) createSubreportRunnerWithOrgOssPdfreporterEngineFillJRFillSubreport:self withOrgOssPdfreporterEngineFillJRBaseFiller:subreportFiller_];
  [((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(subreportFiller_)) setSubreportRunnerWithOrgOssPdfreporterEngineFillJRSubreportRunner:runner_];
  [((OrgOssPdfreporterEngineFillJRFillDataset *) nil_chk(((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(subreportFiller_))->mainDataset_)) setFillPositionWithOrgOssPdfreporterEngineFillFillDatasetPosition:datasetPosition_];
  [((OrgOssPdfreporterEngineFillJRFillDataset *) nil_chk(((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(subreportFiller_))->mainDataset_)) setCacheSkippedWithBoolean:!cacheIncluded_];
}

- (void)saveReturnVariables {
  if (returnValues_ != nil) {
    for (jint i = 0; i < ((IOSObjectArray *) nil_chk(returnValues_))->size_; i++) {
      NSString *varName = [((OrgOssPdfreporterEngineFillJRFillSubreportReturnValue *) nil_chk(IOSObjectArray_Get(returnValues_, i))) getToVariable];
      [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(band_)) saveVariableWithNSString:varName];
    }
  }
}

+ (id<JavaUtilMap>)getParameterValuesWithOrgOssPdfreporterEngineFillJRBaseFiller:(OrgOssPdfreporterEngineFillJRBaseFiller *)filler
                                         withOrgOssPdfreporterEngineJRExpression:(id<OrgOssPdfreporterEngineJRExpression>)parametersMapExpression
                              withOrgOssPdfreporterEngineJRDatasetParameterArray:(IOSObjectArray *)subreportParameters
                                                                        withByte:(jbyte)evaluation
                                                                     withBoolean:(jboolean)ignoreNullExpressions
                                                                     withBoolean:(jboolean)removeResourceBundle
                                                                     withBoolean:(jboolean)removeFormatFactory {
  return OrgOssPdfreporterEngineFillJRFillSubreport_getParameterValuesWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineJRExpression_withOrgOssPdfreporterEngineJRDatasetParameterArray_withByte_withBoolean_withBoolean_withBoolean_(filler, parametersMapExpression, subreportParameters, evaluation, ignoreNullExpressions, removeResourceBundle, removeFormatFactory);
}

+ (id<JavaUtilMap>)getParameterValuesWithOrgOssPdfreporterEngineFillJRBaseFiller:(OrgOssPdfreporterEngineFillJRBaseFiller *)filler
                        withOrgOssPdfreporterEngineFillJRFillExpressionEvaluator:(id<OrgOssPdfreporterEngineFillJRFillExpressionEvaluator>)expressionEvaluator
                                         withOrgOssPdfreporterEngineJRExpression:(id<OrgOssPdfreporterEngineJRExpression>)parametersMapExpression
                              withOrgOssPdfreporterEngineJRDatasetParameterArray:(IOSObjectArray *)subreportParameters
                                                                        withByte:(jbyte)evaluation
                                                                     withBoolean:(jboolean)ignoreNullExpressions
                                                                     withBoolean:(jboolean)removeResourceBundle
                                                                     withBoolean:(jboolean)removeFormatFactory {
  return OrgOssPdfreporterEngineFillJRFillSubreport_getParameterValuesWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineFillJRFillExpressionEvaluator_withOrgOssPdfreporterEngineJRExpression_withOrgOssPdfreporterEngineJRDatasetParameterArray_withByte_withBoolean_withBoolean_withBoolean_(filler, expressionEvaluator, parametersMapExpression, subreportParameters, evaluation, ignoreNullExpressions, removeResourceBundle, removeFormatFactory);
}

- (void)fillSubreport {
  if ([self getConnectionExpression] != nil) {
    (void) [((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(subreportFiller_)) fillWithJavaUtilMap:parameterValues_ withOrgOssPdfreporterSqlIConnection:connection_];
  }
  else if ([self getDataSourceExpression] != nil) {
    (void) [((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(subreportFiller_)) fillWithJavaUtilMap:parameterValues_ withOrgOssPdfreporterEngineJRDataSource:dataSource_];
  }
  else {
    (void) [((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(subreportFiller_)) fillWithJavaUtilMap:parameterValues_];
  }
}

- (jboolean)prepareWithInt:(jint)availableHeight
               withBoolean:(jboolean)isOverflow {
  jboolean willOverflow = false;
  [super prepareWithInt:availableHeight withBoolean:isOverflow];
  if (subreportFiller_ == nil) {
    [self setToPrintWithBoolean:false];
  }
  if (![self isToPrint]) {
    return willOverflow;
  }
  jint elementHeight = [self getHeight];
  if (availableHeight < [self getRelativeY] + elementHeight) {
    [self setToPrintWithBoolean:false];
    return true;
  }
  jboolean filling = [((id<OrgOssPdfreporterEngineFillJRSubreportRunner>) nil_chk(runner_)) isFilling];
  jboolean toPrint = !isOverflow || [self isPrintWhenDetailOverflows] || ![self isAlreadyPrinted];
  jboolean reprinted = isOverflow && [self isPrintWhenDetailOverflows];
  if (elementHeight == 0 && availableHeight == [self getRelativeY] && !filling && toPrint && fillContainerContext_ != nil && [fillContainerContext_ isCurrentOverflow] && [((id<OrgOssPdfreporterEngineFillFillContainerContext>) nil_chk(fillContainerContext_)) isCurrentOverflowAllowed]) {
    [self setToPrintWithBoolean:false];
    return true;
  }
  if (!filling && toPrint && reprinted) {
    [self rewind];
  }
  if ([printPage_ isKindOfClass:[OrgOssPdfreporterEngineBaseJRVirtualPrintPage class]]) {
    [((OrgOssPdfreporterEngineBaseJRVirtualPrintPage *) nil_chk(((OrgOssPdfreporterEngineBaseJRVirtualPrintPage *) cast_chk(printPage_, [OrgOssPdfreporterEngineBaseJRVirtualPrintPage class])))) dispose];
  }
  [((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(subreportFiller_)) setPageHeightWithInt:availableHeight - [self getRelativeY]];
  @synchronized(subreportFiller_) {
    OrgOssPdfreporterEngineFillJRSubreportRunResult *result;
    if (filling) {
      result = [((id<OrgOssPdfreporterEngineFillJRSubreportRunner>) nil_chk(runner_)) resume];
    }
    else if (toPrint) {
      [self setReprintedWithBoolean:reprinted];
      result = [((id<OrgOssPdfreporterEngineFillJRSubreportRunner>) nil_chk(runner_)) start];
    }
    else {
      printPage_ = nil;
      [self setStretchHeightWithInt:[self getHeight]];
      [self setToPrintWithBoolean:false];
      return willOverflow;
    }
    if ([((OrgOssPdfreporterEngineFillJRSubreportRunResult *) nil_chk(result)) getException] != nil) {
      NSException *error = [result getException];
      if ([error isKindOfClass:[JavaLangRuntimeException class]]) {
        @throw (JavaLangRuntimeException *) cast_chk(error, [JavaLangRuntimeException class]);
      }
      @throw new_OrgOssPdfreporterEngineJRRuntimeException_initWithNSException_(error);
    }
    if ([result hasFinished]) {
      [self copyValues];
    }
    printPage_ = [((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(subreportFiller_)) getCurrentPage];
    [self setStretchHeightWithInt:[result hasFinished] ? [((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(subreportFiller_)) getCurrentPageStretchHeight] : availableHeight - [self getRelativeY]];
    willOverflow = ![result hasFinished];
    if (!willOverflow) {
      [((id<OrgOssPdfreporterEngineFillJRSubreportRunner>) nil_chk(runner_)) reset];
    }
  }
  id<JavaUtilCollection> printElements = [self getPrintElements];
  if ((printElements == nil || [printElements size] == 0) && [self isRemoveLineWhenBlank]) {
    [self setToPrintWithBoolean:false];
  }
  return willOverflow;
}

- (void)rewind {
  if (subreportFiller_ == nil) {
    return;
  }
  [self cancelSubreportFill];
  [self initSubreportFillerWithOrgOssPdfreporterEngineFillDatasetExpressionEvaluator:nil];
  if ([self getConnectionExpression] == nil && dataSource_ != nil) {
    if ([OrgOssPdfreporterEngineJRRewindableDataSource_class_() isInstance:dataSource_]) {
      [((id<OrgOssPdfreporterEngineJRRewindableDataSource>) cast_check(dataSource_, OrgOssPdfreporterEngineJRRewindableDataSource_class_())) moveFirst];
    }
    else {
      @throw new_OrgOssPdfreporterEngineJRException_initWithNSString_(@"The subreport is placed on a non-splitting band, but it does not have a rewindable data source.");
    }
  }
}

- (void)cancelSubreportFill {
  [((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(subreportFiller_)) setInterruptedWithBoolean:true];
  @synchronized(subreportFiller_) {
    [((id<OrgOssPdfreporterEngineFillJRSubreportRunner>) nil_chk(runner_)) cancel];
    [((id<OrgOssPdfreporterEngineFillJRSubreportRunner>) nil_chk(runner_)) reset];
  }
  [((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler_)) unregisterSubfillerWithOrgOssPdfreporterEngineFillJRBaseFiller:subreportFiller_];
}

- (id<OrgOssPdfreporterEngineJRPrintElement>)fill {
  id<OrgOssPdfreporterEngineJRPrintRectangle> printRectangle = new_OrgOssPdfreporterEngineFillJRTemplatePrintRectangle_initWithOrgOssPdfreporterEngineFillJRTemplateRectangle_withInt_([self getJRTemplateRectangle], elementId_);
  [printRectangle setUUIDWithOrgOssPdfreporterUsesJavaUtilUUID:[self getUUID]];
  [printRectangle setXWithInt:[self getX]];
  [printRectangle setYWithInt:[self getRelativeY]];
  [printRectangle setWidthWithInt:[self getWidth]];
  [printRectangle setHeightWithInt:[self getStretchHeight]];
  return printRectangle;
}

- (void)collectExpressionsWithOrgOssPdfreporterEngineJRExpressionCollector:(OrgOssPdfreporterEngineJRExpressionCollector *)collector {
  [((OrgOssPdfreporterEngineJRExpressionCollector *) nil_chk(collector)) collectWithOrgOssPdfreporterEngineJRSubreport:self];
}

- (void)visitWithOrgOssPdfreporterEngineJRVisitor:(id<OrgOssPdfreporterEngineJRVisitor>)visitor {
  [((id<OrgOssPdfreporterEngineJRVisitor>) nil_chk(visitor)) visitSubreportWithOrgOssPdfreporterEngineJRSubreport:self];
}

- (OrgOssPdfreporterEngineFillJRFillSubreportReturnValue *)addReturnValueWithOrgOssPdfreporterEngineJRSubreportReturnValue:(id<OrgOssPdfreporterEngineJRSubreportReturnValue>)parentReturnValue
                                                                                                          withJavaUtilList:(id<JavaUtilList>)returnValueList
                                                                        withOrgOssPdfreporterEngineFillJRFillObjectFactory:(OrgOssPdfreporterEngineFillJRFillObjectFactory *)factory {
  return OrgOssPdfreporterEngineFillJRFillSubreport_addReturnValueWithOrgOssPdfreporterEngineJRSubreportReturnValue_withJavaUtilList_withOrgOssPdfreporterEngineFillJRFillObjectFactory_(self, parentReturnValue, returnValueList, factory);
}

- (id<OrgOssPdfreporterEngineJRSubreportReturnValue>)createHelperReturnValueWithOrgOssPdfreporterEngineJRSubreportReturnValue:(id<OrgOssPdfreporterEngineJRSubreportReturnValue>)returnValue
                                                                                                                 withNSString:(NSString *)nameSuffix
                                                                               withOrgOssPdfreporterEngineTypeCalculationEnum:(OrgOssPdfreporterEngineTypeCalculationEnum *)calculation {
  OrgOssPdfreporterEngineDesignJRDesignSubreportReturnValue *helper = new_OrgOssPdfreporterEngineDesignJRDesignSubreportReturnValue_init();
  [helper setToVariableWithNSString:JreStrcat("$$", [((id<OrgOssPdfreporterEngineJRSubreportReturnValue>) nil_chk(returnValue)) getToVariable], nameSuffix)];
  [helper setSubreportVariableWithNSString:[returnValue getSubreportVariable]];
  [helper setCalculationWithOrgOssPdfreporterEngineTypeCalculationEnum:calculation];
  [helper setIncrementerFactoryClassNameWithNSString:[helper getIncrementerFactoryClassName]];
  return helper;
}

- (id<OrgOssPdfreporterEngineJRSubreportReturnValue>)createDistinctCountHelperReturnValueWithOrgOssPdfreporterEngineJRSubreportReturnValue:(id<OrgOssPdfreporterEngineJRSubreportReturnValue>)returnValue {
  OrgOssPdfreporterEngineDesignJRDesignSubreportReturnValue *helper = new_OrgOssPdfreporterEngineDesignJRDesignSubreportReturnValue_init();
  [helper setToVariableWithNSString:JreStrcat("$$", [((id<OrgOssPdfreporterEngineJRSubreportReturnValue>) nil_chk(returnValue)) getToVariable], @"_DISTINCT_COUNT")];
  [helper setSubreportVariableWithNSString:[returnValue getSubreportVariable]];
  [helper setCalculationWithOrgOssPdfreporterEngineTypeCalculationEnum:JreLoadEnum(OrgOssPdfreporterEngineTypeCalculationEnum, NOTHING)];
  [helper setIncrementerFactoryClassNameWithNSString:[helper getIncrementerFactoryClassName]];
  return helper;
}

- (IOSObjectArray *)getReturnValues {
  return self->returnValues_;
}

- (jboolean)usesForReturnValueWithNSString:(NSString *)variableName {
  jboolean used = false;
  if (returnValues_ != nil) {
    for (jint j = 0; j < ((IOSObjectArray *) nil_chk(returnValues_))->size_; j++) {
      id<OrgOssPdfreporterEngineJRSubreportReturnValue> returnValue = IOSObjectArray_Get(returnValues_, j);
      if ([((NSString *) nil_chk([((id<OrgOssPdfreporterEngineJRSubreportReturnValue>) nil_chk(returnValue)) getToVariable])) isEqual:variableName]) {
        used = true;
        break;
      }
    }
  }
  return used;
}

- (void)copyValues {
  if (returnValues_ != nil && returnValues_->size_ > 0) {
    for (jint i = 0; i < ((IOSObjectArray *) nil_chk(returnValues_))->size_; i++) {
      [self copyValueWithOrgOssPdfreporterEngineFillJRFillSubreportReturnValue:IOSObjectArray_Get(returnValues_, i)];
    }
  }
}

- (void)copyValueWithOrgOssPdfreporterEngineFillJRFillSubreportReturnValue:(OrgOssPdfreporterEngineFillJRFillSubreportReturnValue *)returnValue {
  @try {
    OrgOssPdfreporterEngineFillJRFillVariable *variable = [((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler_)) getVariableWithNSString:[((OrgOssPdfreporterEngineFillJRFillSubreportReturnValue *) nil_chk(returnValue)) getToVariable]];
    id value = [((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(subreportFiller_)) getVariableValueWithNSString:[returnValue getSubreportVariable]];
    id newValue = [((id<OrgOssPdfreporterEngineFillJRIncrementer>) nil_chk([returnValue getIncrementer])) incrementWithOrgOssPdfreporterEngineFillJRFillVariable:variable withId:value withOrgOssPdfreporterEngineFillAbstractValueProvider:OrgOssPdfreporterEngineFillAbstractValueProvider_getCurrentValueProvider()];
    [((OrgOssPdfreporterEngineFillJRFillVariable *) nil_chk(variable)) setOldValueWithId:newValue];
    [variable setValueWithId:newValue];
    [variable setIncrementedValueWithId:newValue];
  }
  @catch (OrgOssPdfreporterEngineJRException *e) {
    @throw new_OrgOssPdfreporterEngineJRRuntimeException_initWithNSException_(e);
  }
}

- (void)validateReport {
  if (![((id<JavaUtilSet>) nil_chk(checkedReports_)) containsWithId:jasperReport_]) {
    [self verifyBandHeights];
    OrgOssPdfreporterEngineFillJRFillSubreport_checkReturnValues(self);
    if ([self usingCache]) {
      [((id<JavaUtilSet>) nil_chk(checkedReports_)) addWithId:jasperReport_];
    }
  }
}

- (void)verifyBandHeights {
  if (![((OrgOssPdfreporterEngineFillJRFillContext *) nil_chk(((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler_))->fillContext_)) isIgnorePagination]) {
    jint pageHeight;
    jint topMargin = [((OrgOssPdfreporterEngineJasperReport *) nil_chk(jasperReport_)) getTopMargin];
    jint bottomMargin = [((OrgOssPdfreporterEngineJasperReport *) nil_chk(jasperReport_)) getBottomMargin];
    OrgOssPdfreporterEngineFillJRBaseFiller *parentFiller = filler_;
    do {
      pageHeight = [((OrgOssPdfreporterEngineJasperReport *) nil_chk(((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(parentFiller))->jasperReport_)) getPageHeight];
      topMargin += [((OrgOssPdfreporterEngineJasperReport *) nil_chk(parentFiller->jasperReport_)) getTopMargin];
      bottomMargin += [((OrgOssPdfreporterEngineJasperReport *) nil_chk(parentFiller->jasperReport_)) getBottomMargin];
      parentFiller = parentFiller->parentFiller_;
    }
    while (parentFiller != nil);
    id<JavaUtilList> brokenRules = new_JavaUtilArrayList_init();
    OrgOssPdfreporterEngineDesignJRVerifier_verifyBandHeightsWithJavaUtilCollection_withOrgOssPdfreporterEngineJRReport_withInt_withInt_withInt_(brokenRules, jasperReport_, pageHeight, topMargin, bottomMargin);
    if (![brokenRules isEmpty]) {
      @throw new_OrgOssPdfreporterEngineDesignJRValidationException_initWithNSString_withJavaUtilCollection_(JreStrcat("$$$I$I$I$", @"Band height validation for subreport \"", [((OrgOssPdfreporterEngineJasperReport *) nil_chk(jasperReport_)) getName], @"\" failed in the current page context (height = ", pageHeight, @", top margin = ", topMargin, @", bottom margin = ", bottomMargin, @") : "), brokenRules);
    }
  }
}

- (void)checkReturnValues {
  OrgOssPdfreporterEngineFillJRFillSubreport_checkReturnValues(self);
}

- (void)resolveElementWithOrgOssPdfreporterEngineJRPrintElement:(id<OrgOssPdfreporterEngineJRPrintElement>)element
                                                       withByte:(jbyte)evaluation {
}

- (JavaLangBoolean *)isOwnUsingCache {
  return [((id<OrgOssPdfreporterEngineJRSubreport>) nil_chk(((id<OrgOssPdfreporterEngineJRSubreport>) cast_check(parent_, OrgOssPdfreporterEngineJRSubreport_class_())))) isOwnUsingCache];
}

- (JavaLangBoolean *)getUsingCache {
  return [((id<OrgOssPdfreporterEngineJRSubreport>) nil_chk(((id<OrgOssPdfreporterEngineJRSubreport>) cast_check(parent_, OrgOssPdfreporterEngineJRSubreport_class_())))) getUsingCache];
}

- (void)setUsingCacheWithJavaLangBoolean:(JavaLangBoolean *)isUsingCache {
}

- (id<OrgOssPdfreporterEngineFillJRFillCloneable>)createCloneWithOrgOssPdfreporterEngineFillJRFillCloneFactory:(OrgOssPdfreporterEngineFillJRFillCloneFactory *)factory {
  return nil;
}

- (id<OrgOssPdfreporterEngineFillJRSubreportRunnerFactory>)getRunnerFactory {
  NSString *factoryClassName = [((OrgOssPdfreporterEngineJRPropertiesUtil *) nil_chk([((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler_)) getPropertiesUtil])) getPropertyWithNSString:OrgOssPdfreporterEngineFillJRSubreportRunnerFactory_SUBREPORT_RUNNER_FACTORY];
  if (factoryClassName == nil) {
    @throw new_OrgOssPdfreporterEngineJRException_initWithNSString_(JreStrcat("$$$", @"Property \"", OrgOssPdfreporterEngineFillJRSubreportRunnerFactory_SUBREPORT_RUNNER_FACTORY, @"\" must be set"));
  }
  return [((OrgOssPdfreporterEngineUtilJRSingletonCache *) nil_chk(OrgOssPdfreporterEngineFillJRFillSubreport_runnerFactoryCache)) getCachedInstanceWithNSString:factoryClassName];
}

- (jint)getContentsStretchHeight {
  return [((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(subreportFiller_)) getCurrentPageStretchHeight];
}

+ (void)initialize {
  if (self == [OrgOssPdfreporterEngineFillJRFillSubreport class]) {
    OrgOssPdfreporterEngineFillJRFillSubreport_runnerFactoryCache = new_OrgOssPdfreporterEngineUtilJRSingletonCache_initWithIOSClass_(OrgOssPdfreporterEngineFillJRSubreportRunnerFactory_class_());
    J2OBJC_SET_INITIALIZED(OrgOssPdfreporterEngineFillJRFillSubreport)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgOssPdfreporterEngineFillJRBaseFiller:withOrgOssPdfreporterEngineJRSubreport:withOrgOssPdfreporterEngineFillJRFillObjectFactory:", "JRFillSubreport", NULL, 0x4, NULL, NULL },
    { "getModeValue", NULL, "Lorg.oss.pdfreporter.engine.type.ModeEnum;", 0x1, NULL, NULL },
    { "isUsingCache", NULL, "Z", 0x1, NULL, NULL },
    { "usingCache", NULL, "Z", 0x1, NULL, NULL },
    { "isRunToBottom", NULL, "Ljava.lang.Boolean;", 0x1, NULL, NULL },
    { "setRunToBottomWithJavaLangBoolean:", "setRunToBottom", "V", 0x1, NULL, NULL },
    { "getParametersMapExpression", NULL, "Lorg.oss.pdfreporter.engine.JRExpression;", 0x1, NULL, NULL },
    { "getParameters", NULL, "[Lorg.oss.pdfreporter.engine.JRSubreportParameter;", 0x1, NULL, NULL },
    { "getConnectionExpression", NULL, "Lorg.oss.pdfreporter.engine.JRExpression;", 0x1, NULL, NULL },
    { "getDataSourceExpression", NULL, "Lorg.oss.pdfreporter.engine.JRExpression;", 0x1, NULL, NULL },
    { "getExpression", NULL, "Lorg.oss.pdfreporter.engine.JRExpression;", 0x1, NULL, NULL },
    { "getJRTemplateRectangle", NULL, "Lorg.oss.pdfreporter.engine.fill.JRTemplateRectangle;", 0x4, NULL, NULL },
    { "createElementTemplate", NULL, "Lorg.oss.pdfreporter.engine.fill.JRTemplateElement;", 0x4, NULL, NULL },
    { "getPrintElements", NULL, "Ljava.util.Collection;", 0x4, NULL, "()Ljava/util/Collection<Lorg/oss/pdfreporter/engine/JRPrintElement;>;" },
    { "subreportPageFilled", NULL, "V", 0x1, NULL, NULL },
    { "evaluateWithByte:", "evaluate", "V", 0x4, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "evaluateReportWithByte:", "evaluateReport", "Lorg.oss.pdfreporter.engine.JasperReport;", 0x4, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "evaluateSubreportWithByte:", "evaluateSubreport", "V", 0x4, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "evaluateParameterValuesWithByte:", "evaluateParameterValues", "Ljava.util.Map;", 0x4, "Lorg.oss.pdfreporter.engine.JRException;", "(B)Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;" },
    { "loadReportEvaluator", NULL, "Lorg.oss.pdfreporter.engine.fill.DatasetExpressionEvaluator;", 0x4, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "createEvaluator", NULL, "Lorg.oss.pdfreporter.engine.fill.DatasetExpressionEvaluator;", 0x4, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "initSubreportFillerWithOrgOssPdfreporterEngineFillDatasetExpressionEvaluator:", "initSubreportFiller", "V", 0x4, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "saveReturnVariables", NULL, "V", 0x4, NULL, NULL },
    { "getParameterValuesWithOrgOssPdfreporterEngineFillJRBaseFiller:withOrgOssPdfreporterEngineJRExpression:withOrgOssPdfreporterEngineJRDatasetParameterArray:withByte:withBoolean:withBoolean:withBoolean:", "getParameterValues", "Ljava.util.Map;", 0x9, "Lorg.oss.pdfreporter.engine.JRException;", "(Lorg/oss/pdfreporter/engine/fill/JRBaseFiller;Lorg/oss/pdfreporter/engine/JRExpression;[Lorg/oss/pdfreporter/engine/JRDatasetParameter;BZZZ)Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;" },
    { "getParameterValuesWithOrgOssPdfreporterEngineFillJRBaseFiller:withOrgOssPdfreporterEngineFillJRFillExpressionEvaluator:withOrgOssPdfreporterEngineJRExpression:withOrgOssPdfreporterEngineJRDatasetParameterArray:withByte:withBoolean:withBoolean:withBoolean:", "getParameterValues", "Ljava.util.Map;", 0x9, "Lorg.oss.pdfreporter.engine.JRException;", "(Lorg/oss/pdfreporter/engine/fill/JRBaseFiller;Lorg/oss/pdfreporter/engine/fill/JRFillExpressionEvaluator;Lorg/oss/pdfreporter/engine/JRExpression;[Lorg/oss/pdfreporter/engine/JRDatasetParameter;BZZZ)Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;" },
    { "fillSubreport", NULL, "V", 0x4, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "prepareWithInt:withBoolean:", "prepare", "Z", 0x4, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "rewind", NULL, "V", 0x1, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "cancelSubreportFill", NULL, "V", 0x4, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "fill", NULL, "Lorg.oss.pdfreporter.engine.JRPrintElement;", 0x4, NULL, NULL },
    { "collectExpressionsWithOrgOssPdfreporterEngineJRExpressionCollector:", "collectExpressions", "V", 0x1, NULL, NULL },
    { "visitWithOrgOssPdfreporterEngineJRVisitor:", "visit", "V", 0x1, NULL, NULL },
    { "addReturnValueWithOrgOssPdfreporterEngineJRSubreportReturnValue:withJavaUtilList:withOrgOssPdfreporterEngineFillJRFillObjectFactory:", "addReturnValue", "Lorg.oss.pdfreporter.engine.fill.JRFillSubreportReturnValue;", 0x2, NULL, "(Lorg/oss/pdfreporter/engine/JRSubreportReturnValue;Ljava/util/List<Lorg/oss/pdfreporter/engine/fill/JRFillSubreportReturnValue;>;Lorg/oss/pdfreporter/engine/fill/JRFillObjectFactory;)Lorg/oss/pdfreporter/engine/fill/JRFillSubreportReturnValue;" },
    { "createHelperReturnValueWithOrgOssPdfreporterEngineJRSubreportReturnValue:withNSString:withOrgOssPdfreporterEngineTypeCalculationEnum:", "createHelperReturnValue", "Lorg.oss.pdfreporter.engine.JRSubreportReturnValue;", 0x4, NULL, NULL },
    { "createDistinctCountHelperReturnValueWithOrgOssPdfreporterEngineJRSubreportReturnValue:", "createDistinctCountHelperReturnValue", "Lorg.oss.pdfreporter.engine.JRSubreportReturnValue;", 0x4, NULL, NULL },
    { "getReturnValues", NULL, "[Lorg.oss.pdfreporter.engine.JRSubreportReturnValue;", 0x1, NULL, NULL },
    { "usesForReturnValueWithNSString:", "usesForReturnValue", "Z", 0x1, NULL, NULL },
    { "copyValues", NULL, "V", 0x4, NULL, NULL },
    { "copyValueWithOrgOssPdfreporterEngineFillJRFillSubreportReturnValue:", "copyValue", "V", 0x4, NULL, NULL },
    { "validateReport", NULL, "V", 0x4, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "verifyBandHeights", NULL, "V", 0x4, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "checkReturnValues", NULL, "V", 0x2, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "resolveElementWithOrgOssPdfreporterEngineJRPrintElement:withByte:", "resolveElement", "V", 0x4, NULL, NULL },
    { "isOwnUsingCache", NULL, "Ljava.lang.Boolean;", 0x1, NULL, NULL },
    { "getUsingCache", NULL, "Ljava.lang.Boolean;", 0x1, NULL, NULL },
    { "setUsingCacheWithJavaLangBoolean:", "setUsingCache", "V", 0x1, NULL, NULL },
    { "createCloneWithOrgOssPdfreporterEngineFillJRFillCloneFactory:", "createClone", "Lorg.oss.pdfreporter.engine.fill.JRFillCloneable;", 0x1, NULL, NULL },
    { "getRunnerFactory", NULL, "Lorg.oss.pdfreporter.engine.fill.JRSubreportRunnerFactory;", 0x4, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "getContentsStretchHeight", NULL, "I", 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "runnerFactoryCache", "runnerFactoryCache", 0x1a, "Lorg.oss.pdfreporter.engine.util.JRSingletonCache;", &OrgOssPdfreporterEngineFillJRFillSubreport_runnerFactoryCache, "Lorg/oss/pdfreporter/engine/util/JRSingletonCache<Lorg/oss/pdfreporter/engine/fill/JRSubreportRunnerFactory;>;", .constantValue.asLong = 0 },
    { "parameterValues_", NULL, 0x2, "Ljava.util.Map;", NULL, "Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;", .constantValue.asLong = 0 },
    { "parameters_", NULL, 0x2, "[Lorg.oss.pdfreporter.engine.JRSubreportParameter;", NULL, NULL, .constantValue.asLong = 0 },
    { "datasetPosition_", NULL, 0x2, "Lorg.oss.pdfreporter.engine.fill.FillDatasetPosition;", NULL, NULL, .constantValue.asLong = 0 },
    { "cacheIncluded_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "connection_", NULL, 0x2, "Lorg.oss.pdfreporter.sql.IConnection;", NULL, NULL, .constantValue.asLong = 0 },
    { "dataSource_", NULL, 0x2, "Lorg.oss.pdfreporter.engine.JRDataSource;", NULL, NULL, .constantValue.asLong = 0 },
    { "jasperReport_", NULL, 0x2, "Lorg.oss.pdfreporter.engine.JasperReport;", NULL, NULL, .constantValue.asLong = 0 },
    { "source_", NULL, 0x2, "Ljava.lang.Object;", NULL, NULL, .constantValue.asLong = 0 },
    { "loadedEvaluators_", NULL, 0x2, "Ljava.util.Map;", NULL, "Ljava/util/Map<Lorg/oss/pdfreporter/engine/JasperReport;Lorg/oss/pdfreporter/engine/fill/JREvaluator;>;", .constantValue.asLong = 0 },
    { "returnValues_", NULL, 0x2, "[Lorg.oss.pdfreporter.engine.fill.JRFillSubreportReturnValue;", NULL, NULL, .constantValue.asLong = 0 },
    { "subreportFiller_", NULL, 0x4, "Lorg.oss.pdfreporter.engine.fill.JRBaseFiller;", NULL, NULL, .constantValue.asLong = 0 },
    { "printPage_", NULL, 0x2, "Lorg.oss.pdfreporter.engine.JRPrintPage;", NULL, NULL, .constantValue.asLong = 0 },
    { "runner_", NULL, 0x2, "Lorg.oss.pdfreporter.engine.fill.JRSubreportRunner;", NULL, NULL, .constantValue.asLong = 0 },
    { "checkedReports_", NULL, 0x2, "Ljava.util.Set;", NULL, "Ljava/util/Set<Lorg/oss/pdfreporter/engine/JasperReport;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineFillJRFillSubreport = { 2, "JRFillSubreport", "org.oss.pdfreporter.engine.fill", NULL, 0x1, 49, methods, 15, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineFillJRFillSubreport;
}

@end

void OrgOssPdfreporterEngineFillJRFillSubreport_initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineJRSubreport_withOrgOssPdfreporterEngineFillJRFillObjectFactory_(OrgOssPdfreporterEngineFillJRFillSubreport *self, OrgOssPdfreporterEngineFillJRBaseFiller *filler, id<OrgOssPdfreporterEngineJRSubreport> subreport, OrgOssPdfreporterEngineFillJRFillObjectFactory *factory) {
  OrgOssPdfreporterEngineFillJRFillElement_initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineJRElement_withOrgOssPdfreporterEngineFillJRFillObjectFactory_(self, filler, subreport, factory);
  self->parameters_ = [((id<OrgOssPdfreporterEngineJRSubreport>) nil_chk(subreport)) getParameters];
  IOSObjectArray *subrepReturnValues = [subreport getReturnValues];
  if (subrepReturnValues != nil) {
    id<JavaUtilList> returnValuesList = new_JavaUtilArrayList_initWithInt_(subrepReturnValues->size_ * 2);
    self->returnValues_ = [IOSObjectArray newArrayWithLength:subrepReturnValues->size_ type:OrgOssPdfreporterEngineFillJRFillSubreportReturnValue_class_()];
    for (jint i = 0; i < subrepReturnValues->size_; i++) {
      (void) OrgOssPdfreporterEngineFillJRFillSubreport_addReturnValueWithOrgOssPdfreporterEngineJRSubreportReturnValue_withJavaUtilList_withOrgOssPdfreporterEngineFillJRFillObjectFactory_(self, IOSObjectArray_Get(subrepReturnValues, i), returnValuesList, factory);
    }
    self->returnValues_ = [IOSObjectArray newArrayWithLength:[returnValuesList size] type:OrgOssPdfreporterEngineFillJRFillSubreportReturnValue_class_()];
    (void) [returnValuesList toArrayWithNSObjectArray:self->returnValues_];
  }
  self->loadedEvaluators_ = new_JavaUtilHashMap_init();
  self->checkedReports_ = new_JavaUtilHashSet_init();
}

OrgOssPdfreporterEngineFillJRFillSubreport *new_OrgOssPdfreporterEngineFillJRFillSubreport_initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineJRSubreport_withOrgOssPdfreporterEngineFillJRFillObjectFactory_(OrgOssPdfreporterEngineFillJRBaseFiller *filler, id<OrgOssPdfreporterEngineJRSubreport> subreport, OrgOssPdfreporterEngineFillJRFillObjectFactory *factory) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineFillJRFillSubreport, initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineJRSubreport_withOrgOssPdfreporterEngineFillJRFillObjectFactory_, filler, subreport, factory)
}

OrgOssPdfreporterEngineFillJRFillSubreport *create_OrgOssPdfreporterEngineFillJRFillSubreport_initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineJRSubreport_withOrgOssPdfreporterEngineFillJRFillObjectFactory_(OrgOssPdfreporterEngineFillJRBaseFiller *filler, id<OrgOssPdfreporterEngineJRSubreport> subreport, OrgOssPdfreporterEngineFillJRFillObjectFactory *factory) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineFillJRFillSubreport, initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineJRSubreport_withOrgOssPdfreporterEngineFillJRFillObjectFactory_, filler, subreport, factory)
}

id<JavaUtilMap> OrgOssPdfreporterEngineFillJRFillSubreport_getParameterValuesWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineJRExpression_withOrgOssPdfreporterEngineJRDatasetParameterArray_withByte_withBoolean_withBoolean_withBoolean_(OrgOssPdfreporterEngineFillJRBaseFiller *filler, id<OrgOssPdfreporterEngineJRExpression> parametersMapExpression, IOSObjectArray *subreportParameters, jbyte evaluation, jboolean ignoreNullExpressions, jboolean removeResourceBundle, jboolean removeFormatFactory) {
  OrgOssPdfreporterEngineFillJRFillSubreport_initialize();
  return OrgOssPdfreporterEngineFillJRFillSubreport_getParameterValuesWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineFillJRFillExpressionEvaluator_withOrgOssPdfreporterEngineJRExpression_withOrgOssPdfreporterEngineJRDatasetParameterArray_withByte_withBoolean_withBoolean_withBoolean_(filler, [((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler)) getExpressionEvaluator], parametersMapExpression, subreportParameters, evaluation, ignoreNullExpressions, removeResourceBundle, removeFormatFactory);
}

id<JavaUtilMap> OrgOssPdfreporterEngineFillJRFillSubreport_getParameterValuesWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineFillJRFillExpressionEvaluator_withOrgOssPdfreporterEngineJRExpression_withOrgOssPdfreporterEngineJRDatasetParameterArray_withByte_withBoolean_withBoolean_withBoolean_(OrgOssPdfreporterEngineFillJRBaseFiller *filler, id<OrgOssPdfreporterEngineFillJRFillExpressionEvaluator> expressionEvaluator, id<OrgOssPdfreporterEngineJRExpression> parametersMapExpression, IOSObjectArray *subreportParameters, jbyte evaluation, jboolean ignoreNullExpressions, jboolean removeResourceBundle, jboolean removeFormatFactory) {
  OrgOssPdfreporterEngineFillJRFillSubreport_initialize();
  id<JavaUtilMap> parameterValues = nil;
  if (parametersMapExpression != nil) {
    parameterValues = (id<JavaUtilMap>) cast_check([((id<OrgOssPdfreporterEngineFillJRFillExpressionEvaluator>) nil_chk(expressionEvaluator)) evaluateWithOrgOssPdfreporterEngineJRExpression:parametersMapExpression withByte:evaluation], JavaUtilMap_class_());
  }
  if (parameterValues != nil) {
    if (parameterValues == [((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler)) getParameterValuesMap]) {
      parameterValues = new_JavaUtilHashMap_initWithJavaUtilMap_(parameterValues);
    }
    if (removeResourceBundle) {
      (void) [parameterValues removeWithId:OrgOssPdfreporterEngineJRParameter_REPORT_RESOURCE_BUNDLE];
    }
    if (removeFormatFactory) {
      (void) [parameterValues removeWithId:OrgOssPdfreporterEngineJRParameter_REPORT_FORMAT_FACTORY];
    }
    (void) [parameterValues removeWithId:OrgOssPdfreporterEngineJRParameter_JASPER_REPORT];
    (void) [parameterValues removeWithId:OrgOssPdfreporterEngineJRParameter_REPORT_CONNECTION];
    (void) [parameterValues removeWithId:OrgOssPdfreporterEngineJRParameter_REPORT_MAX_COUNT];
    (void) [parameterValues removeWithId:OrgOssPdfreporterEngineJRParameter_REPORT_DATA_SOURCE];
    (void) [parameterValues removeWithId:OrgOssPdfreporterEngineJRParameter_REPORT_SCRIPTLET];
    IOSObjectArray *scriptlets = [((OrgOssPdfreporterEngineJasperReport *) nil_chk([filler getJasperReport])) getScriptlets];
    if (scriptlets != nil) {
      for (jint i = 0; i < scriptlets->size_; i++) {
        (void) [parameterValues removeWithId:JreStrcat("$$", [((id<OrgOssPdfreporterEngineJRScriptlet>) nil_chk(IOSObjectArray_Get(scriptlets, i))) getName], OrgOssPdfreporterEngineJRScriptlet_SCRIPTLET_PARAMETER_NAME_SUFFIX)];
      }
    }
    (void) [parameterValues removeWithId:OrgOssPdfreporterEngineJRParameter_REPORT_VIRTUALIZER];
    (void) [parameterValues removeWithId:OrgOssPdfreporterEngineJRParameter_IS_IGNORE_PAGINATION];
    (void) [parameterValues removeWithId:OrgOssPdfreporterEngineJRParameter_SORT_FIELDS];
    (void) [parameterValues removeWithId:OrgOssPdfreporterEngineJRParameter_FILTER];
    (void) [parameterValues removeWithId:OrgOssPdfreporterEngineJRParameter_REPORT_PARAMETERS_MAP];
  }
  if (parameterValues == nil) {
    parameterValues = new_JavaUtilHashMap_init();
  }
  if (subreportParameters != nil && subreportParameters->size_ > 0) {
    id parameterValue = nil;
    for (jint i = 0; i < subreportParameters->size_; i++) {
      id<OrgOssPdfreporterEngineJRExpression> expression = [((id<OrgOssPdfreporterEngineJRDatasetParameter>) nil_chk(IOSObjectArray_Get(subreportParameters, i))) getExpression];
      if (expression != nil || !ignoreNullExpressions) {
        parameterValue = [((id<OrgOssPdfreporterEngineFillJRFillExpressionEvaluator>) nil_chk(expressionEvaluator)) evaluateWithOrgOssPdfreporterEngineJRExpression:expression withByte:evaluation];
        if (parameterValue == nil) {
          (void) [parameterValues removeWithId:[((id<OrgOssPdfreporterEngineJRDatasetParameter>) nil_chk(IOSObjectArray_Get(subreportParameters, i))) getName]];
        }
        else {
          (void) [parameterValues putWithId:[((id<OrgOssPdfreporterEngineJRDatasetParameter>) nil_chk(IOSObjectArray_Get(subreportParameters, i))) getName] withId:parameterValue];
        }
      }
    }
  }
  if (![parameterValues containsKeyWithId:OrgOssPdfreporterEngineJRParameter_REPORT_LOCALE]) {
    (void) [parameterValues putWithId:OrgOssPdfreporterEngineJRParameter_REPORT_LOCALE withId:[((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler)) getLocale]];
  }
  if (![parameterValues containsKeyWithId:OrgOssPdfreporterEngineJRParameter_REPORT_TIME_ZONE]) {
    (void) [parameterValues putWithId:OrgOssPdfreporterEngineJRParameter_REPORT_TIME_ZONE withId:[((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler)) getTimeZone]];
  }
  if (![parameterValues containsKeyWithId:OrgOssPdfreporterEngineJRParameter_REPORT_FORMAT_FACTORY] && !removeFormatFactory) {
    (void) [parameterValues putWithId:OrgOssPdfreporterEngineJRParameter_REPORT_FORMAT_FACTORY withId:[((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler)) getFormatFactory]];
  }
  if (![parameterValues containsKeyWithId:OrgOssPdfreporterEngineJRParameter_REPORT_CONTEXT]) {
    id<OrgOssPdfreporterEngineReportContext> context = (id<OrgOssPdfreporterEngineReportContext>) cast_check([((OrgOssPdfreporterEngineFillJRFillDataset *) nil_chk([((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler)) getMainDataset])) getParameterValueWithNSString:OrgOssPdfreporterEngineJRParameter_REPORT_CONTEXT withBoolean:true], OrgOssPdfreporterEngineReportContext_class_());
    if (context != nil) {
      (void) [parameterValues putWithId:OrgOssPdfreporterEngineJRParameter_REPORT_CONTEXT withId:context];
    }
  }
  return parameterValues;
}

OrgOssPdfreporterEngineFillJRFillSubreportReturnValue *OrgOssPdfreporterEngineFillJRFillSubreport_addReturnValueWithOrgOssPdfreporterEngineJRSubreportReturnValue_withJavaUtilList_withOrgOssPdfreporterEngineFillJRFillObjectFactory_(OrgOssPdfreporterEngineFillJRFillSubreport *self, id<OrgOssPdfreporterEngineJRSubreportReturnValue> parentReturnValue, id<JavaUtilList> returnValueList, OrgOssPdfreporterEngineFillJRFillObjectFactory *factory) {
  OrgOssPdfreporterEngineFillJRFillSubreportReturnValue *returnValue = [((OrgOssPdfreporterEngineFillJRFillObjectFactory *) nil_chk(factory)) getSubreportReturnValueWithOrgOssPdfreporterEngineJRSubreportReturnValue:parentReturnValue];
  OrgOssPdfreporterEngineTypeCalculationEnum *calculation = [((OrgOssPdfreporterEngineFillJRFillSubreportReturnValue *) nil_chk(returnValue)) getCalculationValue];
  switch ([calculation ordinal]) {
    case OrgOssPdfreporterEngineTypeCalculationEnum_Enum_AVERAGE:
    case OrgOssPdfreporterEngineTypeCalculationEnum_Enum_VARIANCE:
    {
      id<OrgOssPdfreporterEngineJRSubreportReturnValue> countVal = [self createHelperReturnValueWithOrgOssPdfreporterEngineJRSubreportReturnValue:parentReturnValue withNSString:@"_COUNT" withOrgOssPdfreporterEngineTypeCalculationEnum:JreLoadEnum(OrgOssPdfreporterEngineTypeCalculationEnum, COUNT)];
      (void) OrgOssPdfreporterEngineFillJRFillSubreport_addReturnValueWithOrgOssPdfreporterEngineJRSubreportReturnValue_withJavaUtilList_withOrgOssPdfreporterEngineFillJRFillObjectFactory_(self, countVal, returnValueList, factory);
      id<OrgOssPdfreporterEngineJRSubreportReturnValue> sumVal = [self createHelperReturnValueWithOrgOssPdfreporterEngineJRSubreportReturnValue:parentReturnValue withNSString:@"_SUM" withOrgOssPdfreporterEngineTypeCalculationEnum:JreLoadEnum(OrgOssPdfreporterEngineTypeCalculationEnum, SUM)];
      (void) OrgOssPdfreporterEngineFillJRFillSubreport_addReturnValueWithOrgOssPdfreporterEngineJRSubreportReturnValue_withJavaUtilList_withOrgOssPdfreporterEngineFillJRFillObjectFactory_(self, sumVal, returnValueList, factory);
      [((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(self->filler_)) addVariableCalculationReqWithNSString:[returnValue getToVariable] withOrgOssPdfreporterEngineTypeCalculationEnum:calculation];
      break;
    }
    case OrgOssPdfreporterEngineTypeCalculationEnum_Enum_STANDARD_DEVIATION:
    {
      id<OrgOssPdfreporterEngineJRSubreportReturnValue> varianceVal = [self createHelperReturnValueWithOrgOssPdfreporterEngineJRSubreportReturnValue:parentReturnValue withNSString:@"_VARIANCE" withOrgOssPdfreporterEngineTypeCalculationEnum:JreLoadEnum(OrgOssPdfreporterEngineTypeCalculationEnum, VARIANCE)];
      (void) OrgOssPdfreporterEngineFillJRFillSubreport_addReturnValueWithOrgOssPdfreporterEngineJRSubreportReturnValue_withJavaUtilList_withOrgOssPdfreporterEngineFillJRFillObjectFactory_(self, varianceVal, returnValueList, factory);
      [((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(self->filler_)) addVariableCalculationReqWithNSString:[returnValue getToVariable] withOrgOssPdfreporterEngineTypeCalculationEnum:calculation];
      break;
    }
    case OrgOssPdfreporterEngineTypeCalculationEnum_Enum_DISTINCT_COUNT:
    {
      id<OrgOssPdfreporterEngineJRSubreportReturnValue> countVal = [self createDistinctCountHelperReturnValueWithOrgOssPdfreporterEngineJRSubreportReturnValue:parentReturnValue];
      (void) OrgOssPdfreporterEngineFillJRFillSubreport_addReturnValueWithOrgOssPdfreporterEngineJRSubreportReturnValue_withJavaUtilList_withOrgOssPdfreporterEngineFillJRFillObjectFactory_(self, countVal, returnValueList, factory);
      [((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(self->filler_)) addVariableCalculationReqWithNSString:[returnValue getToVariable] withOrgOssPdfreporterEngineTypeCalculationEnum:calculation];
      break;
    }
  }
  [((id<JavaUtilList>) nil_chk(returnValueList)) addWithId:returnValue];
  return returnValue;
}

void OrgOssPdfreporterEngineFillJRFillSubreport_checkReturnValues(OrgOssPdfreporterEngineFillJRFillSubreport *self) {
  if (self->returnValues_ != nil && self->returnValues_->size_ > 0) {
    for (jint i = 0; i < ((IOSObjectArray *) nil_chk(self->returnValues_))->size_; i++) {
      id<OrgOssPdfreporterEngineJRSubreportReturnValue> returnValue = IOSObjectArray_Get(self->returnValues_, i);
      NSString *subreportVariableName = [((id<OrgOssPdfreporterEngineJRSubreportReturnValue>) nil_chk(returnValue)) getSubreportVariable];
      id<OrgOssPdfreporterEngineJRVariable> subrepVariable = [((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(self->subreportFiller_)) getVariableWithNSString:subreportVariableName];
      if (subrepVariable == nil) {
        @throw new_OrgOssPdfreporterEngineJRException_initWithNSString_(JreStrcat("$$$", @"Subreport variable ", subreportVariableName, @" not found."));
      }
      id<OrgOssPdfreporterEngineJRVariable> variable = [((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(self->filler_)) getVariableWithNSString:[returnValue getToVariable]];
      if ([returnValue getCalculationValue] == JreLoadEnum(OrgOssPdfreporterEngineTypeCalculationEnum, COUNT) || [returnValue getCalculationValue] == JreLoadEnum(OrgOssPdfreporterEngineTypeCalculationEnum, DISTINCT_COUNT)) {
        if (![NSNumber_class_() isAssignableFrom:[((id<OrgOssPdfreporterEngineJRVariable>) nil_chk(variable)) getValueClass]]) {
          @throw new_OrgOssPdfreporterEngineJRException_initWithNSString_(JreStrcat("$$$", @"Variable ", [returnValue getToVariable], @" must have a numeric type."));
        }
      }
      else if (![((IOSClass *) nil_chk([((id<OrgOssPdfreporterEngineJRVariable>) nil_chk(variable)) getValueClass])) isAssignableFrom:[subrepVariable getValueClass]] && !([NSNumber_class_() isAssignableFrom:[variable getValueClass]] && [NSNumber_class_() isAssignableFrom:[subrepVariable getValueClass]])) {
        @throw new_OrgOssPdfreporterEngineJRException_initWithNSString_(JreStrcat("$$$$", @"Variable ", [returnValue getToVariable], @" is not assignable from subreport variable ", subreportVariableName));
      }
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineFillJRFillSubreport)
