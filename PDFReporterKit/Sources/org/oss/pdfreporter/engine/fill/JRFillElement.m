//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/fill/JRFillElement.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/io/Serializable.h"
#include "java/lang/Boolean.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/HashMap.h"
#include "java/util/HashSet.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "org/oss/pdfreporter/engine/JRConditionalStyle.h"
#include "org/oss/pdfreporter/engine/JRConstants.h"
#include "org/oss/pdfreporter/engine/JRDefaultStyleProvider.h"
#include "org/oss/pdfreporter/engine/JRElement.h"
#include "org/oss/pdfreporter/engine/JRElementGroup.h"
#include "org/oss/pdfreporter/engine/JRException.h"
#include "org/oss/pdfreporter/engine/JRExpression.h"
#include "org/oss/pdfreporter/engine/JRExpressionChunk.h"
#include "org/oss/pdfreporter/engine/JRGroup.h"
#include "org/oss/pdfreporter/engine/JROrigin.h"
#include "org/oss/pdfreporter/engine/JRPrintElement.h"
#include "org/oss/pdfreporter/engine/JRPropertiesHolder.h"
#include "org/oss/pdfreporter/engine/JRPropertiesMap.h"
#include "org/oss/pdfreporter/engine/JRPropertiesUtil.h"
#include "org/oss/pdfreporter/engine/JRPropertyExpression.h"
#include "org/oss/pdfreporter/engine/JRStyle.h"
#include "org/oss/pdfreporter/engine/JasperPrint.h"
#include "org/oss/pdfreporter/engine/JasperReport.h"
#include "org/oss/pdfreporter/engine/JasperReportsContext.h"
#include "org/oss/pdfreporter/engine/base/JRBaseStyle.h"
#include "org/oss/pdfreporter/engine/fill/FillContainerContext.h"
#include "org/oss/pdfreporter/engine/fill/FillStyleProviderContext.h"
#include "org/oss/pdfreporter/engine/fill/JRBaseFiller.h"
#include "org/oss/pdfreporter/engine/fill/JREvaluationTime.h"
#include "org/oss/pdfreporter/engine/fill/JRFillBand.h"
#include "org/oss/pdfreporter/engine/fill/JRFillCloneFactory.h"
#include "org/oss/pdfreporter/engine/fill/JRFillCloneable.h"
#include "org/oss/pdfreporter/engine/fill/JRFillContext.h"
#include "org/oss/pdfreporter/engine/fill/JRFillElement.h"
#include "org/oss/pdfreporter/engine/fill/JRFillElementContainer.h"
#include "org/oss/pdfreporter/engine/fill/JRFillElementGroup.h"
#include "org/oss/pdfreporter/engine/fill/JRFillExpressionEvaluator.h"
#include "org/oss/pdfreporter/engine/fill/JRFillField.h"
#include "org/oss/pdfreporter/engine/fill/JRFillGroup.h"
#include "org/oss/pdfreporter/engine/fill/JRFillObjectFactory.h"
#include "org/oss/pdfreporter/engine/fill/JRFillVariable.h"
#include "org/oss/pdfreporter/engine/fill/JROriginProvider.h"
#include "org/oss/pdfreporter/engine/fill/JRRecordedValues.h"
#include "org/oss/pdfreporter/engine/fill/JRRecordedValuesPrintElement.h"
#include "org/oss/pdfreporter/engine/fill/JRTemplateElement.h"
#include "org/oss/pdfreporter/engine/fill/JRTemplatePrintElement.h"
#include "org/oss/pdfreporter/engine/style/StyleProvider.h"
#include "org/oss/pdfreporter/engine/style/StyleProviderFactory.h"
#include "org/oss/pdfreporter/engine/type/CalculationEnum.h"
#include "org/oss/pdfreporter/engine/type/EvaluationTimeEnum.h"
#include "org/oss/pdfreporter/engine/type/ModeEnum.h"
#include "org/oss/pdfreporter/engine/type/PositionTypeEnum.h"
#include "org/oss/pdfreporter/engine/type/ResetTypeEnum.h"
#include "org/oss/pdfreporter/engine/type/StretchTypeEnum.h"
#include "org/oss/pdfreporter/engine/util/JRStyleResolver.h"
#include "org/oss/pdfreporter/geometry/IColor.h"
#include "org/oss/pdfreporter/uses/java/util/UUID.h"

@class OrgOssPdfreporterEngineFillJRFillElement_DelayedEvaluations;

#pragma clang diagnostic ignored "-Wprotocol"

@interface OrgOssPdfreporterEngineFillJRFillElement () {
 @public
  jboolean isPrintWhenExpressionNull_;
  jboolean isPrintWhenTrue_;
  jboolean isToPrint_;
  jboolean isReprinted_;
  jboolean isAlreadyPrinted_;
  id<JavaUtilCollection> dependantElements_;
  jint relativeY_;
  jint stretchHeight_;
  jint x_;
  jint y_;
  jint width_;
  jint height_;
  jboolean isValueRepeating_;
  jboolean shrinkable_;
}

- (OrgOssPdfreporterEngineFillJRFillElement_DelayedEvaluations *)getDelayedEvaluationsWithOrgOssPdfreporterEngineFillJREvaluationTime:(OrgOssPdfreporterEngineFillJREvaluationTime *)time;

- (OrgOssPdfreporterEngineFillJREvaluationTime *)autogetVariableEvaluationTimeWithNSString:(NSString *)variableName;

- (void)overwriteWithRecordedValuesWithOrgOssPdfreporterEngineFillJRRecordedValues:(OrgOssPdfreporterEngineFillJRRecordedValues *)recordedValues
                                                                          withByte:(jbyte)evaluation;

- (void)restoreValuesWithOrgOssPdfreporterEngineFillJRRecordedValues:(OrgOssPdfreporterEngineFillJRRecordedValues *)recordedValues
                                                            withByte:(jbyte)evaluation;

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillElement, dependantElements_, id<JavaUtilCollection>)

__attribute__((unused)) static id OrgOssPdfreporterEngineFillJRFillElement_evaluateExpressionWithOrgOssPdfreporterEngineJRExpression_withByte_(OrgOssPdfreporterEngineFillJRFillElement *self, id<OrgOssPdfreporterEngineJRExpression> expression, jbyte evaluation);

__attribute__((unused)) static OrgOssPdfreporterEngineFillJRFillElement_DelayedEvaluations *OrgOssPdfreporterEngineFillJRFillElement_getDelayedEvaluationsWithOrgOssPdfreporterEngineFillJREvaluationTime_(OrgOssPdfreporterEngineFillJRFillElement *self, OrgOssPdfreporterEngineFillJREvaluationTime *time);

__attribute__((unused)) static OrgOssPdfreporterEngineFillJREvaluationTime *OrgOssPdfreporterEngineFillJRFillElement_autogetVariableEvaluationTimeWithNSString_(OrgOssPdfreporterEngineFillJRFillElement *self, NSString *variableName);

__attribute__((unused)) static void OrgOssPdfreporterEngineFillJRFillElement_overwriteWithRecordedValuesWithOrgOssPdfreporterEngineFillJRRecordedValues_withByte_(OrgOssPdfreporterEngineFillJRFillElement *self, OrgOssPdfreporterEngineFillJRRecordedValues *recordedValues, jbyte evaluation);

__attribute__((unused)) static void OrgOssPdfreporterEngineFillJRFillElement_restoreValuesWithOrgOssPdfreporterEngineFillJRRecordedValues_withByte_(OrgOssPdfreporterEngineFillJRFillElement *self, OrgOssPdfreporterEngineFillJRRecordedValues *recordedValues, jbyte evaluation);

@interface OrgOssPdfreporterEngineFillJRFillElement_DelayedEvaluations : NSObject < JavaIoSerializable > {
 @public
  id<JavaUtilSet> fields_;
  id<JavaUtilSet> variables_;
}

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgOssPdfreporterEngineFillJRFillElement_DelayedEvaluations)

J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillElement_DelayedEvaluations, fields_, id<JavaUtilSet>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillElement_DelayedEvaluations, variables_, id<JavaUtilSet>)

inline jlong OrgOssPdfreporterEngineFillJRFillElement_DelayedEvaluations_get_serialVersionUID();
#define OrgOssPdfreporterEngineFillJRFillElement_DelayedEvaluations_serialVersionUID 10200LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgOssPdfreporterEngineFillJRFillElement_DelayedEvaluations, serialVersionUID, jlong)

__attribute__((unused)) static void OrgOssPdfreporterEngineFillJRFillElement_DelayedEvaluations_init(OrgOssPdfreporterEngineFillJRFillElement_DelayedEvaluations *self);

__attribute__((unused)) static OrgOssPdfreporterEngineFillJRFillElement_DelayedEvaluations *new_OrgOssPdfreporterEngineFillJRFillElement_DelayedEvaluations_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgOssPdfreporterEngineFillJRFillElement_DelayedEvaluations *create_OrgOssPdfreporterEngineFillJRFillElement_DelayedEvaluations_init();

J2OBJC_TYPE_LITERAL_HEADER(OrgOssPdfreporterEngineFillJRFillElement_DelayedEvaluations)

@implementation OrgOssPdfreporterEngineFillJRFillElement

- (instancetype)initWithOrgOssPdfreporterEngineFillJRBaseFiller:(OrgOssPdfreporterEngineFillJRBaseFiller *)filler
                           withOrgOssPdfreporterEngineJRElement:(id<OrgOssPdfreporterEngineJRElement>)element
             withOrgOssPdfreporterEngineFillJRFillObjectFactory:(OrgOssPdfreporterEngineFillJRFillObjectFactory *)factory {
  OrgOssPdfreporterEngineFillJRFillElement_initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineJRElement_withOrgOssPdfreporterEngineFillJRFillObjectFactory_(self, filler, element, factory);
  return self;
}

- (instancetype)initWithOrgOssPdfreporterEngineFillJRFillElement:(OrgOssPdfreporterEngineFillJRFillElement *)element
               withOrgOssPdfreporterEngineFillJRFillCloneFactory:(OrgOssPdfreporterEngineFillJRFillCloneFactory *)factory {
  OrgOssPdfreporterEngineFillJRFillElement_initWithOrgOssPdfreporterEngineFillJRFillElement_withOrgOssPdfreporterEngineFillJRFillCloneFactory_(self, element, factory);
  return self;
}

- (id<OrgOssPdfreporterEngineJRDefaultStyleProvider>)getDefaultStyleProvider {
  return defaultStyleProvider_;
}

- (OrgOssPdfreporterUsesJavaUtilUUID *)getUUID {
  return [((id<OrgOssPdfreporterEngineJRElement>) nil_chk(parent_)) getUUID];
}

- (NSString *)getKey {
  return [((id<OrgOssPdfreporterEngineJRElement>) nil_chk(parent_)) getKey];
}

- (OrgOssPdfreporterEngineTypePositionTypeEnum *)getPositionTypeValue {
  return [((id<OrgOssPdfreporterEngineJRElement>) nil_chk(parent_)) getPositionTypeValue];
}

- (void)setPositionTypeWithOrgOssPdfreporterEngineTypePositionTypeEnum:(OrgOssPdfreporterEngineTypePositionTypeEnum *)positionType {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (OrgOssPdfreporterEngineTypeStretchTypeEnum *)getStretchTypeValue {
  return [((id<OrgOssPdfreporterEngineJRElement>) nil_chk(parent_)) getStretchTypeValue];
}

- (void)setStretchTypeWithOrgOssPdfreporterEngineTypeStretchTypeEnum:(OrgOssPdfreporterEngineTypeStretchTypeEnum *)stretchType {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (jboolean)isPrintRepeatedValues {
  return [((id<OrgOssPdfreporterEngineJRElement>) nil_chk(parent_)) isPrintRepeatedValues];
}

- (void)setPrintRepeatedValuesWithBoolean:(jboolean)isPrintRepeatedValues {
}

- (OrgOssPdfreporterEngineTypeModeEnum *)getModeValue {
  return OrgOssPdfreporterEngineUtilJRStyleResolver_getModeWithOrgOssPdfreporterEngineJRCommonElement_withOrgOssPdfreporterEngineTypeModeEnum_(self, JreLoadEnum(OrgOssPdfreporterEngineTypeModeEnum, OPAQUE));
}

- (OrgOssPdfreporterEngineTypeModeEnum *)getOwnModeValue {
  return providerStyle_ == nil || [providerStyle_ getOwnModeValue] == nil ? [((id<OrgOssPdfreporterEngineJRElement>) nil_chk(parent_)) getOwnModeValue] : [providerStyle_ getOwnModeValue];
}

- (void)setModeWithOrgOssPdfreporterEngineTypeModeEnum:(OrgOssPdfreporterEngineTypeModeEnum *)modeValue {
}

- (jint)getX {
  return x_;
}

- (void)setXWithInt:(jint)x {
  self->x_ = x;
}

- (void)setYWithInt:(jint)y {
  self->y_ = y;
}

- (jint)getY {
  return y_;
}

- (jint)getWidth {
  return width_;
}

- (void)setWidthWithInt:(jint)width {
  self->width_ = width;
}

- (void)setHeightWithInt:(jint)height {
  self->height_ = height;
}

- (jint)getHeight {
  return height_;
}

- (jboolean)isRemoveLineWhenBlank {
  return [((id<OrgOssPdfreporterEngineJRElement>) nil_chk(parent_)) isRemoveLineWhenBlank];
}

- (void)setRemoveLineWhenBlankWithBoolean:(jboolean)isRemoveLine {
}

- (jboolean)isPrintInFirstWholeBand {
  return [((id<OrgOssPdfreporterEngineJRElement>) nil_chk(parent_)) isPrintInFirstWholeBand];
}

- (void)setPrintInFirstWholeBandWithBoolean:(jboolean)isPrint {
}

- (jboolean)isPrintWhenDetailOverflows {
  return [((id<OrgOssPdfreporterEngineJRElement>) nil_chk(parent_)) isPrintWhenDetailOverflows];
}

- (void)setPrintWhenDetailOverflowsWithBoolean:(jboolean)isPrint {
}

- (id<OrgOssPdfreporterGeometryIColor>)getForecolor {
  return OrgOssPdfreporterEngineUtilJRStyleResolver_getForecolorWithOrgOssPdfreporterEngineJRCommonElement_(self);
}

- (id<OrgOssPdfreporterGeometryIColor>)getOwnForecolor {
  return providerStyle_ == nil || [providerStyle_ getOwnForecolor] == nil ? [((id<OrgOssPdfreporterEngineJRElement>) nil_chk(parent_)) getOwnForecolor] : [providerStyle_ getOwnForecolor];
}

- (void)setForecolorWithOrgOssPdfreporterGeometryIColor:(id<OrgOssPdfreporterGeometryIColor>)forecolor {
}

- (id<OrgOssPdfreporterGeometryIColor>)getBackcolor {
  return OrgOssPdfreporterEngineUtilJRStyleResolver_getBackcolorWithOrgOssPdfreporterEngineJRCommonElement_(self);
}

- (id<OrgOssPdfreporterGeometryIColor>)getOwnBackcolor {
  return providerStyle_ == nil || [providerStyle_ getOwnBackcolor] == nil ? [((id<OrgOssPdfreporterEngineJRElement>) nil_chk(parent_)) getOwnBackcolor] : [providerStyle_ getOwnBackcolor];
}

- (void)setBackcolorWithOrgOssPdfreporterGeometryIColor:(id<OrgOssPdfreporterGeometryIColor>)backcolor {
}

- (id<OrgOssPdfreporterEngineJRExpression>)getPrintWhenExpression {
  return [((id<OrgOssPdfreporterEngineJRElement>) nil_chk(parent_)) getPrintWhenExpression];
}

- (id<OrgOssPdfreporterEngineJRGroup>)getPrintWhenGroupChanges {
  return printWhenGroupChanges_;
}

- (id<OrgOssPdfreporterEngineJRElementGroup>)getElementGroup {
  return elementGroup_;
}

- (jboolean)isPrintWhenExpressionNull {
  return isPrintWhenExpressionNull_;
}

- (void)setPrintWhenExpressionNullWithBoolean:(jboolean)isPrintWhenExpressionNull {
  self->isPrintWhenExpressionNull_ = isPrintWhenExpressionNull;
}

- (jboolean)isPrintWhenTrue {
  return isPrintWhenTrue_;
}

- (void)setPrintWhenTrueWithBoolean:(jboolean)isPrintWhenTrue {
  self->isPrintWhenTrue_ = isPrintWhenTrue;
}

- (jboolean)isToPrint {
  return isToPrint_;
}

- (void)setToPrintWithBoolean:(jboolean)isToPrint {
  self->isToPrint_ = isToPrint;
}

- (jboolean)isReprinted {
  return isReprinted_;
}

- (void)setReprintedWithBoolean:(jboolean)isReprinted {
  self->isReprinted_ = isReprinted;
}

- (jboolean)isAlreadyPrinted {
  return isAlreadyPrinted_;
}

- (void)setAlreadyPrintedWithBoolean:(jboolean)isAlreadyPrinted {
  self->isAlreadyPrinted_ = isAlreadyPrinted;
}

- (IOSObjectArray *)getGroupElements {
  IOSObjectArray *groupElements = nil;
  if (elementGroup_ != nil) {
    groupElements = [elementGroup_ getElements];
  }
  return groupElements;
}

- (id<JavaUtilCollection>)getDependantElements {
  return dependantElements_;
}

- (void)addDependantElementWithOrgOssPdfreporterEngineJRElement:(id<OrgOssPdfreporterEngineJRElement>)element {
  [((id<JavaUtilCollection>) nil_chk(dependantElements_)) addWithId:element];
}

- (jint)getRelativeY {
  return relativeY_;
}

- (void)setRelativeYWithInt:(jint)relativeY {
  self->relativeY_ = relativeY;
}

- (jint)getStretchHeight {
  return stretchHeight_;
}

- (void)setStretchHeightWithInt:(jint)stretchHeight {
  if (stretchHeight > [self getHeight] || (shrinkable_ && [self isRemoveLineWhenBlank])) {
    self->stretchHeight_ = stretchHeight;
  }
  else {
    self->stretchHeight_ = [self getHeight];
  }
}

- (OrgOssPdfreporterEngineFillJRFillBand *)getBand {
  return band_;
}

- (void)setBandWithOrgOssPdfreporterEngineFillJRFillBand:(OrgOssPdfreporterEngineFillJRFillBand *)band {
  self->band_ = band;
  if (self->originProvider_ == nil) {
    [self setOriginProviderWithOrgOssPdfreporterEngineFillJROriginProvider:band];
  }
}

- (void)initStyleProviders {
  id<JavaUtilList> styleProviderFactories = [((id<OrgOssPdfreporterEngineJasperReportsContext>) nil_chk([((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler_)) getJasperReportsContext])) getExtensionsWithIOSClass:OrgOssPdfreporterEngineStyleStyleProviderFactory_class_()];
  if (styleProviderFactories != nil && [styleProviderFactories size] > 0) {
    OrgOssPdfreporterEngineFillFillStyleProviderContext *styleProviderContext = new_OrgOssPdfreporterEngineFillFillStyleProviderContext_initWithOrgOssPdfreporterEngineFillJRFillElement_(self);
    for (id<OrgOssPdfreporterEngineStyleStyleProviderFactory> __strong styleProviderFactory in styleProviderFactories) {
      id<OrgOssPdfreporterEngineStyleStyleProvider> styleProvider = [((id<OrgOssPdfreporterEngineStyleStyleProviderFactory>) nil_chk(styleProviderFactory)) getStyleProviderWithOrgOssPdfreporterEngineStyleStyleProviderContext:styleProviderContext withOrgOssPdfreporterEngineJasperReportsContext:[((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler_)) getJasperReportsContext]];
      if (styleProvider != nil) {
        if (styleProviders_ == nil) {
          styleProviders_ = new_JavaUtilArrayList_init();
        }
        [styleProviders_ addWithId:styleProvider];
      }
    }
  }
}

- (void)reset {
  relativeY_ = y_;
  stretchHeight_ = height_;
  if (elementGroup_ != nil) {
    [elementGroup_ reset];
  }
}

- (void)setCurrentEvaluationWithByte:(jbyte)evaluation {
  currentEvaluation_ = evaluation;
}

- (void)evaluateWithByte:(jbyte)evaluation {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)evaluateStyleWithByte:(jbyte)evaluation {
  providerStyle_ = nil;
  if (styleProviders_ != nil && [styleProviders_ size] > 0) {
    for (id<OrgOssPdfreporterEngineStyleStyleProvider> __strong styleProvider in styleProviders_) {
      id<OrgOssPdfreporterEngineJRStyle> style = [((id<OrgOssPdfreporterEngineStyleStyleProvider>) nil_chk(styleProvider)) getStyleWithByte:evaluation];
      if (style != nil) {
        if (providerStyle_ == nil) {
          providerStyle_ = new_OrgOssPdfreporterEngineBaseJRBaseStyle_init();
        }
        OrgOssPdfreporterEngineUtilJRStyleResolver_appendStyleWithOrgOssPdfreporterEngineJRStyle_withOrgOssPdfreporterEngineJRStyle_(providerStyle_, style);
      }
    }
  }
}

- (void)evaluatePrintWhenExpressionWithByte:(jbyte)evaluation {
  jboolean isExprNull = true;
  jboolean isExprTrue = false;
  id<OrgOssPdfreporterEngineJRExpression> expression = [self getPrintWhenExpression];
  if (expression != nil) {
    isExprNull = false;
    JavaLangBoolean *printWhenExpressionValue = (JavaLangBoolean *) cast_chk(OrgOssPdfreporterEngineFillJRFillElement_evaluateExpressionWithOrgOssPdfreporterEngineJRExpression_withByte_(self, expression, evaluation), [JavaLangBoolean class]);
    if (printWhenExpressionValue == nil) {
      isExprTrue = false;
    }
    else {
      isExprTrue = [printWhenExpressionValue booleanValue];
    }
  }
  [self setPrintWhenExpressionNullWithBoolean:isExprNull];
  [self setPrintWhenTrueWithBoolean:isExprTrue];
}

- (void)rewind {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (id<OrgOssPdfreporterEngineJRPrintElement>)fill {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (OrgOssPdfreporterEngineFillJRTemplateElement *)getElementTemplate {
  OrgOssPdfreporterEngineFillJRTemplateElement *template_ = nil;
  id<OrgOssPdfreporterEngineJRStyle> style = nil;
  if (providerStyle_ == nil) {
    style = [self getStyle];
    template_ = [self getTemplateWithOrgOssPdfreporterEngineJRStyle:style];
  }
  if (template_ == nil) {
    template_ = [self createElementTemplate];
    [self transferPropertiesWithOrgOssPdfreporterEngineFillJRTemplateElement:template_];
    template_ = [((OrgOssPdfreporterEngineFillJRFillContext *) nil_chk(((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler_))->fillContext_)) deduplicateWithOrgOssPdfreporterEngineDeduplicable:template_];
    if (providerStyle_ == nil) {
      [self registerTemplateWithOrgOssPdfreporterEngineJRStyle:style withOrgOssPdfreporterEngineFillJRTemplateElement:template_];
    }
  }
  return template_;
}

- (OrgOssPdfreporterEngineFillJRTemplateElement *)createElementTemplate {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)prepareWithInt:(jint)availableHeight
               withBoolean:(jboolean)isOverflow {
  if ([self isPrintWhenExpressionNull] || (![self isPrintWhenExpressionNull] && [self isPrintWhenTrue])) {
    [self setToPrintWithBoolean:true];
  }
  else {
    [self setToPrintWithBoolean:false];
  }
  [self setReprintedWithBoolean:false];
  return false;
}

- (void)stretchElementWithInt:(jint)bandStretch {
  switch ([[self getStretchTypeValue] ordinal]) {
    case OrgOssPdfreporterEngineTypeStretchTypeEnum_Enum_RELATIVE_TO_BAND_HEIGHT:
    {
      [self setStretchHeightWithInt:[self getHeight] + bandStretch];
      break;
    }
    case OrgOssPdfreporterEngineTypeStretchTypeEnum_Enum_RELATIVE_TO_TALLEST_OBJECT:
    {
      if (elementGroup_ != nil) {
        [self setStretchHeightWithInt:[self getHeight] + [((OrgOssPdfreporterEngineFillJRFillElementGroup *) nil_chk(elementGroup_)) getStretchHeightDiff]];
      }
      break;
    }
    case OrgOssPdfreporterEngineTypeStretchTypeEnum_Enum_NO_STRETCH:
    default:
    {
      break;
    }
  }
}

- (void)moveDependantElements {
  id<JavaUtilCollection> elements = [self getDependantElements];
  if (elements != nil && [elements size] > 0) {
    OrgOssPdfreporterEngineFillJRFillElement *element = nil;
    jint diffY = 0;
    for (id<JavaUtilIterator> it = [elements iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
      element = (OrgOssPdfreporterEngineFillJRFillElement *) cast_chk([it next], [OrgOssPdfreporterEngineFillJRFillElement class]);
      diffY = [((OrgOssPdfreporterEngineFillJRFillElement *) nil_chk(element)) getY] - [self getY] - [self getHeight] - ([element getRelativeY] - [self getRelativeY] - [self getStretchHeight]);
      if (diffY < 0) {
        diffY = 0;
      }
      [element setRelativeYWithInt:[element getRelativeY] + diffY];
    }
  }
}

- (void)resolveElementWithOrgOssPdfreporterEngineJRPrintElement:(id<OrgOssPdfreporterEngineJRPrintElement>)element
                                                       withByte:(jbyte)evaluation {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)performDelayedEvaluationWithOrgOssPdfreporterEngineJRPrintElement:(id<OrgOssPdfreporterEngineJRPrintElement>)element
                                                                 withByte:(jbyte)evaluation {
  jboolean updateTemplate = false;
  if ([self isDelayedStyleEvaluation]) {
    id<OrgOssPdfreporterEngineJRStyle> elementStyle = initStyle_;
    if (elementStyle == nil) {
      elementStyle = [((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler_)) getDefaultStyle];
    }
    if (elementStyle != nil) {
      id<OrgOssPdfreporterEngineJRStyle> evaluatedStyle = [((OrgOssPdfreporterEngineFillJRFillElementContainer *) nil_chk(conditionalStylesContainer_)) evaluateConditionalStyleWithOrgOssPdfreporterEngineJRStyle:elementStyle withByte:evaluation];
      if (evaluatedStyle != [((id<OrgOssPdfreporterEngineJRPrintElement>) nil_chk(element)) getStyle]) {
        self->currentStyle_ = evaluatedStyle;
        updateTemplate = true;
      }
    }
  }
  [self resolveElementWithOrgOssPdfreporterEngineJRPrintElement:element withByte:evaluation];
  if (updateTemplate || providerStyle_ != nil) {
    OrgOssPdfreporterEngineFillJRTemplateElement *newTemplate = [self getElementTemplate];
    [((OrgOssPdfreporterEngineFillJRTemplatePrintElement *) nil_chk(((OrgOssPdfreporterEngineFillJRTemplatePrintElement *) cast_chk(element, [OrgOssPdfreporterEngineFillJRTemplatePrintElement class])))) updateElementTemplateWithOrgOssPdfreporterEngineFillJRTemplateElement:newTemplate];
  }
  self->currentStyle_ = nil;
}

- (id)evaluateExpressionWithOrgOssPdfreporterEngineJRExpression:(id<OrgOssPdfreporterEngineJRExpression>)expression
                                                       withByte:(jbyte)evaluation {
  return OrgOssPdfreporterEngineFillJRFillElement_evaluateExpressionWithOrgOssPdfreporterEngineJRExpression_withByte_(self, expression, evaluation);
}

- (jboolean)isValueRepeating {
  return isValueRepeating_;
}

- (void)setValueRepeatingWithBoolean:(jboolean)isValueRepeating {
  self->isValueRepeating_ = isValueRepeating;
}

- (OrgOssPdfreporterEngineFillJRFillVariable *)getVariableWithNSString:(NSString *)variableName {
  return [((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler_)) getVariableWithNSString:variableName];
}

- (OrgOssPdfreporterEngineFillJRFillField *)getFieldWithNSString:(NSString *)fieldName {
  return [((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler_)) getFieldWithNSString:fieldName];
}

- (OrgOssPdfreporterEngineTypeEvaluationTimeEnum *)getEvaluationTimeValue {
  return JreLoadEnum(OrgOssPdfreporterEngineTypeEvaluationTimeEnum, NOW);
}

- (void)resolveElementWithOrgOssPdfreporterEngineJRPrintElement:(id<OrgOssPdfreporterEngineJRPrintElement>)element
                                                       withByte:(jbyte)evaluation
                withOrgOssPdfreporterEngineFillJREvaluationTime:(OrgOssPdfreporterEngineFillJREvaluationTime *)evaluationTime {
  OrgOssPdfreporterEngineTypeEvaluationTimeEnum *evaluationTimeType = [self getEvaluationTimeValue];
  switch ([evaluationTimeType ordinal]) {
    case OrgOssPdfreporterEngineTypeEvaluationTimeEnum_Enum_NOW:
    break;
    case OrgOssPdfreporterEngineTypeEvaluationTimeEnum_Enum_AUTO:
    [self delayedEvaluateWithOrgOssPdfreporterEngineFillJRRecordedValuesPrintElement:(id<OrgOssPdfreporterEngineFillJRRecordedValuesPrintElement>) cast_check(element, OrgOssPdfreporterEngineFillJRRecordedValuesPrintElement_class_()) withOrgOssPdfreporterEngineFillJREvaluationTime:evaluationTime withByte:evaluation];
    break;
    default:
    [self performDelayedEvaluationWithOrgOssPdfreporterEngineJRPrintElement:element withByte:evaluation];
    break;
  }
}

- (void)initDelayedEvaluations {
  if ([self getEvaluationTimeValue] == JreLoadEnum(OrgOssPdfreporterEngineTypeEvaluationTimeEnum, AUTO) && delayedEvaluationsMap_ == nil) {
    delayedEvaluationsMap_ = new_JavaUtilHashMap_init();
    [self collectDelayedEvaluations];
  }
}

- (void)collectDelayedEvaluations {
  if ([self isDelayedStyleEvaluation]) {
    [self collectStyleDelayedEvaluations];
    [self collectStyleProviderDelayedEvaluations];
  }
}

- (void)collectStyleDelayedEvaluations {
  id<OrgOssPdfreporterEngineJRStyle> elementStyle = initStyle_;
  if (elementStyle == nil) {
    elementStyle = [((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler_)) getDefaultStyle];
  }
  if (elementStyle != nil) {
    id<OrgOssPdfreporterEngineJRStyle> style = elementStyle;
    while (style != nil) {
      [self collectDelayedEvaluationsWithOrgOssPdfreporterEngineJRStyle:style];
      style = [style getStyle];
    }
  }
}

- (void)collectDelayedEvaluationsWithOrgOssPdfreporterEngineJRStyle:(id<OrgOssPdfreporterEngineJRStyle>)style {
  IOSObjectArray *conditionalStyles = [((id<OrgOssPdfreporterEngineJRStyle>) nil_chk(style)) getConditionalStyles];
  if (conditionalStyles != nil && conditionalStyles->size_ > 0) {
    for (jint i = 0; i < conditionalStyles->size_; i++) {
      [self collectDelayedEvaluationsWithOrgOssPdfreporterEngineJRExpression:[((id<OrgOssPdfreporterEngineJRConditionalStyle>) nil_chk(IOSObjectArray_Get(conditionalStyles, i))) getConditionExpression]];
    }
  }
}

- (void)collectDelayedEvaluationsWithOrgOssPdfreporterEngineJRExpression:(id<OrgOssPdfreporterEngineJRExpression>)expression {
  if (expression != nil) {
    IOSObjectArray *chunks = [expression getChunks];
    if (chunks != nil) {
      for (jint i = 0; i < chunks->size_; i++) {
        id<OrgOssPdfreporterEngineJRExpressionChunk> chunk = IOSObjectArray_Get(chunks, i);
        switch ([((id<OrgOssPdfreporterEngineJRExpressionChunk>) nil_chk(chunk)) getType]) {
          case OrgOssPdfreporterEngineJRExpressionChunk_TYPE_FIELD:
          {
            OrgOssPdfreporterEngineFillJRFillElement_DelayedEvaluations *delayedEvaluations = OrgOssPdfreporterEngineFillJRFillElement_getDelayedEvaluationsWithOrgOssPdfreporterEngineFillJREvaluationTime_(self, JreLoadStatic(OrgOssPdfreporterEngineFillJREvaluationTime, EVALUATION_TIME_NOW));
            [((id<JavaUtilSet>) nil_chk(((OrgOssPdfreporterEngineFillJRFillElement_DelayedEvaluations *) nil_chk(delayedEvaluations))->fields_)) addWithId:[chunk getText]];
            break;
          }
          case OrgOssPdfreporterEngineJRExpressionChunk_TYPE_VARIABLE:
          {
            OrgOssPdfreporterEngineFillJREvaluationTime *time = OrgOssPdfreporterEngineFillJRFillElement_autogetVariableEvaluationTimeWithNSString_(self, [chunk getText]);
            OrgOssPdfreporterEngineFillJRFillElement_DelayedEvaluations *delayedEvaluations = OrgOssPdfreporterEngineFillJRFillElement_getDelayedEvaluationsWithOrgOssPdfreporterEngineFillJREvaluationTime_(self, time);
            [((id<JavaUtilSet>) nil_chk(((OrgOssPdfreporterEngineFillJRFillElement_DelayedEvaluations *) nil_chk(delayedEvaluations))->variables_)) addWithId:[chunk getText]];
            break;
          }
        }
      }
    }
  }
}

- (void)collectStyleProviderDelayedEvaluations {
  if (styleProviders_ != nil && [styleProviders_ size] > 0) {
    for (id<OrgOssPdfreporterEngineStyleStyleProvider> __strong styleProvider in styleProviders_) {
      IOSObjectArray *fields = [((id<OrgOssPdfreporterEngineStyleStyleProvider>) nil_chk(styleProvider)) getFields];
      if (fields != nil && fields->size_ > 0) {
        OrgOssPdfreporterEngineFillJRFillElement_DelayedEvaluations *delayedEvaluations = OrgOssPdfreporterEngineFillJRFillElement_getDelayedEvaluationsWithOrgOssPdfreporterEngineFillJREvaluationTime_(self, JreLoadStatic(OrgOssPdfreporterEngineFillJREvaluationTime, EVALUATION_TIME_NOW));
        {
          IOSObjectArray *a__ = fields;
          NSString * const *b__ = a__->buffer_;
          NSString * const *e__ = b__ + a__->size_;
          while (b__ < e__) {
            NSString *field = *b__++;
            [((id<JavaUtilSet>) nil_chk(((OrgOssPdfreporterEngineFillJRFillElement_DelayedEvaluations *) nil_chk(delayedEvaluations))->fields_)) addWithId:field];
          }
        }
      }
      IOSObjectArray *variables = [styleProvider getVariables];
      if (variables != nil && variables->size_ > 0) {
        {
          IOSObjectArray *a__ = variables;
          NSString * const *b__ = a__->buffer_;
          NSString * const *e__ = b__ + a__->size_;
          while (b__ < e__) {
            NSString *variable = *b__++;
            OrgOssPdfreporterEngineFillJREvaluationTime *time = OrgOssPdfreporterEngineFillJRFillElement_autogetVariableEvaluationTimeWithNSString_(self, variable);
            OrgOssPdfreporterEngineFillJRFillElement_DelayedEvaluations *delayedEvaluations = OrgOssPdfreporterEngineFillJRFillElement_getDelayedEvaluationsWithOrgOssPdfreporterEngineFillJREvaluationTime_(self, time);
            [((id<JavaUtilSet>) nil_chk(((OrgOssPdfreporterEngineFillJRFillElement_DelayedEvaluations *) nil_chk(delayedEvaluations))->variables_)) addWithId:variable];
          }
        }
      }
    }
  }
}

- (OrgOssPdfreporterEngineFillJRFillElement_DelayedEvaluations *)getDelayedEvaluationsWithOrgOssPdfreporterEngineFillJREvaluationTime:(OrgOssPdfreporterEngineFillJREvaluationTime *)time {
  return OrgOssPdfreporterEngineFillJRFillElement_getDelayedEvaluationsWithOrgOssPdfreporterEngineFillJREvaluationTime_(self, time);
}

- (OrgOssPdfreporterEngineFillJREvaluationTime *)autogetVariableEvaluationTimeWithNSString:(NSString *)variableName {
  return OrgOssPdfreporterEngineFillJRFillElement_autogetVariableEvaluationTimeWithNSString_(self, variableName);
}

- (void)initDelayedEvaluationPrintWithOrgOssPdfreporterEngineFillJRRecordedValuesPrintElement:(id<OrgOssPdfreporterEngineFillJRRecordedValuesPrintElement>)printElement {
  for (id<JavaUtilIterator> it = [((id<JavaUtilSet>) nil_chk([((id<JavaUtilMap>) nil_chk(delayedEvaluationsMap_)) keySet])) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    OrgOssPdfreporterEngineFillJREvaluationTime *evaluationTime = [it next];
    if (![((OrgOssPdfreporterEngineFillJREvaluationTime *) nil_chk(evaluationTime)) isEqual:JreLoadStatic(OrgOssPdfreporterEngineFillJREvaluationTime, EVALUATION_TIME_NOW)]) {
      [((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler_)) addBoundElementWithOrgOssPdfreporterEngineFillJRFillElement:self withOrgOssPdfreporterEngineJRPrintElement:printElement withOrgOssPdfreporterEngineFillJREvaluationTime:evaluationTime];
    }
  }
  [((id<OrgOssPdfreporterEngineFillJRRecordedValuesPrintElement>) nil_chk(printElement)) initRecordedValuesWithJavaUtilSet:[((id<JavaUtilMap>) nil_chk(delayedEvaluationsMap_)) keySet]];
  if ([((id<JavaUtilMap>) nil_chk(delayedEvaluationsMap_)) containsKeyWithId:JreLoadStatic(OrgOssPdfreporterEngineFillJREvaluationTime, EVALUATION_TIME_NOW)]) {
    [self delayedEvaluateWithOrgOssPdfreporterEngineFillJRRecordedValuesPrintElement:printElement withOrgOssPdfreporterEngineFillJREvaluationTime:JreLoadStatic(OrgOssPdfreporterEngineFillJREvaluationTime, EVALUATION_TIME_NOW) withByte:currentEvaluation_];
  }
}

- (void)delayedEvaluateWithOrgOssPdfreporterEngineFillJRRecordedValuesPrintElement:(id<OrgOssPdfreporterEngineFillJRRecordedValuesPrintElement>)printElement
                                   withOrgOssPdfreporterEngineFillJREvaluationTime:(OrgOssPdfreporterEngineFillJREvaluationTime *)evaluationTime
                                                                          withByte:(jbyte)evaluation {
  OrgOssPdfreporterEngineFillJRRecordedValues *recordedValues = [((id<OrgOssPdfreporterEngineFillJRRecordedValuesPrintElement>) nil_chk(printElement)) getRecordedValues];
  if (![((OrgOssPdfreporterEngineFillJRRecordedValues *) nil_chk(recordedValues)) lastEvaluationTime]) {
    OrgOssPdfreporterEngineFillJRFillElement_DelayedEvaluations *delayedEvaluations = [((id<JavaUtilMap>) nil_chk(delayedEvaluationsMap_)) getWithId:evaluationTime];
    for (id<JavaUtilIterator> it = [((id<JavaUtilSet>) nil_chk(((OrgOssPdfreporterEngineFillJRFillElement_DelayedEvaluations *) nil_chk(delayedEvaluations))->fields_)) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
      NSString *fieldName = [it next];
      OrgOssPdfreporterEngineFillJRFillField *field = [self getFieldWithNSString:fieldName];
      [recordedValues recordFieldValueWithNSString:fieldName withId:[((OrgOssPdfreporterEngineFillJRFillField *) nil_chk(field)) getValueWithByte:evaluation]];
    }
    for (id<JavaUtilIterator> it = [((id<JavaUtilSet>) nil_chk(delayedEvaluations->variables_)) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
      NSString *variableName = [it next];
      OrgOssPdfreporterEngineFillJRFillVariable *variable = [self getVariableWithNSString:variableName];
      [recordedValues recordVariableValueWithNSString:variableName withId:[((OrgOssPdfreporterEngineFillJRFillVariable *) nil_chk(variable)) getValueWithByte:evaluation]];
    }
  }
  [recordedValues doneEvaluationWithOrgOssPdfreporterEngineFillJREvaluationTime:evaluationTime];
  if ([recordedValues finishedEvaluations]) {
    OrgOssPdfreporterEngineFillJRFillElement_overwriteWithRecordedValuesWithOrgOssPdfreporterEngineFillJRRecordedValues_withByte_(self, recordedValues, evaluation);
    [self performDelayedEvaluationWithOrgOssPdfreporterEngineJRPrintElement:printElement withByte:evaluation];
    OrgOssPdfreporterEngineFillJRFillElement_restoreValuesWithOrgOssPdfreporterEngineFillJRRecordedValues_withByte_(self, recordedValues, evaluation);
    [printElement deleteRecordedValues];
  }
}

- (void)overwriteWithRecordedValuesWithOrgOssPdfreporterEngineFillJRRecordedValues:(OrgOssPdfreporterEngineFillJRRecordedValues *)recordedValues
                                                                          withByte:(jbyte)evaluation {
  OrgOssPdfreporterEngineFillJRFillElement_overwriteWithRecordedValuesWithOrgOssPdfreporterEngineFillJRRecordedValues_withByte_(self, recordedValues, evaluation);
}

- (void)restoreValuesWithOrgOssPdfreporterEngineFillJRRecordedValues:(OrgOssPdfreporterEngineFillJRRecordedValues *)recordedValues
                                                            withByte:(jbyte)evaluation {
  OrgOssPdfreporterEngineFillJRFillElement_restoreValuesWithOrgOssPdfreporterEngineFillJRRecordedValues_withByte_(self, recordedValues, evaluation);
}

- (void)setConditionalStylesContainerWithOrgOssPdfreporterEngineFillJRFillElementContainer:(OrgOssPdfreporterEngineFillJRFillElementContainer *)conditionalStylesContainer {
  self->conditionalStylesContainer_ = conditionalStylesContainer;
  if (fillContainerContext_ == nil) {
    fillContainerContext_ = conditionalStylesContainer;
  }
}

- (id<OrgOssPdfreporterEngineJRStyle>)getStyle {
  if (currentStyle_ != nil) {
    return currentStyle_;
  }
  id<OrgOssPdfreporterEngineJRStyle> crtStyle = initStyle_;
  jboolean isUsingDefaultStyle = false;
  if (crtStyle == nil) {
    crtStyle = [((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler_)) getDefaultStyle];
    isUsingDefaultStyle = true;
  }
  id<OrgOssPdfreporterEngineJRStyle> evalStyle = crtStyle;
  if (conditionalStylesContainer_ != nil) {
    evalStyle = [conditionalStylesContainer_ getEvaluatedConditionalStyleWithOrgOssPdfreporterEngineJRStyle:crtStyle];
  }
  if (isUsingDefaultStyle && evalStyle == crtStyle) {
    evalStyle = nil;
  }
  return evalStyle;
}

- (OrgOssPdfreporterEngineFillJRTemplateElement *)getTemplateWithOrgOssPdfreporterEngineJRStyle:(id<OrgOssPdfreporterEngineJRStyle>)style {
  return [((id<JavaUtilMap>) nil_chk(templates_)) getWithId:style];
}

- (void)registerTemplateWithOrgOssPdfreporterEngineJRStyle:(id<OrgOssPdfreporterEngineJRStyle>)style
          withOrgOssPdfreporterEngineFillJRTemplateElement:(OrgOssPdfreporterEngineFillJRTemplateElement *)template_ {
  (void) [((id<JavaUtilMap>) nil_chk(templates_)) putWithId:style withId:template_];
}

- (void)setShrinkableWithBoolean:(jboolean)shrinkable {
  self->shrinkable_ = shrinkable;
}

- (void)stretchHeightFinal {
}

- (jboolean)isEvaluateNow {
  jboolean evaluateNow;
  switch ([[self getEvaluationTimeValue] ordinal]) {
    case OrgOssPdfreporterEngineTypeEvaluationTimeEnum_Enum_NOW:
    evaluateNow = true;
    break;
    case OrgOssPdfreporterEngineTypeEvaluationTimeEnum_Enum_AUTO:
    evaluateNow = [self isAutoEvaluateNow];
    break;
    default:
    evaluateNow = false;
    break;
  }
  return evaluateNow;
}

- (jboolean)isAutoEvaluateNow {
  return delayedEvaluationsMap_ == nil || [delayedEvaluationsMap_ isEmpty] || ([((id<JavaUtilMap>) nil_chk(delayedEvaluationsMap_)) size] == 1 && [((id<JavaUtilMap>) nil_chk(delayedEvaluationsMap_)) containsKeyWithId:JreLoadStatic(OrgOssPdfreporterEngineFillJREvaluationTime, EVALUATION_TIME_NOW)]);
}

- (jboolean)isEvaluateAuto {
  return [self getEvaluationTimeValue] == JreLoadEnum(OrgOssPdfreporterEngineTypeEvaluationTimeEnum, AUTO) && ![self isAutoEvaluateNow];
}

- (NSString *)getStyleNameReference {
  return nil;
}

- (void)setStyleWithOrgOssPdfreporterEngineJRStyle:(id<OrgOssPdfreporterEngineJRStyle>)style {
  initStyle_ = style;
  [((OrgOssPdfreporterEngineFillJRFillElementContainer *) nil_chk(conditionalStylesContainer_)) collectConditionalStyleWithOrgOssPdfreporterEngineJRStyle:style];
}

- (void)setStyleNameReferenceWithNSString:(NSString *)name {
  @throw new_JavaLangUnsupportedOperationException_initWithNSString_(@"Style name references not allowed at fill time");
}

- (id)clone {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (id)cloneWithOrgOssPdfreporterEngineJRElementGroup:(id<OrgOssPdfreporterEngineJRElementGroup>)parentGroup {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (id<OrgOssPdfreporterEngineJRElement>)cloneWithOrgOssPdfreporterEngineJRElementGroup:(id<OrgOssPdfreporterEngineJRElementGroup>)parentGroup
                                                                               withInt:(jint)y {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (jboolean)hasProperties {
  return mergedProperties_ != nil && [mergedProperties_ hasProperties];
}

- (OrgOssPdfreporterEngineJRPropertiesMap *)getPropertiesMap {
  return mergedProperties_;
}

- (id<OrgOssPdfreporterEngineJRPropertiesHolder>)getParentProperties {
  return [((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler_)) getJasperReport];
}

- (IOSObjectArray *)getPropertyExpressions {
  return [((id<OrgOssPdfreporterEngineJRElement>) nil_chk(parent_)) getPropertyExpressions];
}

- (void)transferPropertiesWithOrgOssPdfreporterEngineFillJRTemplateElement:(OrgOssPdfreporterEngineFillJRTemplateElement *)template_ {
  [((OrgOssPdfreporterEngineJRPropertiesUtil *) nil_chk([((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler_)) getPropertiesUtil])) transferPropertiesWithOrgOssPdfreporterEngineJRPropertiesHolder:parent_ withOrgOssPdfreporterEngineJRPropertiesHolder:template_ withNSString:OrgOssPdfreporterEngineJasperPrint_PROPERTIES_PRINT_TRANSFER_PREFIX];
}

- (void)transferPropertiesWithOrgOssPdfreporterEngineJRPrintElement:(id<OrgOssPdfreporterEngineJRPrintElement>)element {
  [((OrgOssPdfreporterEngineJRPropertiesUtil *) nil_chk([((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler_)) getPropertiesUtil])) transferPropertiesWithOrgOssPdfreporterEngineJRPropertiesMap:dynamicProperties_ withOrgOssPdfreporterEngineJRPropertiesHolder:element withNSString:OrgOssPdfreporterEngineJasperPrint_PROPERTIES_PRINT_TRANSFER_PREFIX];
}

- (OrgOssPdfreporterEngineJRPropertiesMap *)getEvaluatedProperties {
  return mergedProperties_;
}

- (void)evaluatePropertiesWithByte:(jbyte)evaluation {
  IOSObjectArray *propExprs = [self getPropertyExpressions];
  if (propExprs == nil || propExprs->size_ == 0) {
    dynamicProperties_ = nil;
    mergedProperties_ = staticProperties_;
  }
  else {
    dynamicProperties_ = new_OrgOssPdfreporterEngineJRPropertiesMap_init();
    for (jint i = 0; i < propExprs->size_; i++) {
      id<OrgOssPdfreporterEngineJRPropertyExpression> prop = IOSObjectArray_Get(propExprs, i);
      NSString *value = (NSString *) cast_chk(OrgOssPdfreporterEngineFillJRFillElement_evaluateExpressionWithOrgOssPdfreporterEngineJRExpression_withByte_(self, [((id<OrgOssPdfreporterEngineJRPropertyExpression>) nil_chk(prop)) getValueExpression], evaluation), [NSString class]);
      if (value != nil) {
        [((OrgOssPdfreporterEngineJRPropertiesMap *) nil_chk(dynamicProperties_)) setPropertyWithNSString:[prop getName] withNSString:value];
      }
    }
    mergedProperties_ = [((OrgOssPdfreporterEngineJRPropertiesMap *) nil_chk(dynamicProperties_)) cloneProperties];
    [((OrgOssPdfreporterEngineJRPropertiesMap *) nil_chk(mergedProperties_)) setBasePropertiesWithOrgOssPdfreporterEngineJRPropertiesMap:staticProperties_];
  }
}

- (void)setOriginProviderWithOrgOssPdfreporterEngineFillJROriginProvider:(id<OrgOssPdfreporterEngineFillJROriginProvider>)originProvider {
  self->originProvider_ = originProvider;
}

- (OrgOssPdfreporterEngineJROrigin *)getElementOrigin {
  OrgOssPdfreporterEngineJROrigin *elementOrigin = nil;
  if (originProvider_ != nil) {
    elementOrigin = [originProvider_ getOrigin];
  }
  return elementOrigin;
}

- (jboolean)isDelayedStyleEvaluation {
  return [((OrgOssPdfreporterEngineJRPropertiesUtil *) nil_chk([((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler_)) getPropertiesUtil])) getBooleanPropertyWithOrgOssPdfreporterEngineJRPropertiesHolder:self withNSString:OrgOssPdfreporterEngineJRStyle_PROPERTY_EVALUATION_TIME_ENABLED withBoolean:false];
}

- (OrgOssPdfreporterEngineFillJRBaseFiller *)getFiller {
  return filler_;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self clone];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgOssPdfreporterEngineFillJRBaseFiller:withOrgOssPdfreporterEngineJRElement:withOrgOssPdfreporterEngineFillJRFillObjectFactory:", "JRFillElement", NULL, 0x4, NULL, NULL },
    { "initWithOrgOssPdfreporterEngineFillJRFillElement:withOrgOssPdfreporterEngineFillJRFillCloneFactory:", "JRFillElement", NULL, 0x4, NULL, NULL },
    { "getDefaultStyleProvider", NULL, "Lorg.oss.pdfreporter.engine.JRDefaultStyleProvider;", 0x1, NULL, NULL },
    { "getUUID", NULL, "Lorg.oss.pdfreporter.uses.java.util.UUID;", 0x1, NULL, NULL },
    { "getKey", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getPositionTypeValue", NULL, "Lorg.oss.pdfreporter.engine.type.PositionTypeEnum;", 0x1, NULL, NULL },
    { "setPositionTypeWithOrgOssPdfreporterEngineTypePositionTypeEnum:", "setPositionType", "V", 0x1, NULL, NULL },
    { "getStretchTypeValue", NULL, "Lorg.oss.pdfreporter.engine.type.StretchTypeEnum;", 0x1, NULL, NULL },
    { "setStretchTypeWithOrgOssPdfreporterEngineTypeStretchTypeEnum:", "setStretchType", "V", 0x1, NULL, NULL },
    { "isPrintRepeatedValues", NULL, "Z", 0x1, NULL, NULL },
    { "setPrintRepeatedValuesWithBoolean:", "setPrintRepeatedValues", "V", 0x1, NULL, NULL },
    { "getModeValue", NULL, "Lorg.oss.pdfreporter.engine.type.ModeEnum;", 0x1, NULL, NULL },
    { "getOwnModeValue", NULL, "Lorg.oss.pdfreporter.engine.type.ModeEnum;", 0x1, NULL, NULL },
    { "setModeWithOrgOssPdfreporterEngineTypeModeEnum:", "setMode", "V", 0x1, NULL, NULL },
    { "getX", NULL, "I", 0x1, NULL, NULL },
    { "setXWithInt:", "setX", "V", 0x1, NULL, NULL },
    { "setYWithInt:", "setY", "V", 0x1, NULL, NULL },
    { "getY", NULL, "I", 0x1, NULL, NULL },
    { "getWidth", NULL, "I", 0x1, NULL, NULL },
    { "setWidthWithInt:", "setWidth", "V", 0x1, NULL, NULL },
    { "setHeightWithInt:", "setHeight", "V", 0x1, NULL, NULL },
    { "getHeight", NULL, "I", 0x1, NULL, NULL },
    { "isRemoveLineWhenBlank", NULL, "Z", 0x1, NULL, NULL },
    { "setRemoveLineWhenBlankWithBoolean:", "setRemoveLineWhenBlank", "V", 0x1, NULL, NULL },
    { "isPrintInFirstWholeBand", NULL, "Z", 0x1, NULL, NULL },
    { "setPrintInFirstWholeBandWithBoolean:", "setPrintInFirstWholeBand", "V", 0x1, NULL, NULL },
    { "isPrintWhenDetailOverflows", NULL, "Z", 0x1, NULL, NULL },
    { "setPrintWhenDetailOverflowsWithBoolean:", "setPrintWhenDetailOverflows", "V", 0x1, NULL, NULL },
    { "getForecolor", NULL, "Lorg.oss.pdfreporter.geometry.IColor;", 0x1, NULL, NULL },
    { "getOwnForecolor", NULL, "Lorg.oss.pdfreporter.geometry.IColor;", 0x1, NULL, NULL },
    { "setForecolorWithOrgOssPdfreporterGeometryIColor:", "setForecolor", "V", 0x1, NULL, NULL },
    { "getBackcolor", NULL, "Lorg.oss.pdfreporter.geometry.IColor;", 0x1, NULL, NULL },
    { "getOwnBackcolor", NULL, "Lorg.oss.pdfreporter.geometry.IColor;", 0x1, NULL, NULL },
    { "setBackcolorWithOrgOssPdfreporterGeometryIColor:", "setBackcolor", "V", 0x1, NULL, NULL },
    { "getPrintWhenExpression", NULL, "Lorg.oss.pdfreporter.engine.JRExpression;", 0x1, NULL, NULL },
    { "getPrintWhenGroupChanges", NULL, "Lorg.oss.pdfreporter.engine.JRGroup;", 0x1, NULL, NULL },
    { "getElementGroup", NULL, "Lorg.oss.pdfreporter.engine.JRElementGroup;", 0x1, NULL, NULL },
    { "isPrintWhenExpressionNull", NULL, "Z", 0x4, NULL, NULL },
    { "setPrintWhenExpressionNullWithBoolean:", "setPrintWhenExpressionNull", "V", 0x4, NULL, NULL },
    { "isPrintWhenTrue", NULL, "Z", 0x4, NULL, NULL },
    { "setPrintWhenTrueWithBoolean:", "setPrintWhenTrue", "V", 0x4, NULL, NULL },
    { "isToPrint", NULL, "Z", 0x4, NULL, NULL },
    { "setToPrintWithBoolean:", "setToPrint", "V", 0x4, NULL, NULL },
    { "isReprinted", NULL, "Z", 0x4, NULL, NULL },
    { "setReprintedWithBoolean:", "setReprinted", "V", 0x4, NULL, NULL },
    { "isAlreadyPrinted", NULL, "Z", 0x4, NULL, NULL },
    { "setAlreadyPrintedWithBoolean:", "setAlreadyPrinted", "V", 0x4, NULL, NULL },
    { "getGroupElements", NULL, "[Lorg.oss.pdfreporter.engine.JRElement;", 0x4, NULL, NULL },
    { "getDependantElements", NULL, "Ljava.util.Collection;", 0x4, NULL, "()Ljava/util/Collection<Lorg/oss/pdfreporter/engine/JRElement;>;" },
    { "addDependantElementWithOrgOssPdfreporterEngineJRElement:", "addDependantElement", "V", 0x4, NULL, NULL },
    { "getRelativeY", NULL, "I", 0x4, NULL, NULL },
    { "setRelativeYWithInt:", "setRelativeY", "V", 0x4, NULL, NULL },
    { "getStretchHeight", NULL, "I", 0x4, NULL, NULL },
    { "setStretchHeightWithInt:", "setStretchHeight", "V", 0x4, NULL, NULL },
    { "getBand", NULL, "Lorg.oss.pdfreporter.engine.fill.JRFillBand;", 0x4, NULL, NULL },
    { "setBandWithOrgOssPdfreporterEngineFillJRFillBand:", "setBand", "V", 0x4, NULL, NULL },
    { "initStyleProviders", NULL, "V", 0x4, NULL, NULL },
    { "reset", NULL, "V", 0x4, NULL, NULL },
    { "setCurrentEvaluationWithByte:", "setCurrentEvaluation", "V", 0x4, NULL, NULL },
    { "evaluateWithByte:", "evaluate", "V", 0x404, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "evaluateStyleWithByte:", "evaluateStyle", "V", 0x4, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "evaluatePrintWhenExpressionWithByte:", "evaluatePrintWhenExpression", "V", 0x4, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "rewind", NULL, "V", 0x404, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "fill", NULL, "Lorg.oss.pdfreporter.engine.JRPrintElement;", 0x404, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "getElementTemplate", NULL, "Lorg.oss.pdfreporter.engine.fill.JRTemplateElement;", 0x4, NULL, NULL },
    { "createElementTemplate", NULL, "Lorg.oss.pdfreporter.engine.fill.JRTemplateElement;", 0x404, NULL, NULL },
    { "prepareWithInt:withBoolean:", "prepare", "Z", 0x4, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "stretchElementWithInt:", "stretchElement", "V", 0x4, NULL, NULL },
    { "moveDependantElements", NULL, "V", 0x4, NULL, NULL },
    { "resolveElementWithOrgOssPdfreporterEngineJRPrintElement:withByte:", "resolveElement", "V", 0x404, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "performDelayedEvaluationWithOrgOssPdfreporterEngineJRPrintElement:withByte:", "performDelayedEvaluation", "V", 0x4, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "evaluateExpressionWithOrgOssPdfreporterEngineJRExpression:withByte:", "evaluateExpression", "Ljava.lang.Object;", 0x11, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "isValueRepeating", NULL, "Z", 0x4, NULL, NULL },
    { "setValueRepeatingWithBoolean:", "setValueRepeating", "V", 0x4, NULL, NULL },
    { "getVariableWithNSString:", "getVariable", "Lorg.oss.pdfreporter.engine.fill.JRFillVariable;", 0x4, NULL, NULL },
    { "getFieldWithNSString:", "getField", "Lorg.oss.pdfreporter.engine.fill.JRFillField;", 0x4, NULL, NULL },
    { "getEvaluationTimeValue", NULL, "Lorg.oss.pdfreporter.engine.type.EvaluationTimeEnum;", 0x4, NULL, NULL },
    { "resolveElementWithOrgOssPdfreporterEngineJRPrintElement:withByte:withOrgOssPdfreporterEngineFillJREvaluationTime:", "resolveElement", "V", 0x4, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "initDelayedEvaluations", NULL, "V", 0x4, NULL, NULL },
    { "collectDelayedEvaluations", NULL, "V", 0x4, NULL, NULL },
    { "collectStyleDelayedEvaluations", NULL, "V", 0x4, NULL, NULL },
    { "collectDelayedEvaluationsWithOrgOssPdfreporterEngineJRStyle:", "collectDelayedEvaluations", "V", 0x4, NULL, NULL },
    { "collectDelayedEvaluationsWithOrgOssPdfreporterEngineJRExpression:", "collectDelayedEvaluations", "V", 0x4, NULL, NULL },
    { "collectStyleProviderDelayedEvaluations", NULL, "V", 0x4, NULL, NULL },
    { "getDelayedEvaluationsWithOrgOssPdfreporterEngineFillJREvaluationTime:", "getDelayedEvaluations", "Lorg.oss.pdfreporter.engine.fill.JRFillElement$DelayedEvaluations;", 0x2, NULL, NULL },
    { "autogetVariableEvaluationTimeWithNSString:", "autogetVariableEvaluationTime", "Lorg.oss.pdfreporter.engine.fill.JREvaluationTime;", 0x2, NULL, NULL },
    { "initDelayedEvaluationPrintWithOrgOssPdfreporterEngineFillJRRecordedValuesPrintElement:", "initDelayedEvaluationPrint", "V", 0x4, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "delayedEvaluateWithOrgOssPdfreporterEngineFillJRRecordedValuesPrintElement:withOrgOssPdfreporterEngineFillJREvaluationTime:withByte:", "delayedEvaluate", "V", 0x4, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "overwriteWithRecordedValuesWithOrgOssPdfreporterEngineFillJRRecordedValues:withByte:", "overwriteWithRecordedValues", "V", 0x2, NULL, NULL },
    { "restoreValuesWithOrgOssPdfreporterEngineFillJRRecordedValues:withByte:", "restoreValues", "V", 0x2, NULL, NULL },
    { "setConditionalStylesContainerWithOrgOssPdfreporterEngineFillJRFillElementContainer:", "setConditionalStylesContainer", "V", 0x4, NULL, NULL },
    { "getStyle", NULL, "Lorg.oss.pdfreporter.engine.JRStyle;", 0x1, NULL, NULL },
    { "getTemplateWithOrgOssPdfreporterEngineJRStyle:", "getTemplate", "Lorg.oss.pdfreporter.engine.fill.JRTemplateElement;", 0x4, NULL, NULL },
    { "registerTemplateWithOrgOssPdfreporterEngineJRStyle:withOrgOssPdfreporterEngineFillJRTemplateElement:", "registerTemplate", "V", 0x4, NULL, NULL },
    { "setShrinkableWithBoolean:", "setShrinkable", "V", 0x14, NULL, NULL },
    { "stretchHeightFinal", NULL, "V", 0x4, NULL, NULL },
    { "isEvaluateNow", NULL, "Z", 0x4, NULL, NULL },
    { "isAutoEvaluateNow", NULL, "Z", 0x4, NULL, NULL },
    { "isEvaluateAuto", NULL, "Z", 0x4, NULL, NULL },
    { "getStyleNameReference", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "setStyleWithOrgOssPdfreporterEngineJRStyle:", "setStyle", "V", 0x1, NULL, NULL },
    { "setStyleNameReferenceWithNSString:", "setStyleNameReference", "V", 0x1, NULL, NULL },
    { "clone", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "cloneWithOrgOssPdfreporterEngineJRElementGroup:", "clone", "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "cloneWithOrgOssPdfreporterEngineJRElementGroup:withInt:", "clone", "Lorg.oss.pdfreporter.engine.JRElement;", 0x1, NULL, NULL },
    { "hasProperties", NULL, "Z", 0x1, NULL, NULL },
    { "getPropertiesMap", NULL, "Lorg.oss.pdfreporter.engine.JRPropertiesMap;", 0x1, NULL, NULL },
    { "getParentProperties", NULL, "Lorg.oss.pdfreporter.engine.JRPropertiesHolder;", 0x1, NULL, NULL },
    { "getPropertyExpressions", NULL, "[Lorg.oss.pdfreporter.engine.JRPropertyExpression;", 0x1, NULL, NULL },
    { "transferPropertiesWithOrgOssPdfreporterEngineFillJRTemplateElement:", "transferProperties", "V", 0x4, NULL, NULL },
    { "transferPropertiesWithOrgOssPdfreporterEngineJRPrintElement:", "transferProperties", "V", 0x4, NULL, NULL },
    { "getEvaluatedProperties", NULL, "Lorg.oss.pdfreporter.engine.JRPropertiesMap;", 0x4, NULL, NULL },
    { "evaluatePropertiesWithByte:", "evaluateProperties", "V", 0x4, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "setOriginProviderWithOrgOssPdfreporterEngineFillJROriginProvider:", "setOriginProvider", "V", 0x4, NULL, NULL },
    { "getElementOrigin", NULL, "Lorg.oss.pdfreporter.engine.JROrigin;", 0x4, NULL, NULL },
    { "isDelayedStyleEvaluation", NULL, "Z", 0x4, NULL, NULL },
    { "getFiller", NULL, "Lorg.oss.pdfreporter.engine.fill.JRBaseFiller;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "parent_", NULL, 0x4, "Lorg.oss.pdfreporter.engine.JRElement;", NULL, NULL, .constantValue.asLong = 0 },
    { "providerStyle_", NULL, 0x4, "Lorg.oss.pdfreporter.engine.JRStyle;", NULL, NULL, .constantValue.asLong = 0 },
    { "templates_", NULL, 0x4, "Ljava.util.Map;", NULL, "Ljava/util/Map<Lorg/oss/pdfreporter/engine/JRStyle;Lorg/oss/pdfreporter/engine/fill/JRTemplateElement;>;", .constantValue.asLong = 0 },
    { "styleProviders_", NULL, 0x4, "Ljava.util.List;", NULL, "Ljava/util/List<Lorg/oss/pdfreporter/engine/style/StyleProvider;>;", .constantValue.asLong = 0 },
    { "filler_", NULL, 0x4, "Lorg.oss.pdfreporter.engine.fill.JRBaseFiller;", NULL, NULL, .constantValue.asLong = 0 },
    { "expressionEvaluator_", NULL, 0x4, "Lorg.oss.pdfreporter.engine.fill.JRFillExpressionEvaluator;", NULL, NULL, .constantValue.asLong = 0 },
    { "defaultStyleProvider_", NULL, 0x4, "Lorg.oss.pdfreporter.engine.JRDefaultStyleProvider;", NULL, NULL, .constantValue.asLong = 0 },
    { "printWhenGroupChanges_", NULL, 0x4, "Lorg.oss.pdfreporter.engine.JRGroup;", NULL, NULL, .constantValue.asLong = 0 },
    { "elementGroup_", NULL, 0x4, "Lorg.oss.pdfreporter.engine.fill.JRFillElementGroup;", NULL, NULL, .constantValue.asLong = 0 },
    { "band_", NULL, 0x4, "Lorg.oss.pdfreporter.engine.fill.JRFillBand;", NULL, NULL, .constantValue.asLong = 0 },
    { "originProvider_", NULL, 0x4, "Lorg.oss.pdfreporter.engine.fill.JROriginProvider;", NULL, NULL, .constantValue.asLong = 0 },
    { "elementId_", NULL, 0x4, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "isPrintWhenExpressionNull_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "isPrintWhenTrue_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "isToPrint_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "isReprinted_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "isAlreadyPrinted_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "dependantElements_", NULL, 0x2, "Ljava.util.Collection;", NULL, "Ljava/util/Collection<Lorg/oss/pdfreporter/engine/JRElement;>;", .constantValue.asLong = 0 },
    { "relativeY_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "stretchHeight_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "x_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "y_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "width_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "height_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "isValueRepeating_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "currentEvaluation_", NULL, 0x4, "B", NULL, NULL, .constantValue.asLong = 0 },
    { "delayedEvaluationsMap_", NULL, 0x4, "Ljava.util.Map;", NULL, "Ljava/util/Map<Lorg/oss/pdfreporter/engine/fill/JREvaluationTime;Lorg/oss/pdfreporter/engine/fill/JRFillElement$DelayedEvaluations;>;", .constantValue.asLong = 0 },
    { "conditionalStylesContainer_", NULL, 0x4, "Lorg.oss.pdfreporter.engine.fill.JRFillElementContainer;", NULL, NULL, .constantValue.asLong = 0 },
    { "fillContainerContext_", NULL, 0x4, "Lorg.oss.pdfreporter.engine.fill.FillContainerContext;", NULL, NULL, .constantValue.asLong = 0 },
    { "initStyle_", NULL, 0x4, "Lorg.oss.pdfreporter.engine.JRStyle;", NULL, NULL, .constantValue.asLong = 0 },
    { "currentStyle_", NULL, 0x4, "Lorg.oss.pdfreporter.engine.JRStyle;", NULL, NULL, .constantValue.asLong = 0 },
    { "shrinkable_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "staticProperties_", NULL, 0x4, "Lorg.oss.pdfreporter.engine.JRPropertiesMap;", NULL, NULL, .constantValue.asLong = 0 },
    { "dynamicProperties_", NULL, 0x4, "Lorg.oss.pdfreporter.engine.JRPropertiesMap;", NULL, NULL, .constantValue.asLong = 0 },
    { "mergedProperties_", NULL, 0x4, "Lorg.oss.pdfreporter.engine.JRPropertiesMap;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lorg.oss.pdfreporter.engine.fill.JRFillElement$DelayedEvaluations;"};
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineFillJRFillElement = { 2, "JRFillElement", "org.oss.pdfreporter.engine.fill", NULL, 0x401, 117, methods, 35, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_OrgOssPdfreporterEngineFillJRFillElement;
}

@end

void OrgOssPdfreporterEngineFillJRFillElement_initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineJRElement_withOrgOssPdfreporterEngineFillJRFillObjectFactory_(OrgOssPdfreporterEngineFillJRFillElement *self, OrgOssPdfreporterEngineFillJRBaseFiller *filler, id<OrgOssPdfreporterEngineJRElement> element, OrgOssPdfreporterEngineFillJRFillObjectFactory *factory) {
  NSObject_init(self);
  self->templates_ = new_JavaUtilHashMap_init();
  self->isPrintWhenExpressionNull_ = true;
  self->isPrintWhenTrue_ = true;
  self->isToPrint_ = true;
  self->dependantElements_ = new_JavaUtilArrayList_init();
  [((OrgOssPdfreporterEngineFillJRFillObjectFactory *) nil_chk(factory)) putWithId:element withId:self];
  self->parent_ = element;
  self->filler_ = filler;
  self->expressionEvaluator_ = [factory getExpressionEvaluator];
  self->defaultStyleProvider_ = [factory getDefaultStyleProvider];
  self->elementId_ = [((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler)) assignElementIdWithOrgOssPdfreporterEngineFillJRFillElement:self];
  self->printWhenGroupChanges_ = [factory getGroupWithOrgOssPdfreporterEngineJRGroup:[((id<OrgOssPdfreporterEngineJRElement>) nil_chk(element)) getPrintWhenGroupChanges]];
  self->elementGroup_ = (OrgOssPdfreporterEngineFillJRFillElementGroup *) cast_chk([factory getVisitResultWithOrgOssPdfreporterEngineJRVisitable:[element getElementGroup]], [OrgOssPdfreporterEngineFillJRFillElementGroup class]);
  self->x_ = [element getX];
  self->y_ = [element getY];
  self->width_ = [element getWidth];
  self->height_ = [element getHeight];
  self->staticProperties_ = [element hasProperties] ? [((OrgOssPdfreporterEngineJRPropertiesMap *) nil_chk([element getPropertiesMap])) cloneProperties] : nil;
  self->mergedProperties_ = self->staticProperties_;
  [factory registerDelayedStyleSetterWithOrgOssPdfreporterEngineJRStyleSetter:self withOrgOssPdfreporterEngineJRStyleContainer:self->parent_];
  [self initStyleProviders];
}

void OrgOssPdfreporterEngineFillJRFillElement_initWithOrgOssPdfreporterEngineFillJRFillElement_withOrgOssPdfreporterEngineFillJRFillCloneFactory_(OrgOssPdfreporterEngineFillJRFillElement *self, OrgOssPdfreporterEngineFillJRFillElement *element, OrgOssPdfreporterEngineFillJRFillCloneFactory *factory) {
  NSObject_init(self);
  self->templates_ = new_JavaUtilHashMap_init();
  self->isPrintWhenExpressionNull_ = true;
  self->isPrintWhenTrue_ = true;
  self->isToPrint_ = true;
  self->dependantElements_ = new_JavaUtilArrayList_init();
  [((OrgOssPdfreporterEngineFillJRFillCloneFactory *) nil_chk(factory)) putWithOrgOssPdfreporterEngineFillJRFillCloneable:element withOrgOssPdfreporterEngineFillJRFillCloneable:self];
  self->parent_ = ((OrgOssPdfreporterEngineFillJRFillElement *) nil_chk(element))->parent_;
  self->filler_ = element->filler_;
  self->expressionEvaluator_ = element->expressionEvaluator_;
  self->defaultStyleProvider_ = element->defaultStyleProvider_;
  self->originProvider_ = element->originProvider_;
  self->elementId_ = element->elementId_;
  self->printWhenGroupChanges_ = element->printWhenGroupChanges_;
  self->elementGroup_ = (OrgOssPdfreporterEngineFillJRFillElementGroup *) cast_chk([factory getCloneWithOrgOssPdfreporterEngineFillJRFillCloneable:(OrgOssPdfreporterEngineFillJRFillElementGroup *) cast_chk([element getElementGroup], [OrgOssPdfreporterEngineFillJRFillElementGroup class])], [OrgOssPdfreporterEngineFillJRFillElementGroup class]);
  self->x_ = [element getX];
  self->y_ = [element getY];
  self->width_ = [element getWidth];
  self->height_ = [element getHeight];
  self->templates_ = element->templates_;
  self->initStyle_ = element->initStyle_;
  self->shrinkable_ = element->shrinkable_;
  self->staticProperties_ = element->staticProperties_ == nil ? nil : [element->staticProperties_ cloneProperties];
  self->mergedProperties_ = self->staticProperties_;
  self->styleProviders_ = element->styleProviders_;
}

id OrgOssPdfreporterEngineFillJRFillElement_evaluateExpressionWithOrgOssPdfreporterEngineJRExpression_withByte_(OrgOssPdfreporterEngineFillJRFillElement *self, id<OrgOssPdfreporterEngineJRExpression> expression, jbyte evaluation) {
  return [((id<OrgOssPdfreporterEngineFillJRFillExpressionEvaluator>) nil_chk(self->expressionEvaluator_)) evaluateWithOrgOssPdfreporterEngineJRExpression:expression withByte:evaluation];
}

OrgOssPdfreporterEngineFillJRFillElement_DelayedEvaluations *OrgOssPdfreporterEngineFillJRFillElement_getDelayedEvaluationsWithOrgOssPdfreporterEngineFillJREvaluationTime_(OrgOssPdfreporterEngineFillJRFillElement *self, OrgOssPdfreporterEngineFillJREvaluationTime *time) {
  OrgOssPdfreporterEngineFillJRFillElement_DelayedEvaluations *delayedEvaluations = [((id<JavaUtilMap>) nil_chk(self->delayedEvaluationsMap_)) getWithId:time];
  if (delayedEvaluations == nil) {
    delayedEvaluations = new_OrgOssPdfreporterEngineFillJRFillElement_DelayedEvaluations_init();
    (void) [((id<JavaUtilMap>) nil_chk(self->delayedEvaluationsMap_)) putWithId:time withId:delayedEvaluations];
  }
  return delayedEvaluations;
}

OrgOssPdfreporterEngineFillJREvaluationTime *OrgOssPdfreporterEngineFillJRFillElement_autogetVariableEvaluationTimeWithNSString_(OrgOssPdfreporterEngineFillJRFillElement *self, NSString *variableName) {
  OrgOssPdfreporterEngineFillJRFillVariable *variable = [self getVariableWithNSString:variableName];
  OrgOssPdfreporterEngineFillJREvaluationTime *evaluationTime;
  switch ([[((OrgOssPdfreporterEngineFillJRFillVariable *) nil_chk(variable)) getResetTypeValue] ordinal]) {
    case OrgOssPdfreporterEngineTypeResetTypeEnum_Enum_REPORT:
    evaluationTime = JreLoadStatic(OrgOssPdfreporterEngineFillJREvaluationTime, EVALUATION_TIME_REPORT);
    break;
    case OrgOssPdfreporterEngineTypeResetTypeEnum_Enum_PAGE:
    evaluationTime = JreLoadStatic(OrgOssPdfreporterEngineFillJREvaluationTime, EVALUATION_TIME_PAGE);
    break;
    case OrgOssPdfreporterEngineTypeResetTypeEnum_Enum_COLUMN:
    evaluationTime = JreLoadStatic(OrgOssPdfreporterEngineFillJREvaluationTime, EVALUATION_TIME_COLUMN);
    break;
    case OrgOssPdfreporterEngineTypeResetTypeEnum_Enum_GROUP:
    evaluationTime = OrgOssPdfreporterEngineFillJREvaluationTime_getGroupEvaluationTimeWithNSString_([((id<OrgOssPdfreporterEngineJRGroup>) nil_chk([variable getResetGroup])) getName]);
    break;
    default:
    evaluationTime = JreLoadStatic(OrgOssPdfreporterEngineFillJREvaluationTime, EVALUATION_TIME_NOW);
    break;
  }
  if (![((OrgOssPdfreporterEngineFillJREvaluationTime *) nil_chk(evaluationTime)) isEqual:JreLoadStatic(OrgOssPdfreporterEngineFillJREvaluationTime, EVALUATION_TIME_NOW)] && [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(self->band_)) isNowEvaluationTimeWithOrgOssPdfreporterEngineFillJREvaluationTime:evaluationTime]) {
    evaluationTime = JreLoadStatic(OrgOssPdfreporterEngineFillJREvaluationTime, EVALUATION_TIME_NOW);
  }
  if ([variable getCalculationValue] == JreLoadEnum(OrgOssPdfreporterEngineTypeCalculationEnum, SYSTEM) && [((OrgOssPdfreporterEngineFillJREvaluationTime *) nil_chk(evaluationTime)) isEqual:JreLoadStatic(OrgOssPdfreporterEngineFillJREvaluationTime, EVALUATION_TIME_NOW)] && [((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk(self->band_)) isVariableUsedInSubreportReturnsWithNSString:variableName]) {
    evaluationTime = OrgOssPdfreporterEngineFillJREvaluationTime_getBandEvaluationTimeWithOrgOssPdfreporterEngineFillJRFillBand_(self->band_);
  }
  return evaluationTime;
}

void OrgOssPdfreporterEngineFillJRFillElement_overwriteWithRecordedValuesWithOrgOssPdfreporterEngineFillJRRecordedValues_withByte_(OrgOssPdfreporterEngineFillJRFillElement *self, OrgOssPdfreporterEngineFillJRRecordedValues *recordedValues, jbyte evaluation) {
  id<JavaUtilMap> fieldValues = [((OrgOssPdfreporterEngineFillJRRecordedValues *) nil_chk(recordedValues)) getRecordedFieldValues];
  if (fieldValues != nil) {
    for (id<JavaUtilIterator> it = [((id<JavaUtilSet>) nil_chk([fieldValues entrySet])) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
      id<JavaUtilMap_Entry> entry_ = [it next];
      NSString *fieldName = [((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey];
      id fieldValue = [entry_ getValue];
      OrgOssPdfreporterEngineFillJRFillField *field = [self getFieldWithNSString:fieldName];
      [((OrgOssPdfreporterEngineFillJRFillField *) nil_chk(field)) overwriteValueWithId:fieldValue withByte:evaluation];
    }
  }
  id<JavaUtilMap> variableValues = [recordedValues getRecordedVariableValues];
  if (variableValues != nil) {
    for (id<JavaUtilIterator> it = [((id<JavaUtilSet>) nil_chk([variableValues entrySet])) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
      id<JavaUtilMap_Entry> entry_ = [it next];
      NSString *variableName = [((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey];
      id variableValue = [entry_ getValue];
      OrgOssPdfreporterEngineFillJRFillVariable *variable = [self getVariableWithNSString:variableName];
      [((OrgOssPdfreporterEngineFillJRFillVariable *) nil_chk(variable)) overwriteValueWithId:variableValue withByte:evaluation];
    }
  }
}

void OrgOssPdfreporterEngineFillJRFillElement_restoreValuesWithOrgOssPdfreporterEngineFillJRRecordedValues_withByte_(OrgOssPdfreporterEngineFillJRFillElement *self, OrgOssPdfreporterEngineFillJRRecordedValues *recordedValues, jbyte evaluation) {
  id<JavaUtilMap> fieldValues = [((OrgOssPdfreporterEngineFillJRRecordedValues *) nil_chk(recordedValues)) getRecordedFieldValues];
  if (fieldValues != nil) {
    for (id<JavaUtilIterator> it = [((id<JavaUtilSet>) nil_chk([fieldValues keySet])) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
      NSString *fieldName = [it next];
      OrgOssPdfreporterEngineFillJRFillField *field = [self getFieldWithNSString:fieldName];
      [((OrgOssPdfreporterEngineFillJRFillField *) nil_chk(field)) restoreValueWithByte:evaluation];
    }
  }
  id<JavaUtilMap> variableValues = [recordedValues getRecordedVariableValues];
  if (variableValues != nil) {
    for (id<JavaUtilIterator> it = [((id<JavaUtilSet>) nil_chk([variableValues keySet])) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
      NSString *variableName = [it next];
      OrgOssPdfreporterEngineFillJRFillVariable *variable = [self getVariableWithNSString:variableName];
      [((OrgOssPdfreporterEngineFillJRFillVariable *) nil_chk(variable)) restoreValueWithByte:evaluation];
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineFillJRFillElement)

@implementation OrgOssPdfreporterEngineFillJRFillElement_DelayedEvaluations

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterEngineFillJRFillElement_DelayedEvaluations_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "DelayedEvaluations", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "serialVersionUID", 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgOssPdfreporterEngineFillJRFillElement_DelayedEvaluations_serialVersionUID },
    { "fields_", NULL, 0x10, "Ljava.util.Set;", NULL, "Ljava/util/Set<Ljava/lang/String;>;", .constantValue.asLong = 0 },
    { "variables_", NULL, 0x10, "Ljava.util.Set;", NULL, "Ljava/util/Set<Ljava/lang/String;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineFillJRFillElement_DelayedEvaluations = { 2, "DelayedEvaluations", "org.oss.pdfreporter.engine.fill", "JRFillElement", 0xa, 1, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineFillJRFillElement_DelayedEvaluations;
}

@end

void OrgOssPdfreporterEngineFillJRFillElement_DelayedEvaluations_init(OrgOssPdfreporterEngineFillJRFillElement_DelayedEvaluations *self) {
  NSObject_init(self);
  self->fields_ = new_JavaUtilHashSet_init();
  self->variables_ = new_JavaUtilHashSet_init();
}

OrgOssPdfreporterEngineFillJRFillElement_DelayedEvaluations *new_OrgOssPdfreporterEngineFillJRFillElement_DelayedEvaluations_init() {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineFillJRFillElement_DelayedEvaluations, init)
}

OrgOssPdfreporterEngineFillJRFillElement_DelayedEvaluations *create_OrgOssPdfreporterEngineFillJRFillElement_DelayedEvaluations_init() {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineFillJRFillElement_DelayedEvaluations, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineFillJRFillElement_DelayedEvaluations)
