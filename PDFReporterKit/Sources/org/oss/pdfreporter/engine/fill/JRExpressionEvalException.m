//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/fill/JRExpressionEvalException.java
//

#include "J2ObjC_source.h"
#include "org/oss/pdfreporter/engine/JRConstants.h"
#include "org/oss/pdfreporter/engine/JRException.h"
#include "org/oss/pdfreporter/engine/JRExpression.h"
#include "org/oss/pdfreporter/engine/fill/JRExpressionEvalException.h"

@interface OrgOssPdfreporterEngineFillJRExpressionEvalException () {
 @public
  id<OrgOssPdfreporterEngineJRExpression> expression_;
}

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRExpressionEvalException, expression_, id<OrgOssPdfreporterEngineJRExpression>)

inline jlong OrgOssPdfreporterEngineFillJRExpressionEvalException_get_serialVersionUID();
#define OrgOssPdfreporterEngineFillJRExpressionEvalException_serialVersionUID 10200LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgOssPdfreporterEngineFillJRExpressionEvalException, serialVersionUID, jlong)

@implementation OrgOssPdfreporterEngineFillJRExpressionEvalException

- (instancetype)initWithOrgOssPdfreporterEngineJRExpression:(id<OrgOssPdfreporterEngineJRExpression>)expr
                                            withNSException:(NSException *)throwable {
  OrgOssPdfreporterEngineFillJRExpressionEvalException_initWithOrgOssPdfreporterEngineJRExpression_withNSException_(self, expr, throwable);
  return self;
}

- (id<OrgOssPdfreporterEngineJRExpression>)getExpression {
  return self->expression_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgOssPdfreporterEngineJRExpression:withNSException:", "JRExpressionEvalException", NULL, 0x1, NULL, NULL },
    { "getExpression", NULL, "Lorg.oss.pdfreporter.engine.JRExpression;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "serialVersionUID", 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgOssPdfreporterEngineFillJRExpressionEvalException_serialVersionUID },
    { "expression_", NULL, 0x2, "Lorg.oss.pdfreporter.engine.JRExpression;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineFillJRExpressionEvalException = { 2, "JRExpressionEvalException", "org.oss.pdfreporter.engine.fill", NULL, 0x1, 2, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineFillJRExpressionEvalException;
}

@end

void OrgOssPdfreporterEngineFillJRExpressionEvalException_initWithOrgOssPdfreporterEngineJRExpression_withNSException_(OrgOssPdfreporterEngineFillJRExpressionEvalException *self, id<OrgOssPdfreporterEngineJRExpression> expr, NSException *throwable) {
  OrgOssPdfreporterEngineJRException_initWithNSString_withNSException_(self, JreStrcat("$$", @"Error evaluating expression : \n\tSource text : ", [((id<OrgOssPdfreporterEngineJRExpression>) nil_chk(expr)) getText]), throwable);
  self->expression_ = expr;
}

OrgOssPdfreporterEngineFillJRExpressionEvalException *new_OrgOssPdfreporterEngineFillJRExpressionEvalException_initWithOrgOssPdfreporterEngineJRExpression_withNSException_(id<OrgOssPdfreporterEngineJRExpression> expr, NSException *throwable) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineFillJRExpressionEvalException, initWithOrgOssPdfreporterEngineJRExpression_withNSException_, expr, throwable)
}

OrgOssPdfreporterEngineFillJRExpressionEvalException *create_OrgOssPdfreporterEngineFillJRExpressionEvalException_initWithOrgOssPdfreporterEngineJRExpression_withNSException_(id<OrgOssPdfreporterEngineJRExpression> expr, NSException *throwable) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineFillJRExpressionEvalException, initWithOrgOssPdfreporterEngineJRExpression_withNSException_, expr, throwable)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineFillJRExpressionEvalException)
