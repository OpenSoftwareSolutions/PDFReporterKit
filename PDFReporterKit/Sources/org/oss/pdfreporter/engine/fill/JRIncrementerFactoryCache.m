//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/fill/JRIncrementerFactoryCache.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalAccessException.h"
#include "java/lang/InstantiationException.h"
#include "java/util/Map.h"
#include "org/oss/pdfreporter/engine/JRRuntimeException.h"
#include "org/oss/pdfreporter/engine/fill/JRIncrementerFactory.h"
#include "org/oss/pdfreporter/engine/fill/JRIncrementerFactoryCache.h"
#include "org/oss/pdfreporter/uses/org/apache/commons/collections/ReferenceMap.h"

@interface OrgOssPdfreporterEngineFillJRIncrementerFactoryCache ()

- (instancetype)init;

@end

inline id<JavaUtilMap> OrgOssPdfreporterEngineFillJRIncrementerFactoryCache_get_factoriesMap();
inline id<JavaUtilMap> OrgOssPdfreporterEngineFillJRIncrementerFactoryCache_set_factoriesMap(id<JavaUtilMap> value);
static id<JavaUtilMap> OrgOssPdfreporterEngineFillJRIncrementerFactoryCache_factoriesMap;
J2OBJC_STATIC_FIELD_OBJ(OrgOssPdfreporterEngineFillJRIncrementerFactoryCache, factoriesMap, id<JavaUtilMap>)

__attribute__((unused)) static void OrgOssPdfreporterEngineFillJRIncrementerFactoryCache_init(OrgOssPdfreporterEngineFillJRIncrementerFactoryCache *self);

__attribute__((unused)) static OrgOssPdfreporterEngineFillJRIncrementerFactoryCache *new_OrgOssPdfreporterEngineFillJRIncrementerFactoryCache_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgOssPdfreporterEngineFillJRIncrementerFactoryCache *create_OrgOssPdfreporterEngineFillJRIncrementerFactoryCache_init();

J2OBJC_INITIALIZED_DEFN(OrgOssPdfreporterEngineFillJRIncrementerFactoryCache)

@implementation OrgOssPdfreporterEngineFillJRIncrementerFactoryCache

+ (id<OrgOssPdfreporterEngineFillJRIncrementerFactory>)getInstanceWithIOSClass:(IOSClass *)factoryClass {
  return OrgOssPdfreporterEngineFillJRIncrementerFactoryCache_getInstanceWithIOSClass_(factoryClass);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterEngineFillJRIncrementerFactoryCache_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)initialize {
  if (self == [OrgOssPdfreporterEngineFillJRIncrementerFactoryCache class]) {
    OrgOssPdfreporterEngineFillJRIncrementerFactoryCache_factoriesMap = new_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_initWithInt_withInt_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_WEAK, OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_HARD);
    J2OBJC_SET_INITIALIZED(OrgOssPdfreporterEngineFillJRIncrementerFactoryCache)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getInstanceWithIOSClass:", "getInstance", "Lorg.oss.pdfreporter.engine.fill.JRIncrementerFactory;", 0x29, NULL, "(Ljava/lang/Class<*>;)Lorg/oss/pdfreporter/engine/fill/JRIncrementerFactory;" },
    { "init", "JRIncrementerFactoryCache", NULL, 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "factoriesMap", "factoriesMap", 0xa, "Ljava.util.Map;", &OrgOssPdfreporterEngineFillJRIncrementerFactoryCache_factoriesMap, "Ljava/util/Map<Ljava/lang/Class<*>;Lorg/oss/pdfreporter/engine/fill/JRIncrementerFactory;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineFillJRIncrementerFactoryCache = { 2, "JRIncrementerFactoryCache", "org.oss.pdfreporter.engine.fill", NULL, 0x11, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineFillJRIncrementerFactoryCache;
}

@end

id<OrgOssPdfreporterEngineFillJRIncrementerFactory> OrgOssPdfreporterEngineFillJRIncrementerFactoryCache_getInstanceWithIOSClass_(IOSClass *factoryClass) {
  OrgOssPdfreporterEngineFillJRIncrementerFactoryCache_initialize();
  @synchronized(OrgOssPdfreporterEngineFillJRIncrementerFactoryCache_class_()) {
    id<OrgOssPdfreporterEngineFillJRIncrementerFactory> incrementerFactory = [((id<JavaUtilMap>) nil_chk(OrgOssPdfreporterEngineFillJRIncrementerFactoryCache_factoriesMap)) getWithId:factoryClass];
    if (incrementerFactory == nil) {
      @try {
        incrementerFactory = (id<OrgOssPdfreporterEngineFillJRIncrementerFactory>) cast_check([((IOSClass *) nil_chk(factoryClass)) newInstance], OrgOssPdfreporterEngineFillJRIncrementerFactory_class_());
      }
      @catch (JavaLangInstantiationException *e) {
        @throw new_OrgOssPdfreporterEngineJRRuntimeException_initWithNSException_(e);
      }
      @catch (JavaLangIllegalAccessException *e) {
        @throw new_OrgOssPdfreporterEngineJRRuntimeException_initWithNSException_(e);
      }
      (void) [((id<JavaUtilMap>) nil_chk(OrgOssPdfreporterEngineFillJRIncrementerFactoryCache_factoriesMap)) putWithId:factoryClass withId:incrementerFactory];
    }
    return incrementerFactory;
  }
}

void OrgOssPdfreporterEngineFillJRIncrementerFactoryCache_init(OrgOssPdfreporterEngineFillJRIncrementerFactoryCache *self) {
  NSObject_init(self);
}

OrgOssPdfreporterEngineFillJRIncrementerFactoryCache *new_OrgOssPdfreporterEngineFillJRIncrementerFactoryCache_init() {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineFillJRIncrementerFactoryCache, init)
}

OrgOssPdfreporterEngineFillJRIncrementerFactoryCache *create_OrgOssPdfreporterEngineFillJRIncrementerFactoryCache_init() {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineFillJRIncrementerFactoryCache, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineFillJRIncrementerFactoryCache)
