//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/fill/LineHeightCalculator.java
//

#include "J2ObjC_source.h"
#include "java/lang/Float.h"
#include "java/lang/Math.h"
#include "org/oss/pdfreporter/engine/JRParagraph.h"
#include "org/oss/pdfreporter/engine/fill/LineHeightCalculator.h"
#include "org/oss/pdfreporter/engine/type/LineSpacingEnum.h"

@implementation OrgOssPdfreporterEngineFillLineHeightCalculator

+ (jfloat)getLineHeightWithBoolean:(jboolean)isFirstLine
withOrgOssPdfreporterEngineJRParagraph:(id<OrgOssPdfreporterEngineJRParagraph>)paragraph
                         withFloat:(jfloat)maxLeading
                         withFloat:(jfloat)maxAscent {
  return OrgOssPdfreporterEngineFillLineHeightCalculator_getLineHeightWithBoolean_withOrgOssPdfreporterEngineJRParagraph_withFloat_withFloat_(isFirstLine, paragraph, maxLeading, maxAscent);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterEngineFillLineHeightCalculator_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getLineHeightWithBoolean:withOrgOssPdfreporterEngineJRParagraph:withFloat:withFloat:", "getLineHeight", "F", 0x9, NULL, NULL },
    { "init", "LineHeightCalculator", NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineFillLineHeightCalculator = { 2, "LineHeightCalculator", "org.oss.pdfreporter.engine.fill", NULL, 0x1, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineFillLineHeightCalculator;
}

@end

jfloat OrgOssPdfreporterEngineFillLineHeightCalculator_getLineHeightWithBoolean_withOrgOssPdfreporterEngineJRParagraph_withFloat_withFloat_(jboolean isFirstLine, id<OrgOssPdfreporterEngineJRParagraph> paragraph, jfloat maxLeading, jfloat maxAscent) {
  OrgOssPdfreporterEngineFillLineHeightCalculator_initialize();
  jfloat lineHeight = 0;
  switch ([[((id<OrgOssPdfreporterEngineJRParagraph>) nil_chk(paragraph)) getLineSpacing] ordinal]) {
    case OrgOssPdfreporterEngineTypeLineSpacingEnum_Enum_SINGLE:
    default:
    {
      lineHeight = maxLeading + 1.0f * maxAscent;
      break;
    }
    case OrgOssPdfreporterEngineTypeLineSpacingEnum_Enum_ONE_AND_HALF:
    {
      if (isFirstLine) {
        lineHeight = maxLeading + 1.0f * maxAscent;
      }
      else {
        lineHeight = maxLeading + 1.5f * maxAscent;
      }
      break;
    }
    case OrgOssPdfreporterEngineTypeLineSpacingEnum_Enum_DOUBLE:
    {
      if (isFirstLine) {
        lineHeight = maxLeading + 1.0f * maxAscent;
      }
      else {
        lineHeight = maxLeading + 2.0f * maxAscent;
      }
      break;
    }
    case OrgOssPdfreporterEngineTypeLineSpacingEnum_Enum_PROPORTIONAL:
    {
      if (isFirstLine) {
        lineHeight = maxLeading + 1.0f * maxAscent;
      }
      else {
        lineHeight = maxLeading + [((JavaLangFloat *) nil_chk([paragraph getLineSpacingSize])) floatValue] * maxAscent;
      }
      break;
    }
    case OrgOssPdfreporterEngineTypeLineSpacingEnum_Enum_AT_LEAST:
    {
      if (isFirstLine) {
        lineHeight = maxLeading + 1.0f * maxAscent;
      }
      else {
        lineHeight = JavaLangMath_maxWithFloat_withFloat_(maxLeading + 1.0f * maxAscent, [((JavaLangFloat *) nil_chk([paragraph getLineSpacingSize])) floatValue]);
      }
      break;
    }
    case OrgOssPdfreporterEngineTypeLineSpacingEnum_Enum_FIXED:
    {
      if (isFirstLine) {
        lineHeight = maxLeading + 1.0f * maxAscent;
      }
      else {
        lineHeight = [((JavaLangFloat *) nil_chk([paragraph getLineSpacingSize])) floatValue];
      }
      break;
    }
  }
  return lineHeight;
}

void OrgOssPdfreporterEngineFillLineHeightCalculator_init(OrgOssPdfreporterEngineFillLineHeightCalculator *self) {
  NSObject_init(self);
}

OrgOssPdfreporterEngineFillLineHeightCalculator *new_OrgOssPdfreporterEngineFillLineHeightCalculator_init() {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineFillLineHeightCalculator, init)
}

OrgOssPdfreporterEngineFillLineHeightCalculator *create_OrgOssPdfreporterEngineFillLineHeightCalculator_init() {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineFillLineHeightCalculator, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineFillLineHeightCalculator)
