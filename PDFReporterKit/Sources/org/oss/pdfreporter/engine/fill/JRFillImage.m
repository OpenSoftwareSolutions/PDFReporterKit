//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/fill/JRFillImage.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/io/File.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/lang/Boolean.h"
#include "java/lang/Integer.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/logging/Logger.h"
#include "org/oss/pdfreporter/engine/JRDefaultStyleProvider.h"
#include "org/oss/pdfreporter/engine/JRElement.h"
#include "org/oss/pdfreporter/engine/JRException.h"
#include "org/oss/pdfreporter/engine/JRExpression.h"
#include "org/oss/pdfreporter/engine/JRExpressionCollector.h"
#include "org/oss/pdfreporter/engine/JRGroup.h"
#include "org/oss/pdfreporter/engine/JRImage.h"
#include "org/oss/pdfreporter/engine/JRImageRenderer.h"
#include "org/oss/pdfreporter/engine/JRLineBox.h"
#include "org/oss/pdfreporter/engine/JROrigin.h"
#include "org/oss/pdfreporter/engine/JRPrintElement.h"
#include "org/oss/pdfreporter/engine/JRPrintHyperlinkParameters.h"
#include "org/oss/pdfreporter/engine/JRPrintImage.h"
#include "org/oss/pdfreporter/engine/JRRenderable.h"
#include "org/oss/pdfreporter/engine/JRStyle.h"
#include "org/oss/pdfreporter/engine/JRVisitor.h"
#include "org/oss/pdfreporter/engine/JasperPrint.h"
#include "org/oss/pdfreporter/engine/JasperReportsContext.h"
#include "org/oss/pdfreporter/engine/Renderable.h"
#include "org/oss/pdfreporter/engine/fill/JRBaseFiller.h"
#include "org/oss/pdfreporter/engine/fill/JRFillBand.h"
#include "org/oss/pdfreporter/engine/fill/JRFillCloneFactory.h"
#include "org/oss/pdfreporter/engine/fill/JRFillCloneable.h"
#include "org/oss/pdfreporter/engine/fill/JRFillContext.h"
#include "org/oss/pdfreporter/engine/fill/JRFillElement.h"
#include "org/oss/pdfreporter/engine/fill/JRFillExpressionEvaluator.h"
#include "org/oss/pdfreporter/engine/fill/JRFillGraphicElement.h"
#include "org/oss/pdfreporter/engine/fill/JRFillGroup.h"
#include "org/oss/pdfreporter/engine/fill/JRFillHyperlinkHelper.h"
#include "org/oss/pdfreporter/engine/fill/JRFillImage.h"
#include "org/oss/pdfreporter/engine/fill/JRFillObjectFactory.h"
#include "org/oss/pdfreporter/engine/fill/JRRecordedValuesPrintImage.h"
#include "org/oss/pdfreporter/engine/fill/JRTemplateElement.h"
#include "org/oss/pdfreporter/engine/fill/JRTemplateImage.h"
#include "org/oss/pdfreporter/engine/fill/JRTemplatePrintImage.h"
#include "org/oss/pdfreporter/engine/type/EvaluationTimeEnum.h"
#include "org/oss/pdfreporter/engine/type/HorizontalAlignEnum.h"
#include "org/oss/pdfreporter/engine/type/HyperlinkTypeEnum.h"
#include "org/oss/pdfreporter/engine/type/ModeEnum.h"
#include "org/oss/pdfreporter/engine/type/OnErrorTypeEnum.h"
#include "org/oss/pdfreporter/engine/type/ScaleImageEnum.h"
#include "org/oss/pdfreporter/engine/type/VerticalAlignEnum.h"
#include "org/oss/pdfreporter/engine/util/JRStyleResolver.h"
#include "org/oss/pdfreporter/geometry/IDimension.h"
#include "org/oss/pdfreporter/image/IImage.h"
#include "org/oss/pdfreporter/image/IImageManager.h"
#include "org/oss/pdfreporter/image/factory/IImageFactory.h"
#include "org/oss/pdfreporter/net/IURL.h"
#include "org/oss/pdfreporter/registry/ApiRegistry.h"
#include "org/oss/pdfreporter/uses/java/util/UUID.h"

@interface OrgOssPdfreporterEngineFillJRFillImage () {
 @public
  id<OrgOssPdfreporterEngineJRGroup> evaluationGroup_;
  id<OrgOssPdfreporterEngineRenderable> renderer_;
  jboolean hasOverflowed_;
  JavaLangInteger *imageHeight_;
  JavaLangInteger *imageWidth_;
  JavaLangInteger *imageX_;
  NSString *anchorName_;
  NSString *hyperlinkReference_;
  NSString *hyperlinkAnchor_;
  JavaLangInteger *hyperlinkPage_;
  NSString *hyperlinkTooltip_;
  OrgOssPdfreporterEngineJRPrintHyperlinkParameters *hyperlinkParameters_;
}

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillImage, evaluationGroup_, id<OrgOssPdfreporterEngineJRGroup>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillImage, renderer_, id<OrgOssPdfreporterEngineRenderable>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillImage, imageHeight_, JavaLangInteger *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillImage, imageWidth_, JavaLangInteger *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillImage, imageX_, JavaLangInteger *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillImage, anchorName_, NSString *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillImage, hyperlinkReference_, NSString *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillImage, hyperlinkAnchor_, NSString *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillImage, hyperlinkPage_, JavaLangInteger *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillImage, hyperlinkTooltip_, NSString *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillImage, hyperlinkParameters_, OrgOssPdfreporterEngineJRPrintHyperlinkParameters *)

inline JavaUtilLoggingLogger *OrgOssPdfreporterEngineFillJRFillImage_get_logger();
static JavaUtilLoggingLogger *OrgOssPdfreporterEngineFillJRFillImage_logger;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterEngineFillJRFillImage, logger, JavaUtilLoggingLogger *)

J2OBJC_INITIALIZED_DEFN(OrgOssPdfreporterEngineFillJRFillImage)

@implementation OrgOssPdfreporterEngineFillJRFillImage

- (instancetype)initWithOrgOssPdfreporterEngineFillJRBaseFiller:(OrgOssPdfreporterEngineFillJRBaseFiller *)filler
                             withOrgOssPdfreporterEngineJRImage:(id<OrgOssPdfreporterEngineJRImage>)image
             withOrgOssPdfreporterEngineFillJRFillObjectFactory:(OrgOssPdfreporterEngineFillJRFillObjectFactory *)factory {
  OrgOssPdfreporterEngineFillJRFillImage_initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineJRImage_withOrgOssPdfreporterEngineFillJRFillObjectFactory_(self, filler, image, factory);
  return self;
}

- (instancetype)initWithOrgOssPdfreporterEngineFillJRFillImage:(OrgOssPdfreporterEngineFillJRFillImage *)image
             withOrgOssPdfreporterEngineFillJRFillCloneFactory:(OrgOssPdfreporterEngineFillJRFillCloneFactory *)factory {
  OrgOssPdfreporterEngineFillJRFillImage_initWithOrgOssPdfreporterEngineFillJRFillImage_withOrgOssPdfreporterEngineFillJRFillCloneFactory_(self, image, factory);
  return self;
}

- (void)evaluateStyleWithByte:(jbyte)evaluation {
  [super evaluateStyleWithByte:evaluation];
  lineBox_ = nil;
  if (providerStyle_ != nil) {
    lineBox_ = [((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk(initLineBox_)) cloneWithOrgOssPdfreporterEngineJRBoxContainer:self];
    OrgOssPdfreporterEngineUtilJRStyleResolver_appendBoxWithOrgOssPdfreporterEngineJRLineBox_withOrgOssPdfreporterEngineJRLineBox_(lineBox_, [((id<OrgOssPdfreporterEngineJRStyle>) nil_chk(providerStyle_)) getLineBox]);
  }
}

- (OrgOssPdfreporterEngineTypeModeEnum *)getModeValue {
  return OrgOssPdfreporterEngineUtilJRStyleResolver_getModeWithOrgOssPdfreporterEngineJRCommonElement_withOrgOssPdfreporterEngineTypeModeEnum_(self, JreLoadEnum(OrgOssPdfreporterEngineTypeModeEnum, TRANSPARENT));
}

- (OrgOssPdfreporterEngineTypeScaleImageEnum *)getScaleImageValue {
  return OrgOssPdfreporterEngineUtilJRStyleResolver_getScaleImageValueWithOrgOssPdfreporterEngineJRCommonImage_(self);
}

- (OrgOssPdfreporterEngineTypeScaleImageEnum *)getOwnScaleImageValue {
  return providerStyle_ == nil || [providerStyle_ getOwnScaleImageValue] == nil ? [((id<OrgOssPdfreporterEngineJRImage>) nil_chk(((id<OrgOssPdfreporterEngineJRImage>) cast_check(self->parent_, OrgOssPdfreporterEngineJRImage_class_())))) getOwnScaleImageValue] : [providerStyle_ getOwnScaleImageValue];
}

- (void)setScaleImageWithOrgOssPdfreporterEngineTypeScaleImageEnum:(OrgOssPdfreporterEngineTypeScaleImageEnum *)scaleImage {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (OrgOssPdfreporterEngineTypeHorizontalAlignEnum *)getHorizontalAlignmentValue {
  return OrgOssPdfreporterEngineUtilJRStyleResolver_getHorizontalAlignmentValueWithOrgOssPdfreporterEngineJRAlignment_(self);
}

- (OrgOssPdfreporterEngineTypeHorizontalAlignEnum *)getOwnHorizontalAlignmentValue {
  return providerStyle_ == nil || [providerStyle_ getOwnHorizontalAlignmentValue] == nil ? [((id<OrgOssPdfreporterEngineJRImage>) nil_chk(((id<OrgOssPdfreporterEngineJRImage>) cast_check(self->parent_, OrgOssPdfreporterEngineJRImage_class_())))) getOwnHorizontalAlignmentValue] : [providerStyle_ getOwnHorizontalAlignmentValue];
}

- (void)setHorizontalAlignmentWithOrgOssPdfreporterEngineTypeHorizontalAlignEnum:(OrgOssPdfreporterEngineTypeHorizontalAlignEnum *)horizontalAlignment {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (OrgOssPdfreporterEngineTypeVerticalAlignEnum *)getVerticalAlignmentValue {
  return OrgOssPdfreporterEngineUtilJRStyleResolver_getVerticalAlignmentValueWithOrgOssPdfreporterEngineJRAlignment_(self);
}

- (OrgOssPdfreporterEngineTypeVerticalAlignEnum *)getOwnVerticalAlignmentValue {
  return providerStyle_ == nil || [providerStyle_ getOwnVerticalAlignmentValue] == nil ? [((id<OrgOssPdfreporterEngineJRImage>) nil_chk(((id<OrgOssPdfreporterEngineJRImage>) cast_check(self->parent_, OrgOssPdfreporterEngineJRImage_class_())))) getOwnVerticalAlignmentValue] : [providerStyle_ getOwnVerticalAlignmentValue];
}

- (void)setVerticalAlignmentWithOrgOssPdfreporterEngineTypeVerticalAlignEnum:(OrgOssPdfreporterEngineTypeVerticalAlignEnum *)verticalAlignment {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (jboolean)isUsingCache {
  return [((id<OrgOssPdfreporterEngineJRImage>) nil_chk(((id<OrgOssPdfreporterEngineJRImage>) cast_check(self->parent_, OrgOssPdfreporterEngineJRImage_class_())))) isUsingCache];
}

- (JavaLangBoolean *)isOwnUsingCache {
  return [((id<OrgOssPdfreporterEngineJRImage>) nil_chk(((id<OrgOssPdfreporterEngineJRImage>) cast_check(self->parent_, OrgOssPdfreporterEngineJRImage_class_())))) isOwnUsingCache];
}

- (JavaLangBoolean *)getUsingCache {
  return [((id<OrgOssPdfreporterEngineJRImage>) nil_chk(((id<OrgOssPdfreporterEngineJRImage>) cast_check(self->parent_, OrgOssPdfreporterEngineJRImage_class_())))) getUsingCache];
}

- (void)setUsingCacheWithBoolean:(jboolean)isUsingCache {
}

- (void)setUsingCacheWithJavaLangBoolean:(JavaLangBoolean *)isUsingCache {
}

- (jboolean)isLazy {
  return [((id<OrgOssPdfreporterEngineJRImage>) nil_chk(((id<OrgOssPdfreporterEngineJRImage>) cast_check(self->parent_, OrgOssPdfreporterEngineJRImage_class_())))) isLazy];
}

- (void)setLazyWithBoolean:(jboolean)isLazy {
}

- (OrgOssPdfreporterEngineTypeOnErrorTypeEnum *)getOnErrorTypeValue {
  return [((id<OrgOssPdfreporterEngineJRImage>) nil_chk(((id<OrgOssPdfreporterEngineJRImage>) cast_check(self->parent_, OrgOssPdfreporterEngineJRImage_class_())))) getOnErrorTypeValue];
}

- (void)setOnErrorTypeWithOrgOssPdfreporterEngineTypeOnErrorTypeEnum:(OrgOssPdfreporterEngineTypeOnErrorTypeEnum *)onErrorType {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (OrgOssPdfreporterEngineTypeEvaluationTimeEnum *)getEvaluationTimeValue {
  return [((id<OrgOssPdfreporterEngineJRImage>) nil_chk(((id<OrgOssPdfreporterEngineJRImage>) cast_check(self->parent_, OrgOssPdfreporterEngineJRImage_class_())))) getEvaluationTimeValue];
}

- (id<OrgOssPdfreporterEngineJRGroup>)getEvaluationGroup {
  return self->evaluationGroup_;
}

- (id<OrgOssPdfreporterEngineJRLineBox>)getLineBox {
  return lineBox_ == nil ? initLineBox_ : lineBox_;
}

- (jbyte)getHyperlinkType {
  return [((OrgOssPdfreporterEngineTypeHyperlinkTypeEnum *) nil_chk([self getHyperlinkTypeValue])) getValue];
}

- (OrgOssPdfreporterEngineTypeHyperlinkTypeEnum *)getHyperlinkTypeValue {
  return [((id<OrgOssPdfreporterEngineJRImage>) nil_chk(((id<OrgOssPdfreporterEngineJRImage>) cast_check(parent_, OrgOssPdfreporterEngineJRImage_class_())))) getHyperlinkTypeValue];
}

- (jbyte)getHyperlinkTarget {
  return [((id<OrgOssPdfreporterEngineJRImage>) nil_chk(((id<OrgOssPdfreporterEngineJRImage>) cast_check(self->parent_, OrgOssPdfreporterEngineJRImage_class_())))) getHyperlinkTarget];
}

- (NSString *)getLinkTarget {
  return [((id<OrgOssPdfreporterEngineJRImage>) nil_chk(((id<OrgOssPdfreporterEngineJRImage>) cast_check(self->parent_, OrgOssPdfreporterEngineJRImage_class_())))) getLinkTarget];
}

- (id<OrgOssPdfreporterEngineJRExpression>)getExpression {
  return [((id<OrgOssPdfreporterEngineJRImage>) nil_chk(((id<OrgOssPdfreporterEngineJRImage>) cast_check(self->parent_, OrgOssPdfreporterEngineJRImage_class_())))) getExpression];
}

- (id<OrgOssPdfreporterEngineJRExpression>)getAnchorNameExpression {
  return [((id<OrgOssPdfreporterEngineJRImage>) nil_chk(((id<OrgOssPdfreporterEngineJRImage>) cast_check(self->parent_, OrgOssPdfreporterEngineJRImage_class_())))) getAnchorNameExpression];
}

- (id<OrgOssPdfreporterEngineJRExpression>)getHyperlinkReferenceExpression {
  return [((id<OrgOssPdfreporterEngineJRImage>) nil_chk(((id<OrgOssPdfreporterEngineJRImage>) cast_check(self->parent_, OrgOssPdfreporterEngineJRImage_class_())))) getHyperlinkReferenceExpression];
}

- (id<OrgOssPdfreporterEngineJRExpression>)getHyperlinkAnchorExpression {
  return [((id<OrgOssPdfreporterEngineJRImage>) nil_chk(((id<OrgOssPdfreporterEngineJRImage>) cast_check(self->parent_, OrgOssPdfreporterEngineJRImage_class_())))) getHyperlinkAnchorExpression];
}

- (id<OrgOssPdfreporterEngineJRExpression>)getHyperlinkPageExpression {
  return [((id<OrgOssPdfreporterEngineJRImage>) nil_chk(((id<OrgOssPdfreporterEngineJRImage>) cast_check(self->parent_, OrgOssPdfreporterEngineJRImage_class_())))) getHyperlinkPageExpression];
}

- (id<OrgOssPdfreporterEngineRenderable>)getRenderable {
  return self->renderer_;
}

- (NSString *)getAnchorName {
  return self->anchorName_;
}

- (NSString *)getHyperlinkReference {
  return self->hyperlinkReference_;
}

- (NSString *)getHyperlinkAnchor {
  return self->hyperlinkAnchor_;
}

- (JavaLangInteger *)getHyperlinkPage {
  return self->hyperlinkPage_;
}

- (NSString *)getHyperlinkTooltip {
  return self->hyperlinkTooltip_;
}

- (OrgOssPdfreporterEngineFillJRTemplateImage *)getJRTemplateImage {
  return (OrgOssPdfreporterEngineFillJRTemplateImage *) cast_chk([self getElementTemplate], [OrgOssPdfreporterEngineFillJRTemplateImage class]);
}

- (OrgOssPdfreporterEngineFillJRTemplateElement *)createElementTemplate {
  OrgOssPdfreporterEngineFillJRTemplateImage *template_ = new_OrgOssPdfreporterEngineFillJRTemplateImage_initWithOrgOssPdfreporterEngineJROrigin_withOrgOssPdfreporterEngineJRDefaultStyleProvider_withOrgOssPdfreporterEngineJRImage_([self getElementOrigin], [((OrgOssPdfreporterEngineJasperPrint *) nil_chk([((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler_)) getJasperPrint])) getDefaultStyleProvider], self);
  if ([self getScaleImageValue] == JreLoadEnum(OrgOssPdfreporterEngineTypeScaleImageEnum, REAL_HEIGHT) || [self getScaleImageValue] == JreLoadEnum(OrgOssPdfreporterEngineTypeScaleImageEnum, REAL_SIZE)) {
    [template_ setScaleImageWithOrgOssPdfreporterEngineTypeScaleImageEnum:JreLoadEnum(OrgOssPdfreporterEngineTypeScaleImageEnum, RETAIN_SHAPE)];
  }
  return template_;
}

- (void)evaluateWithByte:(jbyte)evaluation {
  [self initDelayedEvaluations];
  [self reset];
  [self evaluatePrintWhenExpressionWithByte:evaluation];
  if ([self isPrintWhenExpressionNull] || [self isPrintWhenTrue]) {
    if ([self isEvaluateNow]) {
      hasOverflowed_ = false;
      [self evaluateImageWithByte:evaluation];
    }
  }
}

- (void)evaluateImageWithByte:(jbyte)evaluation {
  [self evaluatePropertiesWithByte:evaluation];
  [self evaluateStyleWithByte:evaluation];
  id<OrgOssPdfreporterEngineJRExpression> expression = [self getExpression];
  id<OrgOssPdfreporterEngineRenderable> newRenderer = nil;
  id source = [self evaluateExpressionWithOrgOssPdfreporterEngineJRExpression:expression withByte:evaluation];
  if (source != nil) {
    JavaLangBoolean *isUsingCache = [self getUsingCache];
    if (isUsingCache == nil) {
      isUsingCache = JavaLangBoolean_valueOfWithBoolean_([source isKindOfClass:[NSString class]]);
    }
    if ([isUsingCache booleanValue] && [((OrgOssPdfreporterEngineFillJRFillContext *) nil_chk(((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler_))->fillContext_)) hasLoadedImageWithId:source]) {
      newRenderer = [((id<OrgOssPdfreporterEngineJRPrintImage>) nil_chk([((OrgOssPdfreporterEngineFillJRFillContext *) nil_chk(((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler_))->fillContext_)) getLoadedImageWithId:source])) getRenderable];
    }
    else {
      id<OrgOssPdfreporterEngineJRRenderable> deprecatedRenderable = [OrgOssPdfreporterEngineJRRenderable_class_() isInstance:source] ? (id<OrgOssPdfreporterEngineJRRenderable>) cast_check(source, OrgOssPdfreporterEngineJRRenderable_class_()) : nil;
      if ([OrgOssPdfreporterImageIImage_class_() isInstance:source]) {
        id<OrgOssPdfreporterImageIImage> img = (id<OrgOssPdfreporterImageIImage>) cast_check(source, OrgOssPdfreporterImageIImage_class_());
        newRenderer = OrgOssPdfreporterEngineJRImageRenderer_getInstanceWithOrgOssPdfreporterImageIImage_(img);
      }
      else if ([source isKindOfClass:[JavaIoInputStream class]]) {
        JavaIoInputStream *in = (JavaIoInputStream *) cast_chk(source, [JavaIoInputStream class]);
        @try {
          id<OrgOssPdfreporterImageIImage> img = [((id<OrgOssPdfreporterImageIImageManager>) nil_chk([((id<OrgOssPdfreporterImageFactoryIImageFactory>) nil_chk(OrgOssPdfreporterRegistryApiRegistry_getImageFactory())) getImageManager])) loadImageWithJavaIoInputStream:in];
          newRenderer = OrgOssPdfreporterEngineJRImageRenderer_getInstanceWithOrgOssPdfreporterImageIImage_(img);
        }
        @catch (JavaIoIOException *e) {
          @throw new_OrgOssPdfreporterEngineJRException_initWithNSString_withNSException_(@"Exception while reading image from InputStream.", e);
        }
      }
      else if ([OrgOssPdfreporterNetIURL_class_() isInstance:source]) {
        id<OrgOssPdfreporterNetIURL> url = (id<OrgOssPdfreporterNetIURL>) cast_check(source, OrgOssPdfreporterNetIURL_class_());
        @try {
          id<OrgOssPdfreporterImageIImage> img = [((id<OrgOssPdfreporterImageIImageManager>) nil_chk([((id<OrgOssPdfreporterImageFactoryIImageFactory>) nil_chk(OrgOssPdfreporterRegistryApiRegistry_getImageFactory())) getImageManager])) loadImageWithOrgOssPdfreporterNetIURL:url];
          newRenderer = OrgOssPdfreporterEngineJRImageRenderer_getInstanceWithOrgOssPdfreporterImageIImage_(img);
        }
        @catch (JavaIoIOException *e) {
          @throw new_OrgOssPdfreporterEngineJRException_initWithNSString_withNSException_(JreStrcat("$$", @"Exception while reading image from URL: ", [url getPath]), e);
        }
      }
      else if ([source isKindOfClass:[JavaIoFile class]]) {
        JavaIoFile *file = (JavaIoFile *) cast_chk(source, [JavaIoFile class]);
        [((JavaUtilLoggingLogger *) nil_chk(OrgOssPdfreporterEngineFillJRFillImage_logger)) warningWithNSString:JreStrcat("$$", @"Image from file is not supported. File: ", [file getAbsolutePath])];
      }
      else if ([source isKindOfClass:[NSString class]]) {
        NSString *location = (NSString *) cast_chk(source, [NSString class]);
        newRenderer = OrgOssPdfreporterEngineJRImageRenderer_getInstanceWithNSString_(location);
      }
      else if ([OrgOssPdfreporterEngineRenderable_class_() isInstance:source]) {
        newRenderer = (id<OrgOssPdfreporterEngineRenderable>) cast_check(source, OrgOssPdfreporterEngineRenderable_class_());
      }
      else if (deprecatedRenderable != nil) {
        [((JavaUtilLoggingLogger *) nil_chk(OrgOssPdfreporterEngineFillJRFillImage_logger)) warningWithNSString:JreStrcat("$@", @"Image from deprecatedRenderable is not supported. Source: ", deprecatedRenderable)];
      }
      else {
        [((JavaUtilLoggingLogger *) nil_chk(OrgOssPdfreporterEngineFillJRFillImage_logger)) warningWithNSString:JreStrcat("$$", @"Image from unknown source is not supported. Source: ", (source == nil ? @"null" : [[source getClass] getName]))];
      }
      if ([isUsingCache booleanValue]) {
        id<OrgOssPdfreporterEngineJRPrintImage> img = new_OrgOssPdfreporterEngineFillJRTemplatePrintImage_initWithOrgOssPdfreporterEngineFillJRTemplateImage_withInt_([self getJRTemplateImage], elementId_);
        [img setRenderableWithOrgOssPdfreporterEngineRenderable:newRenderer];
        [((OrgOssPdfreporterEngineFillJRFillContext *) nil_chk(((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler_))->fillContext_)) registerLoadedImageWithId:source withOrgOssPdfreporterEngineJRPrintImage:img];
      }
    }
  }
  [self setValueRepeatingWithBoolean:self->renderer_ == newRenderer];
  self->renderer_ = newRenderer;
  self->anchorName_ = (NSString *) cast_chk([self evaluateExpressionWithOrgOssPdfreporterEngineJRExpression:[self getAnchorNameExpression] withByte:evaluation], [NSString class]);
  self->hyperlinkReference_ = (NSString *) cast_chk([self evaluateExpressionWithOrgOssPdfreporterEngineJRExpression:[self getHyperlinkReferenceExpression] withByte:evaluation], [NSString class]);
  self->hyperlinkAnchor_ = (NSString *) cast_chk([self evaluateExpressionWithOrgOssPdfreporterEngineJRExpression:[self getHyperlinkAnchorExpression] withByte:evaluation], [NSString class]);
  self->hyperlinkPage_ = (JavaLangInteger *) cast_chk([self evaluateExpressionWithOrgOssPdfreporterEngineJRExpression:[self getHyperlinkPageExpression] withByte:evaluation], [JavaLangInteger class]);
  self->hyperlinkTooltip_ = (NSString *) cast_chk([self evaluateExpressionWithOrgOssPdfreporterEngineJRExpression:[self getHyperlinkTooltipExpression] withByte:evaluation], [NSString class]);
  hyperlinkParameters_ = OrgOssPdfreporterEngineFillJRFillHyperlinkHelper_evaluateHyperlinkParametersWithOrgOssPdfreporterEngineJRHyperlink_withOrgOssPdfreporterEngineFillJRFillExpressionEvaluator_withByte_(self, expressionEvaluator_, evaluation);
}

- (jboolean)prepareWithInt:(jint)availableHeight
               withBoolean:(jboolean)isOverflow {
  jboolean willOverflow = false;
  if ([self isPrintWhenExpressionNull] || (![self isPrintWhenExpressionNull] && [self isPrintWhenTrue])) {
    [self setToPrintWithBoolean:true];
  }
  else {
    [self setToPrintWithBoolean:false];
  }
  if (![self isToPrint]) {
    return willOverflow;
  }
  jboolean isToPrint = true;
  jboolean isReprinted = false;
  if ([self isEvaluateNow]) {
    if (isOverflow && [self isAlreadyPrinted] && ![self isPrintWhenDetailOverflows]) {
      isToPrint = false;
    }
    if (isToPrint && [self isPrintWhenExpressionNull] && ![self isPrintRepeatedValues] && [self isValueRepeating]) {
      if ((![self isPrintInFirstWholeBand] || ![((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk([self getBand])) isFirstWholeOnPageColumn]) && ([self getPrintWhenGroupChanges] == nil || ![((OrgOssPdfreporterEngineFillJRFillBand *) nil_chk([self getBand])) isNewGroupWithOrgOssPdfreporterEngineJRGroup:[self getPrintWhenGroupChanges]]) && (!isOverflow || ![self isPrintWhenDetailOverflows])) {
        isToPrint = false;
      }
    }
    if (isToPrint && [self isRemoveLineWhenBlank] && [self getRenderable] == nil) {
      isToPrint = false;
    }
    if (isToPrint) {
      if (availableHeight < [self getRelativeY] + [self getHeight]) {
        isToPrint = false;
        willOverflow = true;
      }
      else if (![self isLazy] && ([self getScaleImageValue] == JreLoadEnum(OrgOssPdfreporterEngineTypeScaleImageEnum, REAL_HEIGHT) || [self getScaleImageValue] == JreLoadEnum(OrgOssPdfreporterEngineTypeScaleImageEnum, REAL_SIZE))) {
        jint padding = [((JavaLangInteger *) nil_chk([((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk([self getLineBox])) getBottomPadding])) intValue] + [((JavaLangInteger *) nil_chk([((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk([self getLineBox])) getTopPadding])) intValue];
        jboolean reprinted = isOverflow && ([self isPrintWhenDetailOverflows] && ([self isAlreadyPrinted] || (![self isAlreadyPrinted] && ![self isPrintRepeatedValues])));
        jboolean imageOverflowAllowed = [((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler_)) isBandOverFlowAllowed] && !reprinted && !hasOverflowed_;
        jboolean fits = [self fitImageWithInt:availableHeight - [self getRelativeY] - padding withBoolean:imageOverflowAllowed withOrgOssPdfreporterEngineTypeHorizontalAlignEnum:[self getHorizontalAlignmentValue]];
        if (fits) {
          if (imageHeight_ != nil) {
            [self setStretchHeightWithInt:[imageHeight_ intValue] + padding];
          }
        }
        else {
          hasOverflowed_ = true;
          isToPrint = false;
          willOverflow = true;
          [self setStretchHeightWithInt:availableHeight - [self getRelativeY] - padding];
        }
      }
    }
    if (isToPrint && isOverflow && ([self isPrintWhenDetailOverflows] && ([self isAlreadyPrinted] || (![self isAlreadyPrinted] && ![self isPrintRepeatedValues])))) {
      isReprinted = true;
    }
  }
  else {
    if (isOverflow && [self isAlreadyPrinted] && ![self isPrintWhenDetailOverflows]) {
      isToPrint = false;
    }
    if (isToPrint && availableHeight < [self getRelativeY] + [self getHeight]) {
      isToPrint = false;
      willOverflow = true;
    }
    if (isToPrint && isOverflow && ([self isPrintWhenDetailOverflows] && ([self isAlreadyPrinted] || (![self isAlreadyPrinted] && ![self isPrintRepeatedValues])))) {
      isReprinted = true;
    }
  }
  [self setToPrintWithBoolean:isToPrint];
  [self setReprintedWithBoolean:isReprinted];
  return willOverflow;
}

- (void)reset {
  imageHeight_ = nil;
  imageWidth_ = nil;
  imageX_ = nil;
  [super reset];
}

- (jboolean)fitImageWithInt:(jint)availableHeight
                withBoolean:(jboolean)overflowAllowed
withOrgOssPdfreporterEngineTypeHorizontalAlignEnum:(OrgOssPdfreporterEngineTypeHorizontalAlignEnum *)hAlign {
  imageHeight_ = nil;
  imageWidth_ = nil;
  imageX_ = nil;
  id<OrgOssPdfreporterGeometryIDimension> imageSize = renderer_ == nil ? nil : [renderer_ getDimensionWithOrgOssPdfreporterEngineJasperReportsContext:[((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler_)) getJasperReportsContext]];
  if (imageSize == nil) {
    return true;
  }
  jint realHeight = JreFpToInt([imageSize getHeight]);
  jint realWidth = JreFpToInt([imageSize getWidth]);
  jboolean fitted;
  jint reducedHeight = realHeight;
  jint reducedWidth = realWidth;
  if (realWidth > [self getWidth]) {
    jdouble wRatio = ((jdouble) [self getWidth]) / realWidth;
    reducedHeight = JreFpToInt((wRatio * realHeight));
    reducedWidth = [self getWidth];
  }
  if (reducedHeight <= availableHeight) {
    imageHeight_ = JavaLangInteger_valueOfWithInt_(reducedHeight);
    if ([self getScaleImageValue] == JreLoadEnum(OrgOssPdfreporterEngineTypeScaleImageEnum, REAL_SIZE)) {
      imageWidth_ = JavaLangInteger_valueOfWithInt_(reducedWidth);
    }
    fitted = true;
  }
  else if (overflowAllowed) {
    fitted = false;
  }
  else {
    imageHeight_ = JavaLangInteger_valueOfWithInt_(availableHeight);
    if ([self getScaleImageValue] == JreLoadEnum(OrgOssPdfreporterEngineTypeScaleImageEnum, REAL_SIZE)) {
      jdouble hRatio = ((jdouble) availableHeight) / realHeight;
      imageWidth_ = JavaLangInteger_valueOfWithInt_(JreFpToInt((hRatio * realWidth)));
    }
    fitted = true;
  }
  if (imageWidth_ != nil && [imageWidth_ intValue] != [self getWidth]) {
    switch ([hAlign ordinal]) {
      case OrgOssPdfreporterEngineTypeHorizontalAlignEnum_Enum_RIGHT:
      imageX_ = JavaLangInteger_valueOfWithInt_([self getX] + [self getWidth] - [((JavaLangInteger *) nil_chk(imageWidth_)) intValue]);
      break;
      case OrgOssPdfreporterEngineTypeHorizontalAlignEnum_Enum_CENTER:
      imageX_ = JavaLangInteger_valueOfWithInt_([self getX] + ([self getWidth] - [((JavaLangInteger *) nil_chk(imageWidth_)) intValue]) / 2);
      break;
      default:
      break;
    }
  }
  return fitted;
}

- (id<OrgOssPdfreporterEngineJRPrintElement>)fill {
  OrgOssPdfreporterEngineTypeEvaluationTimeEnum *evaluationTime = [self getEvaluationTimeValue];
  OrgOssPdfreporterEngineFillJRTemplatePrintImage *printImage;
  OrgOssPdfreporterEngineFillJRRecordedValuesPrintImage *recordedValuesImage;
  if ([self isEvaluateAuto]) {
    printImage = recordedValuesImage = new_OrgOssPdfreporterEngineFillJRRecordedValuesPrintImage_initWithOrgOssPdfreporterEngineFillJRTemplateImage_withInt_([self getJRTemplateImage], elementId_);
  }
  else {
    printImage = new_OrgOssPdfreporterEngineFillJRTemplatePrintImage_initWithOrgOssPdfreporterEngineFillJRTemplateImage_withInt_([self getJRTemplateImage], elementId_);
    recordedValuesImage = nil;
  }
  [printImage setUUIDWithOrgOssPdfreporterUsesJavaUtilUUID:[self getUUID]];
  [printImage setXWithInt:[self getX]];
  [printImage setYWithInt:[self getRelativeY]];
  [printImage setWidthWithInt:[self getWidth]];
  [printImage setHeightWithInt:[self getStretchHeight]];
  if ([self isEvaluateNow]) {
    [self copy__WithOrgOssPdfreporterEngineJRPrintImage:printImage];
  }
  else if ([self isEvaluateAuto]) {
    [self initDelayedEvaluationPrintWithOrgOssPdfreporterEngineFillJRRecordedValuesPrintElement:recordedValuesImage];
  }
  else {
    [((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler_)) addBoundElementWithOrgOssPdfreporterEngineFillJRFillElement:self withOrgOssPdfreporterEngineJRPrintElement:printImage withOrgOssPdfreporterEngineTypeEvaluationTimeEnum:evaluationTime withOrgOssPdfreporterEngineJRGroup:[self getEvaluationGroup] withOrgOssPdfreporterEngineFillJRFillBand:band_];
  }
  return printImage;
}

- (void)copy__WithOrgOssPdfreporterEngineJRPrintImage:(id<OrgOssPdfreporterEngineJRPrintImage>)printImage {
  [((id<OrgOssPdfreporterEngineJRPrintImage>) nil_chk(printImage)) setUUIDWithOrgOssPdfreporterUsesJavaUtilUUID:[self getUUID]];
  if (imageX_ != nil) {
    [printImage setXWithInt:[imageX_ intValue]];
  }
  if (imageWidth_ != nil) {
    [printImage setWidthWithInt:[imageWidth_ intValue]];
  }
  [printImage setRenderableWithOrgOssPdfreporterEngineRenderable:[self getRenderable]];
  [printImage setAnchorNameWithNSString:[self getAnchorName]];
  [printImage setHyperlinkReferenceWithNSString:[self getHyperlinkReference]];
  [printImage setHyperlinkAnchorWithNSString:[self getHyperlinkAnchor]];
  [printImage setHyperlinkPageWithJavaLangInteger:[self getHyperlinkPage]];
  [printImage setHyperlinkTooltipWithNSString:[self getHyperlinkTooltip]];
  [printImage setBookmarkLevelWithInt:[self getBookmarkLevel]];
  [printImage setHyperlinkParametersWithOrgOssPdfreporterEngineJRPrintHyperlinkParameters:hyperlinkParameters_];
  [self transferPropertiesWithOrgOssPdfreporterEngineJRPrintElement:printImage];
}

- (void)collectExpressionsWithOrgOssPdfreporterEngineJRExpressionCollector:(OrgOssPdfreporterEngineJRExpressionCollector *)collector {
  [((OrgOssPdfreporterEngineJRExpressionCollector *) nil_chk(collector)) collectWithOrgOssPdfreporterEngineJRImage:self];
}

- (void)visitWithOrgOssPdfreporterEngineJRVisitor:(id<OrgOssPdfreporterEngineJRVisitor>)visitor {
  [((id<OrgOssPdfreporterEngineJRVisitor>) nil_chk(visitor)) visitImageWithOrgOssPdfreporterEngineJRImage:self];
}

- (void)resolveElementWithOrgOssPdfreporterEngineJRPrintElement:(id<OrgOssPdfreporterEngineJRPrintElement>)element
                                                       withByte:(jbyte)evaluation {
  [self evaluateImageWithByte:evaluation];
  id<OrgOssPdfreporterEngineJRPrintImage> printImage = (id<OrgOssPdfreporterEngineJRPrintImage>) cast_check(element, OrgOssPdfreporterEngineJRPrintImage_class_());
  if ([self getScaleImageValue] == JreLoadEnum(OrgOssPdfreporterEngineTypeScaleImageEnum, REAL_SIZE)) {
    jint padding = [((JavaLangInteger *) nil_chk([((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk([((id<OrgOssPdfreporterEngineJRPrintImage>) nil_chk(printImage)) getLineBox])) getBottomPadding])) intValue] + [((JavaLangInteger *) nil_chk([((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk([printImage getLineBox])) getTopPadding])) intValue];
    [self fitImageWithInt:[self getHeight] - padding withBoolean:false withOrgOssPdfreporterEngineTypeHorizontalAlignEnum:[printImage getHorizontalAlignmentValue]];
  }
  [self copy__WithOrgOssPdfreporterEngineJRPrintImage:printImage];
}

- (jint)getBookmarkLevel {
  return [((id<OrgOssPdfreporterEngineJRImage>) nil_chk(((id<OrgOssPdfreporterEngineJRImage>) cast_check(self->parent_, OrgOssPdfreporterEngineJRImage_class_())))) getBookmarkLevel];
}

- (id<OrgOssPdfreporterEngineFillJRFillCloneable>)createCloneWithOrgOssPdfreporterEngineFillJRFillCloneFactory:(OrgOssPdfreporterEngineFillJRFillCloneFactory *)factory {
  return new_OrgOssPdfreporterEngineFillJRFillImage_initWithOrgOssPdfreporterEngineFillJRFillImage_withOrgOssPdfreporterEngineFillJRFillCloneFactory_(self, factory);
}

- (void)collectDelayedEvaluations {
  [super collectDelayedEvaluations];
  [self collectDelayedEvaluationsWithOrgOssPdfreporterEngineJRExpression:[self getExpression]];
  [self collectDelayedEvaluationsWithOrgOssPdfreporterEngineJRExpression:[self getAnchorNameExpression]];
  [self collectDelayedEvaluationsWithOrgOssPdfreporterEngineJRExpression:[self getHyperlinkReferenceExpression]];
  [self collectDelayedEvaluationsWithOrgOssPdfreporterEngineJRExpression:[self getHyperlinkAnchorExpression]];
  [self collectDelayedEvaluationsWithOrgOssPdfreporterEngineJRExpression:[self getHyperlinkPageExpression]];
}

- (IOSObjectArray *)getHyperlinkParameters {
  return [((id<OrgOssPdfreporterEngineJRImage>) nil_chk(((id<OrgOssPdfreporterEngineJRImage>) cast_check(parent_, OrgOssPdfreporterEngineJRImage_class_())))) getHyperlinkParameters];
}

- (NSString *)getLinkType {
  return [((id<OrgOssPdfreporterEngineJRImage>) nil_chk(((id<OrgOssPdfreporterEngineJRImage>) cast_check(parent_, OrgOssPdfreporterEngineJRImage_class_())))) getLinkType];
}

- (id<OrgOssPdfreporterEngineJRExpression>)getHyperlinkTooltipExpression {
  return [((id<OrgOssPdfreporterEngineJRImage>) nil_chk(((id<OrgOssPdfreporterEngineJRImage>) cast_check(parent_, OrgOssPdfreporterEngineJRImage_class_())))) getHyperlinkTooltipExpression];
}

+ (void)initialize {
  if (self == [OrgOssPdfreporterEngineFillJRFillImage class]) {
    OrgOssPdfreporterEngineFillJRFillImage_logger = JavaUtilLoggingLogger_getLoggerWithNSString_([OrgOssPdfreporterEngineFillJRFillImage_class_() getName]);
    J2OBJC_SET_INITIALIZED(OrgOssPdfreporterEngineFillJRFillImage)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgOssPdfreporterEngineFillJRBaseFiller:withOrgOssPdfreporterEngineJRImage:withOrgOssPdfreporterEngineFillJRFillObjectFactory:", "JRFillImage", NULL, 0x4, NULL, NULL },
    { "initWithOrgOssPdfreporterEngineFillJRFillImage:withOrgOssPdfreporterEngineFillJRFillCloneFactory:", "JRFillImage", NULL, 0x4, NULL, NULL },
    { "evaluateStyleWithByte:", "evaluateStyle", "V", 0x4, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "getModeValue", NULL, "Lorg.oss.pdfreporter.engine.type.ModeEnum;", 0x1, NULL, NULL },
    { "getScaleImageValue", NULL, "Lorg.oss.pdfreporter.engine.type.ScaleImageEnum;", 0x1, NULL, NULL },
    { "getOwnScaleImageValue", NULL, "Lorg.oss.pdfreporter.engine.type.ScaleImageEnum;", 0x1, NULL, NULL },
    { "setScaleImageWithOrgOssPdfreporterEngineTypeScaleImageEnum:", "setScaleImage", "V", 0x1, NULL, NULL },
    { "getHorizontalAlignmentValue", NULL, "Lorg.oss.pdfreporter.engine.type.HorizontalAlignEnum;", 0x1, NULL, NULL },
    { "getOwnHorizontalAlignmentValue", NULL, "Lorg.oss.pdfreporter.engine.type.HorizontalAlignEnum;", 0x1, NULL, NULL },
    { "setHorizontalAlignmentWithOrgOssPdfreporterEngineTypeHorizontalAlignEnum:", "setHorizontalAlignment", "V", 0x1, NULL, NULL },
    { "getVerticalAlignmentValue", NULL, "Lorg.oss.pdfreporter.engine.type.VerticalAlignEnum;", 0x1, NULL, NULL },
    { "getOwnVerticalAlignmentValue", NULL, "Lorg.oss.pdfreporter.engine.type.VerticalAlignEnum;", 0x1, NULL, NULL },
    { "setVerticalAlignmentWithOrgOssPdfreporterEngineTypeVerticalAlignEnum:", "setVerticalAlignment", "V", 0x1, NULL, NULL },
    { "isUsingCache", NULL, "Z", 0x1, NULL, NULL },
    { "isOwnUsingCache", NULL, "Ljava.lang.Boolean;", 0x1, NULL, NULL },
    { "getUsingCache", NULL, "Ljava.lang.Boolean;", 0x1, NULL, NULL },
    { "setUsingCacheWithBoolean:", "setUsingCache", "V", 0x1, NULL, NULL },
    { "setUsingCacheWithJavaLangBoolean:", "setUsingCache", "V", 0x1, NULL, NULL },
    { "isLazy", NULL, "Z", 0x1, NULL, NULL },
    { "setLazyWithBoolean:", "setLazy", "V", 0x1, NULL, NULL },
    { "getOnErrorTypeValue", NULL, "Lorg.oss.pdfreporter.engine.type.OnErrorTypeEnum;", 0x1, NULL, NULL },
    { "setOnErrorTypeWithOrgOssPdfreporterEngineTypeOnErrorTypeEnum:", "setOnErrorType", "V", 0x1, NULL, NULL },
    { "getEvaluationTimeValue", NULL, "Lorg.oss.pdfreporter.engine.type.EvaluationTimeEnum;", 0x1, NULL, NULL },
    { "getEvaluationGroup", NULL, "Lorg.oss.pdfreporter.engine.JRGroup;", 0x1, NULL, NULL },
    { "getLineBox", NULL, "Lorg.oss.pdfreporter.engine.JRLineBox;", 0x1, NULL, NULL },
    { "getHyperlinkType", NULL, "B", 0x1, NULL, NULL },
    { "getHyperlinkTypeValue", NULL, "Lorg.oss.pdfreporter.engine.type.HyperlinkTypeEnum;", 0x1, NULL, NULL },
    { "getHyperlinkTarget", NULL, "B", 0x1, NULL, NULL },
    { "getLinkTarget", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getExpression", NULL, "Lorg.oss.pdfreporter.engine.JRExpression;", 0x1, NULL, NULL },
    { "getAnchorNameExpression", NULL, "Lorg.oss.pdfreporter.engine.JRExpression;", 0x1, NULL, NULL },
    { "getHyperlinkReferenceExpression", NULL, "Lorg.oss.pdfreporter.engine.JRExpression;", 0x1, NULL, NULL },
    { "getHyperlinkAnchorExpression", NULL, "Lorg.oss.pdfreporter.engine.JRExpression;", 0x1, NULL, NULL },
    { "getHyperlinkPageExpression", NULL, "Lorg.oss.pdfreporter.engine.JRExpression;", 0x1, NULL, NULL },
    { "getRenderable", NULL, "Lorg.oss.pdfreporter.engine.Renderable;", 0x4, NULL, NULL },
    { "getAnchorName", NULL, "Ljava.lang.String;", 0x4, NULL, NULL },
    { "getHyperlinkReference", NULL, "Ljava.lang.String;", 0x4, NULL, NULL },
    { "getHyperlinkAnchor", NULL, "Ljava.lang.String;", 0x4, NULL, NULL },
    { "getHyperlinkPage", NULL, "Ljava.lang.Integer;", 0x4, NULL, NULL },
    { "getHyperlinkTooltip", NULL, "Ljava.lang.String;", 0x4, NULL, NULL },
    { "getJRTemplateImage", NULL, "Lorg.oss.pdfreporter.engine.fill.JRTemplateImage;", 0x4, NULL, NULL },
    { "createElementTemplate", NULL, "Lorg.oss.pdfreporter.engine.fill.JRTemplateElement;", 0x4, NULL, NULL },
    { "evaluateWithByte:", "evaluate", "V", 0x4, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "evaluateImageWithByte:", "evaluateImage", "V", 0x4, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "prepareWithInt:withBoolean:", "prepare", "Z", 0x4, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "reset", NULL, "V", 0x4, NULL, NULL },
    { "fitImageWithInt:withBoolean:withOrgOssPdfreporterEngineTypeHorizontalAlignEnum:", "fitImage", "Z", 0x4, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "fill", NULL, "Lorg.oss.pdfreporter.engine.JRPrintElement;", 0x4, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "copy__WithOrgOssPdfreporterEngineJRPrintImage:", "copy", "V", 0x4, NULL, NULL },
    { "collectExpressionsWithOrgOssPdfreporterEngineJRExpressionCollector:", "collectExpressions", "V", 0x1, NULL, NULL },
    { "visitWithOrgOssPdfreporterEngineJRVisitor:", "visit", "V", 0x1, NULL, NULL },
    { "resolveElementWithOrgOssPdfreporterEngineJRPrintElement:withByte:", "resolveElement", "V", 0x4, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "getBookmarkLevel", NULL, "I", 0x1, NULL, NULL },
    { "createCloneWithOrgOssPdfreporterEngineFillJRFillCloneFactory:", "createClone", "Lorg.oss.pdfreporter.engine.fill.JRFillCloneable;", 0x1, NULL, NULL },
    { "collectDelayedEvaluations", NULL, "V", 0x4, NULL, NULL },
    { "getHyperlinkParameters", NULL, "[Lorg.oss.pdfreporter.engine.JRHyperlinkParameter;", 0x1, NULL, NULL },
    { "getLinkType", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getHyperlinkTooltipExpression", NULL, "Lorg.oss.pdfreporter.engine.JRExpression;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "logger", "logger", 0x1a, "Ljava.util.logging.Logger;", &OrgOssPdfreporterEngineFillJRFillImage_logger, NULL, .constantValue.asLong = 0 },
    { "evaluationGroup_", NULL, 0x2, "Lorg.oss.pdfreporter.engine.JRGroup;", NULL, NULL, .constantValue.asLong = 0 },
    { "renderer_", NULL, 0x2, "Lorg.oss.pdfreporter.engine.Renderable;", NULL, NULL, .constantValue.asLong = 0 },
    { "hasOverflowed_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "imageHeight_", NULL, 0x2, "Ljava.lang.Integer;", NULL, NULL, .constantValue.asLong = 0 },
    { "imageWidth_", NULL, 0x2, "Ljava.lang.Integer;", NULL, NULL, .constantValue.asLong = 0 },
    { "imageX_", NULL, 0x2, "Ljava.lang.Integer;", NULL, NULL, .constantValue.asLong = 0 },
    { "anchorName_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "hyperlinkReference_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "hyperlinkAnchor_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "hyperlinkPage_", NULL, 0x2, "Ljava.lang.Integer;", NULL, NULL, .constantValue.asLong = 0 },
    { "hyperlinkTooltip_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "hyperlinkParameters_", NULL, 0x2, "Lorg.oss.pdfreporter.engine.JRPrintHyperlinkParameters;", NULL, NULL, .constantValue.asLong = 0 },
    { "initLineBox_", NULL, 0x14, "Lorg.oss.pdfreporter.engine.JRLineBox;", NULL, NULL, .constantValue.asLong = 0 },
    { "lineBox_", NULL, 0x4, "Lorg.oss.pdfreporter.engine.JRLineBox;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineFillJRFillImage = { 2, "JRFillImage", "org.oss.pdfreporter.engine.fill", NULL, 0x1, 58, methods, 15, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineFillJRFillImage;
}

@end

void OrgOssPdfreporterEngineFillJRFillImage_initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineJRImage_withOrgOssPdfreporterEngineFillJRFillObjectFactory_(OrgOssPdfreporterEngineFillJRFillImage *self, OrgOssPdfreporterEngineFillJRBaseFiller *filler, id<OrgOssPdfreporterEngineJRImage> image, OrgOssPdfreporterEngineFillJRFillObjectFactory *factory) {
  OrgOssPdfreporterEngineFillJRFillGraphicElement_initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineJRGraphicElement_withOrgOssPdfreporterEngineFillJRFillObjectFactory_(self, filler, image, factory);
  self->initLineBox_ = [((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk([((id<OrgOssPdfreporterEngineJRImage>) nil_chk(image)) getLineBox])) cloneWithOrgOssPdfreporterEngineJRBoxContainer:self];
  self->evaluationGroup_ = [((OrgOssPdfreporterEngineFillJRFillObjectFactory *) nil_chk(factory)) getGroupWithOrgOssPdfreporterEngineJRGroup:[image getEvaluationGroup]];
}

OrgOssPdfreporterEngineFillJRFillImage *new_OrgOssPdfreporterEngineFillJRFillImage_initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineJRImage_withOrgOssPdfreporterEngineFillJRFillObjectFactory_(OrgOssPdfreporterEngineFillJRBaseFiller *filler, id<OrgOssPdfreporterEngineJRImage> image, OrgOssPdfreporterEngineFillJRFillObjectFactory *factory) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineFillJRFillImage, initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineJRImage_withOrgOssPdfreporterEngineFillJRFillObjectFactory_, filler, image, factory)
}

OrgOssPdfreporterEngineFillJRFillImage *create_OrgOssPdfreporterEngineFillJRFillImage_initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineJRImage_withOrgOssPdfreporterEngineFillJRFillObjectFactory_(OrgOssPdfreporterEngineFillJRBaseFiller *filler, id<OrgOssPdfreporterEngineJRImage> image, OrgOssPdfreporterEngineFillJRFillObjectFactory *factory) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineFillJRFillImage, initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineJRImage_withOrgOssPdfreporterEngineFillJRFillObjectFactory_, filler, image, factory)
}

void OrgOssPdfreporterEngineFillJRFillImage_initWithOrgOssPdfreporterEngineFillJRFillImage_withOrgOssPdfreporterEngineFillJRFillCloneFactory_(OrgOssPdfreporterEngineFillJRFillImage *self, OrgOssPdfreporterEngineFillJRFillImage *image, OrgOssPdfreporterEngineFillJRFillCloneFactory *factory) {
  OrgOssPdfreporterEngineFillJRFillGraphicElement_initWithOrgOssPdfreporterEngineFillJRFillGraphicElement_withOrgOssPdfreporterEngineFillJRFillCloneFactory_(self, image, factory);
  self->initLineBox_ = [((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk([((OrgOssPdfreporterEngineFillJRFillImage *) nil_chk(image)) getLineBox])) cloneWithOrgOssPdfreporterEngineJRBoxContainer:self];
  self->evaluationGroup_ = image->evaluationGroup_;
}

OrgOssPdfreporterEngineFillJRFillImage *new_OrgOssPdfreporterEngineFillJRFillImage_initWithOrgOssPdfreporterEngineFillJRFillImage_withOrgOssPdfreporterEngineFillJRFillCloneFactory_(OrgOssPdfreporterEngineFillJRFillImage *image, OrgOssPdfreporterEngineFillJRFillCloneFactory *factory) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineFillJRFillImage, initWithOrgOssPdfreporterEngineFillJRFillImage_withOrgOssPdfreporterEngineFillJRFillCloneFactory_, image, factory)
}

OrgOssPdfreporterEngineFillJRFillImage *create_OrgOssPdfreporterEngineFillJRFillImage_initWithOrgOssPdfreporterEngineFillJRFillImage_withOrgOssPdfreporterEngineFillJRFillCloneFactory_(OrgOssPdfreporterEngineFillJRFillImage *image, OrgOssPdfreporterEngineFillJRFillCloneFactory *factory) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineFillJRFillImage, initWithOrgOssPdfreporterEngineFillJRFillImage_withOrgOssPdfreporterEngineFillJRFillCloneFactory_, image, factory)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineFillJRFillImage)
