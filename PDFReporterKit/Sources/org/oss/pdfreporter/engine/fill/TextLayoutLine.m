//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/fill/TextLayoutLine.java
//

#include "J2ObjC_source.h"
#include "org/oss/pdfreporter/engine/fill/TextLayoutLine.h"
#include "org/oss/pdfreporter/font/text/ITextLayout.h"

@interface OrgOssPdfreporterEngineFillTextLayoutLine () {
 @public
  id<OrgOssPdfreporterFontTextITextLayout> textLayout_;
}

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillTextLayoutLine, textLayout_, id<OrgOssPdfreporterFontTextITextLayout>)

@implementation OrgOssPdfreporterEngineFillTextLayoutLine

- (instancetype)initWithOrgOssPdfreporterFontTextITextLayout:(id<OrgOssPdfreporterFontTextITextLayout>)textLayout {
  OrgOssPdfreporterEngineFillTextLayoutLine_initWithOrgOssPdfreporterFontTextITextLayout_(self, textLayout);
  return self;
}

- (jfloat)getAscent {
  return [((id<OrgOssPdfreporterFontTextITextLayout>) nil_chk(textLayout_)) getAscent];
}

- (jfloat)getDescent {
  return [((id<OrgOssPdfreporterFontTextITextLayout>) nil_chk(textLayout_)) getDescent];
}

- (jfloat)getLeading {
  return [((id<OrgOssPdfreporterFontTextITextLayout>) nil_chk(textLayout_)) getLeading];
}

- (jint)getCharacterCount {
  return [((id<OrgOssPdfreporterFontTextITextLayout>) nil_chk(textLayout_)) getCharacterCount];
}

- (jboolean)isLeftToRight {
  return [((id<OrgOssPdfreporterFontTextITextLayout>) nil_chk(textLayout_)) isLeftToRight];
}

- (jfloat)getAdvance {
  return [((id<OrgOssPdfreporterFontTextITextLayout>) nil_chk(textLayout_)) getAdvance];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgOssPdfreporterFontTextITextLayout:", "TextLayoutLine", NULL, 0x1, NULL, NULL },
    { "getAscent", NULL, "F", 0x1, NULL, NULL },
    { "getDescent", NULL, "F", 0x1, NULL, NULL },
    { "getLeading", NULL, "F", 0x1, NULL, NULL },
    { "getCharacterCount", NULL, "I", 0x1, NULL, NULL },
    { "isLeftToRight", NULL, "Z", 0x1, NULL, NULL },
    { "getAdvance", NULL, "F", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "textLayout_", NULL, 0x12, "Lorg.oss.pdfreporter.font.text.ITextLayout;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineFillTextLayoutLine = { 2, "TextLayoutLine", "org.oss.pdfreporter.engine.fill", NULL, 0x1, 7, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineFillTextLayoutLine;
}

@end

void OrgOssPdfreporterEngineFillTextLayoutLine_initWithOrgOssPdfreporterFontTextITextLayout_(OrgOssPdfreporterEngineFillTextLayoutLine *self, id<OrgOssPdfreporterFontTextITextLayout> textLayout) {
  NSObject_init(self);
  self->textLayout_ = textLayout;
}

OrgOssPdfreporterEngineFillTextLayoutLine *new_OrgOssPdfreporterEngineFillTextLayoutLine_initWithOrgOssPdfreporterFontTextITextLayout_(id<OrgOssPdfreporterFontTextITextLayout> textLayout) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineFillTextLayoutLine, initWithOrgOssPdfreporterFontTextITextLayout_, textLayout)
}

OrgOssPdfreporterEngineFillTextLayoutLine *create_OrgOssPdfreporterEngineFillTextLayoutLine_initWithOrgOssPdfreporterFontTextITextLayout_(id<OrgOssPdfreporterFontTextITextLayout> textLayout) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineFillTextLayoutLine, initWithOrgOssPdfreporterFontTextITextLayout_, textLayout)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineFillTextLayoutLine)
