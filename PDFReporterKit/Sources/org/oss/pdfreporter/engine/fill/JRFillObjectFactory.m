//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/fill/JRFillObjectFactory.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Integer.h"
#include "java/lang/StringBuffer.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/HashMap.h"
#include "java/util/HashSet.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "java/util/logging/Logger.h"
#include "org/oss/pdfreporter/crosstabs/JRCrosstab.h"
#include "org/oss/pdfreporter/crosstabs/JRCrosstabDataset.h"
#include "org/oss/pdfreporter/crosstabs/JRCrosstabParameter.h"
#include "org/oss/pdfreporter/crosstabs/fill/JRFillCrosstabParameter.h"
#include "org/oss/pdfreporter/engine/JRAbstractObjectFactory.h"
#include "org/oss/pdfreporter/engine/JRBand.h"
#include "org/oss/pdfreporter/engine/JRBreak.h"
#include "org/oss/pdfreporter/engine/JRComponentElement.h"
#include "org/oss/pdfreporter/engine/JRConditionalStyle.h"
#include "org/oss/pdfreporter/engine/JRDataset.h"
#include "org/oss/pdfreporter/engine/JRDatasetRun.h"
#include "org/oss/pdfreporter/engine/JRDefaultStyleProvider.h"
#include "org/oss/pdfreporter/engine/JRElementGroup.h"
#include "org/oss/pdfreporter/engine/JREllipse.h"
#include "org/oss/pdfreporter/engine/JRExpression.h"
#include "org/oss/pdfreporter/engine/JRField.h"
#include "org/oss/pdfreporter/engine/JRFrame.h"
#include "org/oss/pdfreporter/engine/JRGenericElement.h"
#include "org/oss/pdfreporter/engine/JRGroup.h"
#include "org/oss/pdfreporter/engine/JRImage.h"
#include "org/oss/pdfreporter/engine/JRLine.h"
#include "org/oss/pdfreporter/engine/JRParameter.h"
#include "org/oss/pdfreporter/engine/JRRectangle.h"
#include "org/oss/pdfreporter/engine/JRReportTemplate.h"
#include "org/oss/pdfreporter/engine/JRRuntimeException.h"
#include "org/oss/pdfreporter/engine/JRSection.h"
#include "org/oss/pdfreporter/engine/JRStaticText.h"
#include "org/oss/pdfreporter/engine/JRStyle.h"
#include "org/oss/pdfreporter/engine/JRStyleContainer.h"
#include "org/oss/pdfreporter/engine/JRStyleSetter.h"
#include "org/oss/pdfreporter/engine/JRSubreport.h"
#include "org/oss/pdfreporter/engine/JRSubreportReturnValue.h"
#include "org/oss/pdfreporter/engine/JRTextField.h"
#include "org/oss/pdfreporter/engine/JRVariable.h"
#include "org/oss/pdfreporter/engine/JasperPrint.h"
#include "org/oss/pdfreporter/engine/base/JRBaseConditionalStyle.h"
#include "org/oss/pdfreporter/engine/base/JRBaseStyle.h"
#include "org/oss/pdfreporter/engine/fill/JRAbstractFillObjectFactory.h"
#include "org/oss/pdfreporter/engine/fill/JRBaseFiller.h"
#include "org/oss/pdfreporter/engine/fill/JRCalculator.h"
#include "org/oss/pdfreporter/engine/fill/JRFillBand.h"
#include "org/oss/pdfreporter/engine/fill/JRFillBreak.h"
#include "org/oss/pdfreporter/engine/fill/JRFillChartDataset.h"
#include "org/oss/pdfreporter/engine/fill/JRFillComponentElement.h"
#include "org/oss/pdfreporter/engine/fill/JRFillContext.h"
#include "org/oss/pdfreporter/engine/fill/JRFillCrosstab.h"
#include "org/oss/pdfreporter/engine/fill/JRFillDataset.h"
#include "org/oss/pdfreporter/engine/fill/JRFillDatasetRun.h"
#include "org/oss/pdfreporter/engine/fill/JRFillElementDataset.h"
#include "org/oss/pdfreporter/engine/fill/JRFillElementGroup.h"
#include "org/oss/pdfreporter/engine/fill/JRFillEllipse.h"
#include "org/oss/pdfreporter/engine/fill/JRFillExpressionEvaluator.h"
#include "org/oss/pdfreporter/engine/fill/JRFillField.h"
#include "org/oss/pdfreporter/engine/fill/JRFillFrame.h"
#include "org/oss/pdfreporter/engine/fill/JRFillGenericElement.h"
#include "org/oss/pdfreporter/engine/fill/JRFillGroup.h"
#include "org/oss/pdfreporter/engine/fill/JRFillImage.h"
#include "org/oss/pdfreporter/engine/fill/JRFillLine.h"
#include "org/oss/pdfreporter/engine/fill/JRFillObjectFactory.h"
#include "org/oss/pdfreporter/engine/fill/JRFillParameter.h"
#include "org/oss/pdfreporter/engine/fill/JRFillRectangle.h"
#include "org/oss/pdfreporter/engine/fill/JRFillReportTemplate.h"
#include "org/oss/pdfreporter/engine/fill/JRFillSection.h"
#include "org/oss/pdfreporter/engine/fill/JRFillStaticText.h"
#include "org/oss/pdfreporter/engine/fill/JRFillSubreport.h"
#include "org/oss/pdfreporter/engine/fill/JRFillSubreportReturnValue.h"
#include "org/oss/pdfreporter/engine/fill/JRFillTextField.h"
#include "org/oss/pdfreporter/engine/fill/JRFillVariable.h"
#include "org/oss/pdfreporter/uses/org/apache/commons/collections/SequencedHashMap.h"

@interface OrgOssPdfreporterEngineFillJRFillObjectFactory () {
 @public
  id<OrgOssPdfreporterEngineFillJRFillExpressionEvaluator> evaluator_;
  OrgOssPdfreporterEngineFillJRFillObjectFactory *parentFiller_;
  id<JavaUtilList> elementDatasets_;
  id<JavaUtilMap> elementDatasetMap_;
  id<JavaUtilMap> delayedStyleSettersByName_;
  id<JavaUtilSet> originalStyleList_;
  OrgOssPdfreporterEngineFillJRFillObjectFactory_StylesList *stylesMap_;
}

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillObjectFactory, evaluator_, id<OrgOssPdfreporterEngineFillJRFillExpressionEvaluator>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillObjectFactory, parentFiller_, OrgOssPdfreporterEngineFillJRFillObjectFactory *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillObjectFactory, elementDatasets_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillObjectFactory, elementDatasetMap_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillObjectFactory, delayedStyleSettersByName_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillObjectFactory, originalStyleList_, id<JavaUtilSet>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillObjectFactory, stylesMap_, OrgOssPdfreporterEngineFillJRFillObjectFactory_StylesList *)

inline JavaUtilLoggingLogger *OrgOssPdfreporterEngineFillJRFillObjectFactory_get_logger();
static JavaUtilLoggingLogger *OrgOssPdfreporterEngineFillJRFillObjectFactory_logger;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterEngineFillJRFillObjectFactory, logger, JavaUtilLoggingLogger *)

@interface OrgOssPdfreporterEngineFillJRFillObjectFactory_StylesList () {
 @public
  id<JavaUtilList> styles_;
  id<JavaUtilMap> stylesIdx_;
}

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillObjectFactory_StylesList, styles_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRFillObjectFactory_StylesList, stylesIdx_, id<JavaUtilMap>)

J2OBJC_INITIALIZED_DEFN(OrgOssPdfreporterEngineFillJRFillObjectFactory)

@implementation OrgOssPdfreporterEngineFillJRFillObjectFactory

- (instancetype)initWithOrgOssPdfreporterEngineFillJRBaseFiller:(OrgOssPdfreporterEngineFillJRBaseFiller *)filler {
  OrgOssPdfreporterEngineFillJRFillObjectFactory_initWithOrgOssPdfreporterEngineFillJRBaseFiller_(self, filler);
  return self;
}

- (instancetype)initWithOrgOssPdfreporterEngineFillJRBaseFiller:(OrgOssPdfreporterEngineFillJRBaseFiller *)filler
       withOrgOssPdfreporterEngineFillJRFillExpressionEvaluator:(id<OrgOssPdfreporterEngineFillJRFillExpressionEvaluator>)expressionEvaluator {
  OrgOssPdfreporterEngineFillJRFillObjectFactory_initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineFillJRFillExpressionEvaluator_(self, filler, expressionEvaluator);
  return self;
}

- (instancetype)initWithOrgOssPdfreporterEngineFillJRFillObjectFactory:(OrgOssPdfreporterEngineFillJRFillObjectFactory *)parent
              withOrgOssPdfreporterEngineFillJRFillExpressionEvaluator:(id<OrgOssPdfreporterEngineFillJRFillExpressionEvaluator>)expressionEvaluator {
  OrgOssPdfreporterEngineFillJRFillObjectFactory_initWithOrgOssPdfreporterEngineFillJRFillObjectFactory_withOrgOssPdfreporterEngineFillJRFillExpressionEvaluator_(self, parent, expressionEvaluator);
  return self;
}

- (id<OrgOssPdfreporterEngineFillJRFillExpressionEvaluator>)getExpressionEvaluator {
  return evaluator_;
}

- (IOSObjectArray *)getDatasets {
  return [((id<JavaUtilList>) nil_chk(elementDatasets_)) toArrayWithNSObjectArray:[IOSObjectArray newArrayWithLength:[elementDatasets_ size] type:OrgOssPdfreporterEngineFillJRFillChartDataset_class_()]];
}

- (IOSObjectArray *)getElementDatasetsWithOrgOssPdfreporterEngineJRDataset:(id<OrgOssPdfreporterEngineJRDataset>)dataset {
  IOSObjectArray *elementDatasetsArray;
  id<JavaUtilList> elementDatasetsList;
  if ([((id<OrgOssPdfreporterEngineJRDataset>) nil_chk(dataset)) isMainDataset]) {
    elementDatasetsList = elementDatasets_;
  }
  else {
    elementDatasetsList = [((id<JavaUtilMap>) nil_chk(elementDatasetMap_)) getWithId:[dataset getName]];
  }
  if (elementDatasetsList == nil || [elementDatasetsList size] == 0) {
    elementDatasetsArray = [IOSObjectArray newArrayWithLength:0 type:OrgOssPdfreporterEngineFillJRFillElementDataset_class_()];
  }
  else {
    elementDatasetsArray = [IOSObjectArray newArrayWithLength:[elementDatasetsList size] type:OrgOssPdfreporterEngineFillJRFillElementDataset_class_()];
    (void) [elementDatasetsList toArrayWithNSObjectArray:elementDatasetsArray];
  }
  return elementDatasetsArray;
}

- (void)registerDelayedStyleSetterWithOrgOssPdfreporterEngineJRStyleSetter:(id<OrgOssPdfreporterEngineJRStyleSetter>)delayedSetter
                                                              withNSString:(NSString *)styleName {
  if (parentFiller_ == nil) {
    id<JavaUtilList> setters = [((id<JavaUtilMap>) nil_chk(delayedStyleSettersByName_)) getWithId:styleName];
    if (setters == nil) {
      setters = new_JavaUtilArrayList_init();
      (void) [((id<JavaUtilMap>) nil_chk(delayedStyleSettersByName_)) putWithId:styleName withId:setters];
    }
    [setters addWithId:delayedSetter];
  }
  else {
    [parentFiller_ registerDelayedStyleSetterWithOrgOssPdfreporterEngineJRStyleSetter:delayedSetter withNSString:styleName];
  }
}

- (void)registerDelayedStyleSetterWithOrgOssPdfreporterEngineJRStyleSetter:(id<OrgOssPdfreporterEngineJRStyleSetter>)delayedSetter
                               withOrgOssPdfreporterEngineJRStyleContainer:(id<OrgOssPdfreporterEngineJRStyleContainer>)styleContainer {
  id<OrgOssPdfreporterEngineJRStyle> style = [((id<OrgOssPdfreporterEngineJRStyleContainer>) nil_chk(styleContainer)) getStyle];
  NSString *nameReference = [styleContainer getStyleNameReference];
  if (style != nil) {
    [self registerDelayedStyleSetterWithOrgOssPdfreporterEngineJRStyleSetter:delayedSetter withNSString:[style getName]];
  }
  else if (nameReference != nil) {
    [self registerDelayedStyleSetterWithOrgOssPdfreporterEngineJRStyleSetter:delayedSetter withNSString:nameReference];
  }
}

- (OrgOssPdfreporterEngineBaseJRBaseStyle *)getStyleWithOrgOssPdfreporterEngineJRStyle:(id<OrgOssPdfreporterEngineJRStyle>)style {
  OrgOssPdfreporterEngineBaseJRBaseStyle *fillStyle = nil;
  if (style != nil) {
    fillStyle = (OrgOssPdfreporterEngineBaseJRBaseStyle *) cast_chk([self getWithId:style], [OrgOssPdfreporterEngineBaseJRBaseStyle class]);
    if (fillStyle == nil) {
      fillStyle = new_OrgOssPdfreporterEngineBaseJRBaseStyle_initWithOrgOssPdfreporterEngineJRStyle_withOrgOssPdfreporterEngineJRAbstractObjectFactory_(style, self);
      fillStyle = [((OrgOssPdfreporterEngineFillJRFillContext *) nil_chk(((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler_))->fillContext_)) deduplicateWithOrgOssPdfreporterEngineDeduplicable:fillStyle];
      [self putWithId:style withId:fillStyle];
      if (originalStyleList_ != nil && [originalStyleList_ containsWithId:style]) {
        [self renameExistingStyleWithNSString:[style getName]];
        [((OrgOssPdfreporterEngineFillJRFillObjectFactory_StylesList *) nil_chk(stylesMap_)) addStyleWithOrgOssPdfreporterEngineJRStyle:style];
      }
    }
  }
  return fillStyle;
}

- (void)renameExistingStyleWithNSString:(NSString *)name {
  id<OrgOssPdfreporterEngineJRStyle> originalStyle = [((OrgOssPdfreporterEngineFillJRFillObjectFactory_StylesList *) nil_chk(stylesMap_)) getStyleWithNSString:name];
  if (originalStyle != nil) {
    OrgOssPdfreporterEngineBaseJRBaseStyle *style = (OrgOssPdfreporterEngineBaseJRBaseStyle *) cast_chk([self getWithId:originalStyle], [OrgOssPdfreporterEngineBaseJRBaseStyle class]);
    NSString *newName;
    jint suf = 1;
    do {
      newName = JreStrcat("$I", name, suf);
      ++suf;
    }
    while ([((OrgOssPdfreporterEngineFillJRFillObjectFactory_StylesList *) nil_chk(stylesMap_)) containsStyleWithNSString:newName]);
    [((OrgOssPdfreporterEngineBaseJRBaseStyle *) nil_chk(style)) renameWithNSString:newName];
    [((OrgOssPdfreporterEngineFillJRFillObjectFactory_StylesList *) nil_chk(stylesMap_)) renamedWithNSString:name withNSString:newName];
  }
}

- (void)setStyleWithOrgOssPdfreporterEngineJRStyleSetter:(id<OrgOssPdfreporterEngineJRStyleSetter>)setter
             withOrgOssPdfreporterEngineJRStyleContainer:(id<OrgOssPdfreporterEngineJRStyleContainer>)styleContainer {
  id<OrgOssPdfreporterEngineJRStyle> style = [((id<OrgOssPdfreporterEngineJRStyleContainer>) nil_chk(styleContainer)) getStyle];
  NSString *nameReference = [styleContainer getStyleNameReference];
  if (style != nil) {
    id<OrgOssPdfreporterEngineJRStyle> newStyle = [self getStyleWithOrgOssPdfreporterEngineJRStyle:style];
    [((id<OrgOssPdfreporterEngineJRStyleSetter>) nil_chk(setter)) setStyleWithOrgOssPdfreporterEngineJRStyle:newStyle];
  }
  else if (nameReference != nil) {
    id<OrgOssPdfreporterEngineJRStyle> originalStyle = [((OrgOssPdfreporterEngineFillJRFillObjectFactory_StylesList *) nil_chk(stylesMap_)) getStyleWithNSString:nameReference];
    if (originalStyle == nil) {
      @throw new_OrgOssPdfreporterEngineJRRuntimeException_initWithNSString_(JreStrcat("$$$", @"Style ", nameReference, @" not found"));
    }
    id<OrgOssPdfreporterEngineJRStyle> externalStyle = (id<OrgOssPdfreporterEngineJRStyle>) cast_check([self getWithId:originalStyle], OrgOssPdfreporterEngineJRStyle_class_());
    [((id<OrgOssPdfreporterEngineJRStyleSetter>) nil_chk(setter)) setStyleWithOrgOssPdfreporterEngineJRStyle:externalStyle];
  }
}

- (OrgOssPdfreporterEngineFillJRFillParameter *)getParameterWithOrgOssPdfreporterEngineJRParameter:(id<OrgOssPdfreporterEngineJRParameter>)parameter {
  OrgOssPdfreporterEngineFillJRFillParameter *fillParameter = nil;
  if (parameter != nil) {
    fillParameter = (OrgOssPdfreporterEngineFillJRFillParameter *) cast_chk([self getWithId:parameter], [OrgOssPdfreporterEngineFillJRFillParameter class]);
    if (fillParameter == nil) {
      fillParameter = new_OrgOssPdfreporterEngineFillJRFillParameter_initWithOrgOssPdfreporterEngineJRParameter_withOrgOssPdfreporterEngineFillJRFillObjectFactory_(parameter, self);
    }
  }
  return fillParameter;
}

- (OrgOssPdfreporterEngineFillJRFillField *)getFieldWithOrgOssPdfreporterEngineJRField:(id<OrgOssPdfreporterEngineJRField>)field {
  OrgOssPdfreporterEngineFillJRFillField *fillField = nil;
  if (field != nil) {
    fillField = (OrgOssPdfreporterEngineFillJRFillField *) cast_chk([self getWithId:field], [OrgOssPdfreporterEngineFillJRFillField class]);
    if (fillField == nil) {
      fillField = new_OrgOssPdfreporterEngineFillJRFillField_initWithOrgOssPdfreporterEngineJRField_withOrgOssPdfreporterEngineFillJRAbstractFillObjectFactory_(field, self);
    }
  }
  return fillField;
}

- (OrgOssPdfreporterEngineFillJRFillVariable *)getVariableWithOrgOssPdfreporterEngineJRVariable:(id<OrgOssPdfreporterEngineJRVariable>)variable {
  OrgOssPdfreporterEngineFillJRFillVariable *fillVariable = nil;
  if (variable != nil) {
    fillVariable = (OrgOssPdfreporterEngineFillJRFillVariable *) cast_chk([self getWithId:variable], [OrgOssPdfreporterEngineFillJRFillVariable class]);
    if (fillVariable == nil) {
      fillVariable = new_OrgOssPdfreporterEngineFillJRFillVariable_initWithOrgOssPdfreporterEngineJRVariable_withOrgOssPdfreporterEngineFillJRAbstractFillObjectFactory_(variable, self);
    }
  }
  return fillVariable;
}

- (OrgOssPdfreporterEngineFillJRFillGroup *)getGroupWithOrgOssPdfreporterEngineJRGroup:(id<OrgOssPdfreporterEngineJRGroup>)group {
  OrgOssPdfreporterEngineFillJRFillGroup *fillGroup = nil;
  if (group != nil) {
    fillGroup = (OrgOssPdfreporterEngineFillJRFillGroup *) cast_chk([self getWithId:group], [OrgOssPdfreporterEngineFillJRFillGroup class]);
    if (fillGroup == nil) {
      fillGroup = new_OrgOssPdfreporterEngineFillJRFillGroup_initWithOrgOssPdfreporterEngineJRGroup_withOrgOssPdfreporterEngineFillJRFillObjectFactory_(group, self);
    }
  }
  return fillGroup;
}

- (OrgOssPdfreporterEngineFillJRFillSection *)getSectionWithOrgOssPdfreporterEngineJRSection:(id<OrgOssPdfreporterEngineJRSection>)section {
  OrgOssPdfreporterEngineFillJRFillSection *fillSection = nil;
  if (section == nil) {
    fillSection = ((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler_))->missingFillSection_;
  }
  else {
    fillSection = (OrgOssPdfreporterEngineFillJRFillSection *) cast_chk([self getWithId:section], [OrgOssPdfreporterEngineFillJRFillSection class]);
    if (fillSection == nil) {
      fillSection = new_OrgOssPdfreporterEngineFillJRFillSection_initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineJRSection_withOrgOssPdfreporterEngineFillJRFillObjectFactory_(filler_, section, self);
    }
  }
  return fillSection;
}

- (OrgOssPdfreporterEngineFillJRFillBand *)getBandWithOrgOssPdfreporterEngineJRBand:(id<OrgOssPdfreporterEngineJRBand>)band {
  OrgOssPdfreporterEngineFillJRFillBand *fillBand = nil;
  if (band == nil) {
    fillBand = ((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler_))->missingFillBand_;
  }
  else {
    fillBand = (OrgOssPdfreporterEngineFillJRFillBand *) cast_chk([self getWithId:band], [OrgOssPdfreporterEngineFillJRFillBand class]);
    if (fillBand == nil) {
      fillBand = new_OrgOssPdfreporterEngineFillJRFillBand_initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineJRBand_withOrgOssPdfreporterEngineFillJRFillObjectFactory_(filler_, band, self);
    }
  }
  return fillBand;
}

- (void)visitElementGroupWithOrgOssPdfreporterEngineJRElementGroup:(id<OrgOssPdfreporterEngineJRElementGroup>)elementGroup {
  OrgOssPdfreporterEngineFillJRFillElementGroup *fillElementGroup = nil;
  if (elementGroup != nil) {
    fillElementGroup = (OrgOssPdfreporterEngineFillJRFillElementGroup *) cast_chk([self getWithId:elementGroup], [OrgOssPdfreporterEngineFillJRFillElementGroup class]);
    if (fillElementGroup == nil) {
      fillElementGroup = new_OrgOssPdfreporterEngineFillJRFillElementGroup_initWithOrgOssPdfreporterEngineJRElementGroup_withOrgOssPdfreporterEngineFillJRFillObjectFactory_(elementGroup, self);
    }
  }
  [self setVisitResultWithId:fillElementGroup];
}

- (void)visitBreakWithOrgOssPdfreporterEngineJRBreak:(id<OrgOssPdfreporterEngineJRBreak>)breakElement {
  OrgOssPdfreporterEngineFillJRFillBreak *fillBreak = nil;
  if (breakElement != nil) {
    fillBreak = (OrgOssPdfreporterEngineFillJRFillBreak *) cast_chk([self getWithId:breakElement], [OrgOssPdfreporterEngineFillJRFillBreak class]);
    if (fillBreak == nil) {
      fillBreak = new_OrgOssPdfreporterEngineFillJRFillBreak_initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineJRBreak_withOrgOssPdfreporterEngineFillJRFillObjectFactory_(filler_, breakElement, self);
    }
  }
  [self setVisitResultWithId:fillBreak];
}

- (void)visitLineWithOrgOssPdfreporterEngineJRLine:(id<OrgOssPdfreporterEngineJRLine>)line {
  OrgOssPdfreporterEngineFillJRFillLine *fillLine = nil;
  if (line != nil) {
    fillLine = (OrgOssPdfreporterEngineFillJRFillLine *) cast_chk([self getWithId:line], [OrgOssPdfreporterEngineFillJRFillLine class]);
    if (fillLine == nil) {
      fillLine = new_OrgOssPdfreporterEngineFillJRFillLine_initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineJRLine_withOrgOssPdfreporterEngineFillJRFillObjectFactory_(filler_, line, self);
    }
  }
  [self setVisitResultWithId:fillLine];
}

- (void)visitRectangleWithOrgOssPdfreporterEngineJRRectangle:(id<OrgOssPdfreporterEngineJRRectangle>)rectangle {
  OrgOssPdfreporterEngineFillJRFillRectangle *fillRectangle = nil;
  if (rectangle != nil) {
    fillRectangle = (OrgOssPdfreporterEngineFillJRFillRectangle *) cast_chk([self getWithId:rectangle], [OrgOssPdfreporterEngineFillJRFillRectangle class]);
    if (fillRectangle == nil) {
      fillRectangle = new_OrgOssPdfreporterEngineFillJRFillRectangle_initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineJRRectangle_withOrgOssPdfreporterEngineFillJRFillObjectFactory_(filler_, rectangle, self);
    }
  }
  [self setVisitResultWithId:fillRectangle];
}

- (void)visitEllipseWithOrgOssPdfreporterEngineJREllipse:(id<OrgOssPdfreporterEngineJREllipse>)ellipse {
  OrgOssPdfreporterEngineFillJRFillEllipse *fillEllipse = nil;
  if (ellipse != nil) {
    fillEllipse = (OrgOssPdfreporterEngineFillJRFillEllipse *) cast_chk([self getWithId:ellipse], [OrgOssPdfreporterEngineFillJRFillEllipse class]);
    if (fillEllipse == nil) {
      fillEllipse = new_OrgOssPdfreporterEngineFillJRFillEllipse_initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineJREllipse_withOrgOssPdfreporterEngineFillJRFillObjectFactory_(filler_, ellipse, self);
    }
  }
  [self setVisitResultWithId:fillEllipse];
}

- (void)visitImageWithOrgOssPdfreporterEngineJRImage:(id<OrgOssPdfreporterEngineJRImage>)image {
  OrgOssPdfreporterEngineFillJRFillImage *fillImage = nil;
  if (image != nil) {
    fillImage = (OrgOssPdfreporterEngineFillJRFillImage *) cast_chk([self getWithId:image], [OrgOssPdfreporterEngineFillJRFillImage class]);
    if (fillImage == nil) {
      fillImage = new_OrgOssPdfreporterEngineFillJRFillImage_initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineJRImage_withOrgOssPdfreporterEngineFillJRFillObjectFactory_(filler_, image, self);
    }
  }
  [self setVisitResultWithId:fillImage];
}

- (void)visitStaticTextWithOrgOssPdfreporterEngineJRStaticText:(id<OrgOssPdfreporterEngineJRStaticText>)staticText {
  OrgOssPdfreporterEngineFillJRFillStaticText *fillStaticText = nil;
  if (staticText != nil) {
    fillStaticText = (OrgOssPdfreporterEngineFillJRFillStaticText *) cast_chk([self getWithId:staticText], [OrgOssPdfreporterEngineFillJRFillStaticText class]);
    if (fillStaticText == nil) {
      fillStaticText = new_OrgOssPdfreporterEngineFillJRFillStaticText_initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineJRStaticText_withOrgOssPdfreporterEngineFillJRFillObjectFactory_(filler_, staticText, self);
    }
  }
  [self setVisitResultWithId:fillStaticText];
}

- (void)visitTextFieldWithOrgOssPdfreporterEngineJRTextField:(id<OrgOssPdfreporterEngineJRTextField>)textField {
  OrgOssPdfreporterEngineFillJRFillTextField *fillTextField = nil;
  if (textField != nil) {
    fillTextField = (OrgOssPdfreporterEngineFillJRFillTextField *) cast_chk([self getWithId:textField], [OrgOssPdfreporterEngineFillJRFillTextField class]);
    if (fillTextField == nil) {
      fillTextField = new_OrgOssPdfreporterEngineFillJRFillTextField_initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineJRTextField_withOrgOssPdfreporterEngineFillJRFillObjectFactory_(filler_, textField, self);
    }
  }
  [self setVisitResultWithId:fillTextField];
}

- (void)visitSubreportWithOrgOssPdfreporterEngineJRSubreport:(id<OrgOssPdfreporterEngineJRSubreport>)subreport {
  OrgOssPdfreporterEngineFillJRFillSubreport *fillSubreport = nil;
  if (subreport != nil) {
    fillSubreport = (OrgOssPdfreporterEngineFillJRFillSubreport *) cast_chk([self getWithId:subreport], [OrgOssPdfreporterEngineFillJRFillSubreport class]);
    if (fillSubreport == nil) {
      fillSubreport = new_OrgOssPdfreporterEngineFillJRFillSubreport_initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineJRSubreport_withOrgOssPdfreporterEngineFillJRFillObjectFactory_(filler_, subreport, self);
    }
  }
  [self setVisitResultWithId:fillSubreport];
}

- (OrgOssPdfreporterEngineFillJRFillSubreportReturnValue *)getSubreportReturnValueWithOrgOssPdfreporterEngineJRSubreportReturnValue:(id<OrgOssPdfreporterEngineJRSubreportReturnValue>)returnValue {
  OrgOssPdfreporterEngineFillJRFillSubreportReturnValue *fillReturnValue = nil;
  if (returnValue != nil) {
    fillReturnValue = (OrgOssPdfreporterEngineFillJRFillSubreportReturnValue *) cast_chk([self getWithId:returnValue], [OrgOssPdfreporterEngineFillJRFillSubreportReturnValue class]);
    if (fillReturnValue == nil) {
      fillReturnValue = new_OrgOssPdfreporterEngineFillJRFillSubreportReturnValue_initWithOrgOssPdfreporterEngineJRSubreportReturnValue_withOrgOssPdfreporterEngineFillJRFillObjectFactory_withOrgOssPdfreporterEngineFillJRBaseFiller_(returnValue, self, filler_);
    }
  }
  return fillReturnValue;
}

- (void)visitCrosstabWithOrgOssPdfreporterCrosstabsJRCrosstab:(id<OrgOssPdfreporterCrosstabsJRCrosstab>)crosstabElement {
  OrgOssPdfreporterEngineFillJRFillCrosstab *fillCrosstab = nil;
  [((JavaUtilLoggingLogger *) nil_chk(OrgOssPdfreporterEngineFillJRFillObjectFactory_logger)) finestWithNSString:JreStrcat("$@", @"Visit Crosstab: ", crosstabElement)];
  if (crosstabElement != nil) {
    fillCrosstab = (OrgOssPdfreporterEngineFillJRFillCrosstab *) cast_chk([self getWithId:crosstabElement], [OrgOssPdfreporterEngineFillJRFillCrosstab class]);
    if (fillCrosstab == nil) {
      fillCrosstab = new_OrgOssPdfreporterEngineFillJRFillCrosstab_initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterCrosstabsJRCrosstab_withOrgOssPdfreporterEngineFillJRFillObjectFactory_(filler_, crosstabElement, self);
    }
  }
  [self setVisitResultWithId:fillCrosstab];
}

- (OrgOssPdfreporterEngineFillJRFillCrosstab_JRFillCrosstabDataset *)getCrosstabDatasetWithOrgOssPdfreporterCrosstabsJRCrosstabDataset:(id<OrgOssPdfreporterCrosstabsJRCrosstabDataset>)dataset
                                                                                         withOrgOssPdfreporterEngineFillJRFillCrosstab:(OrgOssPdfreporterEngineFillJRFillCrosstab *)fillCrosstab {
  OrgOssPdfreporterEngineFillJRFillCrosstab_JRFillCrosstabDataset *fillDataset = nil;
  if (dataset != nil) {
    fillDataset = (OrgOssPdfreporterEngineFillJRFillCrosstab_JRFillCrosstabDataset *) cast_chk([self getWithId:dataset], [OrgOssPdfreporterEngineFillJRFillCrosstab_JRFillCrosstabDataset class]);
    if (fillDataset == nil) {
      fillDataset = new_OrgOssPdfreporterEngineFillJRFillCrosstab_JRFillCrosstabDataset_initWithOrgOssPdfreporterEngineFillJRFillCrosstab_withOrgOssPdfreporterCrosstabsJRCrosstabDataset_withOrgOssPdfreporterEngineFillJRFillObjectFactory_(fillCrosstab, dataset, self);
      [self registerElementDatasetWithOrgOssPdfreporterEngineFillJRFillElementDataset:fillDataset];
    }
  }
  return fillDataset;
}

- (OrgOssPdfreporterEngineFillJRFillDataset *)getDatasetWithOrgOssPdfreporterEngineJRDataset:(id<OrgOssPdfreporterEngineJRDataset>)dataset {
  OrgOssPdfreporterEngineFillJRFillDataset *fillDataset = nil;
  if (dataset != nil) {
    fillDataset = (OrgOssPdfreporterEngineFillJRFillDataset *) cast_chk([self getWithId:dataset], [OrgOssPdfreporterEngineFillJRFillDataset class]);
    if (fillDataset == nil) {
      fillDataset = new_OrgOssPdfreporterEngineFillJRFillDataset_initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineJRDataset_withOrgOssPdfreporterEngineFillJRFillObjectFactory_(filler_, dataset, self);
    }
  }
  return fillDataset;
}

- (void)registerElementDatasetWithOrgOssPdfreporterEngineFillJRFillElementDataset:(OrgOssPdfreporterEngineFillJRFillElementDataset *)elementDataset {
  id<JavaUtilList> elementDatasetsList;
  id<OrgOssPdfreporterEngineJRDatasetRun> datasetRun = [((OrgOssPdfreporterEngineFillJRFillElementDataset *) nil_chk(elementDataset)) getDatasetRun];
  if (datasetRun == nil) {
    elementDatasetsList = elementDatasets_;
  }
  else {
    NSString *datasetName = [datasetRun getDatasetName];
    elementDatasetsList = [((id<JavaUtilMap>) nil_chk(elementDatasetMap_)) getWithId:datasetName];
    if (elementDatasetsList == nil) {
      elementDatasetsList = new_JavaUtilArrayList_init();
      (void) [((id<JavaUtilMap>) nil_chk(elementDatasetMap_)) putWithId:datasetName withId:elementDatasetsList];
    }
  }
  [((id<JavaUtilList>) nil_chk(elementDatasetsList)) addWithId:elementDataset];
}

- (OrgOssPdfreporterEngineFillJRFillDatasetRun *)getDatasetRunWithOrgOssPdfreporterEngineJRDatasetRun:(id<OrgOssPdfreporterEngineJRDatasetRun>)datasetRun {
  OrgOssPdfreporterEngineFillJRFillDatasetRun *fillDatasetRun = nil;
  if (datasetRun != nil) {
    fillDatasetRun = (OrgOssPdfreporterEngineFillJRFillDatasetRun *) cast_chk([self getWithId:datasetRun], [OrgOssPdfreporterEngineFillJRFillDatasetRun class]);
    if (fillDatasetRun == nil) {
      fillDatasetRun = new_OrgOssPdfreporterEngineFillJRFillDatasetRun_initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineJRDatasetRun_withOrgOssPdfreporterEngineFillJRFillObjectFactory_(filler_, datasetRun, self);
    }
  }
  return fillDatasetRun;
}

- (OrgOssPdfreporterCrosstabsFillJRFillCrosstabParameter *)getCrosstabParameterWithOrgOssPdfreporterCrosstabsJRCrosstabParameter:(id<OrgOssPdfreporterCrosstabsJRCrosstabParameter>)parameter {
  OrgOssPdfreporterCrosstabsFillJRFillCrosstabParameter *fillParameter = nil;
  if (parameter != nil) {
    fillParameter = (OrgOssPdfreporterCrosstabsFillJRFillCrosstabParameter *) cast_chk([self getWithId:parameter], [OrgOssPdfreporterCrosstabsFillJRFillCrosstabParameter class]);
    if (fillParameter == nil) {
      fillParameter = new_OrgOssPdfreporterCrosstabsFillJRFillCrosstabParameter_initWithOrgOssPdfreporterCrosstabsJRCrosstabParameter_withOrgOssPdfreporterEngineFillJRFillObjectFactory_(parameter, self);
    }
  }
  return fillParameter;
}

- (void)visitFrameWithOrgOssPdfreporterEngineJRFrame:(id<OrgOssPdfreporterEngineJRFrame>)frame {
  id fillFrame = nil;
  if (frame != nil) {
    fillFrame = [self getWithId:frame];
    if (fillFrame == nil) {
      fillFrame = new_OrgOssPdfreporterEngineFillJRFillFrame_initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineJRFrame_withOrgOssPdfreporterEngineFillJRFillObjectFactory_(filler_, frame, self);
    }
  }
  [self setVisitResultWithId:fillFrame];
}

- (OrgOssPdfreporterEngineFillJRBaseFiller *)getFiller {
  return filler_;
}

- (id<OrgOssPdfreporterEngineJRConditionalStyle>)getConditionalStyleWithOrgOssPdfreporterEngineJRConditionalStyle:(id<OrgOssPdfreporterEngineJRConditionalStyle>)conditionalStyle
                                                                               withOrgOssPdfreporterEngineJRStyle:(id<OrgOssPdfreporterEngineJRStyle>)style {
  OrgOssPdfreporterEngineBaseJRBaseConditionalStyle *baseConditionalStyle = nil;
  if (conditionalStyle != nil) {
    baseConditionalStyle = (OrgOssPdfreporterEngineBaseJRBaseConditionalStyle *) cast_chk([self getWithId:conditionalStyle], [OrgOssPdfreporterEngineBaseJRBaseConditionalStyle class]);
    if (baseConditionalStyle == nil) {
      baseConditionalStyle = new_OrgOssPdfreporterEngineBaseJRBaseConditionalStyle_initWithOrgOssPdfreporterEngineJRConditionalStyle_withOrgOssPdfreporterEngineJRStyle_withOrgOssPdfreporterEngineJRAbstractObjectFactory_(conditionalStyle, style, self);
      [self putWithId:conditionalStyle withId:baseConditionalStyle];
    }
  }
  return baseConditionalStyle;
}

- (id<OrgOssPdfreporterEngineJRExpression>)getExpressionWithOrgOssPdfreporterEngineJRExpression:(id<OrgOssPdfreporterEngineJRExpression>)expression
                                                                                    withBoolean:(jboolean)assignNotUsedId {
  return expression;
}

- (OrgOssPdfreporterEngineFillJRFillReportTemplate *)getReportTemplateWithOrgOssPdfreporterEngineJRReportTemplate:(id<OrgOssPdfreporterEngineJRReportTemplate>)template_ {
  OrgOssPdfreporterEngineFillJRFillReportTemplate *fillTemplate = nil;
  if (template_ != nil) {
    fillTemplate = (OrgOssPdfreporterEngineFillJRFillReportTemplate *) cast_chk([self getWithId:template_], [OrgOssPdfreporterEngineFillJRFillReportTemplate class]);
    if (fillTemplate == nil) {
      fillTemplate = new_OrgOssPdfreporterEngineFillJRFillReportTemplate_initWithOrgOssPdfreporterEngineJRReportTemplate_withOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineFillJRFillObjectFactory_(template_, filler_, self);
    }
  }
  return fillTemplate;
}

- (id<JavaUtilList>)setStylesWithJavaUtilList:(id<JavaUtilList>)styles {
  originalStyleList_ = new_JavaUtilHashSet_initWithJavaUtilCollection_(styles);
  id<JavaUtilSet> requestedStyles = [self collectRequestedStylesWithJavaUtilList:styles];
  id<JavaUtilMap> usedStylesMap = new_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsSequencedHashMap_init();
  id<JavaUtilMap> allStylesMap = new_JavaUtilHashMap_init();
  for (id<JavaUtilIterator> it = [((id<JavaUtilList>) nil_chk(styles)) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    id<OrgOssPdfreporterEngineJRStyle> style = [it next];
    if ([((id<JavaUtilSet>) nil_chk(requestedStyles)) containsWithId:style]) {
      [self collectUsedStylesWithOrgOssPdfreporterEngineJRStyle:style withJavaUtilMap:usedStylesMap withJavaUtilMap:allStylesMap];
    }
    (void) [allStylesMap putWithId:[((id<OrgOssPdfreporterEngineJRStyle>) nil_chk(style)) getName] withId:style];
  }
  id<JavaUtilList> includedStyles = new_JavaUtilArrayList_init();
  for (id<JavaUtilIterator> it = [((id<JavaUtilSet>) nil_chk([usedStylesMap keySet])) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    id<OrgOssPdfreporterEngineJRStyle> style = [it next];
    id<OrgOssPdfreporterEngineJRStyle> newStyle = [self getStyleWithOrgOssPdfreporterEngineJRStyle:style];
    [includedStyles addWithId:newStyle];
    if ([((id<JavaUtilSet>) nil_chk(requestedStyles)) containsWithId:style]) {
      [self useDelayedStyleWithOrgOssPdfreporterEngineJRStyle:newStyle];
    }
  }
  [self checkUnresolvedReferences];
  return includedStyles;
}

- (id<JavaUtilSet>)collectRequestedStylesWithJavaUtilList:(id<JavaUtilList>)externalStyles {
  id<JavaUtilMap> requestedStylesMap = new_JavaUtilHashMap_init();
  for (id<JavaUtilIterator> it = [((id<JavaUtilList>) nil_chk(externalStyles)) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    id<OrgOssPdfreporterEngineJRStyle> style = [it next];
    NSString *name = [((id<OrgOssPdfreporterEngineJRStyle>) nil_chk(style)) getName];
    if ([((id<JavaUtilMap>) nil_chk(delayedStyleSettersByName_)) containsKeyWithId:name]) {
      (void) [requestedStylesMap putWithId:name withId:style];
    }
  }
  return new_JavaUtilHashSet_initWithJavaUtilCollection_([requestedStylesMap values]);
}

- (void)collectUsedStylesWithOrgOssPdfreporterEngineJRStyle:(id<OrgOssPdfreporterEngineJRStyle>)style
                                            withJavaUtilMap:(id<JavaUtilMap>)usedStylesMap
                                            withJavaUtilMap:(id<JavaUtilMap>)allStylesMap {
  if (![((id<JavaUtilMap>) nil_chk(usedStylesMap)) containsKeyWithId:style] && [((id<JavaUtilSet>) nil_chk(originalStyleList_)) containsWithId:style]) {
    id<OrgOssPdfreporterEngineJRStyle> parent = [((id<OrgOssPdfreporterEngineJRStyle>) nil_chk(style)) getStyle];
    if (parent == nil) {
      NSString *parentName = [style getStyleNameReference];
      if (parentName != nil) {
        parent = [((id<JavaUtilMap>) nil_chk(allStylesMap)) getWithId:parentName];
        if (parent == nil) {
          @throw new_OrgOssPdfreporterEngineJRRuntimeException_initWithNSString_(JreStrcat("$$$", @"Style ", parentName, @" not found"));
        }
      }
    }
    if (parent != nil) {
      [self collectUsedStylesWithOrgOssPdfreporterEngineJRStyle:parent withJavaUtilMap:usedStylesMap withJavaUtilMap:allStylesMap];
    }
    (void) [usedStylesMap putWithId:style withId:nil];
  }
}

- (void)useDelayedStyleWithOrgOssPdfreporterEngineJRStyle:(id<OrgOssPdfreporterEngineJRStyle>)style {
  id<JavaUtilList> delayedSetters = [((id<JavaUtilMap>) nil_chk(delayedStyleSettersByName_)) removeWithId:[((id<OrgOssPdfreporterEngineJRStyle>) nil_chk(style)) getName]];
  if (delayedSetters != nil) {
    for (id<JavaUtilIterator> it = [delayedSetters iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
      id<OrgOssPdfreporterEngineJRStyleSetter> setter = [it next];
      [((id<OrgOssPdfreporterEngineJRStyleSetter>) nil_chk(setter)) setStyleWithOrgOssPdfreporterEngineJRStyle:style];
    }
  }
}

- (void)checkUnresolvedReferences {
  if (![((id<JavaUtilMap>) nil_chk(delayedStyleSettersByName_)) isEmpty]) {
    JavaLangStringBuffer *errorMsg = new_JavaLangStringBuffer_initWithNSString_(@"Could not resolve style(s): ");
    for (id<JavaUtilIterator> it = [((id<JavaUtilSet>) nil_chk([((id<JavaUtilMap>) nil_chk(delayedStyleSettersByName_)) keySet])) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
      NSString *name = [it next];
      (void) [errorMsg appendWithNSString:name];
      (void) [errorMsg appendWithNSString:@", "];
    }
    @throw new_OrgOssPdfreporterEngineJRRuntimeException_initWithNSString_([errorMsg substringWithInt:0 withInt:[errorMsg length] - 2]);
  }
}

- (id<OrgOssPdfreporterEngineJRDefaultStyleProvider>)getDefaultStyleProvider {
  return [((OrgOssPdfreporterEngineJasperPrint *) nil_chk([((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler_)) getJasperPrint])) getDefaultStyleProvider];
}

- (void)visitComponentElementWithOrgOssPdfreporterEngineJRComponentElement:(id<OrgOssPdfreporterEngineJRComponentElement>)componentElement {
  OrgOssPdfreporterEngineFillJRFillComponentElement *fill = nil;
  if (componentElement != nil) {
    fill = (OrgOssPdfreporterEngineFillJRFillComponentElement *) cast_chk([self getWithId:componentElement], [OrgOssPdfreporterEngineFillJRFillComponentElement class]);
    if (fill == nil) {
      fill = new_OrgOssPdfreporterEngineFillJRFillComponentElement_initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineJRComponentElement_withOrgOssPdfreporterEngineFillJRFillObjectFactory_(filler_, componentElement, self);
    }
  }
  [self setVisitResultWithId:fill];
}

- (void)visitGenericElementWithOrgOssPdfreporterEngineJRGenericElement:(id<OrgOssPdfreporterEngineJRGenericElement>)element {
  OrgOssPdfreporterEngineFillJRFillGenericElement *fill = nil;
  if (element != nil) {
    fill = (OrgOssPdfreporterEngineFillJRFillGenericElement *) cast_chk([self getWithId:element], [OrgOssPdfreporterEngineFillJRFillGenericElement class]);
    if (fill == nil) {
      fill = new_OrgOssPdfreporterEngineFillJRFillGenericElement_initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineJRGenericElement_withOrgOssPdfreporterEngineFillJRFillObjectFactory_(filler_, element, self);
    }
  }
  [self setVisitResultWithId:fill];
}

+ (void)initialize {
  if (self == [OrgOssPdfreporterEngineFillJRFillObjectFactory class]) {
    OrgOssPdfreporterEngineFillJRFillObjectFactory_logger = JavaUtilLoggingLogger_getLoggerWithNSString_([OrgOssPdfreporterEngineFillJRFillObjectFactory_class_() getName]);
    J2OBJC_SET_INITIALIZED(OrgOssPdfreporterEngineFillJRFillObjectFactory)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgOssPdfreporterEngineFillJRBaseFiller:", "JRFillObjectFactory", NULL, 0x4, NULL, NULL },
    { "initWithOrgOssPdfreporterEngineFillJRBaseFiller:withOrgOssPdfreporterEngineFillJRFillExpressionEvaluator:", "JRFillObjectFactory", NULL, 0x1, NULL, NULL },
    { "initWithOrgOssPdfreporterEngineFillJRFillObjectFactory:withOrgOssPdfreporterEngineFillJRFillExpressionEvaluator:", "JRFillObjectFactory", NULL, 0x1, NULL, NULL },
    { "getExpressionEvaluator", NULL, "Lorg.oss.pdfreporter.engine.fill.JRFillExpressionEvaluator;", 0x1, NULL, NULL },
    { "getDatasets", NULL, "[Lorg.oss.pdfreporter.engine.fill.JRFillChartDataset;", 0x4, NULL, NULL },
    { "getElementDatasetsWithOrgOssPdfreporterEngineJRDataset:", "getElementDatasets", "[Lorg.oss.pdfreporter.engine.fill.JRFillElementDataset;", 0x4, NULL, NULL },
    { "registerDelayedStyleSetterWithOrgOssPdfreporterEngineJRStyleSetter:withNSString:", "registerDelayedStyleSetter", "V", 0x4, NULL, NULL },
    { "registerDelayedStyleSetterWithOrgOssPdfreporterEngineJRStyleSetter:withOrgOssPdfreporterEngineJRStyleContainer:", "registerDelayedStyleSetter", "V", 0x1, NULL, NULL },
    { "getStyleWithOrgOssPdfreporterEngineJRStyle:", "getStyle", "Lorg.oss.pdfreporter.engine.base.JRBaseStyle;", 0x1, NULL, NULL },
    { "renameExistingStyleWithNSString:", "renameExistingStyle", "V", 0x4, NULL, NULL },
    { "setStyleWithOrgOssPdfreporterEngineJRStyleSetter:withOrgOssPdfreporterEngineJRStyleContainer:", "setStyle", "V", 0x1, NULL, NULL },
    { "getParameterWithOrgOssPdfreporterEngineJRParameter:", "getParameter", "Lorg.oss.pdfreporter.engine.fill.JRFillParameter;", 0x4, NULL, NULL },
    { "getFieldWithOrgOssPdfreporterEngineJRField:", "getField", "Lorg.oss.pdfreporter.engine.fill.JRFillField;", 0x4, NULL, NULL },
    { "getVariableWithOrgOssPdfreporterEngineJRVariable:", "getVariable", "Lorg.oss.pdfreporter.engine.fill.JRFillVariable;", 0x1, NULL, NULL },
    { "getGroupWithOrgOssPdfreporterEngineJRGroup:", "getGroup", "Lorg.oss.pdfreporter.engine.fill.JRFillGroup;", 0x4, NULL, NULL },
    { "getSectionWithOrgOssPdfreporterEngineJRSection:", "getSection", "Lorg.oss.pdfreporter.engine.fill.JRFillSection;", 0x4, NULL, NULL },
    { "getBandWithOrgOssPdfreporterEngineJRBand:", "getBand", "Lorg.oss.pdfreporter.engine.fill.JRFillBand;", 0x4, NULL, NULL },
    { "visitElementGroupWithOrgOssPdfreporterEngineJRElementGroup:", "visitElementGroup", "V", 0x1, NULL, NULL },
    { "visitBreakWithOrgOssPdfreporterEngineJRBreak:", "visitBreak", "V", 0x1, NULL, NULL },
    { "visitLineWithOrgOssPdfreporterEngineJRLine:", "visitLine", "V", 0x1, NULL, NULL },
    { "visitRectangleWithOrgOssPdfreporterEngineJRRectangle:", "visitRectangle", "V", 0x1, NULL, NULL },
    { "visitEllipseWithOrgOssPdfreporterEngineJREllipse:", "visitEllipse", "V", 0x1, NULL, NULL },
    { "visitImageWithOrgOssPdfreporterEngineJRImage:", "visitImage", "V", 0x1, NULL, NULL },
    { "visitStaticTextWithOrgOssPdfreporterEngineJRStaticText:", "visitStaticText", "V", 0x1, NULL, NULL },
    { "visitTextFieldWithOrgOssPdfreporterEngineJRTextField:", "visitTextField", "V", 0x1, NULL, NULL },
    { "visitSubreportWithOrgOssPdfreporterEngineJRSubreport:", "visitSubreport", "V", 0x1, NULL, NULL },
    { "getSubreportReturnValueWithOrgOssPdfreporterEngineJRSubreportReturnValue:", "getSubreportReturnValue", "Lorg.oss.pdfreporter.engine.fill.JRFillSubreportReturnValue;", 0x4, NULL, NULL },
    { "visitCrosstabWithOrgOssPdfreporterCrosstabsJRCrosstab:", "visitCrosstab", "V", 0x1, NULL, NULL },
    { "getCrosstabDatasetWithOrgOssPdfreporterCrosstabsJRCrosstabDataset:withOrgOssPdfreporterEngineFillJRFillCrosstab:", "getCrosstabDataset", "Lorg.oss.pdfreporter.engine.fill.JRFillCrosstab$JRFillCrosstabDataset;", 0x1, NULL, NULL },
    { "getDatasetWithOrgOssPdfreporterEngineJRDataset:", "getDataset", "Lorg.oss.pdfreporter.engine.fill.JRFillDataset;", 0x1, NULL, NULL },
    { "registerElementDatasetWithOrgOssPdfreporterEngineFillJRFillElementDataset:", "registerElementDataset", "V", 0x1, NULL, NULL },
    { "getDatasetRunWithOrgOssPdfreporterEngineJRDatasetRun:", "getDatasetRun", "Lorg.oss.pdfreporter.engine.fill.JRFillDatasetRun;", 0x1, NULL, NULL },
    { "getCrosstabParameterWithOrgOssPdfreporterCrosstabsJRCrosstabParameter:", "getCrosstabParameter", "Lorg.oss.pdfreporter.crosstabs.fill.JRFillCrosstabParameter;", 0x1, NULL, NULL },
    { "visitFrameWithOrgOssPdfreporterEngineJRFrame:", "visitFrame", "V", 0x1, NULL, NULL },
    { "getFiller", NULL, "Lorg.oss.pdfreporter.engine.fill.JRBaseFiller;", 0x1, NULL, NULL },
    { "getConditionalStyleWithOrgOssPdfreporterEngineJRConditionalStyle:withOrgOssPdfreporterEngineJRStyle:", "getConditionalStyle", "Lorg.oss.pdfreporter.engine.JRConditionalStyle;", 0x1, NULL, NULL },
    { "getExpressionWithOrgOssPdfreporterEngineJRExpression:withBoolean:", "getExpression", "Lorg.oss.pdfreporter.engine.JRExpression;", 0x1, NULL, NULL },
    { "getReportTemplateWithOrgOssPdfreporterEngineJRReportTemplate:", "getReportTemplate", "Lorg.oss.pdfreporter.engine.fill.JRFillReportTemplate;", 0x1, NULL, NULL },
    { "setStylesWithJavaUtilList:", "setStyles", "Ljava.util.List;", 0x1, NULL, "(Ljava/util/List<Lorg/oss/pdfreporter/engine/JRStyle;>;)Ljava/util/List<Lorg/oss/pdfreporter/engine/JRStyle;>;" },
    { "collectRequestedStylesWithJavaUtilList:", "collectRequestedStyles", "Ljava.util.Set;", 0x4, NULL, "(Ljava/util/List<Lorg/oss/pdfreporter/engine/JRStyle;>;)Ljava/util/Set<Lorg/oss/pdfreporter/engine/JRStyle;>;" },
    { "collectUsedStylesWithOrgOssPdfreporterEngineJRStyle:withJavaUtilMap:withJavaUtilMap:", "collectUsedStyles", "V", 0x4, NULL, "(Lorg/oss/pdfreporter/engine/JRStyle;Ljava/util/Map<Lorg/oss/pdfreporter/engine/JRStyle;Ljava/lang/Object;>;Ljava/util/Map<Ljava/lang/String;Lorg/oss/pdfreporter/engine/JRStyle;>;)V" },
    { "useDelayedStyleWithOrgOssPdfreporterEngineJRStyle:", "useDelayedStyle", "V", 0x4, NULL, NULL },
    { "checkUnresolvedReferences", NULL, "V", 0x4, NULL, NULL },
    { "getDefaultStyleProvider", NULL, "Lorg.oss.pdfreporter.engine.JRDefaultStyleProvider;", 0x1, NULL, NULL },
    { "visitComponentElementWithOrgOssPdfreporterEngineJRComponentElement:", "visitComponentElement", "V", 0x1, NULL, NULL },
    { "visitGenericElementWithOrgOssPdfreporterEngineJRGenericElement:", "visitGenericElement", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "logger", "logger", 0x1a, "Ljava.util.logging.Logger;", &OrgOssPdfreporterEngineFillJRFillObjectFactory_logger, NULL, .constantValue.asLong = 0 },
    { "filler_", NULL, 0x4, "Lorg.oss.pdfreporter.engine.fill.JRBaseFiller;", NULL, NULL, .constantValue.asLong = 0 },
    { "evaluator_", NULL, 0x2, "Lorg.oss.pdfreporter.engine.fill.JRFillExpressionEvaluator;", NULL, NULL, .constantValue.asLong = 0 },
    { "parentFiller_", NULL, 0x2, "Lorg.oss.pdfreporter.engine.fill.JRFillObjectFactory;", NULL, NULL, .constantValue.asLong = 0 },
    { "elementDatasets_", NULL, 0x2, "Ljava.util.List;", NULL, "Ljava/util/List<Lorg/oss/pdfreporter/engine/fill/JRFillElementDataset;>;", .constantValue.asLong = 0 },
    { "elementDatasetMap_", NULL, 0x2, "Ljava.util.Map;", NULL, "Ljava/util/Map<Ljava/lang/String;Ljava/util/List<Lorg/oss/pdfreporter/engine/fill/JRFillElementDataset;>;>;", .constantValue.asLong = 0 },
    { "delayedStyleSettersByName_", NULL, 0x2, "Ljava.util.Map;", NULL, "Ljava/util/Map<Ljava/lang/String;Ljava/util/List<Lorg/oss/pdfreporter/engine/JRStyleSetter;>;>;", .constantValue.asLong = 0 },
    { "originalStyleList_", NULL, 0x2, "Ljava.util.Set;", NULL, "Ljava/util/Set<Lorg/oss/pdfreporter/engine/JRStyle;>;", .constantValue.asLong = 0 },
    { "stylesMap_", NULL, 0x2, "Lorg.oss.pdfreporter.engine.fill.JRFillObjectFactory$StylesList;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lorg.oss.pdfreporter.engine.fill.JRFillObjectFactory$StylesList;"};
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineFillJRFillObjectFactory = { 2, "JRFillObjectFactory", "org.oss.pdfreporter.engine.fill", NULL, 0x1, 46, methods, 9, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_OrgOssPdfreporterEngineFillJRFillObjectFactory;
}

@end

void OrgOssPdfreporterEngineFillJRFillObjectFactory_initWithOrgOssPdfreporterEngineFillJRBaseFiller_(OrgOssPdfreporterEngineFillJRFillObjectFactory *self, OrgOssPdfreporterEngineFillJRBaseFiller *filler) {
  OrgOssPdfreporterEngineFillJRFillObjectFactory_initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineFillJRFillExpressionEvaluator_(self, filler, ((OrgOssPdfreporterEngineFillJRBaseFiller *) nil_chk(filler))->calculator_);
}

OrgOssPdfreporterEngineFillJRFillObjectFactory *new_OrgOssPdfreporterEngineFillJRFillObjectFactory_initWithOrgOssPdfreporterEngineFillJRBaseFiller_(OrgOssPdfreporterEngineFillJRBaseFiller *filler) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineFillJRFillObjectFactory, initWithOrgOssPdfreporterEngineFillJRBaseFiller_, filler)
}

OrgOssPdfreporterEngineFillJRFillObjectFactory *create_OrgOssPdfreporterEngineFillJRFillObjectFactory_initWithOrgOssPdfreporterEngineFillJRBaseFiller_(OrgOssPdfreporterEngineFillJRBaseFiller *filler) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineFillJRFillObjectFactory, initWithOrgOssPdfreporterEngineFillJRBaseFiller_, filler)
}

void OrgOssPdfreporterEngineFillJRFillObjectFactory_initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineFillJRFillExpressionEvaluator_(OrgOssPdfreporterEngineFillJRFillObjectFactory *self, OrgOssPdfreporterEngineFillJRBaseFiller *filler, id<OrgOssPdfreporterEngineFillJRFillExpressionEvaluator> expressionEvaluator) {
  OrgOssPdfreporterEngineFillJRAbstractFillObjectFactory_init(self);
  self->elementDatasets_ = new_JavaUtilArrayList_init();
  self->elementDatasetMap_ = new_JavaUtilHashMap_init();
  self->delayedStyleSettersByName_ = new_JavaUtilHashMap_init();
  self->stylesMap_ = new_OrgOssPdfreporterEngineFillJRFillObjectFactory_StylesList_init();
  self->filler_ = filler;
  self->evaluator_ = expressionEvaluator;
}

OrgOssPdfreporterEngineFillJRFillObjectFactory *new_OrgOssPdfreporterEngineFillJRFillObjectFactory_initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineFillJRFillExpressionEvaluator_(OrgOssPdfreporterEngineFillJRBaseFiller *filler, id<OrgOssPdfreporterEngineFillJRFillExpressionEvaluator> expressionEvaluator) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineFillJRFillObjectFactory, initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineFillJRFillExpressionEvaluator_, filler, expressionEvaluator)
}

OrgOssPdfreporterEngineFillJRFillObjectFactory *create_OrgOssPdfreporterEngineFillJRFillObjectFactory_initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineFillJRFillExpressionEvaluator_(OrgOssPdfreporterEngineFillJRBaseFiller *filler, id<OrgOssPdfreporterEngineFillJRFillExpressionEvaluator> expressionEvaluator) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineFillJRFillObjectFactory, initWithOrgOssPdfreporterEngineFillJRBaseFiller_withOrgOssPdfreporterEngineFillJRFillExpressionEvaluator_, filler, expressionEvaluator)
}

void OrgOssPdfreporterEngineFillJRFillObjectFactory_initWithOrgOssPdfreporterEngineFillJRFillObjectFactory_withOrgOssPdfreporterEngineFillJRFillExpressionEvaluator_(OrgOssPdfreporterEngineFillJRFillObjectFactory *self, OrgOssPdfreporterEngineFillJRFillObjectFactory *parent, id<OrgOssPdfreporterEngineFillJRFillExpressionEvaluator> expressionEvaluator) {
  OrgOssPdfreporterEngineFillJRAbstractFillObjectFactory_init(self);
  self->elementDatasets_ = new_JavaUtilArrayList_init();
  self->elementDatasetMap_ = new_JavaUtilHashMap_init();
  self->delayedStyleSettersByName_ = new_JavaUtilHashMap_init();
  self->stylesMap_ = new_OrgOssPdfreporterEngineFillJRFillObjectFactory_StylesList_init();
  self->parentFiller_ = parent;
  self->filler_ = ((OrgOssPdfreporterEngineFillJRFillObjectFactory *) nil_chk(parent))->filler_;
  self->evaluator_ = expressionEvaluator;
}

OrgOssPdfreporterEngineFillJRFillObjectFactory *new_OrgOssPdfreporterEngineFillJRFillObjectFactory_initWithOrgOssPdfreporterEngineFillJRFillObjectFactory_withOrgOssPdfreporterEngineFillJRFillExpressionEvaluator_(OrgOssPdfreporterEngineFillJRFillObjectFactory *parent, id<OrgOssPdfreporterEngineFillJRFillExpressionEvaluator> expressionEvaluator) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineFillJRFillObjectFactory, initWithOrgOssPdfreporterEngineFillJRFillObjectFactory_withOrgOssPdfreporterEngineFillJRFillExpressionEvaluator_, parent, expressionEvaluator)
}

OrgOssPdfreporterEngineFillJRFillObjectFactory *create_OrgOssPdfreporterEngineFillJRFillObjectFactory_initWithOrgOssPdfreporterEngineFillJRFillObjectFactory_withOrgOssPdfreporterEngineFillJRFillExpressionEvaluator_(OrgOssPdfreporterEngineFillJRFillObjectFactory *parent, id<OrgOssPdfreporterEngineFillJRFillExpressionEvaluator> expressionEvaluator) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineFillJRFillObjectFactory, initWithOrgOssPdfreporterEngineFillJRFillObjectFactory_withOrgOssPdfreporterEngineFillJRFillExpressionEvaluator_, parent, expressionEvaluator)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineFillJRFillObjectFactory)

@implementation OrgOssPdfreporterEngineFillJRFillObjectFactory_StylesList

- (jboolean)containsStyleWithNSString:(NSString *)name {
  return [((id<JavaUtilMap>) nil_chk(stylesIdx_)) containsKeyWithId:name];
}

- (id<OrgOssPdfreporterEngineJRStyle>)getStyleWithNSString:(NSString *)name {
  JavaLangInteger *idx = [((id<JavaUtilMap>) nil_chk(stylesIdx_)) getWithId:name];
  return idx == nil ? nil : [((id<JavaUtilList>) nil_chk(styles_)) getWithInt:[idx intValue]];
}

- (void)addStyleWithOrgOssPdfreporterEngineJRStyle:(id<OrgOssPdfreporterEngineJRStyle>)style {
  [((id<JavaUtilList>) nil_chk(styles_)) addWithId:style];
  (void) [((id<JavaUtilMap>) nil_chk(stylesIdx_)) putWithId:[((id<OrgOssPdfreporterEngineJRStyle>) nil_chk(style)) getName] withId:JavaLangInteger_valueOfWithInt_([styles_ size] - 1)];
}

- (void)renamedWithNSString:(NSString *)oldName
               withNSString:(NSString *)newName {
  JavaLangInteger *idx = [((id<JavaUtilMap>) nil_chk(stylesIdx_)) removeWithId:oldName];
  (void) [stylesIdx_ putWithId:newName withId:idx];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterEngineFillJRFillObjectFactory_StylesList_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "containsStyleWithNSString:", "containsStyle", "Z", 0x1, NULL, NULL },
    { "getStyleWithNSString:", "getStyle", "Lorg.oss.pdfreporter.engine.JRStyle;", 0x1, NULL, NULL },
    { "addStyleWithOrgOssPdfreporterEngineJRStyle:", "addStyle", "V", 0x1, NULL, NULL },
    { "renamedWithNSString:withNSString:", "renamed", "V", 0x1, NULL, NULL },
    { "init", "StylesList", NULL, 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "styles_", NULL, 0x12, "Ljava.util.List;", NULL, "Ljava/util/List<Lorg/oss/pdfreporter/engine/JRStyle;>;", .constantValue.asLong = 0 },
    { "stylesIdx_", NULL, 0x12, "Ljava.util.Map;", NULL, "Ljava/util/Map<Ljava/lang/String;Ljava/lang/Integer;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineFillJRFillObjectFactory_StylesList = { 2, "StylesList", "org.oss.pdfreporter.engine.fill", "JRFillObjectFactory", 0xc, 5, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineFillJRFillObjectFactory_StylesList;
}

@end

void OrgOssPdfreporterEngineFillJRFillObjectFactory_StylesList_init(OrgOssPdfreporterEngineFillJRFillObjectFactory_StylesList *self) {
  NSObject_init(self);
  self->styles_ = new_JavaUtilArrayList_init();
  self->stylesIdx_ = new_JavaUtilHashMap_init();
}

OrgOssPdfreporterEngineFillJRFillObjectFactory_StylesList *new_OrgOssPdfreporterEngineFillJRFillObjectFactory_StylesList_init() {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineFillJRFillObjectFactory_StylesList, init)
}

OrgOssPdfreporterEngineFillJRFillObjectFactory_StylesList *create_OrgOssPdfreporterEngineFillJRFillObjectFactory_StylesList_init() {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineFillJRFillObjectFactory_StylesList, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineFillJRFillObjectFactory_StylesList)
