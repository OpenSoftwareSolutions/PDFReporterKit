//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/fill/JRSubreportRunnable.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "org/oss/pdfreporter/engine/fill/JRFillInterruptedException.h"
#include "org/oss/pdfreporter/engine/fill/JRFillSubreport.h"
#include "org/oss/pdfreporter/engine/fill/JRSubreportRunResult.h"
#include "org/oss/pdfreporter/engine/fill/JRSubreportRunnable.h"

@interface OrgOssPdfreporterEngineFillJRSubreportRunnable () {
 @public
  OrgOssPdfreporterEngineFillJRFillSubreport *fillSubreport_;
  NSException *error_;
  jboolean running_;
  jboolean started_;
}

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRSubreportRunnable, fillSubreport_, OrgOssPdfreporterEngineFillJRFillSubreport *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineFillJRSubreportRunnable, error_, NSException *)

@implementation OrgOssPdfreporterEngineFillJRSubreportRunnable

- (instancetype)initWithOrgOssPdfreporterEngineFillJRFillSubreport:(OrgOssPdfreporterEngineFillJRFillSubreport *)fillSubreport {
  OrgOssPdfreporterEngineFillJRSubreportRunnable_initWithOrgOssPdfreporterEngineFillJRFillSubreport_(self, fillSubreport);
  return self;
}

- (OrgOssPdfreporterEngineFillJRSubreportRunResult *)runResult {
  return new_OrgOssPdfreporterEngineFillJRSubreportRunResult_initWithBoolean_withNSException_(!running_, error_);
}

- (void)run {
  running_ = true;
  started_ = true;
  error_ = nil;
  @try {
    [((OrgOssPdfreporterEngineFillJRFillSubreport *) nil_chk(fillSubreport_)) fillSubreport];
  }
  @catch (OrgOssPdfreporterEngineFillJRFillInterruptedException *e) {
  }
  @catch (NSException *t) {
    error_ = t;
  }
  running_ = false;
}

- (jboolean)isStarted {
  return started_;
}

- (jboolean)isRunning {
  return running_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgOssPdfreporterEngineFillJRFillSubreport:", "JRSubreportRunnable", NULL, 0x4, NULL, NULL },
    { "runResult", NULL, "Lorg.oss.pdfreporter.engine.fill.JRSubreportRunResult;", 0x4, NULL, NULL },
    { "run", NULL, "V", 0x1, NULL, NULL },
    { "isStarted", NULL, "Z", 0x4, NULL, NULL },
    { "isRunning", NULL, "Z", 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "fillSubreport_", NULL, 0x12, "Lorg.oss.pdfreporter.engine.fill.JRFillSubreport;", NULL, NULL, .constantValue.asLong = 0 },
    { "error_", NULL, 0x2, "Ljava.lang.Throwable;", NULL, NULL, .constantValue.asLong = 0 },
    { "running_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "started_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineFillJRSubreportRunnable = { 2, "JRSubreportRunnable", "org.oss.pdfreporter.engine.fill", NULL, 0x401, 5, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineFillJRSubreportRunnable;
}

@end

void OrgOssPdfreporterEngineFillJRSubreportRunnable_initWithOrgOssPdfreporterEngineFillJRFillSubreport_(OrgOssPdfreporterEngineFillJRSubreportRunnable *self, OrgOssPdfreporterEngineFillJRFillSubreport *fillSubreport) {
  NSObject_init(self);
  self->error_ = nil;
  self->running_ = false;
  self->started_ = false;
  self->fillSubreport_ = fillSubreport;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineFillJRSubreportRunnable)
