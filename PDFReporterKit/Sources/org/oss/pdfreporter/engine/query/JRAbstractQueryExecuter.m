//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/query/JRAbstractQueryExecuter.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Boolean.h"
#include "java/lang/Exception.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/StringBuffer.h"
#include "java/util/ArrayList.h"
#include "java/util/Collections.h"
#include "java/util/HashMap.h"
#include "java/util/HashSet.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "org/oss/pdfreporter/engine/DefaultJasperReportsContext.h"
#include "org/oss/pdfreporter/engine/JRConstants.h"
#include "org/oss/pdfreporter/engine/JRDataset.h"
#include "org/oss/pdfreporter/engine/JRParameter.h"
#include "org/oss/pdfreporter/engine/JRPropertiesMap.h"
#include "org/oss/pdfreporter/engine/JRPropertiesUtil.h"
#include "org/oss/pdfreporter/engine/JRQuery.h"
#include "org/oss/pdfreporter/engine/JRQueryChunk.h"
#include "org/oss/pdfreporter/engine/JRRuntimeException.h"
#include "org/oss/pdfreporter/engine/JRValueParameter.h"
#include "org/oss/pdfreporter/engine/JasperReportsContext.h"
#include "org/oss/pdfreporter/engine/fill/IJRFillParameter.h"
#include "org/oss/pdfreporter/engine/query/JRAbstractQueryExecuter.h"
#include "org/oss/pdfreporter/engine/query/JRClauseFunction.h"
#include "org/oss/pdfreporter/engine/query/JRClauseTokens.h"
#include "org/oss/pdfreporter/engine/query/JRQueryClauseContext.h"
#include "org/oss/pdfreporter/engine/query/QueryClauseFunctionBundle.h"
#include "org/oss/pdfreporter/engine/util/JRQueryChunkHandler.h"
#include "org/oss/pdfreporter/engine/util/JRQueryParser.h"

#pragma clang diagnostic ignored "-Wprotocol"

@interface OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter () {
 @public
  id<OrgOssPdfreporterEngineJasperReportsContext> jasperReportsContext_;
  OrgOssPdfreporterEngineJRPropertiesUtil *propertiesUtil_;
  id<JavaUtilMap> parametersMap_;
  NSString *queryString_;
  id<JavaUtilList> queryParameters_;
  id<JavaUtilSet> parameterClauseStack_;
}

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter, jasperReportsContext_, id<OrgOssPdfreporterEngineJasperReportsContext>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter, propertiesUtil_, OrgOssPdfreporterEngineJRPropertiesUtil *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter, parametersMap_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter, queryString_, NSString *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter, queryParameters_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter, parameterClauseStack_, id<JavaUtilSet>)

inline jlong OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_VisitExceptionWrapper_get_serialVersionUID();
#define OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_VisitExceptionWrapper_serialVersionUID 10200LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_VisitExceptionWrapper, serialVersionUID, jlong)

@interface OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameterVisitor : NSObject

@end

@interface OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameterEntry : NSObject

@end

@interface OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameter () {
 @public
  NSString *name_;
  jint count_;
  jboolean ignoreNulls_;
}

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameter, name_, NSString *)

@interface OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_ValuedQueryParameter () {
 @public
  IOSClass *type_;
  id value_;
}

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_ValuedQueryParameter, type_, IOSClass *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_ValuedQueryParameter, value_, id)

@interface OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_$1 : NSObject < OrgOssPdfreporterEngineUtilJRQueryChunkHandler > {
 @public
  OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter *this$0_;
  JavaLangStringBuffer *val$sbuffer_;
}

- (void)handleParameterChunkWithNSString:(NSString *)text;

- (void)handleParameterClauseChunkWithNSString:(NSString *)text;

- (void)handleTextChunkWithNSString:(NSString *)text;

- (void)handleClauseChunkWithNSStringArray:(IOSObjectArray *)tokens;

- (instancetype)initWithOrgOssPdfreporterEngineQueryJRAbstractQueryExecuter:(OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter *)outer$
                                                   withJavaLangStringBuffer:(JavaLangStringBuffer *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_$1)

J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_$1, this$0_, OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_$1, val$sbuffer_, JavaLangStringBuffer *)

__attribute__((unused)) static void OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_$1_initWithOrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_withJavaLangStringBuffer_(OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_$1 *self, OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter *outer$, JavaLangStringBuffer *capture$0);

__attribute__((unused)) static OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_$1 *new_OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_$1_initWithOrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_withJavaLangStringBuffer_(OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter *outer$, JavaLangStringBuffer *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_$1 *create_OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_$1_initWithOrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_withJavaLangStringBuffer_(OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter *outer$, JavaLangStringBuffer *capture$0);

J2OBJC_TYPE_LITERAL_HEADER(OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_$1)

@interface OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_$2 : NSObject < OrgOssPdfreporterEngineQueryJRQueryClauseContext > {
 @public
  OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter *this$0_;
  JavaLangStringBuffer *val$sbuffer_;
}

- (void)addQueryMultiParametersWithNSString:(NSString *)parameterName
                                    withInt:(jint)count;

- (void)addQueryMultiParametersWithNSString:(NSString *)parameterName
                                    withInt:(jint)count
                                withBoolean:(jboolean)ignoreNulls;

- (void)addQueryParameterWithNSString:(NSString *)parameterName;

- (void)addQueryParameterWithIOSClass:(IOSClass *)type
                               withId:(id)value;

- (id<OrgOssPdfreporterEngineJRValueParameter>)getValueParameterWithNSString:(NSString *)parameterName;

- (JavaLangStringBuffer *)queryBuffer;

- (id<OrgOssPdfreporterEngineJasperReportsContext>)getJasperReportsContext;

- (NSString *)getCanonicalQueryLanguage;

- (instancetype)initWithOrgOssPdfreporterEngineQueryJRAbstractQueryExecuter:(OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter *)outer$
                                                   withJavaLangStringBuffer:(JavaLangStringBuffer *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_$2)

J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_$2, this$0_, OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_$2, val$sbuffer_, JavaLangStringBuffer *)

__attribute__((unused)) static void OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_$2_initWithOrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_withJavaLangStringBuffer_(OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_$2 *self, OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter *outer$, JavaLangStringBuffer *capture$0);

__attribute__((unused)) static OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_$2 *new_OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_$2_initWithOrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_withJavaLangStringBuffer_(OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter *outer$, JavaLangStringBuffer *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_$2 *create_OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_$2_initWithOrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_withJavaLangStringBuffer_(OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter *outer$, JavaLangStringBuffer *capture$0);

J2OBJC_TYPE_LITERAL_HEADER(OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_$2)

@implementation OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter

+ (jint)CLAUSE_POSITION_ID {
  return OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_CLAUSE_POSITION_ID;
}

- (instancetype)initWithOrgOssPdfreporterEngineJasperReportsContext:(id<OrgOssPdfreporterEngineJasperReportsContext>)jasperReportsContext
                               withOrgOssPdfreporterEngineJRDataset:(id<OrgOssPdfreporterEngineJRDataset>)dataset
                                                    withJavaUtilMap:(id<JavaUtilMap>)parametersMap {
  OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_initWithOrgOssPdfreporterEngineJasperReportsContext_withOrgOssPdfreporterEngineJRDataset_withJavaUtilMap_(self, jasperReportsContext, dataset, parametersMap);
  return self;
}

- (instancetype)initWithOrgOssPdfreporterEngineJRDataset:(id<OrgOssPdfreporterEngineJRDataset>)dataset
                                         withJavaUtilMap:(id<JavaUtilMap>)parametersMap {
  OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_initWithOrgOssPdfreporterEngineJRDataset_withJavaUtilMap_(self, dataset, parametersMap);
  return self;
}

- (id<OrgOssPdfreporterEngineJasperReportsContext>)getJasperReportsContext {
  return jasperReportsContext_;
}

- (OrgOssPdfreporterEngineJRPropertiesUtil *)getPropertiesUtil {
  return propertiesUtil_;
}

- (void)registerClauseFunctionWithNSString:(NSString *)id_
withOrgOssPdfreporterEngineQueryJRClauseFunction:(id<OrgOssPdfreporterEngineQueryJRClauseFunction>)function {
  (void) [((id<JavaUtilMap>) nil_chk(clauseFunctions_)) putWithId:id_ withId:function];
}

- (void)unregisterClauseFunctionWithNSString:(NSString *)id_ {
  (void) [((id<JavaUtilMap>) nil_chk(clauseFunctions_)) removeWithId:id_];
}

- (id<OrgOssPdfreporterEngineQueryJRClauseFunction>)resolveFunctionWithNSString:(NSString *)id_ {
  id<OrgOssPdfreporterEngineQueryJRClauseFunction> function = [((id<JavaUtilMap>) nil_chk(clauseFunctions_)) getWithId:id_];
  if (function == nil) {
    function = [self findExtensionQueryFunctionWithNSString:id_];
    if (function == nil) {
      @throw new_OrgOssPdfreporterEngineJRRuntimeException_initWithNSString_(JreStrcat("$$$", @"No clause function for id ", id_, @" found"));
    }
  }
  return function;
}

- (id<OrgOssPdfreporterEngineQueryJRClauseFunction>)findExtensionQueryFunctionWithNSString:(NSString *)id_ {
  id<OrgOssPdfreporterEngineQueryJRClauseFunction> function = nil;
  NSString *queryLanguage = [self getCanonicalQueryLanguage];
  id<JavaUtilList> functionBundles = [((id<OrgOssPdfreporterEngineJasperReportsContext>) nil_chk(jasperReportsContext_)) getExtensionsWithIOSClass:OrgOssPdfreporterEngineQueryQueryClauseFunctionBundle_class_()];
  for (id<OrgOssPdfreporterEngineQueryQueryClauseFunctionBundle> __strong functionBundle in nil_chk(functionBundles)) {
    function = [((id<OrgOssPdfreporterEngineQueryQueryClauseFunctionBundle>) nil_chk(functionBundle)) getFunctionWithNSString:queryLanguage withNSString:id_];
    if (function != nil) {
      break;
    }
  }
  return function;
}

- (NSString *)getCanonicalQueryLanguage {
  return [((id<OrgOssPdfreporterEngineJRQuery>) nil_chk([((id<OrgOssPdfreporterEngineJRDataset>) nil_chk(dataset_)) getQuery])) getLanguage];
}

- (void)parseQuery {
  parameterClauseStack_ = new_JavaUtilHashSet_init();
  id<OrgOssPdfreporterEngineJRQuery> query = [((id<OrgOssPdfreporterEngineJRDataset>) nil_chk(dataset_)) getQuery];
  if (query != nil) {
    IOSObjectArray *chunks = [query getChunks];
    if (chunks != nil && chunks->size_ > 0) {
      JavaLangStringBuffer *sbuffer = new_JavaLangStringBuffer_init();
      for (jint i = 0; i < chunks->size_; i++) {
        id<OrgOssPdfreporterEngineJRQueryChunk> chunk = IOSObjectArray_Get(chunks, i);
        [self appendQueryChunkWithJavaLangStringBuffer:sbuffer withOrgOssPdfreporterEngineJRQueryChunk:chunk];
      }
      queryString_ = [sbuffer description];
    }
  }
}

- (void)appendQueryChunkWithJavaLangStringBuffer:(JavaLangStringBuffer *)sbuffer
         withOrgOssPdfreporterEngineJRQueryChunk:(id<OrgOssPdfreporterEngineJRQueryChunk>)chunk {
  switch ([((id<OrgOssPdfreporterEngineJRQueryChunk>) nil_chk(chunk)) getType]) {
    case OrgOssPdfreporterEngineJRQueryChunk_TYPE_PARAMETER_CLAUSE:
    {
      [self appendParameterClauseChunkWithJavaLangStringBuffer:sbuffer withNSString:[chunk getText]];
      break;
    }
    case OrgOssPdfreporterEngineJRQueryChunk_TYPE_PARAMETER:
    {
      [self appendParameterChunkWithJavaLangStringBuffer:sbuffer withNSString:[chunk getText]];
      break;
    }
    case OrgOssPdfreporterEngineJRQueryChunk_TYPE_CLAUSE_TOKENS:
    {
      [self appendClauseChunkWithJavaLangStringBuffer:sbuffer withNSStringArray:[chunk getTokens]];
      break;
    }
    case OrgOssPdfreporterEngineJRQueryChunk_TYPE_TEXT:
    default:
    {
      [self appendTextChunkWithJavaLangStringBuffer:sbuffer withNSString:[chunk getText]];
      break;
    }
  }
}

- (void)appendTextChunkWithJavaLangStringBuffer:(JavaLangStringBuffer *)sbuffer
                                   withNSString:(NSString *)text {
  (void) [((JavaLangStringBuffer *) nil_chk(sbuffer)) appendWithNSString:text];
}

- (void)appendParameterChunkWithJavaLangStringBuffer:(JavaLangStringBuffer *)sbuffer
                                        withNSString:(NSString *)chunkText {
  NSString *parameterName = chunkText;
  [self checkParameterWithNSString:parameterName];
  (void) [((JavaLangStringBuffer *) nil_chk(sbuffer)) appendWithNSString:[self getParameterReplacementWithNSString:parameterName]];
  [self addQueryParameterWithNSString:chunkText];
}

- (void)addQueryParameterWithNSString:(NSString *)parameterName {
  OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameter *param = new_OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameter_initWithNSString_(parameterName);
  [((id<JavaUtilList>) nil_chk(queryParameters_)) addWithId:param];
}

- (void)addQueryMultiParametersWithNSString:(NSString *)parameterName
                                    withInt:(jint)count {
  OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameter *param = new_OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameter_initWithNSString_withInt_(parameterName, count);
  [((id<JavaUtilList>) nil_chk(queryParameters_)) addWithId:param];
}

- (void)addQueryMultiParametersWithNSString:(NSString *)parameterName
                                    withInt:(jint)count
                                withBoolean:(jboolean)ignoreNulls {
  OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameter *param = new_OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameter_initWithNSString_withInt_withBoolean_(parameterName, count, ignoreNulls);
  [((id<JavaUtilList>) nil_chk(queryParameters_)) addWithId:param];
}

- (void)addQueryParameterWithIOSClass:(IOSClass *)type
                               withId:(id)value {
  OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_ValuedQueryParameter *param = new_OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_ValuedQueryParameter_initWithIOSClass_withId_(type, value);
  [((id<JavaUtilList>) nil_chk(queryParameters_)) addWithId:param];
}

- (void)appendParameterClauseChunkWithJavaLangStringBuffer:(JavaLangStringBuffer *)sbuffer
                                              withNSString:(NSString *)chunkText {
  NSString *parameterName = chunkText;
  [self checkParameterWithNSString:parameterName];
  if (![((id<JavaUtilSet>) nil_chk(parameterClauseStack_)) addWithId:parameterName]) {
    @throw new_OrgOssPdfreporterEngineJRRuntimeException_initWithNSString_(JreStrcat("$$", @"The query contains circularly nested parameter clauses starting with ", parameterName));
  }
  @try {
    id parameterValue = [self getParameterValueWithNSString:parameterName];
    NSString *clauseText = NSString_valueOf_(parameterValue);
    id<OrgOssPdfreporterEngineUtilJRQueryChunkHandler> nestedChunkHandler = new_OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_$1_initWithOrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_withJavaLangStringBuffer_(self, sbuffer);
    [((OrgOssPdfreporterEngineUtilJRQueryParser *) nil_chk(OrgOssPdfreporterEngineUtilJRQueryParser_instance())) parseWithNSString:clauseText withOrgOssPdfreporterEngineUtilJRQueryChunkHandler:nestedChunkHandler];
  }
  @finally {
    [((id<JavaUtilSet>) nil_chk(parameterClauseStack_)) removeWithId:parameterName];
  }
}

- (void)appendClauseChunkWithJavaLangStringBuffer:(JavaLangStringBuffer *)sbuffer
                                withNSStringArray:(IOSObjectArray *)clauseTokens {
  OrgOssPdfreporterEngineQueryJRClauseTokens *tokens = new_OrgOssPdfreporterEngineQueryJRClauseTokens_initWithNSStringArray_(clauseTokens);
  NSString *id_ = [tokens getClauseId];
  if (id_ == nil) {
    @throw new_OrgOssPdfreporterEngineJRRuntimeException_initWithNSString_(@"Query clause ID/first token missing");
  }
  id<OrgOssPdfreporterEngineQueryJRClauseFunction> function = [self resolveFunctionWithNSString:id_];
  [self applyClauseWithOrgOssPdfreporterEngineQueryJRClauseFunction:function withOrgOssPdfreporterEngineQueryJRClauseTokens:tokens withJavaLangStringBuffer:sbuffer];
}

- (void)applyClauseWithOrgOssPdfreporterEngineQueryJRClauseFunction:(id<OrgOssPdfreporterEngineQueryJRClauseFunction>)function
                     withOrgOssPdfreporterEngineQueryJRClauseTokens:(OrgOssPdfreporterEngineQueryJRClauseTokens *)tokens
                                           withJavaLangStringBuffer:(JavaLangStringBuffer *)sbuffer {
  [((id<OrgOssPdfreporterEngineQueryJRClauseFunction>) nil_chk(function)) applyWithOrgOssPdfreporterEngineQueryJRClauseTokens:tokens withOrgOssPdfreporterEngineQueryJRQueryClauseContext:new_OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_$2_initWithOrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_withJavaLangStringBuffer_(self, sbuffer)];
}

- (NSString *)getQueryString {
  return queryString_;
}

- (id<JavaUtilList>)getCollectedParameterNames {
  id<JavaUtilList> parameterNames = new_JavaUtilArrayList_initWithInt_([((id<JavaUtilList>) nil_chk(queryParameters_)) size]);
  for (id<JavaUtilIterator> it = [((id<JavaUtilList>) nil_chk(queryParameters_)) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    id<OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameterEntry> paramEntry = [it next];
    if (!([paramEntry isKindOfClass:[OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameter class]])) {
      @throw new_OrgOssPdfreporterEngineJRRuntimeException_initWithNSString_(JreStrcat("$$", @"getCollectedParameterNames found unsupported query parameter type ", [[((id<OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameterEntry>) nil_chk(paramEntry)) getClass] getName]));
    }
    OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameter *param = (OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameter *) cast_chk(paramEntry, [OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameter class]);
    [parameterNames addWithId:[((OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameter *) nil_chk(param)) getName]];
  }
  return parameterNames;
}

- (id<JavaUtilList>)getCollectedParameters {
  id<JavaUtilList> params = new_JavaUtilArrayList_initWithInt_([((id<JavaUtilList>) nil_chk(queryParameters_)) size]);
  for (id<OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameterEntry> __strong parameterEntry in nil_chk(queryParameters_)) {
    if (!([parameterEntry isKindOfClass:[OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameter class]])) {
      @throw new_OrgOssPdfreporterEngineJRRuntimeException_initWithNSString_(JreStrcat("$$", @"getCollectedParameterNames found unsupported query parameter type ", [[((id<OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameterEntry>) nil_chk(parameterEntry)) getClass] getName]));
    }
    [params addWithId:(OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameter *) cast_chk(parameterEntry, [OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameter class])];
  }
  return JavaUtilCollections_unmodifiableListWithJavaUtilList_(params);
}

- (void)visitQueryParametersWithOrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameterVisitor:(id<OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameterVisitor>)visitor {
  for (id<OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameterEntry> __strong queryParameter in nil_chk(queryParameters_)) {
    [((id<OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameterEntry>) nil_chk(queryParameter)) acceptWithOrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameterVisitor:visitor];
  }
}

- (id)getParameterValueWithNSString:(NSString *)parameterName
                        withBoolean:(jboolean)ignoreMissing {
  if (ignoreMissing) {
    id<OrgOssPdfreporterEngineJRValueParameter> parameter = [self getValueParameterWithNSString:OrgOssPdfreporterEngineJRParameter_REPORT_PARAMETERS_MAP withBoolean:false];
    id<JavaUtilMap> parametersMap = (id<JavaUtilMap>) cast_check([((id<OrgOssPdfreporterEngineJRValueParameter>) nil_chk(parameter)) getValue], JavaUtilMap_class_());
    return [((id<JavaUtilMap>) nil_chk(parametersMap)) getWithId:parameterName];
  }
  id<OrgOssPdfreporterEngineJRValueParameter> parameter = [self getValueParameterWithNSString:parameterName withBoolean:ignoreMissing];
  return parameter == nil ? nil : [parameter getValue];
}

- (id)getParameterValueWithNSString:(NSString *)parameterName {
  return [self getParameterValueWithNSString:parameterName withBoolean:false];
}

- (jboolean)parameterHasValueWithNSString:(NSString *)parameter {
  id<OrgOssPdfreporterEngineJRValueParameter> reportParametersMap = [self getValueParameterWithNSString:OrgOssPdfreporterEngineJRParameter_REPORT_PARAMETERS_MAP withBoolean:false];
  id<JavaUtilMap> parametersMap = (id<JavaUtilMap>) cast_check([((id<OrgOssPdfreporterEngineJRValueParameter>) nil_chk(reportParametersMap)) getValue], JavaUtilMap_class_());
  return [((id<JavaUtilMap>) nil_chk(parametersMap)) containsKeyWithId:parameter];
}

- (NSString *)getStringParameterWithNSString:(NSString *)parameter
                                withNSString:(NSString *)property {
  if ([self parameterHasValueWithNSString:parameter]) {
    return (NSString *) cast_chk([self getParameterValueWithNSString:parameter withBoolean:true], [NSString class]);
  }
  else {
    return [((OrgOssPdfreporterEngineJRPropertiesUtil *) nil_chk([self getPropertiesUtil])) getPropertyWithOrgOssPdfreporterEngineJRPropertiesMap:[((id<OrgOssPdfreporterEngineJRDataset>) nil_chk(dataset_)) getPropertiesMap] withNSString:property];
  }
}

- (NSString *)getStringParameterOrPropertyWithNSString:(NSString *)name {
  return [self getStringParameterWithNSString:name withNSString:name];
}

- (jboolean)getBooleanParameterWithNSString:(NSString *)parameter
                               withNSString:(NSString *)property
                                withBoolean:(jboolean)defaultValue {
  if ([self parameterHasValueWithNSString:parameter]) {
    JavaLangBoolean *booleanValue = (JavaLangBoolean *) cast_chk([self getParameterValueWithNSString:parameter withBoolean:true], [JavaLangBoolean class]);
    if (booleanValue == nil) {
      return [((OrgOssPdfreporterEngineJRPropertiesUtil *) nil_chk([self getPropertiesUtil])) getBooleanPropertyWithNSString:property];
    }
    else {
      return [booleanValue booleanValue];
    }
  }
  else {
    return [((OrgOssPdfreporterEngineJRPropertiesUtil *) nil_chk([self getPropertiesUtil])) getBooleanPropertyWithOrgOssPdfreporterEngineJRPropertiesMap:[((id<OrgOssPdfreporterEngineJRDataset>) nil_chk(dataset_)) getPropertiesMap] withNSString:property withBoolean:defaultValue];
  }
}

- (jboolean)getBooleanParameterOrPropertyWithNSString:(NSString *)name
                                          withBoolean:(jboolean)defaultValue {
  return [self getBooleanParameterWithNSString:name withNSString:name withBoolean:defaultValue];
}

- (id<OrgOssPdfreporterEngineFillIJRFillParameter>)getParameterWithNSString:(NSString *)parameterName {
  id<OrgOssPdfreporterEngineFillIJRFillParameter> parameter = (id<OrgOssPdfreporterEngineFillIJRFillParameter>) cast_check([((id<JavaUtilMap>) nil_chk(parametersMap_)) getWithId:parameterName], OrgOssPdfreporterEngineFillIJRFillParameter_class_());
  if (parameter == nil) {
    @throw new_OrgOssPdfreporterEngineJRRuntimeException_initWithNSString_(JreStrcat("$$$", @"Parameter \"", parameterName, @"\" does not exist."));
  }
  return parameter;
}

- (void)checkParameterWithNSString:(NSString *)parameterName {
  if (![((id<JavaUtilMap>) nil_chk(parametersMap_)) containsKeyWithId:parameterName]) {
    @throw new_OrgOssPdfreporterEngineJRRuntimeException_initWithNSString_(JreStrcat("$$$", @"Parameter \"", parameterName, @"\" does not exist."));
  }
}

- (id<OrgOssPdfreporterEngineJRValueParameter>)getValueParameterWithNSString:(NSString *)parameterName
                                                                 withBoolean:(jboolean)ignoreMissing {
  id<OrgOssPdfreporterEngineJRValueParameter> parameter = [((id<JavaUtilMap>) nil_chk(parametersMap_)) getWithId:parameterName];
  if (parameter == nil && !ignoreMissing) {
    @throw new_OrgOssPdfreporterEngineJRRuntimeException_initWithNSString_(JreStrcat("$$$", @"Parameter \"", parameterName, @"\" does not exist."));
  }
  return parameter;
}

- (id<OrgOssPdfreporterEngineJRValueParameter>)getValueParameterWithNSString:(NSString *)parameterName {
  return [self getValueParameterWithNSString:parameterName withBoolean:false];
}

- (NSString *)getParameterReplacementWithNSString:(NSString *)parameterName {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgOssPdfreporterEngineJasperReportsContext:withOrgOssPdfreporterEngineJRDataset:withJavaUtilMap:", "JRAbstractQueryExecuter", NULL, 0x4, NULL, "(Lorg/oss/pdfreporter/engine/JasperReportsContext;Lorg/oss/pdfreporter/engine/JRDataset;Ljava/util/Map<Ljava/lang/String;+Lorg/oss/pdfreporter/engine/JRValueParameter;>;)V" },
    { "initWithOrgOssPdfreporterEngineJRDataset:withJavaUtilMap:", "JRAbstractQueryExecuter", NULL, 0x4, NULL, "(Lorg/oss/pdfreporter/engine/JRDataset;Ljava/util/Map<Ljava/lang/String;+Lorg/oss/pdfreporter/engine/JRValueParameter;>;)V" },
    { "getJasperReportsContext", NULL, "Lorg.oss.pdfreporter.engine.JasperReportsContext;", 0x4, NULL, NULL },
    { "getPropertiesUtil", NULL, "Lorg.oss.pdfreporter.engine.JRPropertiesUtil;", 0x4, NULL, NULL },
    { "registerClauseFunctionWithNSString:withOrgOssPdfreporterEngineQueryJRClauseFunction:", "registerClauseFunction", "V", 0x4, NULL, NULL },
    { "unregisterClauseFunctionWithNSString:", "unregisterClauseFunction", "V", 0x4, NULL, NULL },
    { "resolveFunctionWithNSString:", "resolveFunction", "Lorg.oss.pdfreporter.engine.query.JRClauseFunction;", 0x4, NULL, NULL },
    { "findExtensionQueryFunctionWithNSString:", "findExtensionQueryFunction", "Lorg.oss.pdfreporter.engine.query.JRClauseFunction;", 0x4, NULL, NULL },
    { "getCanonicalQueryLanguage", NULL, "Ljava.lang.String;", 0x4, NULL, NULL },
    { "parseQuery", NULL, "V", 0x4, NULL, NULL },
    { "appendQueryChunkWithJavaLangStringBuffer:withOrgOssPdfreporterEngineJRQueryChunk:", "appendQueryChunk", "V", 0x4, NULL, NULL },
    { "appendTextChunkWithJavaLangStringBuffer:withNSString:", "appendTextChunk", "V", 0x4, NULL, NULL },
    { "appendParameterChunkWithJavaLangStringBuffer:withNSString:", "appendParameterChunk", "V", 0x4, NULL, NULL },
    { "addQueryParameterWithNSString:", "addQueryParameter", "V", 0x4, NULL, NULL },
    { "addQueryMultiParametersWithNSString:withInt:", "addQueryMultiParameters", "V", 0x4, NULL, NULL },
    { "addQueryMultiParametersWithNSString:withInt:withBoolean:", "addQueryMultiParameters", "V", 0x4, NULL, NULL },
    { "addQueryParameterWithIOSClass:withId:", "addQueryParameter", "V", 0x4, NULL, "(Ljava/lang/Class<*>;Ljava/lang/Object;)V" },
    { "appendParameterClauseChunkWithJavaLangStringBuffer:withNSString:", "appendParameterClauseChunk", "V", 0x4, NULL, NULL },
    { "appendClauseChunkWithJavaLangStringBuffer:withNSStringArray:", "appendClauseChunk", "V", 0x4, NULL, NULL },
    { "applyClauseWithOrgOssPdfreporterEngineQueryJRClauseFunction:withOrgOssPdfreporterEngineQueryJRClauseTokens:withJavaLangStringBuffer:", "applyClause", "V", 0x4, NULL, NULL },
    { "getQueryString", NULL, "Ljava.lang.String;", 0x4, NULL, NULL },
    { "getCollectedParameterNames", NULL, "Ljava.util.List;", 0x4, NULL, "()Ljava/util/List<Ljava/lang/String;>;" },
    { "getCollectedParameters", NULL, "Ljava.util.List;", 0x4, NULL, "()Ljava/util/List<Lorg/oss/pdfreporter/engine/query/JRAbstractQueryExecuter$QueryParameter;>;" },
    { "visitQueryParametersWithOrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameterVisitor:", "visitQueryParameters", "V", 0x4, "Lorg.oss.pdfreporter.engine.query.JRAbstractQueryExecuter$VisitExceptionWrapper;", NULL },
    { "getParameterValueWithNSString:withBoolean:", "getParameterValue", "Ljava.lang.Object;", 0x4, NULL, NULL },
    { "getParameterValueWithNSString:", "getParameterValue", "Ljava.lang.Object;", 0x4, NULL, NULL },
    { "parameterHasValueWithNSString:", "parameterHasValue", "Z", 0x4, NULL, NULL },
    { "getStringParameterWithNSString:withNSString:", "getStringParameter", "Ljava.lang.String;", 0x4, NULL, NULL },
    { "getStringParameterOrPropertyWithNSString:", "getStringParameterOrProperty", "Ljava.lang.String;", 0x4, NULL, NULL },
    { "getBooleanParameterWithNSString:withNSString:withBoolean:", "getBooleanParameter", "Z", 0x4, NULL, NULL },
    { "getBooleanParameterOrPropertyWithNSString:withBoolean:", "getBooleanParameterOrProperty", "Z", 0x4, NULL, NULL },
    { "getParameterWithNSString:", "getParameter", "Lorg.oss.pdfreporter.engine.fill.IJRFillParameter;", 0x4, NULL, NULL },
    { "checkParameterWithNSString:", "checkParameter", "V", 0x4, NULL, NULL },
    { "getValueParameterWithNSString:withBoolean:", "getValueParameter", "Lorg.oss.pdfreporter.engine.JRValueParameter;", 0x4, NULL, NULL },
    { "getValueParameterWithNSString:", "getValueParameter", "Lorg.oss.pdfreporter.engine.JRValueParameter;", 0x4, NULL, NULL },
    { "getParameterReplacementWithNSString:", "getParameterReplacement", "Ljava.lang.String;", 0x404, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "CLAUSE_POSITION_ID", "CLAUSE_POSITION_ID", 0x1c, "I", NULL, NULL, .constantValue.asInt = OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_CLAUSE_POSITION_ID },
    { "clauseFunctions_", NULL, 0x14, "Ljava.util.Map;", NULL, "Ljava/util/Map<Ljava/lang/String;Lorg/oss/pdfreporter/engine/query/JRClauseFunction;>;", .constantValue.asLong = 0 },
    { "jasperReportsContext_", NULL, 0x12, "Lorg.oss.pdfreporter.engine.JasperReportsContext;", NULL, NULL, .constantValue.asLong = 0 },
    { "propertiesUtil_", NULL, 0x12, "Lorg.oss.pdfreporter.engine.JRPropertiesUtil;", NULL, NULL, .constantValue.asLong = 0 },
    { "dataset_", NULL, 0x14, "Lorg.oss.pdfreporter.engine.JRDataset;", NULL, NULL, .constantValue.asLong = 0 },
    { "parametersMap_", NULL, 0x12, "Ljava.util.Map;", NULL, "Ljava/util/Map<Ljava/lang/String;+Lorg/oss/pdfreporter/engine/JRValueParameter;>;", .constantValue.asLong = 0 },
    { "queryString_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "queryParameters_", NULL, 0x2, "Ljava.util.List;", NULL, "Ljava/util/List<Lorg/oss/pdfreporter/engine/query/JRAbstractQueryExecuter$QueryParameterEntry;>;", .constantValue.asLong = 0 },
    { "parameterClauseStack_", NULL, 0x2, "Ljava.util.Set;", NULL, "Ljava/util/Set<Ljava/lang/String;>;", .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lorg.oss.pdfreporter.engine.query.JRAbstractQueryExecuter$VisitExceptionWrapper;", "Lorg.oss.pdfreporter.engine.query.JRAbstractQueryExecuter$QueryParameterVisitor;", "Lorg.oss.pdfreporter.engine.query.JRAbstractQueryExecuter$QueryParameterEntry;", "Lorg.oss.pdfreporter.engine.query.JRAbstractQueryExecuter$QueryParameter;", "Lorg.oss.pdfreporter.engine.query.JRAbstractQueryExecuter$ValuedQueryParameter;"};
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter = { 2, "JRAbstractQueryExecuter", "org.oss.pdfreporter.engine.query", NULL, 0x401, 36, methods, 9, fields, 0, NULL, 5, inner_classes, NULL, NULL };
  return &_OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter;
}

@end

void OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_initWithOrgOssPdfreporterEngineJasperReportsContext_withOrgOssPdfreporterEngineJRDataset_withJavaUtilMap_(OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter *self, id<OrgOssPdfreporterEngineJasperReportsContext> jasperReportsContext, id<OrgOssPdfreporterEngineJRDataset> dataset, id<JavaUtilMap> parametersMap) {
  NSObject_init(self);
  self->clauseFunctions_ = new_JavaUtilHashMap_init();
  self->jasperReportsContext_ = jasperReportsContext;
  self->propertiesUtil_ = OrgOssPdfreporterEngineJRPropertiesUtil_getInstanceWithOrgOssPdfreporterEngineJasperReportsContext_(jasperReportsContext);
  self->dataset_ = dataset;
  self->parametersMap_ = parametersMap;
  self->queryString_ = @"";
  self->queryParameters_ = new_JavaUtilArrayList_init();
}

void OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_initWithOrgOssPdfreporterEngineJRDataset_withJavaUtilMap_(OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter *self, id<OrgOssPdfreporterEngineJRDataset> dataset, id<JavaUtilMap> parametersMap) {
  OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_initWithOrgOssPdfreporterEngineJasperReportsContext_withOrgOssPdfreporterEngineJRDataset_withJavaUtilMap_(self, OrgOssPdfreporterEngineDefaultJasperReportsContext_getInstance(), dataset, parametersMap);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter)

@implementation OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_VisitExceptionWrapper

- (instancetype)initWithOrgOssPdfreporterEngineQueryJRAbstractQueryExecuter:(OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter *)outer$
                                                      withJavaLangException:(JavaLangException *)cause {
  OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_VisitExceptionWrapper_initWithOrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_withJavaLangException_(self, outer$, cause);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgOssPdfreporterEngineQueryJRAbstractQueryExecuter:withJavaLangException:", "VisitExceptionWrapper", NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "serialVersionUID", 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_VisitExceptionWrapper_serialVersionUID },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_VisitExceptionWrapper = { 2, "VisitExceptionWrapper", "org.oss.pdfreporter.engine.query", "JRAbstractQueryExecuter", 0x4, 1, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_VisitExceptionWrapper;
}

@end

void OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_VisitExceptionWrapper_initWithOrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_withJavaLangException_(OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_VisitExceptionWrapper *self, OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter *outer$, JavaLangException *cause) {
  JavaLangRuntimeException_initWithNSException_(self, cause);
}

OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_VisitExceptionWrapper *new_OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_VisitExceptionWrapper_initWithOrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_withJavaLangException_(OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter *outer$, JavaLangException *cause) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_VisitExceptionWrapper, initWithOrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_withJavaLangException_, outer$, cause)
}

OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_VisitExceptionWrapper *create_OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_VisitExceptionWrapper_initWithOrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_withJavaLangException_(OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter *outer$, JavaLangException *cause) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_VisitExceptionWrapper, initWithOrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_withJavaLangException_, outer$, cause)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_VisitExceptionWrapper)

@implementation OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameterVisitor

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "visitWithOrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameter:", "visit", "V", 0x401, "Lorg.oss.pdfreporter.engine.query.JRAbstractQueryExecuter$VisitExceptionWrapper;", NULL },
    { "visitWithOrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_ValuedQueryParameter:", "visit", "V", 0x401, "Lorg.oss.pdfreporter.engine.query.JRAbstractQueryExecuter$VisitExceptionWrapper;", NULL },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameterVisitor = { 2, "QueryParameterVisitor", "org.oss.pdfreporter.engine.query", "JRAbstractQueryExecuter", 0x60c, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameterVisitor;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameterVisitor)

@implementation OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameterEntry

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "acceptWithOrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameterVisitor:", "accept", "V", 0x401, "Lorg.oss.pdfreporter.engine.query.JRAbstractQueryExecuter$VisitExceptionWrapper;", NULL },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameterEntry = { 2, "QueryParameterEntry", "org.oss.pdfreporter.engine.query", "JRAbstractQueryExecuter", 0x60c, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameterEntry;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameterEntry)

@implementation OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameter

+ (jint)COUNT_SINGLE {
  return OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameter_COUNT_SINGLE;
}

- (instancetype)initWithNSString:(NSString *)name {
  OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameter_initWithNSString_(self, name);
  return self;
}

- (instancetype)initWithNSString:(NSString *)name
                         withInt:(jint)count {
  OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameter_initWithNSString_withInt_(self, name, count);
  return self;
}

- (instancetype)initWithNSString:(NSString *)name
                         withInt:(jint)count
                     withBoolean:(jboolean)ignoreNulls {
  OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameter_initWithNSString_withInt_withBoolean_(self, name, count, ignoreNulls);
  return self;
}

- (jboolean)isMulti {
  return count_ != OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameter_COUNT_SINGLE;
}

- (jint)getCount {
  return count_;
}

- (NSString *)getName {
  return name_;
}

- (jboolean)isIgnoreNulls {
  return ignoreNulls_;
}

- (void)acceptWithOrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameterVisitor:(id<OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameterVisitor>)visitor {
  [((id<OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameterVisitor>) nil_chk(visitor)) visitWithOrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameter:self];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:", "QueryParameter", NULL, 0x1, NULL, NULL },
    { "initWithNSString:withInt:", "QueryParameter", NULL, 0x1, NULL, NULL },
    { "initWithNSString:withInt:withBoolean:", "QueryParameter", NULL, 0x1, NULL, NULL },
    { "isMulti", NULL, "Z", 0x1, NULL, NULL },
    { "getCount", NULL, "I", 0x1, NULL, NULL },
    { "getName", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "isIgnoreNulls", NULL, "Z", 0x1, NULL, NULL },
    { "acceptWithOrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameterVisitor:", "accept", "V", 0x1, "Lorg.oss.pdfreporter.engine.query.JRAbstractQueryExecuter$VisitExceptionWrapper;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "COUNT_SINGLE", "COUNT_SINGLE", 0x1c, "I", NULL, NULL, .constantValue.asInt = OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameter_COUNT_SINGLE },
    { "name_", NULL, 0x12, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "count_", NULL, 0x12, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "ignoreNulls_", NULL, 0x12, "Z", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameter = { 2, "QueryParameter", "org.oss.pdfreporter.engine.query", "JRAbstractQueryExecuter", 0xc, 8, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameter;
}

@end

void OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameter_initWithNSString_(OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameter *self, NSString *name) {
  OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameter_initWithNSString_withInt_withBoolean_(self, name, OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameter_COUNT_SINGLE, false);
}

OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameter *new_OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameter_initWithNSString_(NSString *name) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameter, initWithNSString_, name)
}

OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameter *create_OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameter_initWithNSString_(NSString *name) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameter, initWithNSString_, name)
}

void OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameter_initWithNSString_withInt_(OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameter *self, NSString *name, jint count) {
  OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameter_initWithNSString_withInt_withBoolean_(self, name, count, false);
}

OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameter *new_OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameter_initWithNSString_withInt_(NSString *name, jint count) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameter, initWithNSString_withInt_, name, count)
}

OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameter *create_OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameter_initWithNSString_withInt_(NSString *name, jint count) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameter, initWithNSString_withInt_, name, count)
}

void OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameter_initWithNSString_withInt_withBoolean_(OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameter *self, NSString *name, jint count, jboolean ignoreNulls) {
  NSObject_init(self);
  self->name_ = name;
  self->count_ = count;
  self->ignoreNulls_ = ignoreNulls;
}

OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameter *new_OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameter_initWithNSString_withInt_withBoolean_(NSString *name, jint count, jboolean ignoreNulls) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameter, initWithNSString_withInt_withBoolean_, name, count, ignoreNulls)
}

OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameter *create_OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameter_initWithNSString_withInt_withBoolean_(NSString *name, jint count, jboolean ignoreNulls) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameter, initWithNSString_withInt_withBoolean_, name, count, ignoreNulls)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameter)

@implementation OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_ValuedQueryParameter

- (instancetype)initWithIOSClass:(IOSClass *)type
                          withId:(id)value {
  OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_ValuedQueryParameter_initWithIOSClass_withId_(self, type, value);
  return self;
}

- (void)acceptWithOrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameterVisitor:(id<OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameterVisitor>)visitor {
  [((id<OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameterVisitor>) nil_chk(visitor)) visitWithOrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_ValuedQueryParameter:self];
}

- (IOSClass *)getType {
  return type_;
}

- (id)getValue {
  return value_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithIOSClass:withId:", "ValuedQueryParameter", NULL, 0x1, NULL, "(Ljava/lang/Class<*>;Ljava/lang/Object;)V" },
    { "acceptWithOrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_QueryParameterVisitor:", "accept", "V", 0x1, "Lorg.oss.pdfreporter.engine.query.JRAbstractQueryExecuter$VisitExceptionWrapper;", NULL },
    { "getType", NULL, "Ljava.lang.Class;", 0x1, NULL, "()Ljava/lang/Class<*>;" },
    { "getValue", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "type_", NULL, 0x12, "Ljava.lang.Class;", NULL, "Ljava/lang/Class<*>;", .constantValue.asLong = 0 },
    { "value_", NULL, 0x12, "Ljava.lang.Object;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_ValuedQueryParameter = { 2, "ValuedQueryParameter", "org.oss.pdfreporter.engine.query", "JRAbstractQueryExecuter", 0xc, 4, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_ValuedQueryParameter;
}

@end

void OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_ValuedQueryParameter_initWithIOSClass_withId_(OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_ValuedQueryParameter *self, IOSClass *type, id value) {
  NSObject_init(self);
  self->type_ = type;
  self->value_ = value;
}

OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_ValuedQueryParameter *new_OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_ValuedQueryParameter_initWithIOSClass_withId_(IOSClass *type, id value) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_ValuedQueryParameter, initWithIOSClass_withId_, type, value)
}

OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_ValuedQueryParameter *create_OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_ValuedQueryParameter_initWithIOSClass_withId_(IOSClass *type, id value) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_ValuedQueryParameter, initWithIOSClass_withId_, type, value)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_ValuedQueryParameter)

@implementation OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_$1

- (void)handleParameterChunkWithNSString:(NSString *)text {
  [this$0_ appendParameterChunkWithJavaLangStringBuffer:val$sbuffer_ withNSString:text];
}

- (void)handleParameterClauseChunkWithNSString:(NSString *)text {
  [this$0_ appendParameterClauseChunkWithJavaLangStringBuffer:val$sbuffer_ withNSString:text];
}

- (void)handleTextChunkWithNSString:(NSString *)text {
  [this$0_ appendTextChunkWithJavaLangStringBuffer:val$sbuffer_ withNSString:text];
}

- (void)handleClauseChunkWithNSStringArray:(IOSObjectArray *)tokens {
  [this$0_ appendClauseChunkWithJavaLangStringBuffer:val$sbuffer_ withNSStringArray:tokens];
}

- (instancetype)initWithOrgOssPdfreporterEngineQueryJRAbstractQueryExecuter:(OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter *)outer$
                                                   withJavaLangStringBuffer:(JavaLangStringBuffer *)capture$0 {
  OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_$1_initWithOrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_withJavaLangStringBuffer_(self, outer$, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleParameterChunkWithNSString:", "handleParameterChunk", "V", 0x1, NULL, NULL },
    { "handleParameterClauseChunkWithNSString:", "handleParameterClauseChunk", "V", 0x1, NULL, NULL },
    { "handleTextChunkWithNSString:", "handleTextChunk", "V", 0x1, NULL, NULL },
    { "handleClauseChunkWithNSStringArray:", "handleClauseChunk", "V", 0x1, NULL, NULL },
    { "initWithOrgOssPdfreporterEngineQueryJRAbstractQueryExecuter:withJavaLangStringBuffer:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.oss.pdfreporter.engine.query.JRAbstractQueryExecuter;", NULL, NULL, .constantValue.asLong = 0 },
    { "val$sbuffer_", NULL, 0x1012, "Ljava.lang.StringBuffer;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter", "appendParameterClauseChunkWithJavaLangStringBuffer:withNSString:" };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_$1 = { 2, "", "org.oss.pdfreporter.engine.query", "JRAbstractQueryExecuter", 0x8008, 5, methods, 2, fields, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_$1;
}

@end

void OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_$1_initWithOrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_withJavaLangStringBuffer_(OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_$1 *self, OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter *outer$, JavaLangStringBuffer *capture$0) {
  self->this$0_ = outer$;
  self->val$sbuffer_ = capture$0;
  NSObject_init(self);
}

OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_$1 *new_OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_$1_initWithOrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_withJavaLangStringBuffer_(OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter *outer$, JavaLangStringBuffer *capture$0) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_$1, initWithOrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_withJavaLangStringBuffer_, outer$, capture$0)
}

OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_$1 *create_OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_$1_initWithOrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_withJavaLangStringBuffer_(OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter *outer$, JavaLangStringBuffer *capture$0) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_$1, initWithOrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_withJavaLangStringBuffer_, outer$, capture$0)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_$1)

@implementation OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_$2

- (void)addQueryMultiParametersWithNSString:(NSString *)parameterName
                                    withInt:(jint)count {
  [self addQueryMultiParametersWithNSString:parameterName withInt:count withBoolean:false];
}

- (void)addQueryMultiParametersWithNSString:(NSString *)parameterName
                                    withInt:(jint)count
                                withBoolean:(jboolean)ignoreNulls {
  [this$0_ addQueryMultiParametersWithNSString:parameterName withInt:count withBoolean:ignoreNulls];
}

- (void)addQueryParameterWithNSString:(NSString *)parameterName {
  [this$0_ addQueryParameterWithNSString:parameterName];
}

- (void)addQueryParameterWithIOSClass:(IOSClass *)type
                               withId:(id)value {
  [this$0_ addQueryParameterWithIOSClass:type withId:value];
}

- (id<OrgOssPdfreporterEngineJRValueParameter>)getValueParameterWithNSString:(NSString *)parameterName {
  return [this$0_ getValueParameterWithNSString:parameterName];
}

- (JavaLangStringBuffer *)queryBuffer {
  return val$sbuffer_;
}

- (id<OrgOssPdfreporterEngineJasperReportsContext>)getJasperReportsContext {
  return this$0_->jasperReportsContext_;
}

- (NSString *)getCanonicalQueryLanguage {
  return [this$0_ getCanonicalQueryLanguage];
}

- (instancetype)initWithOrgOssPdfreporterEngineQueryJRAbstractQueryExecuter:(OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter *)outer$
                                                   withJavaLangStringBuffer:(JavaLangStringBuffer *)capture$0 {
  OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_$2_initWithOrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_withJavaLangStringBuffer_(self, outer$, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "addQueryMultiParametersWithNSString:withInt:", "addQueryMultiParameters", "V", 0x1, NULL, NULL },
    { "addQueryMultiParametersWithNSString:withInt:withBoolean:", "addQueryMultiParameters", "V", 0x1, NULL, NULL },
    { "addQueryParameterWithNSString:", "addQueryParameter", "V", 0x1, NULL, NULL },
    { "addQueryParameterWithIOSClass:withId:", "addQueryParameter", "V", 0x1, NULL, "(Ljava/lang/Class<*>;Ljava/lang/Object;)V" },
    { "getValueParameterWithNSString:", "getValueParameter", "Lorg.oss.pdfreporter.engine.JRValueParameter;", 0x1, NULL, NULL },
    { "queryBuffer", NULL, "Ljava.lang.StringBuffer;", 0x1, NULL, NULL },
    { "getJasperReportsContext", NULL, "Lorg.oss.pdfreporter.engine.JasperReportsContext;", 0x1, NULL, NULL },
    { "getCanonicalQueryLanguage", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "initWithOrgOssPdfreporterEngineQueryJRAbstractQueryExecuter:withJavaLangStringBuffer:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.oss.pdfreporter.engine.query.JRAbstractQueryExecuter;", NULL, NULL, .constantValue.asLong = 0 },
    { "val$sbuffer_", NULL, 0x1012, "Ljava.lang.StringBuffer;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter", "applyClauseWithOrgOssPdfreporterEngineQueryJRClauseFunction:withOrgOssPdfreporterEngineQueryJRClauseTokens:withJavaLangStringBuffer:" };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_$2 = { 2, "", "org.oss.pdfreporter.engine.query", "JRAbstractQueryExecuter", 0x8008, 9, methods, 2, fields, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_$2;
}

@end

void OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_$2_initWithOrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_withJavaLangStringBuffer_(OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_$2 *self, OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter *outer$, JavaLangStringBuffer *capture$0) {
  self->this$0_ = outer$;
  self->val$sbuffer_ = capture$0;
  NSObject_init(self);
}

OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_$2 *new_OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_$2_initWithOrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_withJavaLangStringBuffer_(OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter *outer$, JavaLangStringBuffer *capture$0) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_$2, initWithOrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_withJavaLangStringBuffer_, outer$, capture$0)
}

OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_$2 *create_OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_$2_initWithOrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_withJavaLangStringBuffer_(OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter *outer$, JavaLangStringBuffer *capture$0) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_$2, initWithOrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_withJavaLangStringBuffer_, outer$, capture$0)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_$2)
