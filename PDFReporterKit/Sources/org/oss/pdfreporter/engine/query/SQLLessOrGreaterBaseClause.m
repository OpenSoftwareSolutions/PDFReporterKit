//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/query/SQLLessOrGreaterBaseClause.java
//

#include "J2ObjC_source.h"
#include "java/lang/StringBuffer.h"
#include "org/oss/pdfreporter/engine/JRRuntimeException.h"
#include "org/oss/pdfreporter/engine/query/ClauseFunctionParameterHandler.h"
#include "org/oss/pdfreporter/engine/query/JRClauseTokens.h"
#include "org/oss/pdfreporter/engine/query/JRJdbcQueryExecuter.h"
#include "org/oss/pdfreporter/engine/query/JRQueryClauseContext.h"
#include "org/oss/pdfreporter/engine/query/SQLLessOrGreaterBaseClause.h"

NSString *OrgOssPdfreporterEngineQuerySQLLessOrGreaterBaseClause_OPERATOR_LESS = @"<";
NSString *OrgOssPdfreporterEngineQuerySQLLessOrGreaterBaseClause_OPERATOR_LESS_OR_EQUAL = @"<=";
NSString *OrgOssPdfreporterEngineQuerySQLLessOrGreaterBaseClause_OPERATOR_GREATER = @">";
NSString *OrgOssPdfreporterEngineQuerySQLLessOrGreaterBaseClause_OPERATOR_GREATER_OR_EQUAL = @">=";
NSString *OrgOssPdfreporterEngineQuerySQLLessOrGreaterBaseClause_CLAUSE_TRUISM = @"0 = 0";

@implementation OrgOssPdfreporterEngineQuerySQLLessOrGreaterBaseClause

+ (jint)POSITION_CLAUSE_ID {
  return OrgOssPdfreporterEngineQuerySQLLessOrGreaterBaseClause_POSITION_CLAUSE_ID;
}

+ (jint)POSITION_DB_COLUMN {
  return OrgOssPdfreporterEngineQuerySQLLessOrGreaterBaseClause_POSITION_DB_COLUMN;
}

+ (jint)POSITION_PARAMETER {
  return OrgOssPdfreporterEngineQuerySQLLessOrGreaterBaseClause_POSITION_PARAMETER;
}

+ (NSString *)OPERATOR_LESS {
  return OrgOssPdfreporterEngineQuerySQLLessOrGreaterBaseClause_OPERATOR_LESS;
}

+ (NSString *)OPERATOR_LESS_OR_EQUAL {
  return OrgOssPdfreporterEngineQuerySQLLessOrGreaterBaseClause_OPERATOR_LESS_OR_EQUAL;
}

+ (NSString *)OPERATOR_GREATER {
  return OrgOssPdfreporterEngineQuerySQLLessOrGreaterBaseClause_OPERATOR_GREATER;
}

+ (NSString *)OPERATOR_GREATER_OR_EQUAL {
  return OrgOssPdfreporterEngineQuerySQLLessOrGreaterBaseClause_OPERATOR_GREATER_OR_EQUAL;
}

+ (NSString *)CLAUSE_TRUISM {
  return OrgOssPdfreporterEngineQuerySQLLessOrGreaterBaseClause_CLAUSE_TRUISM;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterEngineQuerySQLLessOrGreaterBaseClause_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)applyWithOrgOssPdfreporterEngineQueryJRClauseTokens:(OrgOssPdfreporterEngineQueryJRClauseTokens *)clauseTokens
       withOrgOssPdfreporterEngineQueryJRQueryClauseContext:(id<OrgOssPdfreporterEngineQueryJRQueryClauseContext>)queryContext {
  NSString *clauseId = [((OrgOssPdfreporterEngineQueryJRClauseTokens *) nil_chk(clauseTokens)) getTokenWithInt:OrgOssPdfreporterEngineQuerySQLLessOrGreaterBaseClause_POSITION_CLAUSE_ID];
  NSString *col = [clauseTokens getTokenWithInt:OrgOssPdfreporterEngineQuerySQLLessOrGreaterBaseClause_POSITION_DB_COLUMN];
  NSString *param = [clauseTokens getTokenWithInt:OrgOssPdfreporterEngineQuerySQLLessOrGreaterBaseClause_POSITION_PARAMETER];
  if (clauseId == nil) {
    @throw new_OrgOssPdfreporterEngineJRRuntimeException_initWithNSString_(@"Missing clause name token");
  }
  if (col == nil) {
    @throw new_OrgOssPdfreporterEngineJRRuntimeException_initWithNSString_(@"SQL LESS/GREATER clause missing DB column token");
  }
  if (param == nil) {
    @throw new_OrgOssPdfreporterEngineJRRuntimeException_initWithNSString_(@"SQL LESS/GREATER clause missing parameter token");
  }
  id<OrgOssPdfreporterEngineQueryClauseFunctionParameterHandler> paramHandler = [self createParameterHandlerWithOrgOssPdfreporterEngineQueryJRQueryClauseContext:queryContext withNSString:clauseId withNSString:param];
  JavaLangStringBuffer *sbuffer = [((id<OrgOssPdfreporterEngineQueryJRQueryClauseContext>) nil_chk(queryContext)) queryBuffer];
  if (![((id<OrgOssPdfreporterEngineQueryClauseFunctionParameterHandler>) nil_chk(paramHandler)) hasValue]) {
    (void) [((JavaLangStringBuffer *) nil_chk(sbuffer)) appendWithNSString:OrgOssPdfreporterEngineQuerySQLLessOrGreaterBaseClause_CLAUSE_TRUISM];
    return;
  }
  (void) [((JavaLangStringBuffer *) nil_chk(sbuffer)) appendWithNSString:col];
  (void) [sbuffer appendWithChar:' '];
  [self handleLessOrGreaterOperatorWithJavaLangStringBuffer:sbuffer withNSString:clauseId];
  (void) [sbuffer appendWithChar:' '];
  (void) [sbuffer appendWithChar:'?'];
  [paramHandler addQueryParameter];
}

- (id<OrgOssPdfreporterEngineQueryClauseFunctionParameterHandler>)createParameterHandlerWithOrgOssPdfreporterEngineQueryJRQueryClauseContext:(id<OrgOssPdfreporterEngineQueryJRQueryClauseContext>)queryContext
                                                                                                                                withNSString:(NSString *)clauseId
                                                                                                                                withNSString:(NSString *)parameterName {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)handleLessOrGreaterOperatorWithJavaLangStringBuffer:(JavaLangStringBuffer *)sBuffer
                                               withNSString:(NSString *)clauseId {
  if ([((NSString *) nil_chk(OrgOssPdfreporterEngineQueryJRJdbcQueryExecuter_CLAUSE_ID_LESS)) isEqual:clauseId]) {
    (void) [((JavaLangStringBuffer *) nil_chk(sBuffer)) appendWithNSString:OrgOssPdfreporterEngineQuerySQLLessOrGreaterBaseClause_OPERATOR_LESS];
  }
  else if ([((NSString *) nil_chk(OrgOssPdfreporterEngineQueryJRJdbcQueryExecuter_CLAUSE_ID_LESS_OR_EQUAL)) isEqual:clauseId]) {
    (void) [((JavaLangStringBuffer *) nil_chk(sBuffer)) appendWithNSString:OrgOssPdfreporterEngineQuerySQLLessOrGreaterBaseClause_OPERATOR_LESS_OR_EQUAL];
  }
  else if ([((NSString *) nil_chk(OrgOssPdfreporterEngineQueryJRJdbcQueryExecuter_CLAUSE_ID_GREATER)) isEqual:clauseId]) {
    (void) [((JavaLangStringBuffer *) nil_chk(sBuffer)) appendWithNSString:OrgOssPdfreporterEngineQuerySQLLessOrGreaterBaseClause_OPERATOR_GREATER];
  }
  else if ([((NSString *) nil_chk(OrgOssPdfreporterEngineQueryJRJdbcQueryExecuter_CLAUSE_ID_GREATER_OR_EQUAL)) isEqual:clauseId]) {
    (void) [((JavaLangStringBuffer *) nil_chk(sBuffer)) appendWithNSString:OrgOssPdfreporterEngineQuerySQLLessOrGreaterBaseClause_OPERATOR_GREATER_OR_EQUAL];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "SQLLessOrGreaterBaseClause", NULL, 0x4, NULL, NULL },
    { "applyWithOrgOssPdfreporterEngineQueryJRClauseTokens:withOrgOssPdfreporterEngineQueryJRQueryClauseContext:", "apply", "V", 0x1, NULL, NULL },
    { "createParameterHandlerWithOrgOssPdfreporterEngineQueryJRQueryClauseContext:withNSString:withNSString:", "createParameterHandler", "Lorg.oss.pdfreporter.engine.query.ClauseFunctionParameterHandler;", 0x404, NULL, NULL },
    { "handleLessOrGreaterOperatorWithJavaLangStringBuffer:withNSString:", "handleLessOrGreaterOperator", "V", 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "POSITION_CLAUSE_ID", "POSITION_CLAUSE_ID", 0x1c, "I", NULL, NULL, .constantValue.asInt = OrgOssPdfreporterEngineQuerySQLLessOrGreaterBaseClause_POSITION_CLAUSE_ID },
    { "POSITION_DB_COLUMN", "POSITION_DB_COLUMN", 0x1c, "I", NULL, NULL, .constantValue.asInt = OrgOssPdfreporterEngineQuerySQLLessOrGreaterBaseClause_POSITION_DB_COLUMN },
    { "POSITION_PARAMETER", "POSITION_PARAMETER", 0x1c, "I", NULL, NULL, .constantValue.asInt = OrgOssPdfreporterEngineQuerySQLLessOrGreaterBaseClause_POSITION_PARAMETER },
    { "OPERATOR_LESS", "OPERATOR_LESS", 0x1c, "Ljava.lang.String;", &OrgOssPdfreporterEngineQuerySQLLessOrGreaterBaseClause_OPERATOR_LESS, NULL, .constantValue.asLong = 0 },
    { "OPERATOR_LESS_OR_EQUAL", "OPERATOR_LESS_OR_EQUAL", 0x1c, "Ljava.lang.String;", &OrgOssPdfreporterEngineQuerySQLLessOrGreaterBaseClause_OPERATOR_LESS_OR_EQUAL, NULL, .constantValue.asLong = 0 },
    { "OPERATOR_GREATER", "OPERATOR_GREATER", 0x1c, "Ljava.lang.String;", &OrgOssPdfreporterEngineQuerySQLLessOrGreaterBaseClause_OPERATOR_GREATER, NULL, .constantValue.asLong = 0 },
    { "OPERATOR_GREATER_OR_EQUAL", "OPERATOR_GREATER_OR_EQUAL", 0x1c, "Ljava.lang.String;", &OrgOssPdfreporterEngineQuerySQLLessOrGreaterBaseClause_OPERATOR_GREATER_OR_EQUAL, NULL, .constantValue.asLong = 0 },
    { "CLAUSE_TRUISM", "CLAUSE_TRUISM", 0x1c, "Ljava.lang.String;", &OrgOssPdfreporterEngineQuerySQLLessOrGreaterBaseClause_CLAUSE_TRUISM, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineQuerySQLLessOrGreaterBaseClause = { 2, "SQLLessOrGreaterBaseClause", "org.oss.pdfreporter.engine.query", NULL, 0x401, 4, methods, 8, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineQuerySQLLessOrGreaterBaseClause;
}

@end

void OrgOssPdfreporterEngineQuerySQLLessOrGreaterBaseClause_init(OrgOssPdfreporterEngineQuerySQLLessOrGreaterBaseClause *self) {
  NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineQuerySQLLessOrGreaterBaseClause)
