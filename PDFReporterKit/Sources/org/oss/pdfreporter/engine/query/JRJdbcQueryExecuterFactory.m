//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/query/JRJdbcQueryExecuterFactory.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/util/Arrays.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/logging/Logger.h"
#include "org/oss/pdfreporter/engine/JRDataset.h"
#include "org/oss/pdfreporter/engine/JRException.h"
#include "org/oss/pdfreporter/engine/JasperReportsContext.h"
#include "org/oss/pdfreporter/engine/query/AbstractQueryExecuterFactory.h"
#include "org/oss/pdfreporter/engine/query/JRJdbcQueryExecuter.h"
#include "org/oss/pdfreporter/engine/query/JRJdbcQueryExecuterFactory.h"
#include "org/oss/pdfreporter/engine/query/JRQueryExecuter.h"

inline JavaUtilLoggingLogger *OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory_get_logger();
static JavaUtilLoggingLogger *OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory_logger;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory, logger, JavaUtilLoggingLogger *)

inline IOSObjectArray *OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory_get_queryParameterClassNames();
static IOSObjectArray *OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory_queryParameterClassNames;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory, queryParameterClassNames, IOSObjectArray *)

J2OBJC_INITIALIZED_DEFN(OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory)

NSString *OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory_PROPERTY_JDBC_FETCH_SIZE = @"net.sf.jasperreports.jdbc.fetch.size";
NSString *OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory_PROPERTY_JDBC_RESULT_SET_TYPE = @"net.sf.jasperreports.jdbc.result.set.type";
NSString *OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory_PROPERTY_JDBC_CONCURRENCY = @"net.sf.jasperreports.jdbc.concurrency";
NSString *OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory_PROPERTY_JDBC_HOLDABILITY = @"net.sf.jasperreports.jdbc.holdability";
NSString *OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory_PROPERTY_JDBC_MAX_FIELD_SIZE = @"net.sf.jasperreports.jdbc.max.field.size";
NSString *OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory_PROPERTY_CACHED_ROWSET = @"net.sf.jasperreports.jdbc.cached.rowset";
NSString *OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory_PROPERTY_TIME_ZONE = @"net.sf.jasperreports.jdbc.time.zone";
NSString *OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory_QUERY_LANGUAGE_SQL = @"sql";

@implementation OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory

+ (NSString *)PROPERTY_JDBC_FETCH_SIZE {
  return OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory_PROPERTY_JDBC_FETCH_SIZE;
}

+ (NSString *)PROPERTY_JDBC_RESULT_SET_TYPE {
  return OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory_PROPERTY_JDBC_RESULT_SET_TYPE;
}

+ (NSString *)PROPERTY_JDBC_CONCURRENCY {
  return OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory_PROPERTY_JDBC_CONCURRENCY;
}

+ (NSString *)PROPERTY_JDBC_HOLDABILITY {
  return OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory_PROPERTY_JDBC_HOLDABILITY;
}

+ (NSString *)PROPERTY_JDBC_MAX_FIELD_SIZE {
  return OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory_PROPERTY_JDBC_MAX_FIELD_SIZE;
}

+ (NSString *)PROPERTY_CACHED_ROWSET {
  return OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory_PROPERTY_CACHED_ROWSET;
}

+ (NSString *)PROPERTY_TIME_ZONE {
  return OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory_PROPERTY_TIME_ZONE;
}

+ (NSString *)QUERY_LANGUAGE_SQL {
  return OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory_QUERY_LANGUAGE_SQL;
}

- (id<OrgOssPdfreporterEngineQueryJRQueryExecuter>)createQueryExecuterWithOrgOssPdfreporterEngineJasperReportsContext:(id<OrgOssPdfreporterEngineJasperReportsContext>)jasperReportsContext
                                                                                 withOrgOssPdfreporterEngineJRDataset:(id<OrgOssPdfreporterEngineJRDataset>)dataset
                                                                                                      withJavaUtilMap:(id<JavaUtilMap>)parameters {
  return new_OrgOssPdfreporterEngineQueryJRJdbcQueryExecuter_initWithOrgOssPdfreporterEngineJasperReportsContext_withOrgOssPdfreporterEngineJRDataset_withJavaUtilMap_(jasperReportsContext, dataset, parameters);
}

- (IOSObjectArray *)getBuiltinParameters {
  return nil;
}

- (jboolean)supportsQueryParameterTypeWithNSString:(NSString *)className_ {
  jboolean supported = JavaUtilArrays_binarySearchWithNSObjectArray_withId_(OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory_queryParameterClassNames, className_) >= 0;
  if (!supported) {
    [((JavaUtilLoggingLogger *) nil_chk(OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory_logger)) warningWithNSString:JreStrcat("$$$@", @"Parameter class '", className_, @"' not found in supported types: ", JavaUtilArrays_asListWithNSObjectArray_(OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory_queryParameterClassNames))];
  }
  return supported;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)initialize {
  if (self == [OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory class]) {
    OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory_logger = JavaUtilLoggingLogger_getLoggerWithNSString_([OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory_class_() getName]);
    {
      OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory_queryParameterClassNames = [IOSObjectArray newArrayWithObjects:(id[]){ @"java.lang.Object", @"java.lang.Boolean", @"java.lang.Byte", @"java.lang.Double", @"java.lang.Float", @"java.lang.Integer", @"java.lang.Long", @"java.lang.Short", @"java.math.BigDecimal", @"java.lang.String", @"java.util.Date", @"org.oss.pdfreporter.sql.IDateTime", @"org.oss.pdfreporter.sql.IDate", @"org.oss.pdfreporter.sql.ITimestamp", @"org.oss.pdfreporter.sql.ITime" } count:15 type:NSString_class_()];
      JavaUtilArrays_sortWithNSObjectArray_(OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory_queryParameterClassNames);
    }
    J2OBJC_SET_INITIALIZED(OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "createQueryExecuterWithOrgOssPdfreporterEngineJasperReportsContext:withOrgOssPdfreporterEngineJRDataset:withJavaUtilMap:", "createQueryExecuter", "Lorg.oss.pdfreporter.engine.query.JRQueryExecuter;", 0x1, "Lorg.oss.pdfreporter.engine.JRException;", "(Lorg/oss/pdfreporter/engine/JasperReportsContext;Lorg/oss/pdfreporter/engine/JRDataset;Ljava/util/Map<Ljava/lang/String;+Lorg/oss/pdfreporter/engine/JRValueParameter;>;)Lorg/oss/pdfreporter/engine/query/JRQueryExecuter;" },
    { "getBuiltinParameters", NULL, "[Ljava.lang.Object;", 0x1, NULL, NULL },
    { "supportsQueryParameterTypeWithNSString:", "supportsQueryParameterType", "Z", 0x1, NULL, NULL },
    { "init", "JRJdbcQueryExecuterFactory", NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "logger", "logger", 0x1a, "Ljava.util.logging.Logger;", &OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory_logger, NULL, .constantValue.asLong = 0 },
    { "PROPERTY_JDBC_FETCH_SIZE", "PROPERTY_JDBC_FETCH_SIZE", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory_PROPERTY_JDBC_FETCH_SIZE, NULL, .constantValue.asLong = 0 },
    { "PROPERTY_JDBC_RESULT_SET_TYPE", "PROPERTY_JDBC_RESULT_SET_TYPE", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory_PROPERTY_JDBC_RESULT_SET_TYPE, NULL, .constantValue.asLong = 0 },
    { "PROPERTY_JDBC_CONCURRENCY", "PROPERTY_JDBC_CONCURRENCY", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory_PROPERTY_JDBC_CONCURRENCY, NULL, .constantValue.asLong = 0 },
    { "PROPERTY_JDBC_HOLDABILITY", "PROPERTY_JDBC_HOLDABILITY", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory_PROPERTY_JDBC_HOLDABILITY, NULL, .constantValue.asLong = 0 },
    { "PROPERTY_JDBC_MAX_FIELD_SIZE", "PROPERTY_JDBC_MAX_FIELD_SIZE", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory_PROPERTY_JDBC_MAX_FIELD_SIZE, NULL, .constantValue.asLong = 0 },
    { "PROPERTY_CACHED_ROWSET", "PROPERTY_CACHED_ROWSET", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory_PROPERTY_CACHED_ROWSET, NULL, .constantValue.asLong = 0 },
    { "PROPERTY_TIME_ZONE", "PROPERTY_TIME_ZONE", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory_PROPERTY_TIME_ZONE, NULL, .constantValue.asLong = 0 },
    { "QUERY_LANGUAGE_SQL", "QUERY_LANGUAGE_SQL", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory_QUERY_LANGUAGE_SQL, NULL, .constantValue.asLong = 0 },
    { "queryParameterClassNames", "queryParameterClassNames", 0x1a, "[Ljava.lang.String;", &OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory_queryParameterClassNames, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory = { 2, "JRJdbcQueryExecuterFactory", "org.oss.pdfreporter.engine.query", NULL, 0x1, 4, methods, 10, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory;
}

@end

void OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory_init(OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory *self) {
  OrgOssPdfreporterEngineQueryAbstractQueryExecuterFactory_init(self);
}

OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory *new_OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory_init() {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory, init)
}

OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory *create_OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory_init() {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineQueryJRJdbcQueryExecuterFactory)
