//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/query/SQLBetweenBaseClause.java
//

#include "J2ObjC_source.h"
#include "java/lang/StringBuffer.h"
#include "org/oss/pdfreporter/engine/JRRuntimeException.h"
#include "org/oss/pdfreporter/engine/query/ClauseFunctionParameterHandler.h"
#include "org/oss/pdfreporter/engine/query/JRClauseTokens.h"
#include "org/oss/pdfreporter/engine/query/JRQueryClauseContext.h"
#include "org/oss/pdfreporter/engine/query/SQLBetweenBaseClause.h"

NSString *OrgOssPdfreporterEngineQuerySQLBetweenBaseClause_CLAUSE_TRUISM = @"0 = 0";

@implementation OrgOssPdfreporterEngineQuerySQLBetweenBaseClause

+ (jint)POSITION_CLAUSE_ID {
  return OrgOssPdfreporterEngineQuerySQLBetweenBaseClause_POSITION_CLAUSE_ID;
}

+ (jint)POSITION_DB_COLUMN {
  return OrgOssPdfreporterEngineQuerySQLBetweenBaseClause_POSITION_DB_COLUMN;
}

+ (jint)POSITION_LEFT_PARAMETER {
  return OrgOssPdfreporterEngineQuerySQLBetweenBaseClause_POSITION_LEFT_PARAMETER;
}

+ (jint)POSITION_RIGHT_PARAMETER {
  return OrgOssPdfreporterEngineQuerySQLBetweenBaseClause_POSITION_RIGHT_PARAMETER;
}

+ (NSString *)CLAUSE_TRUISM {
  return OrgOssPdfreporterEngineQuerySQLBetweenBaseClause_CLAUSE_TRUISM;
}

- (void)applyWithOrgOssPdfreporterEngineQueryJRClauseTokens:(OrgOssPdfreporterEngineQueryJRClauseTokens *)clauseTokens
       withOrgOssPdfreporterEngineQueryJRQueryClauseContext:(id<OrgOssPdfreporterEngineQueryJRQueryClauseContext>)queryContext {
  NSString *clauseId = [((OrgOssPdfreporterEngineQueryJRClauseTokens *) nil_chk(clauseTokens)) getTokenWithInt:OrgOssPdfreporterEngineQuerySQLBetweenBaseClause_POSITION_CLAUSE_ID];
  NSString *col = [clauseTokens getTokenWithInt:OrgOssPdfreporterEngineQuerySQLBetweenBaseClause_POSITION_DB_COLUMN];
  NSString *leftParam = [clauseTokens getTokenWithInt:OrgOssPdfreporterEngineQuerySQLBetweenBaseClause_POSITION_LEFT_PARAMETER];
  NSString *rightParam = [clauseTokens getTokenWithInt:OrgOssPdfreporterEngineQuerySQLBetweenBaseClause_POSITION_RIGHT_PARAMETER];
  if (clauseId == nil) {
    @throw new_OrgOssPdfreporterEngineJRRuntimeException_initWithNSString_(@"Missing clause name token");
  }
  if (col == nil) {
    @throw new_OrgOssPdfreporterEngineJRRuntimeException_initWithNSString_(@"SQL LESS/GREATER clause missing DB column token");
  }
  if (leftParam == nil) {
    @throw new_OrgOssPdfreporterEngineJRRuntimeException_initWithNSString_(@"SQL LESS/GREATER clause missing left parameter token");
  }
  if (rightParam == nil) {
    @throw new_OrgOssPdfreporterEngineJRRuntimeException_initWithNSString_(@"SQL LESS/GREATER clause missing right parameter token");
  }
  id<OrgOssPdfreporterEngineQueryClauseFunctionParameterHandler> leftParamHandler = [self createParameterHandlerWithOrgOssPdfreporterEngineQueryJRQueryClauseContext:queryContext withNSString:clauseId withNSString:leftParam withBoolean:true];
  id<OrgOssPdfreporterEngineQueryClauseFunctionParameterHandler> rightParamHandler = [self createParameterHandlerWithOrgOssPdfreporterEngineQueryJRQueryClauseContext:queryContext withNSString:clauseId withNSString:rightParam withBoolean:false];
  JavaLangStringBuffer *sbuffer = [((id<OrgOssPdfreporterEngineQueryJRQueryClauseContext>) nil_chk(queryContext)) queryBuffer];
  if ([((id<OrgOssPdfreporterEngineQueryClauseFunctionParameterHandler>) nil_chk(leftParamHandler)) hasValue] && [((id<OrgOssPdfreporterEngineQueryClauseFunctionParameterHandler>) nil_chk(rightParamHandler)) hasValue]) {
    (void) [((JavaLangStringBuffer *) nil_chk(sbuffer)) appendWithNSString:@"( "];
    [self handleGreaterClauseWithJavaLangStringBuffer:sbuffer withNSString:clauseId withNSString:col withOrgOssPdfreporterEngineQueryClauseFunctionParameterHandler:leftParamHandler withOrgOssPdfreporterEngineQueryJRQueryClauseContext:queryContext];
    (void) [sbuffer appendWithNSString:@" AND "];
    [self handleLessClauseWithJavaLangStringBuffer:sbuffer withNSString:clauseId withNSString:col withOrgOssPdfreporterEngineQueryClauseFunctionParameterHandler:rightParamHandler withOrgOssPdfreporterEngineQueryJRQueryClauseContext:queryContext];
    (void) [sbuffer appendWithNSString:@" )"];
  }
  else if (![leftParamHandler hasValue]) {
    if (![((id<OrgOssPdfreporterEngineQueryClauseFunctionParameterHandler>) nil_chk(rightParamHandler)) hasValue]) {
      (void) [((JavaLangStringBuffer *) nil_chk(sbuffer)) appendWithNSString:OrgOssPdfreporterEngineQuerySQLBetweenBaseClause_CLAUSE_TRUISM];
    }
    else {
      [self handleLessClauseWithJavaLangStringBuffer:sbuffer withNSString:clauseId withNSString:col withOrgOssPdfreporterEngineQueryClauseFunctionParameterHandler:rightParamHandler withOrgOssPdfreporterEngineQueryJRQueryClauseContext:queryContext];
    }
  }
  else {
    [self handleGreaterClauseWithJavaLangStringBuffer:sbuffer withNSString:clauseId withNSString:col withOrgOssPdfreporterEngineQueryClauseFunctionParameterHandler:leftParamHandler withOrgOssPdfreporterEngineQueryJRQueryClauseContext:queryContext];
  }
}

- (id<OrgOssPdfreporterEngineQueryClauseFunctionParameterHandler>)createParameterHandlerWithOrgOssPdfreporterEngineQueryJRQueryClauseContext:(id<OrgOssPdfreporterEngineQueryJRQueryClauseContext>)queryContext
                                                                                                                                withNSString:(NSString *)clauseId
                                                                                                                                withNSString:(NSString *)parameterName
                                                                                                                                 withBoolean:(jboolean)left {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (NSString *)getGreaterOperatorWithNSString:(NSString *)clauseId {
  return [self isLeftClosedWithNSString:clauseId] ? @">=" : @">";
}

- (jboolean)isLeftClosedWithNSString:(NSString *)clauseId {
  return [((NSString *) nil_chk(clauseId)) hasPrefix:@"["];
}

- (NSString *)getLessOperatorWithNSString:(NSString *)clauseId {
  return [self isRightClosedWithNSString:clauseId] ? @"<=" : @"<";
}

- (jboolean)isRightClosedWithNSString:(NSString *)clauseId {
  return [((NSString *) nil_chk(clauseId)) hasSuffix:@"]"];
}

- (void)handleGreaterClauseWithJavaLangStringBuffer:(JavaLangStringBuffer *)sbuffer
                                       withNSString:(NSString *)clauseId
                                       withNSString:(NSString *)col
withOrgOssPdfreporterEngineQueryClauseFunctionParameterHandler:(id<OrgOssPdfreporterEngineQueryClauseFunctionParameterHandler>)leftParamHandler
withOrgOssPdfreporterEngineQueryJRQueryClauseContext:(id<OrgOssPdfreporterEngineQueryJRQueryClauseContext>)queryContext {
  (void) [((JavaLangStringBuffer *) nil_chk(sbuffer)) appendWithNSString:col];
  (void) [sbuffer appendWithChar:' '];
  (void) [sbuffer appendWithNSString:[self getGreaterOperatorWithNSString:clauseId]];
  (void) [sbuffer appendWithChar:' '];
  (void) [sbuffer appendWithChar:'?'];
  [((id<OrgOssPdfreporterEngineQueryClauseFunctionParameterHandler>) nil_chk(leftParamHandler)) addQueryParameter];
}

- (void)handleLessClauseWithJavaLangStringBuffer:(JavaLangStringBuffer *)sbuffer
                                    withNSString:(NSString *)clauseId
                                    withNSString:(NSString *)col
withOrgOssPdfreporterEngineQueryClauseFunctionParameterHandler:(id<OrgOssPdfreporterEngineQueryClauseFunctionParameterHandler>)rightParamHandler
withOrgOssPdfreporterEngineQueryJRQueryClauseContext:(id<OrgOssPdfreporterEngineQueryJRQueryClauseContext>)queryContext {
  (void) [((JavaLangStringBuffer *) nil_chk(sbuffer)) appendWithNSString:col];
  (void) [sbuffer appendWithChar:' '];
  (void) [sbuffer appendWithNSString:[self getLessOperatorWithNSString:clauseId]];
  (void) [sbuffer appendWithChar:' '];
  (void) [sbuffer appendWithChar:'?'];
  [((id<OrgOssPdfreporterEngineQueryClauseFunctionParameterHandler>) nil_chk(rightParamHandler)) addQueryParameter];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterEngineQuerySQLBetweenBaseClause_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "applyWithOrgOssPdfreporterEngineQueryJRClauseTokens:withOrgOssPdfreporterEngineQueryJRQueryClauseContext:", "apply", "V", 0x1, NULL, NULL },
    { "createParameterHandlerWithOrgOssPdfreporterEngineQueryJRQueryClauseContext:withNSString:withNSString:withBoolean:", "createParameterHandler", "Lorg.oss.pdfreporter.engine.query.ClauseFunctionParameterHandler;", 0x404, NULL, NULL },
    { "getGreaterOperatorWithNSString:", "getGreaterOperator", "Ljava.lang.String;", 0x4, NULL, NULL },
    { "isLeftClosedWithNSString:", "isLeftClosed", "Z", 0x4, NULL, NULL },
    { "getLessOperatorWithNSString:", "getLessOperator", "Ljava.lang.String;", 0x4, NULL, NULL },
    { "isRightClosedWithNSString:", "isRightClosed", "Z", 0x4, NULL, NULL },
    { "handleGreaterClauseWithJavaLangStringBuffer:withNSString:withNSString:withOrgOssPdfreporterEngineQueryClauseFunctionParameterHandler:withOrgOssPdfreporterEngineQueryJRQueryClauseContext:", "handleGreaterClause", "V", 0x4, NULL, NULL },
    { "handleLessClauseWithJavaLangStringBuffer:withNSString:withNSString:withOrgOssPdfreporterEngineQueryClauseFunctionParameterHandler:withOrgOssPdfreporterEngineQueryJRQueryClauseContext:", "handleLessClause", "V", 0x4, NULL, NULL },
    { "init", "SQLBetweenBaseClause", NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "POSITION_CLAUSE_ID", "POSITION_CLAUSE_ID", 0x1c, "I", NULL, NULL, .constantValue.asInt = OrgOssPdfreporterEngineQuerySQLBetweenBaseClause_POSITION_CLAUSE_ID },
    { "POSITION_DB_COLUMN", "POSITION_DB_COLUMN", 0x1c, "I", NULL, NULL, .constantValue.asInt = OrgOssPdfreporterEngineQuerySQLBetweenBaseClause_POSITION_DB_COLUMN },
    { "POSITION_LEFT_PARAMETER", "POSITION_LEFT_PARAMETER", 0x1c, "I", NULL, NULL, .constantValue.asInt = OrgOssPdfreporterEngineQuerySQLBetweenBaseClause_POSITION_LEFT_PARAMETER },
    { "POSITION_RIGHT_PARAMETER", "POSITION_RIGHT_PARAMETER", 0x1c, "I", NULL, NULL, .constantValue.asInt = OrgOssPdfreporterEngineQuerySQLBetweenBaseClause_POSITION_RIGHT_PARAMETER },
    { "CLAUSE_TRUISM", "CLAUSE_TRUISM", 0x1c, "Ljava.lang.String;", &OrgOssPdfreporterEngineQuerySQLBetweenBaseClause_CLAUSE_TRUISM, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineQuerySQLBetweenBaseClause = { 2, "SQLBetweenBaseClause", "org.oss.pdfreporter.engine.query", NULL, 0x401, 9, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineQuerySQLBetweenBaseClause;
}

@end

void OrgOssPdfreporterEngineQuerySQLBetweenBaseClause_init(OrgOssPdfreporterEngineQuerySQLBetweenBaseClause *self) {
  NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineQuerySQLBetweenBaseClause)
