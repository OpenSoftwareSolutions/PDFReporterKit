//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/query/JRClauseTokens.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "org/oss/pdfreporter/engine/query/JRClauseTokens.h"

@interface OrgOssPdfreporterEngineQueryJRClauseTokens () {
 @public
  IOSObjectArray *tokens_;
}

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineQueryJRClauseTokens, tokens_, IOSObjectArray *)

@implementation OrgOssPdfreporterEngineQueryJRClauseTokens

+ (jint)CLAUSE_ID_POSITION {
  return OrgOssPdfreporterEngineQueryJRClauseTokens_CLAUSE_ID_POSITION;
}

- (instancetype)initWithNSStringArray:(IOSObjectArray *)tokens {
  OrgOssPdfreporterEngineQueryJRClauseTokens_initWithNSStringArray_(self, tokens);
  return self;
}

- (NSString *)getClauseId {
  return [self getTokenWithInt:OrgOssPdfreporterEngineQueryJRClauseTokens_CLAUSE_ID_POSITION];
}

- (NSString *)getTokenWithInt:(jint)position {
  NSString *token;
  if (tokens_ == nil || tokens_->size_ <= position) {
    token = nil;
  }
  else {
    token = IOSObjectArray_Get(tokens_, position);
  }
  if (token != nil) {
    token = [token trim];
    if (((jint) [((NSString *) nil_chk(token)) length]) == 0) {
      token = nil;
    }
  }
  return token;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSStringArray:", "JRClauseTokens", NULL, 0x1, NULL, NULL },
    { "getClauseId", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getTokenWithInt:", "getToken", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "CLAUSE_ID_POSITION", "CLAUSE_ID_POSITION", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgOssPdfreporterEngineQueryJRClauseTokens_CLAUSE_ID_POSITION },
    { "tokens_", NULL, 0x12, "[Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineQueryJRClauseTokens = { 2, "JRClauseTokens", "org.oss.pdfreporter.engine.query", NULL, 0x1, 3, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineQueryJRClauseTokens;
}

@end

void OrgOssPdfreporterEngineQueryJRClauseTokens_initWithNSStringArray_(OrgOssPdfreporterEngineQueryJRClauseTokens *self, IOSObjectArray *tokens) {
  NSObject_init(self);
  self->tokens_ = tokens;
}

OrgOssPdfreporterEngineQueryJRClauseTokens *new_OrgOssPdfreporterEngineQueryJRClauseTokens_initWithNSStringArray_(IOSObjectArray *tokens) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineQueryJRClauseTokens, initWithNSStringArray_, tokens)
}

OrgOssPdfreporterEngineQueryJRClauseTokens *create_OrgOssPdfreporterEngineQueryJRClauseTokens_initWithNSStringArray_(IOSObjectArray *tokens) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineQueryJRClauseTokens, initWithNSStringArray_, tokens)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineQueryJRClauseTokens)
