//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/query/JRXPathQueryExecuter.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/io/File.h"
#include "java/io/InputStream.h"
#include "java/util/Locale.h"
#include "java/util/Map.h"
#include "java/util/TimeZone.h"
#include "org/oss/pdfreporter/engine/DefaultJasperReportsContext.h"
#include "org/oss/pdfreporter/engine/JRDataSource.h"
#include "org/oss/pdfreporter/engine/JRDataset.h"
#include "org/oss/pdfreporter/engine/JRException.h"
#include "org/oss/pdfreporter/engine/JasperReportsContext.h"
#include "org/oss/pdfreporter/engine/data/JRXmlDataSource.h"
#include "org/oss/pdfreporter/engine/query/JRAbstractQueryExecuter.h"
#include "org/oss/pdfreporter/engine/query/JRXPathQueryExecuter.h"
#include "org/oss/pdfreporter/engine/query/JRXPathQueryExecuterFactory.h"
#include "org/oss/pdfreporter/uses/org/w3c/dom/Document.h"

@interface OrgOssPdfreporterEngineQueryJRXPathQueryExecuter () {
 @public
  OrgOssPdfreporterEngineDataJRXmlDataSource *datasource_;
}

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineQueryJRXPathQueryExecuter, datasource_, OrgOssPdfreporterEngineDataJRXmlDataSource *)

NSString *OrgOssPdfreporterEngineQueryJRXPathQueryExecuter_CANONICAL_LANGUAGE = @"XPath";

@implementation OrgOssPdfreporterEngineQueryJRXPathQueryExecuter

+ (NSString *)CANONICAL_LANGUAGE {
  return OrgOssPdfreporterEngineQueryJRXPathQueryExecuter_CANONICAL_LANGUAGE;
}

- (instancetype)initWithOrgOssPdfreporterEngineJasperReportsContext:(id<OrgOssPdfreporterEngineJasperReportsContext>)jasperReportsContext
                               withOrgOssPdfreporterEngineJRDataset:(id<OrgOssPdfreporterEngineJRDataset>)dataset
                                                    withJavaUtilMap:(id<JavaUtilMap>)parametersMap {
  OrgOssPdfreporterEngineQueryJRXPathQueryExecuter_initWithOrgOssPdfreporterEngineJasperReportsContext_withOrgOssPdfreporterEngineJRDataset_withJavaUtilMap_(self, jasperReportsContext, dataset, parametersMap);
  return self;
}

- (instancetype)initWithOrgOssPdfreporterEngineJRDataset:(id<OrgOssPdfreporterEngineJRDataset>)dataset
                                         withJavaUtilMap:(id<JavaUtilMap>)parametersMap {
  OrgOssPdfreporterEngineQueryJRXPathQueryExecuter_initWithOrgOssPdfreporterEngineJRDataset_withJavaUtilMap_(self, dataset, parametersMap);
  return self;
}

- (NSString *)getCanonicalQueryLanguage {
  return OrgOssPdfreporterEngineQueryJRXPathQueryExecuter_CANONICAL_LANGUAGE;
}

- (NSString *)getParameterReplacementWithNSString:(NSString *)parameterName {
  return NSString_valueOf_([self getParameterValueWithNSString:parameterName]);
}

- (id<OrgOssPdfreporterEngineJRDataSource>)createDatasource {
  OrgOssPdfreporterEngineDataJRXmlDataSource *datasource = nil;
  NSString *xPath = [self getQueryString];
  if (xPath != nil) {
    id<OrgOssPdfreporterUsesOrgW3cDomDocument> document = (id<OrgOssPdfreporterUsesOrgW3cDomDocument>) cast_check([self getParameterValueWithNSString:OrgOssPdfreporterEngineQueryJRXPathQueryExecuterFactory_PARAMETER_XML_DATA_DOCUMENT], OrgOssPdfreporterUsesOrgW3cDomDocument_class_());
    if (document != nil) {
      datasource = new_OrgOssPdfreporterEngineDataJRXmlDataSource_initWithOrgOssPdfreporterEngineJasperReportsContext_withOrgOssPdfreporterUsesOrgW3cDomDocument_withNSString_([self getJasperReportsContext], document, xPath);
    }
    else {
      JavaIoInputStream *xmlInputStream = (JavaIoInputStream *) cast_chk([self getParameterValueWithNSString:OrgOssPdfreporterEngineQueryJRXPathQueryExecuterFactory_XML_INPUT_STREAM], [JavaIoInputStream class]);
      if (xmlInputStream != nil) {
        datasource = new_OrgOssPdfreporterEngineDataJRXmlDataSource_initWithOrgOssPdfreporterEngineJasperReportsContext_withJavaIoInputStream_withNSString_([self getJasperReportsContext], xmlInputStream, xPath);
      }
      else {
        JavaIoFile *xmlFile = (JavaIoFile *) cast_chk([self getParameterValueWithNSString:OrgOssPdfreporterEngineQueryJRXPathQueryExecuterFactory_XML_FILE], [JavaIoFile class]);
        if (xmlFile != nil) {
          datasource = new_OrgOssPdfreporterEngineDataJRXmlDataSource_initWithOrgOssPdfreporterEngineJasperReportsContext_withJavaIoFile_withNSString_([self getJasperReportsContext], xmlFile, xPath);
        }
        else {
          NSString *xmlSource = [self getStringParameterOrPropertyWithNSString:OrgOssPdfreporterEngineQueryJRXPathQueryExecuterFactory_XML_SOURCE];
          if (xmlSource != nil) {
            datasource = new_OrgOssPdfreporterEngineDataJRXmlDataSource_initWithOrgOssPdfreporterEngineJasperReportsContext_withNSString_withNSString_([self getJasperReportsContext], xmlSource, xPath);
          }
          else {
          }
        }
      }
    }
    if (datasource != nil) {
      [datasource setLocaleWithJavaUtilLocale:(JavaUtilLocale *) cast_chk([self getParameterValueWithNSString:OrgOssPdfreporterEngineQueryJRXPathQueryExecuterFactory_XML_LOCALE withBoolean:true], [JavaUtilLocale class])];
      [datasource setDatePatternWithNSString:[self getStringParameterWithNSString:OrgOssPdfreporterEngineQueryJRXPathQueryExecuterFactory_XML_DATE_PATTERN withNSString:OrgOssPdfreporterEngineQueryJRXPathQueryExecuterFactory_PROPERTY_XML_DATE_PATTERN]];
      [datasource setNumberPatternWithNSString:[self getStringParameterWithNSString:OrgOssPdfreporterEngineQueryJRXPathQueryExecuterFactory_XML_NUMBER_PATTERN withNSString:OrgOssPdfreporterEngineQueryJRXPathQueryExecuterFactory_PROPERTY_XML_NUMBER_PATTERN]];
      [datasource setTimeZoneWithJavaUtilTimeZone:(JavaUtilTimeZone *) cast_chk([self getParameterValueWithNSString:OrgOssPdfreporterEngineQueryJRXPathQueryExecuterFactory_XML_TIME_ZONE withBoolean:true], [JavaUtilTimeZone class])];
    }
  }
  return datasource;
}

- (void)close {
  if (datasource_ != nil) {
    [datasource_ close];
  }
}

- (jboolean)cancelQuery {
  return false;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgOssPdfreporterEngineJasperReportsContext:withOrgOssPdfreporterEngineJRDataset:withJavaUtilMap:", "JRXPathQueryExecuter", NULL, 0x1, NULL, "(Lorg/oss/pdfreporter/engine/JasperReportsContext;Lorg/oss/pdfreporter/engine/JRDataset;Ljava/util/Map<Ljava/lang/String;+Lorg/oss/pdfreporter/engine/JRValueParameter;>;)V" },
    { "initWithOrgOssPdfreporterEngineJRDataset:withJavaUtilMap:", "JRXPathQueryExecuter", NULL, 0x1, NULL, "(Lorg/oss/pdfreporter/engine/JRDataset;Ljava/util/Map<Ljava/lang/String;+Lorg/oss/pdfreporter/engine/JRValueParameter;>;)V" },
    { "getCanonicalQueryLanguage", NULL, "Ljava.lang.String;", 0x4, NULL, NULL },
    { "getParameterReplacementWithNSString:", "getParameterReplacement", "Ljava.lang.String;", 0x4, NULL, NULL },
    { "createDatasource", NULL, "Lorg.oss.pdfreporter.engine.JRDataSource;", 0x1, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "close", NULL, "V", 0x1, NULL, NULL },
    { "cancelQuery", NULL, "Z", 0x1, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "CANONICAL_LANGUAGE", "CANONICAL_LANGUAGE", 0x1c, "Ljava.lang.String;", &OrgOssPdfreporterEngineQueryJRXPathQueryExecuter_CANONICAL_LANGUAGE, NULL, .constantValue.asLong = 0 },
    { "datasource_", NULL, 0x2, "Lorg.oss.pdfreporter.engine.data.JRXmlDataSource;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineQueryJRXPathQueryExecuter = { 2, "JRXPathQueryExecuter", "org.oss.pdfreporter.engine.query", NULL, 0x1, 7, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineQueryJRXPathQueryExecuter;
}

@end

void OrgOssPdfreporterEngineQueryJRXPathQueryExecuter_initWithOrgOssPdfreporterEngineJasperReportsContext_withOrgOssPdfreporterEngineJRDataset_withJavaUtilMap_(OrgOssPdfreporterEngineQueryJRXPathQueryExecuter *self, id<OrgOssPdfreporterEngineJasperReportsContext> jasperReportsContext, id<OrgOssPdfreporterEngineJRDataset> dataset, id<JavaUtilMap> parametersMap) {
  OrgOssPdfreporterEngineQueryJRAbstractQueryExecuter_initWithOrgOssPdfreporterEngineJasperReportsContext_withOrgOssPdfreporterEngineJRDataset_withJavaUtilMap_(self, jasperReportsContext, dataset, parametersMap);
  [self parseQuery];
}

OrgOssPdfreporterEngineQueryJRXPathQueryExecuter *new_OrgOssPdfreporterEngineQueryJRXPathQueryExecuter_initWithOrgOssPdfreporterEngineJasperReportsContext_withOrgOssPdfreporterEngineJRDataset_withJavaUtilMap_(id<OrgOssPdfreporterEngineJasperReportsContext> jasperReportsContext, id<OrgOssPdfreporterEngineJRDataset> dataset, id<JavaUtilMap> parametersMap) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineQueryJRXPathQueryExecuter, initWithOrgOssPdfreporterEngineJasperReportsContext_withOrgOssPdfreporterEngineJRDataset_withJavaUtilMap_, jasperReportsContext, dataset, parametersMap)
}

OrgOssPdfreporterEngineQueryJRXPathQueryExecuter *create_OrgOssPdfreporterEngineQueryJRXPathQueryExecuter_initWithOrgOssPdfreporterEngineJasperReportsContext_withOrgOssPdfreporterEngineJRDataset_withJavaUtilMap_(id<OrgOssPdfreporterEngineJasperReportsContext> jasperReportsContext, id<OrgOssPdfreporterEngineJRDataset> dataset, id<JavaUtilMap> parametersMap) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineQueryJRXPathQueryExecuter, initWithOrgOssPdfreporterEngineJasperReportsContext_withOrgOssPdfreporterEngineJRDataset_withJavaUtilMap_, jasperReportsContext, dataset, parametersMap)
}

void OrgOssPdfreporterEngineQueryJRXPathQueryExecuter_initWithOrgOssPdfreporterEngineJRDataset_withJavaUtilMap_(OrgOssPdfreporterEngineQueryJRXPathQueryExecuter *self, id<OrgOssPdfreporterEngineJRDataset> dataset, id<JavaUtilMap> parametersMap) {
  OrgOssPdfreporterEngineQueryJRXPathQueryExecuter_initWithOrgOssPdfreporterEngineJasperReportsContext_withOrgOssPdfreporterEngineJRDataset_withJavaUtilMap_(self, OrgOssPdfreporterEngineDefaultJasperReportsContext_getInstance(), dataset, parametersMap);
}

OrgOssPdfreporterEngineQueryJRXPathQueryExecuter *new_OrgOssPdfreporterEngineQueryJRXPathQueryExecuter_initWithOrgOssPdfreporterEngineJRDataset_withJavaUtilMap_(id<OrgOssPdfreporterEngineJRDataset> dataset, id<JavaUtilMap> parametersMap) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineQueryJRXPathQueryExecuter, initWithOrgOssPdfreporterEngineJRDataset_withJavaUtilMap_, dataset, parametersMap)
}

OrgOssPdfreporterEngineQueryJRXPathQueryExecuter *create_OrgOssPdfreporterEngineQueryJRXPathQueryExecuter_initWithOrgOssPdfreporterEngineJRDataset_withJavaUtilMap_(id<OrgOssPdfreporterEngineJRDataset> dataset, id<JavaUtilMap> parametersMap) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineQueryJRXPathQueryExecuter, initWithOrgOssPdfreporterEngineJRDataset_withJavaUtilMap_, dataset, parametersMap)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineQueryJRXPathQueryExecuter)
