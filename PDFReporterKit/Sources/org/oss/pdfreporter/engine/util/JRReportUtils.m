//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/util/JRReportUtils.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "org/oss/pdfreporter/engine/JRDataset.h"
#include "org/oss/pdfreporter/engine/JRDatasetRun.h"
#include "org/oss/pdfreporter/engine/JRRuntimeException.h"
#include "org/oss/pdfreporter/engine/JasperReport.h"
#include "org/oss/pdfreporter/engine/util/JRReportUtils.h"

@interface OrgOssPdfreporterEngineUtilJRReportUtils ()

- (instancetype)init;

@end

__attribute__((unused)) static void OrgOssPdfreporterEngineUtilJRReportUtils_init(OrgOssPdfreporterEngineUtilJRReportUtils *self);

__attribute__((unused)) static OrgOssPdfreporterEngineUtilJRReportUtils *new_OrgOssPdfreporterEngineUtilJRReportUtils_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgOssPdfreporterEngineUtilJRReportUtils *create_OrgOssPdfreporterEngineUtilJRReportUtils_init();

@implementation OrgOssPdfreporterEngineUtilJRReportUtils

+ (id<OrgOssPdfreporterEngineJRDataset>)findSubdatasetWithOrgOssPdfreporterEngineJRDatasetRun:(id<OrgOssPdfreporterEngineJRDatasetRun>)datasetRun
                                                      withOrgOssPdfreporterEngineJasperReport:(OrgOssPdfreporterEngineJasperReport *)report {
  return OrgOssPdfreporterEngineUtilJRReportUtils_findSubdatasetWithOrgOssPdfreporterEngineJRDatasetRun_withOrgOssPdfreporterEngineJasperReport_(datasetRun, report);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterEngineUtilJRReportUtils_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "findSubdatasetWithOrgOssPdfreporterEngineJRDatasetRun:withOrgOssPdfreporterEngineJasperReport:", "findSubdataset", "Lorg.oss.pdfreporter.engine.JRDataset;", 0x9, NULL, NULL },
    { "init", "JRReportUtils", NULL, 0x2, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineUtilJRReportUtils = { 2, "JRReportUtils", "org.oss.pdfreporter.engine.util", NULL, 0x11, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineUtilJRReportUtils;
}

@end

id<OrgOssPdfreporterEngineJRDataset> OrgOssPdfreporterEngineUtilJRReportUtils_findSubdatasetWithOrgOssPdfreporterEngineJRDatasetRun_withOrgOssPdfreporterEngineJasperReport_(id<OrgOssPdfreporterEngineJRDatasetRun> datasetRun, OrgOssPdfreporterEngineJasperReport *report) {
  OrgOssPdfreporterEngineUtilJRReportUtils_initialize();
  IOSObjectArray *datasets = [((OrgOssPdfreporterEngineJasperReport *) nil_chk(report)) getDatasets];
  id<OrgOssPdfreporterEngineJRDataset> reportDataset = nil;
  if (datasets != nil) {
    for (jint i = 0; i < datasets->size_; i++) {
      if ([((NSString *) nil_chk([((id<OrgOssPdfreporterEngineJRDatasetRun>) nil_chk(datasetRun)) getDatasetName])) isEqual:[((id<OrgOssPdfreporterEngineJRDataset>) nil_chk(IOSObjectArray_Get(datasets, i))) getName]]) {
        reportDataset = IOSObjectArray_Get(datasets, i);
        break;
      }
    }
  }
  if (reportDataset == nil) {
    @throw new_OrgOssPdfreporterEngineJRRuntimeException_initWithNSString_(JreStrcat("$$$$C", @"Could not find subdataset named \"", [((id<OrgOssPdfreporterEngineJRDatasetRun>) nil_chk(datasetRun)) getDatasetName], @"\" in report \"", [report getName], '"'));
  }
  return reportDataset;
}

void OrgOssPdfreporterEngineUtilJRReportUtils_init(OrgOssPdfreporterEngineUtilJRReportUtils *self) {
  NSObject_init(self);
}

OrgOssPdfreporterEngineUtilJRReportUtils *new_OrgOssPdfreporterEngineUtilJRReportUtils_init() {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineUtilJRReportUtils, init)
}

OrgOssPdfreporterEngineUtilJRReportUtils *create_OrgOssPdfreporterEngineUtilJRReportUtils_init() {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineUtilJRReportUtils, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineUtilJRReportUtils)
