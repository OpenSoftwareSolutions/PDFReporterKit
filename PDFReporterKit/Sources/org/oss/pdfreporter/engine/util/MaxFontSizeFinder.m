//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/util/MaxFontSizeFinder.java
//

#include "J2ObjC_source.h"
#include "java/lang/Float.h"
#include "org/oss/pdfreporter/engine/util/MaxFontSizeFinder.h"
#include "org/oss/pdfreporter/font/text/TextAttribute.h"
#include "org/oss/pdfreporter/uses/java/awt/text/IAttributedCharacterIterator.h"

@interface OrgOssPdfreporterEngineUtilMaxFontSizeFinder_$1 : OrgOssPdfreporterEngineUtilMaxFontSizeFinder {
 @public
  JavaLangFloat *ZERO_;
}

- (jint)findMaxFontSizeWithOrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator:(id<OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator>)line
                                                                                withInt:(jint)defaultFontSize;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgOssPdfreporterEngineUtilMaxFontSizeFinder_$1)

J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineUtilMaxFontSizeFinder_$1, ZERO_, JavaLangFloat *)

__attribute__((unused)) static void OrgOssPdfreporterEngineUtilMaxFontSizeFinder_$1_init(OrgOssPdfreporterEngineUtilMaxFontSizeFinder_$1 *self);

__attribute__((unused)) static OrgOssPdfreporterEngineUtilMaxFontSizeFinder_$1 *new_OrgOssPdfreporterEngineUtilMaxFontSizeFinder_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgOssPdfreporterEngineUtilMaxFontSizeFinder_$1 *create_OrgOssPdfreporterEngineUtilMaxFontSizeFinder_$1_init();

J2OBJC_TYPE_LITERAL_HEADER(OrgOssPdfreporterEngineUtilMaxFontSizeFinder_$1)

@interface OrgOssPdfreporterEngineUtilMaxFontSizeFinder_$2 : OrgOssPdfreporterEngineUtilMaxFontSizeFinder

- (jint)findMaxFontSizeWithOrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator:(id<OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator>)line
                                                                                withInt:(jint)defaultFontSize;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgOssPdfreporterEngineUtilMaxFontSizeFinder_$2)

__attribute__((unused)) static void OrgOssPdfreporterEngineUtilMaxFontSizeFinder_$2_init(OrgOssPdfreporterEngineUtilMaxFontSizeFinder_$2 *self);

__attribute__((unused)) static OrgOssPdfreporterEngineUtilMaxFontSizeFinder_$2 *new_OrgOssPdfreporterEngineUtilMaxFontSizeFinder_$2_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgOssPdfreporterEngineUtilMaxFontSizeFinder_$2 *create_OrgOssPdfreporterEngineUtilMaxFontSizeFinder_$2_init();

J2OBJC_TYPE_LITERAL_HEADER(OrgOssPdfreporterEngineUtilMaxFontSizeFinder_$2)

J2OBJC_INITIALIZED_DEFN(OrgOssPdfreporterEngineUtilMaxFontSizeFinder)

OrgOssPdfreporterEngineUtilMaxFontSizeFinder *OrgOssPdfreporterEngineUtilMaxFontSizeFinder_STYLED_TEXT_MAX_FONT_FINDER;
OrgOssPdfreporterEngineUtilMaxFontSizeFinder *OrgOssPdfreporterEngineUtilMaxFontSizeFinder_DEFAULT_MAX_FONT_FINDER;

@implementation OrgOssPdfreporterEngineUtilMaxFontSizeFinder

+ (OrgOssPdfreporterEngineUtilMaxFontSizeFinder *)STYLED_TEXT_MAX_FONT_FINDER {
  return OrgOssPdfreporterEngineUtilMaxFontSizeFinder_STYLED_TEXT_MAX_FONT_FINDER;
}

+ (OrgOssPdfreporterEngineUtilMaxFontSizeFinder *)DEFAULT_MAX_FONT_FINDER {
  return OrgOssPdfreporterEngineUtilMaxFontSizeFinder_DEFAULT_MAX_FONT_FINDER;
}

+ (OrgOssPdfreporterEngineUtilMaxFontSizeFinder *)getInstanceWithBoolean:(jboolean)isStyledText {
  return OrgOssPdfreporterEngineUtilMaxFontSizeFinder_getInstanceWithBoolean_(isStyledText);
}

- (jint)findMaxFontSizeWithOrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator:(id<OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator>)line
                                                                                withInt:(jint)defaultFontSize {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterEngineUtilMaxFontSizeFinder_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)initialize {
  if (self == [OrgOssPdfreporterEngineUtilMaxFontSizeFinder class]) {
    OrgOssPdfreporterEngineUtilMaxFontSizeFinder_STYLED_TEXT_MAX_FONT_FINDER = new_OrgOssPdfreporterEngineUtilMaxFontSizeFinder_$1_init();
    OrgOssPdfreporterEngineUtilMaxFontSizeFinder_DEFAULT_MAX_FONT_FINDER = new_OrgOssPdfreporterEngineUtilMaxFontSizeFinder_$2_init();
    J2OBJC_SET_INITIALIZED(OrgOssPdfreporterEngineUtilMaxFontSizeFinder)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getInstanceWithBoolean:", "getInstance", "Lorg.oss.pdfreporter.engine.util.MaxFontSizeFinder;", 0x9, NULL, NULL },
    { "findMaxFontSizeWithOrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator:withInt:", "findMaxFontSize", "I", 0x401, NULL, NULL },
    { "init", "MaxFontSizeFinder", NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "STYLED_TEXT_MAX_FONT_FINDER", "STYLED_TEXT_MAX_FONT_FINDER", 0x19, "Lorg.oss.pdfreporter.engine.util.MaxFontSizeFinder;", &OrgOssPdfreporterEngineUtilMaxFontSizeFinder_STYLED_TEXT_MAX_FONT_FINDER, NULL, .constantValue.asLong = 0 },
    { "DEFAULT_MAX_FONT_FINDER", "DEFAULT_MAX_FONT_FINDER", 0x19, "Lorg.oss.pdfreporter.engine.util.MaxFontSizeFinder;", &OrgOssPdfreporterEngineUtilMaxFontSizeFinder_DEFAULT_MAX_FONT_FINDER, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineUtilMaxFontSizeFinder = { 2, "MaxFontSizeFinder", "org.oss.pdfreporter.engine.util", NULL, 0x401, 3, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineUtilMaxFontSizeFinder;
}

@end

OrgOssPdfreporterEngineUtilMaxFontSizeFinder *OrgOssPdfreporterEngineUtilMaxFontSizeFinder_getInstanceWithBoolean_(jboolean isStyledText) {
  OrgOssPdfreporterEngineUtilMaxFontSizeFinder_initialize();
  if (isStyledText) {
    return OrgOssPdfreporterEngineUtilMaxFontSizeFinder_STYLED_TEXT_MAX_FONT_FINDER;
  }
  return OrgOssPdfreporterEngineUtilMaxFontSizeFinder_DEFAULT_MAX_FONT_FINDER;
}

void OrgOssPdfreporterEngineUtilMaxFontSizeFinder_init(OrgOssPdfreporterEngineUtilMaxFontSizeFinder *self) {
  NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineUtilMaxFontSizeFinder)

@implementation OrgOssPdfreporterEngineUtilMaxFontSizeFinder_$1

- (jint)findMaxFontSizeWithOrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator:(id<OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator>)line
                                                                                withInt:(jint)defaultFontSize {
  [((id<OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator>) nil_chk(line)) setIndexWithInt:0];
  JavaLangFloat *maxFontSize = ZERO_;
  jint runLimit = 0;
  while (runLimit < [line getEndIndex] && (runLimit = [line getRunLimitWithOrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator_Attribute:JreLoadStatic(OrgOssPdfreporterFontTextTextAttribute, SIZE)]) <= [line getEndIndex]) {
    JavaLangFloat *size = (JavaLangFloat *) cast_chk([line getAttributeWithOrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator_Attribute:JreLoadStatic(OrgOssPdfreporterFontTextTextAttribute, SIZE)], [JavaLangFloat class]);
    if ([((JavaLangFloat *) nil_chk(maxFontSize)) compareToWithId:size] < 0) {
      maxFontSize = size;
    }
    [line setIndexWithInt:runLimit];
  }
  return [((JavaLangFloat *) nil_chk(maxFontSize)) intValue];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterEngineUtilMaxFontSizeFinder_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "findMaxFontSizeWithOrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator:withInt:", "findMaxFontSize", "I", 0x1, NULL, NULL },
    { "init", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "ZERO_", NULL, 0x12, "Ljava.lang.Float;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineUtilMaxFontSizeFinder_$1 = { 2, "", "org.oss.pdfreporter.engine.util", "MaxFontSizeFinder", 0x8008, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineUtilMaxFontSizeFinder_$1;
}

@end

void OrgOssPdfreporterEngineUtilMaxFontSizeFinder_$1_init(OrgOssPdfreporterEngineUtilMaxFontSizeFinder_$1 *self) {
  OrgOssPdfreporterEngineUtilMaxFontSizeFinder_init(self);
  self->ZERO_ = new_JavaLangFloat_initWithFloat_(0);
}

OrgOssPdfreporterEngineUtilMaxFontSizeFinder_$1 *new_OrgOssPdfreporterEngineUtilMaxFontSizeFinder_$1_init() {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineUtilMaxFontSizeFinder_$1, init)
}

OrgOssPdfreporterEngineUtilMaxFontSizeFinder_$1 *create_OrgOssPdfreporterEngineUtilMaxFontSizeFinder_$1_init() {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineUtilMaxFontSizeFinder_$1, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineUtilMaxFontSizeFinder_$1)

@implementation OrgOssPdfreporterEngineUtilMaxFontSizeFinder_$2

- (jint)findMaxFontSizeWithOrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator:(id<OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator>)line
                                                                                withInt:(jint)defaultFontSize {
  return defaultFontSize;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterEngineUtilMaxFontSizeFinder_$2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "findMaxFontSizeWithOrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator:withInt:", "findMaxFontSize", "I", 0x1, NULL, NULL },
    { "init", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineUtilMaxFontSizeFinder_$2 = { 2, "", "org.oss.pdfreporter.engine.util", "MaxFontSizeFinder", 0x8008, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineUtilMaxFontSizeFinder_$2;
}

@end

void OrgOssPdfreporterEngineUtilMaxFontSizeFinder_$2_init(OrgOssPdfreporterEngineUtilMaxFontSizeFinder_$2 *self) {
  OrgOssPdfreporterEngineUtilMaxFontSizeFinder_init(self);
}

OrgOssPdfreporterEngineUtilMaxFontSizeFinder_$2 *new_OrgOssPdfreporterEngineUtilMaxFontSizeFinder_$2_init() {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineUtilMaxFontSizeFinder_$2, init)
}

OrgOssPdfreporterEngineUtilMaxFontSizeFinder_$2 *create_OrgOssPdfreporterEngineUtilMaxFontSizeFinder_$2_init() {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineUtilMaxFontSizeFinder_$2, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineUtilMaxFontSizeFinder_$2)
