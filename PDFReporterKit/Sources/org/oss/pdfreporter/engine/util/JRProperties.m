//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/util/JRProperties.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/lang/Boolean.h"
#include "java/lang/Character.h"
#include "java/lang/Float.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/SecurityException.h"
#include "java/lang/System.h"
#include "java/util/ArrayList.h"
#include "java/util/Enumeration.h"
#include "java/util/HashMap.h"
#include "java/util/HashSet.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "org/oss/pdfreporter/engine/DefaultJasperReportsContext.h"
#include "org/oss/pdfreporter/engine/JRException.h"
#include "org/oss/pdfreporter/engine/JRPropertiesHolder.h"
#include "org/oss/pdfreporter/engine/JRPropertiesMap.h"
#include "org/oss/pdfreporter/engine/JRRuntimeException.h"
#include "org/oss/pdfreporter/engine/util/JRLoader.h"
#include "org/oss/pdfreporter/engine/util/JRProperties.h"
#include "org/oss/pdfreporter/uses/java/util/Properties.h"

@interface OrgOssPdfreporterEngineUtilJRProperties ()

- (instancetype)init;

@end

__attribute__((unused)) static void OrgOssPdfreporterEngineUtilJRProperties_init(OrgOssPdfreporterEngineUtilJRProperties *self);

__attribute__((unused)) static OrgOssPdfreporterEngineUtilJRProperties *new_OrgOssPdfreporterEngineUtilJRProperties_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgOssPdfreporterEngineUtilJRProperties *create_OrgOssPdfreporterEngineUtilJRProperties_init();

J2OBJC_INITIALIZED_DEFN(OrgOssPdfreporterEngineUtilJRProperties)

NSString *OrgOssPdfreporterEngineUtilJRProperties_DEFAULT_PROPERTIES_FILE = @"jasperreports.properties";
NSString *OrgOssPdfreporterEngineUtilJRProperties_PROPERTY_PREFIX = @"net.sf.jasperreports.";
NSString *OrgOssPdfreporterEngineUtilJRProperties_PROPERTIES_FILE = @"net.sf.jasperreports.properties";
NSString *OrgOssPdfreporterEngineUtilJRProperties_COMPILER_CLASS = @"net.sf.jasperreports.compiler.class";
NSString *OrgOssPdfreporterEngineUtilJRProperties_COMPILER_XML_VALIDATION = @"net.sf.jasperreports.compiler.xml.validation";
NSString *OrgOssPdfreporterEngineUtilJRProperties_COMPILER_KEEP_JAVA_FILE = @"net.sf.jasperreports.compiler.keep.java.file";
NSString *OrgOssPdfreporterEngineUtilJRProperties_COMPILER_TEMP_DIR = @"net.sf.jasperreports.compiler.temp.dir";
NSString *OrgOssPdfreporterEngineUtilJRProperties_COMPILER_CLASSPATH = @"net.sf.jasperreports.compiler.classpath";
NSString *OrgOssPdfreporterEngineUtilJRProperties_EXPORT_XML_VALIDATION = @"net.sf.jasperreports.export.xml.validation";
NSString *OrgOssPdfreporterEngineUtilJRProperties_PDF_FONT_FILES_PREFIX = @"net.sf.jasperreports.export.pdf.font.";
NSString *OrgOssPdfreporterEngineUtilJRProperties_PDF_FONT_DIRS_PREFIX = @"net.sf.jasperreports.export.pdf.fontdir.";
NSString *OrgOssPdfreporterEngineUtilJRProperties_QUERY_EXECUTER_FACTORY_PREFIX = @"net.sf.jasperreports.query.executer.factory.";
volatile_id OrgOssPdfreporterEngineUtilJRProperties_properties;
id<JavaUtilMap> OrgOssPdfreporterEngineUtilJRProperties_savedProps;

@implementation OrgOssPdfreporterEngineUtilJRProperties

+ (NSString *)DEFAULT_PROPERTIES_FILE {
  return OrgOssPdfreporterEngineUtilJRProperties_DEFAULT_PROPERTIES_FILE;
}

+ (NSString *)PROPERTY_PREFIX {
  return OrgOssPdfreporterEngineUtilJRProperties_PROPERTY_PREFIX;
}

+ (NSString *)PROPERTIES_FILE {
  return OrgOssPdfreporterEngineUtilJRProperties_PROPERTIES_FILE;
}

+ (NSString *)COMPILER_CLASS {
  return OrgOssPdfreporterEngineUtilJRProperties_COMPILER_CLASS;
}

+ (NSString *)COMPILER_XML_VALIDATION {
  return OrgOssPdfreporterEngineUtilJRProperties_COMPILER_XML_VALIDATION;
}

+ (NSString *)COMPILER_KEEP_JAVA_FILE {
  return OrgOssPdfreporterEngineUtilJRProperties_COMPILER_KEEP_JAVA_FILE;
}

+ (NSString *)COMPILER_TEMP_DIR {
  return OrgOssPdfreporterEngineUtilJRProperties_COMPILER_TEMP_DIR;
}

+ (NSString *)COMPILER_CLASSPATH {
  return OrgOssPdfreporterEngineUtilJRProperties_COMPILER_CLASSPATH;
}

+ (NSString *)EXPORT_XML_VALIDATION {
  return OrgOssPdfreporterEngineUtilJRProperties_EXPORT_XML_VALIDATION;
}

+ (NSString *)PDF_FONT_FILES_PREFIX {
  return OrgOssPdfreporterEngineUtilJRProperties_PDF_FONT_FILES_PREFIX;
}

+ (NSString *)PDF_FONT_DIRS_PREFIX {
  return OrgOssPdfreporterEngineUtilJRProperties_PDF_FONT_DIRS_PREFIX;
}

+ (NSString *)QUERY_EXECUTER_FACTORY_PREFIX {
  return OrgOssPdfreporterEngineUtilJRProperties_QUERY_EXECUTER_FACTORY_PREFIX;
}

+ (id<JavaUtilMap>)properties {
  return JreLoadVolatileId(&OrgOssPdfreporterEngineUtilJRProperties_properties);
}

+ (void)setProperties:(id<JavaUtilMap>)value {
  JreVolatileStrongAssign(&OrgOssPdfreporterEngineUtilJRProperties_properties, value);
}

+ (id<JavaUtilMap>)savedProps {
  return OrgOssPdfreporterEngineUtilJRProperties_savedProps;
}

+ (void)setSavedProps:(id<JavaUtilMap>)value {
  OrgOssPdfreporterEngineUtilJRProperties_savedProps = value;
}

+ (void)reload {
  OrgOssPdfreporterEngineUtilJRProperties_reload();
}

+ (void)initProperties {
  OrgOssPdfreporterEngineUtilJRProperties_initProperties();
}

+ (void)loadSystemProperties {
  OrgOssPdfreporterEngineUtilJRProperties_loadSystemProperties();
}

+ (OrgOssPdfreporterUsesJavaUtilProperties *)getDefaults {
  return OrgOssPdfreporterEngineUtilJRProperties_getDefaults();
}

+ (NSString *)getSystemPropertyWithNSString:(NSString *)propertyName {
  return OrgOssPdfreporterEngineUtilJRProperties_getSystemPropertyWithNSString_(propertyName);
}

+ (void)loadSystemPropertyWithNSString:(NSString *)sysKey
                          withNSString:(NSString *)propKey {
  OrgOssPdfreporterEngineUtilJRProperties_loadSystemPropertyWithNSString_withNSString_(sysKey, propKey);
}

+ (OrgOssPdfreporterUsesJavaUtilProperties *)loadPropertiesWithNSString:(NSString *)name
                            withOrgOssPdfreporterUsesJavaUtilProperties:(OrgOssPdfreporterUsesJavaUtilProperties *)defaults {
  return OrgOssPdfreporterEngineUtilJRProperties_loadPropertiesWithNSString_withOrgOssPdfreporterUsesJavaUtilProperties_(name, defaults);
}

+ (NSString *)getPropertyWithNSString:(NSString *)key {
  return OrgOssPdfreporterEngineUtilJRProperties_getPropertyWithNSString_(key);
}

+ (jboolean)getBooleanPropertyWithNSString:(NSString *)key {
  return OrgOssPdfreporterEngineUtilJRProperties_getBooleanPropertyWithNSString_(key);
}

+ (jint)getIntegerPropertyWithNSString:(NSString *)key {
  return OrgOssPdfreporterEngineUtilJRProperties_getIntegerPropertyWithNSString_(key);
}

+ (jfloat)getFloatPropertyWithNSString:(NSString *)key {
  return OrgOssPdfreporterEngineUtilJRProperties_getFloatPropertyWithNSString_(key);
}

+ (jboolean)asBooleanWithNSString:(NSString *)value {
  return OrgOssPdfreporterEngineUtilJRProperties_asBooleanWithNSString_(value);
}

+ (jint)asIntegerWithNSString:(NSString *)value {
  return OrgOssPdfreporterEngineUtilJRProperties_asIntegerWithNSString_(value);
}

+ (jfloat)asFloatWithNSString:(NSString *)value {
  return OrgOssPdfreporterEngineUtilJRProperties_asFloatWithNSString_(value);
}

+ (void)setPropertyWithNSString:(NSString *)key
                   withNSString:(NSString *)value {
  OrgOssPdfreporterEngineUtilJRProperties_setPropertyWithNSString_withNSString_(key, value);
}

+ (void)setPropertyWithNSString:(NSString *)key
                    withBoolean:(jboolean)value {
  OrgOssPdfreporterEngineUtilJRProperties_setPropertyWithNSString_withBoolean_(key, value);
}

+ (void)removePropertyValueWithNSString:(NSString *)key {
  OrgOssPdfreporterEngineUtilJRProperties_removePropertyValueWithNSString_(key);
}

+ (void)backupProperties {
  OrgOssPdfreporterEngineUtilJRProperties_backupProperties();
}

+ (void)restoreProperties {
  OrgOssPdfreporterEngineUtilJRProperties_restoreProperties();
}

+ (id<JavaUtilList>)getPropertiesWithNSString:(NSString *)prefix {
  return OrgOssPdfreporterEngineUtilJRProperties_getPropertiesWithNSString_(prefix);
}

+ (id<JavaUtilList>)getPropertiesWithOrgOssPdfreporterEngineJRPropertiesHolder:(id<OrgOssPdfreporterEngineJRPropertiesHolder>)propertiesHolder
                                                                  withNSString:(NSString *)prefix {
  return OrgOssPdfreporterEngineUtilJRProperties_getPropertiesWithOrgOssPdfreporterEngineJRPropertiesHolder_withNSString_(propertiesHolder, prefix);
}

+ (id<JavaUtilList>)getAllPropertiesWithOrgOssPdfreporterEngineJRPropertiesHolder:(id<OrgOssPdfreporterEngineJRPropertiesHolder>)propertiesHolder
                                                                     withNSString:(NSString *)prefix {
  return OrgOssPdfreporterEngineUtilJRProperties_getAllPropertiesWithOrgOssPdfreporterEngineJRPropertiesHolder_withNSString_(propertiesHolder, prefix);
}

+ (id<JavaUtilList>)getPropertiesWithOrgOssPdfreporterEngineJRPropertiesMap:(OrgOssPdfreporterEngineJRPropertiesMap *)propertiesMap
                                                               withNSString:(NSString *)prefix {
  return OrgOssPdfreporterEngineUtilJRProperties_getPropertiesWithOrgOssPdfreporterEngineJRPropertiesMap_withNSString_(propertiesMap, prefix);
}

+ (id<JavaUtilList>)getAllPropertiesWithOrgOssPdfreporterEngineJRPropertiesMap:(OrgOssPdfreporterEngineJRPropertiesMap *)propertiesMap
                                                                  withNSString:(NSString *)prefix {
  return OrgOssPdfreporterEngineUtilJRProperties_getAllPropertiesWithOrgOssPdfreporterEngineJRPropertiesMap_withNSString_(propertiesMap, prefix);
}

+ (NSString *)getPropertyWithOrgOssPdfreporterEngineJRPropertiesHolder:(id<OrgOssPdfreporterEngineJRPropertiesHolder>)propertiesHolder
                                                          withNSString:(NSString *)key {
  return OrgOssPdfreporterEngineUtilJRProperties_getPropertyWithOrgOssPdfreporterEngineJRPropertiesHolder_withNSString_(propertiesHolder, key);
}

+ (NSString *)getPropertyWithNSString:(NSString *)key
withOrgOssPdfreporterEngineJRPropertiesHolderArray:(IOSObjectArray *)propertiesHolders {
  return OrgOssPdfreporterEngineUtilJRProperties_getPropertyWithNSString_withOrgOssPdfreporterEngineJRPropertiesHolderArray_(key, propertiesHolders);
}

+ (NSString *)getPropertyWithOrgOssPdfreporterEngineJRPropertiesMap:(OrgOssPdfreporterEngineJRPropertiesMap *)propertiesMap
                                                       withNSString:(NSString *)key {
  return OrgOssPdfreporterEngineUtilJRProperties_getPropertyWithOrgOssPdfreporterEngineJRPropertiesMap_withNSString_(propertiesMap, key);
}

+ (jboolean)getBooleanPropertyWithOrgOssPdfreporterEngineJRPropertiesHolder:(id<OrgOssPdfreporterEngineJRPropertiesHolder>)propertiesHolder
                                                               withNSString:(NSString *)key
                                                                withBoolean:(jboolean)defaultValue {
  return OrgOssPdfreporterEngineUtilJRProperties_getBooleanPropertyWithOrgOssPdfreporterEngineJRPropertiesHolder_withNSString_withBoolean_(propertiesHolder, key, defaultValue);
}

+ (JavaLangBoolean *)getBooleanPropertyWithOrgOssPdfreporterEngineJRPropertiesHolder:(id<OrgOssPdfreporterEngineJRPropertiesHolder>)propertiesHolder
                                                                        withNSString:(NSString *)key {
  return OrgOssPdfreporterEngineUtilJRProperties_getBooleanPropertyWithOrgOssPdfreporterEngineJRPropertiesHolder_withNSString_(propertiesHolder, key);
}

+ (jboolean)getBooleanPropertyWithOrgOssPdfreporterEngineJRPropertiesMap:(OrgOssPdfreporterEngineJRPropertiesMap *)propertiesMap
                                                            withNSString:(NSString *)key
                                                             withBoolean:(jboolean)defaultValue {
  return OrgOssPdfreporterEngineUtilJRProperties_getBooleanPropertyWithOrgOssPdfreporterEngineJRPropertiesMap_withNSString_withBoolean_(propertiesMap, key, defaultValue);
}

+ (jint)getIntegerPropertyWithOrgOssPdfreporterEngineJRPropertiesHolder:(id<OrgOssPdfreporterEngineJRPropertiesHolder>)propertiesHolder
                                                           withNSString:(NSString *)key
                                                                withInt:(jint)defaultValue {
  return OrgOssPdfreporterEngineUtilJRProperties_getIntegerPropertyWithOrgOssPdfreporterEngineJRPropertiesHolder_withNSString_withInt_(propertiesHolder, key, defaultValue);
}

+ (jint)getIntegerPropertyWithOrgOssPdfreporterEngineJRPropertiesMap:(OrgOssPdfreporterEngineJRPropertiesMap *)propertiesMap
                                                        withNSString:(NSString *)key
                                                             withInt:(jint)defaultValue {
  return OrgOssPdfreporterEngineUtilJRProperties_getIntegerPropertyWithOrgOssPdfreporterEngineJRPropertiesMap_withNSString_withInt_(propertiesMap, key, defaultValue);
}

+ (jint)getIntegerPropertyWithNSString:(NSString *)key
                               withInt:(jint)defaultValue {
  return OrgOssPdfreporterEngineUtilJRProperties_getIntegerPropertyWithNSString_withInt_(key, defaultValue);
}

+ (jfloat)getFloatPropertyWithOrgOssPdfreporterEngineJRPropertiesHolder:(id<OrgOssPdfreporterEngineJRPropertiesHolder>)propertiesHolder
                                                           withNSString:(NSString *)key
                                                              withFloat:(jfloat)defaultValue {
  return OrgOssPdfreporterEngineUtilJRProperties_getFloatPropertyWithOrgOssPdfreporterEngineJRPropertiesHolder_withNSString_withFloat_(propertiesHolder, key, defaultValue);
}

+ (jfloat)getFloatPropertyWithOrgOssPdfreporterEngineJRPropertiesMap:(OrgOssPdfreporterEngineJRPropertiesMap *)propertiesMap
                                                        withNSString:(NSString *)key
                                                           withFloat:(jfloat)defaultValue {
  return OrgOssPdfreporterEngineUtilJRProperties_getFloatPropertyWithOrgOssPdfreporterEngineJRPropertiesMap_withNSString_withFloat_(propertiesMap, key, defaultValue);
}

+ (jfloat)getFloatPropertyWithNSString:(NSString *)key
                             withFloat:(jfloat)defaultValue {
  return OrgOssPdfreporterEngineUtilJRProperties_getFloatPropertyWithNSString_withFloat_(key, defaultValue);
}

+ (jlong)asLongWithNSString:(NSString *)value {
  return OrgOssPdfreporterEngineUtilJRProperties_asLongWithNSString_(value);
}

+ (jlong)getLongPropertyWithNSString:(NSString *)key {
  return OrgOssPdfreporterEngineUtilJRProperties_getLongPropertyWithNSString_(key);
}

+ (jlong)getLongPropertyWithOrgOssPdfreporterEngineJRPropertiesMap:(OrgOssPdfreporterEngineJRPropertiesMap *)propertiesMap
                                                      withNSString:(NSString *)key
                                                           withInt:(jint)defaultValue {
  return OrgOssPdfreporterEngineUtilJRProperties_getLongPropertyWithOrgOssPdfreporterEngineJRPropertiesMap_withNSString_withInt_(propertiesMap, key, defaultValue);
}

+ (jlong)getLongPropertyWithOrgOssPdfreporterEngineJRPropertiesHolder:(id<OrgOssPdfreporterEngineJRPropertiesHolder>)propertiesHolder
                                                         withNSString:(NSString *)key
                                                              withInt:(jint)defaultValue {
  return OrgOssPdfreporterEngineUtilJRProperties_getLongPropertyWithOrgOssPdfreporterEngineJRPropertiesHolder_withNSString_withInt_(propertiesHolder, key, defaultValue);
}

+ (OrgOssPdfreporterEngineJRPropertiesMap *)getOwnPropertiesWithOrgOssPdfreporterEngineJRPropertiesHolder:(id<OrgOssPdfreporterEngineJRPropertiesHolder>)propertiesHolder {
  return OrgOssPdfreporterEngineUtilJRProperties_getOwnPropertiesWithOrgOssPdfreporterEngineJRPropertiesHolder_(propertiesHolder);
}

+ (void)transferPropertiesWithOrgOssPdfreporterEngineJRPropertiesHolder:(id<OrgOssPdfreporterEngineJRPropertiesHolder>)source
                          withOrgOssPdfreporterEngineJRPropertiesHolder:(id<OrgOssPdfreporterEngineJRPropertiesHolder>)destination
                                                           withNSString:(NSString *)tranferPropertiesPrefix {
  OrgOssPdfreporterEngineUtilJRProperties_transferPropertiesWithOrgOssPdfreporterEngineJRPropertiesHolder_withOrgOssPdfreporterEngineJRPropertiesHolder_withNSString_(source, destination, tranferPropertiesPrefix);
}

+ (void)transferPropertiesWithOrgOssPdfreporterEngineJRPropertiesMap:(OrgOssPdfreporterEngineJRPropertiesMap *)source
                       withOrgOssPdfreporterEngineJRPropertiesHolder:(id<OrgOssPdfreporterEngineJRPropertiesHolder>)destination
                                                        withNSString:(NSString *)tranferPropertiesPrefix {
  OrgOssPdfreporterEngineUtilJRProperties_transferPropertiesWithOrgOssPdfreporterEngineJRPropertiesMap_withOrgOssPdfreporterEngineJRPropertiesHolder_withNSString_(source, destination, tranferPropertiesPrefix);
}

+ (void)transferWithOrgOssPdfreporterEngineJRPropertiesMap:(OrgOssPdfreporterEngineJRPropertiesMap *)source
             withOrgOssPdfreporterEngineJRPropertiesHolder:(id<OrgOssPdfreporterEngineJRPropertiesHolder>)destination
                                              withNSString:(NSString *)tranferPropertiesPrefix {
  OrgOssPdfreporterEngineUtilJRProperties_transferWithOrgOssPdfreporterEngineJRPropertiesMap_withOrgOssPdfreporterEngineJRPropertiesHolder_withNSString_(source, destination, tranferPropertiesPrefix);
}

+ (JavaLangCharacter *)getCharacterPropertyWithNSString:(NSString *)key {
  return OrgOssPdfreporterEngineUtilJRProperties_getCharacterPropertyWithNSString_(key);
}

+ (JavaLangCharacter *)getCharacterPropertyWithOrgOssPdfreporterEngineJRPropertiesMap:(OrgOssPdfreporterEngineJRPropertiesMap *)propertiesMap
                                                                         withNSString:(NSString *)key {
  return OrgOssPdfreporterEngineUtilJRProperties_getCharacterPropertyWithOrgOssPdfreporterEngineJRPropertiesMap_withNSString_(propertiesMap, key);
}

+ (JavaLangCharacter *)asCharacterWithNSString:(NSString *)value {
  return OrgOssPdfreporterEngineUtilJRProperties_asCharacterWithNSString_(value);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterEngineUtilJRProperties_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)initialize {
  if (self == [OrgOssPdfreporterEngineUtilJRProperties class]) {
    {
      OrgOssPdfreporterEngineUtilJRProperties_initProperties();
    }
    J2OBJC_SET_INITIALIZED(OrgOssPdfreporterEngineUtilJRProperties)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "reload", NULL, "V", 0x9, NULL, NULL },
    { "initProperties", NULL, "V", 0xc, NULL, NULL },
    { "loadSystemProperties", NULL, "V", 0xc, NULL, NULL },
    { "getDefaults", NULL, "Lorg.oss.pdfreporter.uses.java.util.Properties;", 0xc, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "getSystemPropertyWithNSString:", "getSystemProperty", "Ljava.lang.String;", 0xc, NULL, NULL },
    { "loadSystemPropertyWithNSString:withNSString:", "loadSystemProperty", "V", 0xc, NULL, NULL },
    { "loadPropertiesWithNSString:withOrgOssPdfreporterUsesJavaUtilProperties:", "loadProperties", "Lorg.oss.pdfreporter.uses.java.util.Properties;", 0x9, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "getPropertyWithNSString:", "getProperty", "Ljava.lang.String;", 0x9, NULL, NULL },
    { "getBooleanPropertyWithNSString:", "getBooleanProperty", "Z", 0x9, NULL, NULL },
    { "getIntegerPropertyWithNSString:", "getIntegerProperty", "I", 0x9, NULL, NULL },
    { "getFloatPropertyWithNSString:", "getFloatProperty", "F", 0x9, NULL, NULL },
    { "asBooleanWithNSString:", "asBoolean", "Z", 0x9, NULL, NULL },
    { "asIntegerWithNSString:", "asInteger", "I", 0x9, NULL, NULL },
    { "asFloatWithNSString:", "asFloat", "F", 0x9, NULL, NULL },
    { "setPropertyWithNSString:withNSString:", "setProperty", "V", 0x9, NULL, NULL },
    { "setPropertyWithNSString:withBoolean:", "setProperty", "V", 0x9, NULL, NULL },
    { "removePropertyValueWithNSString:", "removePropertyValue", "V", 0x9, NULL, NULL },
    { "backupProperties", NULL, "V", 0x9, NULL, NULL },
    { "restoreProperties", NULL, "V", 0x9, NULL, NULL },
    { "getPropertiesWithNSString:", "getProperties", "Ljava.util.List;", 0x9, NULL, "(Ljava/lang/String;)Ljava/util/List<Lorg/oss/pdfreporter/engine/util/JRProperties$PropertySuffix;>;" },
    { "getPropertiesWithOrgOssPdfreporterEngineJRPropertiesHolder:withNSString:", "getProperties", "Ljava.util.List;", 0x9, NULL, "(Lorg/oss/pdfreporter/engine/JRPropertiesHolder;Ljava/lang/String;)Ljava/util/List<Lorg/oss/pdfreporter/engine/util/JRProperties$PropertySuffix;>;" },
    { "getAllPropertiesWithOrgOssPdfreporterEngineJRPropertiesHolder:withNSString:", "getAllProperties", "Ljava.util.List;", 0x9, NULL, "(Lorg/oss/pdfreporter/engine/JRPropertiesHolder;Ljava/lang/String;)Ljava/util/List<Lorg/oss/pdfreporter/engine/util/JRProperties$PropertySuffix;>;" },
    { "getPropertiesWithOrgOssPdfreporterEngineJRPropertiesMap:withNSString:", "getProperties", "Ljava.util.List;", 0x9, NULL, "(Lorg/oss/pdfreporter/engine/JRPropertiesMap;Ljava/lang/String;)Ljava/util/List<Lorg/oss/pdfreporter/engine/util/JRProperties$PropertySuffix;>;" },
    { "getAllPropertiesWithOrgOssPdfreporterEngineJRPropertiesMap:withNSString:", "getAllProperties", "Ljava.util.List;", 0x9, NULL, "(Lorg/oss/pdfreporter/engine/JRPropertiesMap;Ljava/lang/String;)Ljava/util/List<Lorg/oss/pdfreporter/engine/util/JRProperties$PropertySuffix;>;" },
    { "getPropertyWithOrgOssPdfreporterEngineJRPropertiesHolder:withNSString:", "getProperty", "Ljava.lang.String;", 0x9, NULL, NULL },
    { "getPropertyWithNSString:withOrgOssPdfreporterEngineJRPropertiesHolderArray:", "getProperty", "Ljava.lang.String;", 0x89, NULL, NULL },
    { "getPropertyWithOrgOssPdfreporterEngineJRPropertiesMap:withNSString:", "getProperty", "Ljava.lang.String;", 0x9, NULL, NULL },
    { "getBooleanPropertyWithOrgOssPdfreporterEngineJRPropertiesHolder:withNSString:withBoolean:", "getBooleanProperty", "Z", 0x9, NULL, NULL },
    { "getBooleanPropertyWithOrgOssPdfreporterEngineJRPropertiesHolder:withNSString:", "getBooleanProperty", "Ljava.lang.Boolean;", 0x9, NULL, NULL },
    { "getBooleanPropertyWithOrgOssPdfreporterEngineJRPropertiesMap:withNSString:withBoolean:", "getBooleanProperty", "Z", 0x9, NULL, NULL },
    { "getIntegerPropertyWithOrgOssPdfreporterEngineJRPropertiesHolder:withNSString:withInt:", "getIntegerProperty", "I", 0x9, NULL, NULL },
    { "getIntegerPropertyWithOrgOssPdfreporterEngineJRPropertiesMap:withNSString:withInt:", "getIntegerProperty", "I", 0x9, NULL, NULL },
    { "getIntegerPropertyWithNSString:withInt:", "getIntegerProperty", "I", 0x9, NULL, NULL },
    { "getFloatPropertyWithOrgOssPdfreporterEngineJRPropertiesHolder:withNSString:withFloat:", "getFloatProperty", "F", 0x9, NULL, NULL },
    { "getFloatPropertyWithOrgOssPdfreporterEngineJRPropertiesMap:withNSString:withFloat:", "getFloatProperty", "F", 0x9, NULL, NULL },
    { "getFloatPropertyWithNSString:withFloat:", "getFloatProperty", "F", 0x9, NULL, NULL },
    { "asLongWithNSString:", "asLong", "J", 0x9, NULL, NULL },
    { "getLongPropertyWithNSString:", "getLongProperty", "J", 0x9, NULL, NULL },
    { "getLongPropertyWithOrgOssPdfreporterEngineJRPropertiesMap:withNSString:withInt:", "getLongProperty", "J", 0x9, NULL, NULL },
    { "getLongPropertyWithOrgOssPdfreporterEngineJRPropertiesHolder:withNSString:withInt:", "getLongProperty", "J", 0x9, NULL, NULL },
    { "getOwnPropertiesWithOrgOssPdfreporterEngineJRPropertiesHolder:", "getOwnProperties", "Lorg.oss.pdfreporter.engine.JRPropertiesMap;", 0xc, NULL, NULL },
    { "transferPropertiesWithOrgOssPdfreporterEngineJRPropertiesHolder:withOrgOssPdfreporterEngineJRPropertiesHolder:withNSString:", "transferProperties", "V", 0x9, NULL, NULL },
    { "transferPropertiesWithOrgOssPdfreporterEngineJRPropertiesMap:withOrgOssPdfreporterEngineJRPropertiesHolder:withNSString:", "transferProperties", "V", 0x9, NULL, NULL },
    { "transferWithOrgOssPdfreporterEngineJRPropertiesMap:withOrgOssPdfreporterEngineJRPropertiesHolder:withNSString:", "transfer", "V", 0xc, NULL, NULL },
    { "getCharacterPropertyWithNSString:", "getCharacterProperty", "Ljava.lang.Character;", 0x9, NULL, NULL },
    { "getCharacterPropertyWithOrgOssPdfreporterEngineJRPropertiesMap:withNSString:", "getCharacterProperty", "Ljava.lang.Character;", 0x9, NULL, NULL },
    { "asCharacterWithNSString:", "asCharacter", "Ljava.lang.Character;", 0x9, NULL, NULL },
    { "init", "JRProperties", NULL, 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "DEFAULT_PROPERTIES_FILE", "DEFAULT_PROPERTIES_FILE", 0x1c, "Ljava.lang.String;", &OrgOssPdfreporterEngineUtilJRProperties_DEFAULT_PROPERTIES_FILE, NULL, .constantValue.asLong = 0 },
    { "PROPERTY_PREFIX", "PROPERTY_PREFIX", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineUtilJRProperties_PROPERTY_PREFIX, NULL, .constantValue.asLong = 0 },
    { "PROPERTIES_FILE", "PROPERTIES_FILE", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineUtilJRProperties_PROPERTIES_FILE, NULL, .constantValue.asLong = 0 },
    { "COMPILER_CLASS", "COMPILER_CLASS", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineUtilJRProperties_COMPILER_CLASS, NULL, .constantValue.asLong = 0 },
    { "COMPILER_XML_VALIDATION", "COMPILER_XML_VALIDATION", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineUtilJRProperties_COMPILER_XML_VALIDATION, NULL, .constantValue.asLong = 0 },
    { "COMPILER_KEEP_JAVA_FILE", "COMPILER_KEEP_JAVA_FILE", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineUtilJRProperties_COMPILER_KEEP_JAVA_FILE, NULL, .constantValue.asLong = 0 },
    { "COMPILER_TEMP_DIR", "COMPILER_TEMP_DIR", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineUtilJRProperties_COMPILER_TEMP_DIR, NULL, .constantValue.asLong = 0 },
    { "COMPILER_CLASSPATH", "COMPILER_CLASSPATH", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineUtilJRProperties_COMPILER_CLASSPATH, NULL, .constantValue.asLong = 0 },
    { "EXPORT_XML_VALIDATION", "EXPORT_XML_VALIDATION", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineUtilJRProperties_EXPORT_XML_VALIDATION, NULL, .constantValue.asLong = 0 },
    { "PDF_FONT_FILES_PREFIX", "PDF_FONT_FILES_PREFIX", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineUtilJRProperties_PDF_FONT_FILES_PREFIX, NULL, .constantValue.asLong = 0 },
    { "PDF_FONT_DIRS_PREFIX", "PDF_FONT_DIRS_PREFIX", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineUtilJRProperties_PDF_FONT_DIRS_PREFIX, NULL, .constantValue.asLong = 0 },
    { "QUERY_EXECUTER_FACTORY_PREFIX", "QUERY_EXECUTER_FACTORY_PREFIX", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineUtilJRProperties_QUERY_EXECUTER_FACTORY_PREFIX, NULL, .constantValue.asLong = 0 },
    { "properties", "properties", 0x4c, "Ljava.util.Map;", &OrgOssPdfreporterEngineUtilJRProperties_properties, "Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;", .constantValue.asLong = 0 },
    { "savedProps", "savedProps", 0xc, "Ljava.util.Map;", &OrgOssPdfreporterEngineUtilJRProperties_savedProps, "Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;", .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lorg.oss.pdfreporter.engine.util.JRProperties$PropertySuffix;"};
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineUtilJRProperties = { 2, "JRProperties", "org.oss.pdfreporter.engine.util", NULL, 0x11, 48, methods, 14, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_OrgOssPdfreporterEngineUtilJRProperties;
}

@end

void OrgOssPdfreporterEngineUtilJRProperties_reload() {
  OrgOssPdfreporterEngineUtilJRProperties_initialize();
  [((id<JavaUtilMap>) nil_chk(JreLoadVolatileId(&OrgOssPdfreporterEngineUtilJRProperties_properties))) clear];
  OrgOssPdfreporterEngineUtilJRProperties_initProperties();
}

void OrgOssPdfreporterEngineUtilJRProperties_initProperties() {
  OrgOssPdfreporterEngineUtilJRProperties_initialize();
  @try {
    OrgOssPdfreporterUsesJavaUtilProperties *defaults = OrgOssPdfreporterEngineUtilJRProperties_getDefaults();
    NSString *propFile = OrgOssPdfreporterEngineUtilJRProperties_getSystemPropertyWithNSString_(OrgOssPdfreporterEngineUtilJRProperties_PROPERTIES_FILE);
    OrgOssPdfreporterUsesJavaUtilProperties *loadedProps;
    if (propFile == nil) {
      loadedProps = OrgOssPdfreporterEngineUtilJRProperties_loadPropertiesWithNSString_withOrgOssPdfreporterUsesJavaUtilProperties_(OrgOssPdfreporterEngineUtilJRProperties_DEFAULT_PROPERTIES_FILE, defaults);
      if (loadedProps == nil) {
        loadedProps = new_OrgOssPdfreporterUsesJavaUtilProperties_initWithOrgOssPdfreporterUsesJavaUtilProperties_(defaults);
      }
    }
    else {
      loadedProps = OrgOssPdfreporterEngineUtilJRProperties_loadPropertiesWithNSString_withOrgOssPdfreporterUsesJavaUtilProperties_(propFile, defaults);
      if (loadedProps == nil) {
        @throw new_OrgOssPdfreporterEngineJRRuntimeException_initWithNSString_(JreStrcat("$$C", @"Could not load properties file \"", propFile, '"'));
      }
    }
    (void) JreVolatileStrongAssignAndConsume(&OrgOssPdfreporterEngineUtilJRProperties_properties, new_JavaUtilHashMap_init());
    for (id<JavaUtilEnumeration> names = [loadedProps propertyNames]; [((id<JavaUtilEnumeration>) nil_chk(names)) hasMoreElements]; ) {
      NSString *name = (NSString *) cast_chk([names nextElement], [NSString class]);
      NSString *value = [loadedProps getPropertyWithNSString:name];
      (void) [((id<JavaUtilMap>) nil_chk(JreLoadVolatileId(&OrgOssPdfreporterEngineUtilJRProperties_properties))) putWithId:name withId:value];
    }
    OrgOssPdfreporterEngineUtilJRProperties_loadSystemProperties();
  }
  @catch (OrgOssPdfreporterEngineJRException *e) {
    @throw new_OrgOssPdfreporterEngineJRRuntimeException_initWithNSString_withNSException_(@"Error loading the properties", e);
  }
}

void OrgOssPdfreporterEngineUtilJRProperties_loadSystemProperties() {
  OrgOssPdfreporterEngineUtilJRProperties_initialize();
  OrgOssPdfreporterEngineUtilJRProperties_loadSystemPropertyWithNSString_withNSString_(@"jasper.reports.compiler.class", OrgOssPdfreporterEngineUtilJRProperties_COMPILER_CLASS);
  OrgOssPdfreporterEngineUtilJRProperties_loadSystemPropertyWithNSString_withNSString_(@"jasper.reports.compile.xml.validation", OrgOssPdfreporterEngineUtilJRProperties_COMPILER_XML_VALIDATION);
  OrgOssPdfreporterEngineUtilJRProperties_loadSystemPropertyWithNSString_withNSString_(@"jasper.reports.export.xml.validation", OrgOssPdfreporterEngineUtilJRProperties_EXPORT_XML_VALIDATION);
  OrgOssPdfreporterEngineUtilJRProperties_loadSystemPropertyWithNSString_withNSString_(@"jasper.reports.compile.keep.java.file", OrgOssPdfreporterEngineUtilJRProperties_COMPILER_KEEP_JAVA_FILE);
  OrgOssPdfreporterEngineUtilJRProperties_loadSystemPropertyWithNSString_withNSString_(@"jasper.reports.compile.temp", OrgOssPdfreporterEngineUtilJRProperties_COMPILER_TEMP_DIR);
  OrgOssPdfreporterEngineUtilJRProperties_loadSystemPropertyWithNSString_withNSString_(@"jasper.reports.compile.class.path", OrgOssPdfreporterEngineUtilJRProperties_COMPILER_CLASSPATH);
}

OrgOssPdfreporterUsesJavaUtilProperties *OrgOssPdfreporterEngineUtilJRProperties_getDefaults() {
  OrgOssPdfreporterEngineUtilJRProperties_initialize();
  OrgOssPdfreporterUsesJavaUtilProperties *defaults = new_OrgOssPdfreporterUsesJavaUtilProperties_init();
  JavaIoInputStream *is = OrgOssPdfreporterEngineUtilJRLoader_getResourceInputStreamWithNSString_(@"default.jasperreports.properties");
  if (is == nil) {
    @throw new_OrgOssPdfreporterEngineJRException_initWithNSString_(@"Default default.jasperreports.properties file not found.");
  }
  @try {
    [defaults load__WithJavaIoInputStream:is];
  }
  @catch (JavaIoIOException *e) {
    @throw new_OrgOssPdfreporterEngineJRException_initWithNSString_withNSException_(@"Failed to load default properties.", e);
  }
  @finally {
    @try {
      [is close];
    }
    @catch (JavaIoIOException *e) {
    }
  }
  NSString *userDir = OrgOssPdfreporterEngineUtilJRProperties_getSystemPropertyWithNSString_(@"user.dir");
  if (userDir != nil) {
    (void) [defaults setPropertyWithNSString:OrgOssPdfreporterEngineUtilJRProperties_COMPILER_TEMP_DIR withNSString:userDir];
  }
  NSString *classPath = OrgOssPdfreporterEngineUtilJRProperties_getSystemPropertyWithNSString_(@"java.class.path");
  if (classPath != nil) {
    (void) [defaults setPropertyWithNSString:OrgOssPdfreporterEngineUtilJRProperties_COMPILER_CLASSPATH withNSString:classPath];
  }
  return defaults;
}

NSString *OrgOssPdfreporterEngineUtilJRProperties_getSystemPropertyWithNSString_(NSString *propertyName) {
  OrgOssPdfreporterEngineUtilJRProperties_initialize();
  @try {
    return JavaLangSystem_getPropertyWithNSString_(propertyName);
  }
  @catch (JavaLangSecurityException *e) {
    return nil;
  }
}

void OrgOssPdfreporterEngineUtilJRProperties_loadSystemPropertyWithNSString_withNSString_(NSString *sysKey, NSString *propKey) {
  OrgOssPdfreporterEngineUtilJRProperties_initialize();
  NSString *val = OrgOssPdfreporterEngineUtilJRProperties_getSystemPropertyWithNSString_(sysKey);
  if (val != nil) {
    (void) [((id<JavaUtilMap>) nil_chk(JreLoadVolatileId(&OrgOssPdfreporterEngineUtilJRProperties_properties))) putWithId:propKey withId:val];
  }
}

OrgOssPdfreporterUsesJavaUtilProperties *OrgOssPdfreporterEngineUtilJRProperties_loadPropertiesWithNSString_withOrgOssPdfreporterUsesJavaUtilProperties_(NSString *name, OrgOssPdfreporterUsesJavaUtilProperties *defaults) {
  OrgOssPdfreporterEngineUtilJRProperties_initialize();
  OrgOssPdfreporterUsesJavaUtilProperties *properties = nil;
  JavaIoInputStream *is = nil;
  @try {
    is = OrgOssPdfreporterEngineUtilJRLoader_getLocationInputStreamWithNSString_(name);
  }
  @catch (JavaLangSecurityException *e) {
  }
  if (is != nil) {
    properties = new_OrgOssPdfreporterUsesJavaUtilProperties_initWithOrgOssPdfreporterUsesJavaUtilProperties_(defaults);
    @try {
      [properties load__WithJavaIoInputStream:is];
    }
    @catch (JavaIoIOException *e) {
      @throw new_OrgOssPdfreporterEngineJRException_initWithNSString_withNSException_(JreStrcat("$$C", @"Failed to load properties file \"", name, '"'), e);
    }
    @finally {
      @try {
        [is close];
      }
      @catch (JavaIoIOException *e) {
      }
    }
  }
  return properties;
}

NSString *OrgOssPdfreporterEngineUtilJRProperties_getPropertyWithNSString_(NSString *key) {
  OrgOssPdfreporterEngineUtilJRProperties_initialize();
  return [((id<JavaUtilMap>) nil_chk(JreLoadVolatileId(&OrgOssPdfreporterEngineUtilJRProperties_properties))) getWithId:key];
}

jboolean OrgOssPdfreporterEngineUtilJRProperties_getBooleanPropertyWithNSString_(NSString *key) {
  OrgOssPdfreporterEngineUtilJRProperties_initialize();
  return OrgOssPdfreporterEngineUtilJRProperties_asBooleanWithNSString_([((id<JavaUtilMap>) nil_chk(JreLoadVolatileId(&OrgOssPdfreporterEngineUtilJRProperties_properties))) getWithId:key]);
}

jint OrgOssPdfreporterEngineUtilJRProperties_getIntegerPropertyWithNSString_(NSString *key) {
  OrgOssPdfreporterEngineUtilJRProperties_initialize();
  return OrgOssPdfreporterEngineUtilJRProperties_asIntegerWithNSString_([((id<JavaUtilMap>) nil_chk(JreLoadVolatileId(&OrgOssPdfreporterEngineUtilJRProperties_properties))) getWithId:key]);
}

jfloat OrgOssPdfreporterEngineUtilJRProperties_getFloatPropertyWithNSString_(NSString *key) {
  OrgOssPdfreporterEngineUtilJRProperties_initialize();
  return OrgOssPdfreporterEngineUtilJRProperties_asFloatWithNSString_([((id<JavaUtilMap>) nil_chk(JreLoadVolatileId(&OrgOssPdfreporterEngineUtilJRProperties_properties))) getWithId:key]);
}

jboolean OrgOssPdfreporterEngineUtilJRProperties_asBooleanWithNSString_(NSString *value) {
  OrgOssPdfreporterEngineUtilJRProperties_initialize();
  return [((JavaLangBoolean *) nil_chk(JavaLangBoolean_valueOfWithNSString_(value))) booleanValue];
}

jint OrgOssPdfreporterEngineUtilJRProperties_asIntegerWithNSString_(NSString *value) {
  OrgOssPdfreporterEngineUtilJRProperties_initialize();
  return JavaLangInteger_parseIntWithNSString_(value);
}

jfloat OrgOssPdfreporterEngineUtilJRProperties_asFloatWithNSString_(NSString *value) {
  OrgOssPdfreporterEngineUtilJRProperties_initialize();
  return JavaLangFloat_parseFloatWithNSString_(value);
}

void OrgOssPdfreporterEngineUtilJRProperties_setPropertyWithNSString_withNSString_(NSString *key, NSString *value) {
  OrgOssPdfreporterEngineUtilJRProperties_initialize();
  (void) [((id<JavaUtilMap>) nil_chk(JreLoadVolatileId(&OrgOssPdfreporterEngineUtilJRProperties_properties))) putWithId:key withId:value];
  [((OrgOssPdfreporterEngineDefaultJasperReportsContext *) nil_chk(OrgOssPdfreporterEngineDefaultJasperReportsContext_getInstance())) setPropertyWithNSString:key withNSString:value];
}

void OrgOssPdfreporterEngineUtilJRProperties_setPropertyWithNSString_withBoolean_(NSString *key, jboolean value) {
  OrgOssPdfreporterEngineUtilJRProperties_initialize();
  OrgOssPdfreporterEngineUtilJRProperties_setPropertyWithNSString_withNSString_(key, NSString_valueOfBool_(value));
}

void OrgOssPdfreporterEngineUtilJRProperties_removePropertyValueWithNSString_(NSString *key) {
  OrgOssPdfreporterEngineUtilJRProperties_initialize();
  (void) [((id<JavaUtilMap>) nil_chk(JreLoadVolatileId(&OrgOssPdfreporterEngineUtilJRProperties_properties))) removeWithId:key];
}

void OrgOssPdfreporterEngineUtilJRProperties_backupProperties() {
  OrgOssPdfreporterEngineUtilJRProperties_initialize();
  OrgOssPdfreporterEngineUtilJRProperties_savedProps = new_JavaUtilHashMap_initWithJavaUtilMap_(JreLoadVolatileId(&OrgOssPdfreporterEngineUtilJRProperties_properties));
}

void OrgOssPdfreporterEngineUtilJRProperties_restoreProperties() {
  OrgOssPdfreporterEngineUtilJRProperties_initialize();
  if (OrgOssPdfreporterEngineUtilJRProperties_savedProps != nil) {
    @try {
      id<JavaUtilMap> newProps = new_JavaUtilHashMap_initWithJavaUtilMap_(OrgOssPdfreporterEngineUtilJRProperties_savedProps);
      (void) JreVolatileStrongAssign(&OrgOssPdfreporterEngineUtilJRProperties_properties, newProps);
    }
    @finally {
      OrgOssPdfreporterEngineUtilJRProperties_savedProps = nil;
    }
  }
}

id<JavaUtilList> OrgOssPdfreporterEngineUtilJRProperties_getPropertiesWithNSString_(NSString *prefix) {
  OrgOssPdfreporterEngineUtilJRProperties_initialize();
  jint prefixLength = ((jint) [((NSString *) nil_chk(prefix)) length]);
  id<JavaUtilList> values = new_JavaUtilArrayList_init();
  for (id<JavaUtilMap_Entry> __strong entry_ in nil_chk([((id<JavaUtilMap>) nil_chk(JreLoadVolatileId(&OrgOssPdfreporterEngineUtilJRProperties_properties))) entrySet])) {
    NSString *name = [((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey];
    if ([((NSString *) nil_chk(name)) hasPrefix:prefix]) {
      NSString *suffix = [name substring:prefixLength];
      NSString *value = [entry_ getValue];
      [values addWithId:new_OrgOssPdfreporterEngineUtilJRProperties_PropertySuffix_initWithNSString_withNSString_withNSString_(name, suffix, value)];
    }
  }
  return values;
}

id<JavaUtilList> OrgOssPdfreporterEngineUtilJRProperties_getPropertiesWithOrgOssPdfreporterEngineJRPropertiesHolder_withNSString_(id<OrgOssPdfreporterEngineJRPropertiesHolder> propertiesHolder, NSString *prefix) {
  OrgOssPdfreporterEngineUtilJRProperties_initialize();
  return OrgOssPdfreporterEngineUtilJRProperties_getPropertiesWithOrgOssPdfreporterEngineJRPropertiesMap_withNSString_(OrgOssPdfreporterEngineUtilJRProperties_getOwnPropertiesWithOrgOssPdfreporterEngineJRPropertiesHolder_(propertiesHolder), prefix);
}

id<JavaUtilList> OrgOssPdfreporterEngineUtilJRProperties_getAllPropertiesWithOrgOssPdfreporterEngineJRPropertiesHolder_withNSString_(id<OrgOssPdfreporterEngineJRPropertiesHolder> propertiesHolder, NSString *prefix) {
  OrgOssPdfreporterEngineUtilJRProperties_initialize();
  return OrgOssPdfreporterEngineUtilJRProperties_getAllPropertiesWithOrgOssPdfreporterEngineJRPropertiesMap_withNSString_(OrgOssPdfreporterEngineUtilJRProperties_getOwnPropertiesWithOrgOssPdfreporterEngineJRPropertiesHolder_(propertiesHolder), prefix);
}

id<JavaUtilList> OrgOssPdfreporterEngineUtilJRProperties_getPropertiesWithOrgOssPdfreporterEngineJRPropertiesMap_withNSString_(OrgOssPdfreporterEngineJRPropertiesMap *propertiesMap, NSString *prefix) {
  OrgOssPdfreporterEngineUtilJRProperties_initialize();
  jint prefixLength = ((jint) [((NSString *) nil_chk(prefix)) length]);
  id<JavaUtilList> values = new_JavaUtilArrayList_init();
  if (propertiesMap != nil) {
    IOSObjectArray *propertyNames = [propertiesMap getPropertyNames];
    for (jint i = 0; i < ((IOSObjectArray *) nil_chk(propertyNames))->size_; i++) {
      NSString *name = IOSObjectArray_Get(propertyNames, i);
      if ([((NSString *) nil_chk(name)) hasPrefix:prefix]) {
        NSString *suffix = [name substring:prefixLength];
        NSString *value = [propertiesMap getPropertyWithNSString:name];
        [values addWithId:new_OrgOssPdfreporterEngineUtilJRProperties_PropertySuffix_initWithNSString_withNSString_withNSString_(name, suffix, value)];
      }
    }
  }
  return values;
}

id<JavaUtilList> OrgOssPdfreporterEngineUtilJRProperties_getAllPropertiesWithOrgOssPdfreporterEngineJRPropertiesMap_withNSString_(OrgOssPdfreporterEngineJRPropertiesMap *propertiesMap, NSString *prefix) {
  OrgOssPdfreporterEngineUtilJRProperties_initialize();
  id<JavaUtilList> own = OrgOssPdfreporterEngineUtilJRProperties_getPropertiesWithOrgOssPdfreporterEngineJRPropertiesMap_withNSString_(propertiesMap, prefix);
  id<JavaUtilList> global = OrgOssPdfreporterEngineUtilJRProperties_getPropertiesWithNSString_(prefix);
  id<JavaUtilList> collected;
  if ([((id<JavaUtilList>) nil_chk(own)) isEmpty]) {
    collected = global;
  }
  else {
    if (![((id<JavaUtilList>) nil_chk(global)) isEmpty]) {
      id<JavaUtilSet> ownSuffixes = new_JavaUtilHashSet_init();
      for (id<JavaUtilIterator> it = [own iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
        OrgOssPdfreporterEngineUtilJRProperties_PropertySuffix *prop = [it next];
        [ownSuffixes addWithId:[((OrgOssPdfreporterEngineUtilJRProperties_PropertySuffix *) nil_chk(prop)) getSuffix]];
      }
      for (id<JavaUtilIterator> it = [global iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
        OrgOssPdfreporterEngineUtilJRProperties_PropertySuffix *prop = [it next];
        if (![ownSuffixes containsWithId:[((OrgOssPdfreporterEngineUtilJRProperties_PropertySuffix *) nil_chk(prop)) getSuffix]]) {
          [own addWithId:prop];
        }
      }
    }
    collected = own;
  }
  return collected;
}

NSString *OrgOssPdfreporterEngineUtilJRProperties_getPropertyWithOrgOssPdfreporterEngineJRPropertiesHolder_withNSString_(id<OrgOssPdfreporterEngineJRPropertiesHolder> propertiesHolder, NSString *key) {
  OrgOssPdfreporterEngineUtilJRProperties_initialize();
  NSString *value = nil;
  while (propertiesHolder != nil && value == nil) {
    if ([propertiesHolder hasProperties]) {
      value = [((OrgOssPdfreporterEngineJRPropertiesMap *) nil_chk([propertiesHolder getPropertiesMap])) getPropertyWithNSString:key];
    }
    propertiesHolder = [propertiesHolder getParentProperties];
  }
  if (value == nil) {
    value = [((id<JavaUtilMap>) nil_chk(JreLoadVolatileId(&OrgOssPdfreporterEngineUtilJRProperties_properties))) getWithId:key];
  }
  return value;
}

NSString *OrgOssPdfreporterEngineUtilJRProperties_getPropertyWithNSString_withOrgOssPdfreporterEngineJRPropertiesHolderArray_(NSString *key, IOSObjectArray *propertiesHolders) {
  OrgOssPdfreporterEngineUtilJRProperties_initialize();
  NSString *value = nil;
  {
    IOSObjectArray *a__ = propertiesHolders;
    id<OrgOssPdfreporterEngineJRPropertiesHolder> const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    id<OrgOssPdfreporterEngineJRPropertiesHolder> const *e__ = b__ + a__->size_;
    main: while (b__ < e__) {
      id<OrgOssPdfreporterEngineJRPropertiesHolder> propertiesHolder = *b__++;
      while (propertiesHolder != nil) {
        if ([propertiesHolder hasProperties]) {
          NSString *prop = [((OrgOssPdfreporterEngineJRPropertiesMap *) nil_chk([propertiesHolder getPropertiesMap])) getPropertyWithNSString:key];
          if (prop != nil) {
            value = prop;
            return value;
          }
        }
        propertiesHolder = [propertiesHolder getParentProperties];
      }
    }
  }
  if (value == nil) {
    value = [((id<JavaUtilMap>) nil_chk(JreLoadVolatileId(&OrgOssPdfreporterEngineUtilJRProperties_properties))) getWithId:key];
  }
  return value;
}

NSString *OrgOssPdfreporterEngineUtilJRProperties_getPropertyWithOrgOssPdfreporterEngineJRPropertiesMap_withNSString_(OrgOssPdfreporterEngineJRPropertiesMap *propertiesMap, NSString *key) {
  OrgOssPdfreporterEngineUtilJRProperties_initialize();
  NSString *value = nil;
  if (propertiesMap != nil) {
    value = [propertiesMap getPropertyWithNSString:key];
  }
  if (value == nil) {
    value = [((id<JavaUtilMap>) nil_chk(JreLoadVolatileId(&OrgOssPdfreporterEngineUtilJRProperties_properties))) getWithId:key];
  }
  return value;
}

jboolean OrgOssPdfreporterEngineUtilJRProperties_getBooleanPropertyWithOrgOssPdfreporterEngineJRPropertiesHolder_withNSString_withBoolean_(id<OrgOssPdfreporterEngineJRPropertiesHolder> propertiesHolder, NSString *key, jboolean defaultValue) {
  OrgOssPdfreporterEngineUtilJRProperties_initialize();
  NSString *value = OrgOssPdfreporterEngineUtilJRProperties_getPropertyWithOrgOssPdfreporterEngineJRPropertiesHolder_withNSString_(propertiesHolder, key);
  return value == nil ? defaultValue : OrgOssPdfreporterEngineUtilJRProperties_asBooleanWithNSString_(value);
}

JavaLangBoolean *OrgOssPdfreporterEngineUtilJRProperties_getBooleanPropertyWithOrgOssPdfreporterEngineJRPropertiesHolder_withNSString_(id<OrgOssPdfreporterEngineJRPropertiesHolder> propertiesHolder, NSString *key) {
  OrgOssPdfreporterEngineUtilJRProperties_initialize();
  NSString *value = OrgOssPdfreporterEngineUtilJRProperties_getPropertyWithOrgOssPdfreporterEngineJRPropertiesHolder_withNSString_(propertiesHolder, key);
  return value == nil ? nil : JavaLangBoolean_valueOfWithNSString_(value);
}

jboolean OrgOssPdfreporterEngineUtilJRProperties_getBooleanPropertyWithOrgOssPdfreporterEngineJRPropertiesMap_withNSString_withBoolean_(OrgOssPdfreporterEngineJRPropertiesMap *propertiesMap, NSString *key, jboolean defaultValue) {
  OrgOssPdfreporterEngineUtilJRProperties_initialize();
  NSString *value = OrgOssPdfreporterEngineUtilJRProperties_getPropertyWithOrgOssPdfreporterEngineJRPropertiesMap_withNSString_(propertiesMap, key);
  return value == nil ? defaultValue : OrgOssPdfreporterEngineUtilJRProperties_asBooleanWithNSString_(value);
}

jint OrgOssPdfreporterEngineUtilJRProperties_getIntegerPropertyWithOrgOssPdfreporterEngineJRPropertiesHolder_withNSString_withInt_(id<OrgOssPdfreporterEngineJRPropertiesHolder> propertiesHolder, NSString *key, jint defaultValue) {
  OrgOssPdfreporterEngineUtilJRProperties_initialize();
  NSString *value = OrgOssPdfreporterEngineUtilJRProperties_getPropertyWithOrgOssPdfreporterEngineJRPropertiesHolder_withNSString_(propertiesHolder, key);
  return value == nil ? defaultValue : OrgOssPdfreporterEngineUtilJRProperties_asIntegerWithNSString_(value);
}

jint OrgOssPdfreporterEngineUtilJRProperties_getIntegerPropertyWithOrgOssPdfreporterEngineJRPropertiesMap_withNSString_withInt_(OrgOssPdfreporterEngineJRPropertiesMap *propertiesMap, NSString *key, jint defaultValue) {
  OrgOssPdfreporterEngineUtilJRProperties_initialize();
  NSString *value = OrgOssPdfreporterEngineUtilJRProperties_getPropertyWithOrgOssPdfreporterEngineJRPropertiesMap_withNSString_(propertiesMap, key);
  return value == nil ? defaultValue : OrgOssPdfreporterEngineUtilJRProperties_asIntegerWithNSString_(value);
}

jint OrgOssPdfreporterEngineUtilJRProperties_getIntegerPropertyWithNSString_withInt_(NSString *key, jint defaultValue) {
  OrgOssPdfreporterEngineUtilJRProperties_initialize();
  NSString *value = OrgOssPdfreporterEngineUtilJRProperties_getPropertyWithNSString_(key);
  return value == nil ? defaultValue : OrgOssPdfreporterEngineUtilJRProperties_asIntegerWithNSString_(value);
}

jfloat OrgOssPdfreporterEngineUtilJRProperties_getFloatPropertyWithOrgOssPdfreporterEngineJRPropertiesHolder_withNSString_withFloat_(id<OrgOssPdfreporterEngineJRPropertiesHolder> propertiesHolder, NSString *key, jfloat defaultValue) {
  OrgOssPdfreporterEngineUtilJRProperties_initialize();
  NSString *value = OrgOssPdfreporterEngineUtilJRProperties_getPropertyWithOrgOssPdfreporterEngineJRPropertiesHolder_withNSString_(propertiesHolder, key);
  return value == nil ? defaultValue : OrgOssPdfreporterEngineUtilJRProperties_asFloatWithNSString_(value);
}

jfloat OrgOssPdfreporterEngineUtilJRProperties_getFloatPropertyWithOrgOssPdfreporterEngineJRPropertiesMap_withNSString_withFloat_(OrgOssPdfreporterEngineJRPropertiesMap *propertiesMap, NSString *key, jfloat defaultValue) {
  OrgOssPdfreporterEngineUtilJRProperties_initialize();
  NSString *value = OrgOssPdfreporterEngineUtilJRProperties_getPropertyWithOrgOssPdfreporterEngineJRPropertiesMap_withNSString_(propertiesMap, key);
  return value == nil ? defaultValue : OrgOssPdfreporterEngineUtilJRProperties_asFloatWithNSString_(value);
}

jfloat OrgOssPdfreporterEngineUtilJRProperties_getFloatPropertyWithNSString_withFloat_(NSString *key, jfloat defaultValue) {
  OrgOssPdfreporterEngineUtilJRProperties_initialize();
  NSString *value = OrgOssPdfreporterEngineUtilJRProperties_getPropertyWithNSString_(key);
  return value == nil ? defaultValue : OrgOssPdfreporterEngineUtilJRProperties_asFloatWithNSString_(value);
}

jlong OrgOssPdfreporterEngineUtilJRProperties_asLongWithNSString_(NSString *value) {
  OrgOssPdfreporterEngineUtilJRProperties_initialize();
  return JavaLangLong_parseLongWithNSString_(value);
}

jlong OrgOssPdfreporterEngineUtilJRProperties_getLongPropertyWithNSString_(NSString *key) {
  OrgOssPdfreporterEngineUtilJRProperties_initialize();
  return OrgOssPdfreporterEngineUtilJRProperties_asLongWithNSString_([((id<JavaUtilMap>) nil_chk(JreLoadVolatileId(&OrgOssPdfreporterEngineUtilJRProperties_properties))) getWithId:key]);
}

jlong OrgOssPdfreporterEngineUtilJRProperties_getLongPropertyWithOrgOssPdfreporterEngineJRPropertiesMap_withNSString_withInt_(OrgOssPdfreporterEngineJRPropertiesMap *propertiesMap, NSString *key, jint defaultValue) {
  OrgOssPdfreporterEngineUtilJRProperties_initialize();
  NSString *value = OrgOssPdfreporterEngineUtilJRProperties_getPropertyWithOrgOssPdfreporterEngineJRPropertiesMap_withNSString_(propertiesMap, key);
  return value == nil ? defaultValue : OrgOssPdfreporterEngineUtilJRProperties_asLongWithNSString_(value);
}

jlong OrgOssPdfreporterEngineUtilJRProperties_getLongPropertyWithOrgOssPdfreporterEngineJRPropertiesHolder_withNSString_withInt_(id<OrgOssPdfreporterEngineJRPropertiesHolder> propertiesHolder, NSString *key, jint defaultValue) {
  OrgOssPdfreporterEngineUtilJRProperties_initialize();
  NSString *value = OrgOssPdfreporterEngineUtilJRProperties_getPropertyWithOrgOssPdfreporterEngineJRPropertiesHolder_withNSString_(propertiesHolder, key);
  return value == nil ? defaultValue : OrgOssPdfreporterEngineUtilJRProperties_asLongWithNSString_(value);
}

OrgOssPdfreporterEngineJRPropertiesMap *OrgOssPdfreporterEngineUtilJRProperties_getOwnPropertiesWithOrgOssPdfreporterEngineJRPropertiesHolder_(id<OrgOssPdfreporterEngineJRPropertiesHolder> propertiesHolder) {
  OrgOssPdfreporterEngineUtilJRProperties_initialize();
  return [((id<OrgOssPdfreporterEngineJRPropertiesHolder>) nil_chk(propertiesHolder)) hasProperties] ? [propertiesHolder getPropertiesMap] : nil;
}

void OrgOssPdfreporterEngineUtilJRProperties_transferPropertiesWithOrgOssPdfreporterEngineJRPropertiesHolder_withOrgOssPdfreporterEngineJRPropertiesHolder_withNSString_(id<OrgOssPdfreporterEngineJRPropertiesHolder> source, id<OrgOssPdfreporterEngineJRPropertiesHolder> destination, NSString *tranferPropertiesPrefix) {
  OrgOssPdfreporterEngineUtilJRProperties_initialize();
  if (![((id<OrgOssPdfreporterEngineJRPropertiesHolder>) nil_chk(source)) hasProperties]) {
    return;
  }
  OrgOssPdfreporterEngineUtilJRProperties_transferWithOrgOssPdfreporterEngineJRPropertiesMap_withOrgOssPdfreporterEngineJRPropertiesHolder_withNSString_([source getPropertiesMap], destination, tranferPropertiesPrefix);
}

void OrgOssPdfreporterEngineUtilJRProperties_transferPropertiesWithOrgOssPdfreporterEngineJRPropertiesMap_withOrgOssPdfreporterEngineJRPropertiesHolder_withNSString_(OrgOssPdfreporterEngineJRPropertiesMap *source, id<OrgOssPdfreporterEngineJRPropertiesHolder> destination, NSString *tranferPropertiesPrefix) {
  OrgOssPdfreporterEngineUtilJRProperties_initialize();
  if (source == nil || ![source hasProperties]) {
    return;
  }
  OrgOssPdfreporterEngineUtilJRProperties_transferWithOrgOssPdfreporterEngineJRPropertiesMap_withOrgOssPdfreporterEngineJRPropertiesHolder_withNSString_(source, destination, tranferPropertiesPrefix);
}

void OrgOssPdfreporterEngineUtilJRProperties_transferWithOrgOssPdfreporterEngineJRPropertiesMap_withOrgOssPdfreporterEngineJRPropertiesHolder_withNSString_(OrgOssPdfreporterEngineJRPropertiesMap *source, id<OrgOssPdfreporterEngineJRPropertiesHolder> destination, NSString *tranferPropertiesPrefix) {
  OrgOssPdfreporterEngineUtilJRProperties_initialize();
  id<JavaUtilList> transferPrefixProps = OrgOssPdfreporterEngineUtilJRProperties_getPropertiesWithNSString_(tranferPropertiesPrefix);
  for (id<JavaUtilIterator> prefixIt = [((id<JavaUtilList>) nil_chk(transferPrefixProps)) iterator]; [((id<JavaUtilIterator>) nil_chk(prefixIt)) hasNext]; ) {
    OrgOssPdfreporterEngineUtilJRProperties_PropertySuffix *transferPrefixProp = [prefixIt next];
    NSString *transferPrefix = [((OrgOssPdfreporterEngineUtilJRProperties_PropertySuffix *) nil_chk(transferPrefixProp)) getValue];
    if (transferPrefix != nil && ((jint) [transferPrefix length]) > 0) {
      id<JavaUtilList> transferProps = OrgOssPdfreporterEngineUtilJRProperties_getPropertiesWithOrgOssPdfreporterEngineJRPropertiesMap_withNSString_(source, transferPrefix);
      for (id<JavaUtilIterator> propIt = [((id<JavaUtilList>) nil_chk(transferProps)) iterator]; [((id<JavaUtilIterator>) nil_chk(propIt)) hasNext]; ) {
        OrgOssPdfreporterEngineUtilJRProperties_PropertySuffix *property = [propIt next];
        NSString *value = [((OrgOssPdfreporterEngineUtilJRProperties_PropertySuffix *) nil_chk(property)) getValue];
        [((OrgOssPdfreporterEngineJRPropertiesMap *) nil_chk([((id<OrgOssPdfreporterEngineJRPropertiesHolder>) nil_chk(destination)) getPropertiesMap])) setPropertyWithNSString:[property getKey] withNSString:value];
      }
    }
  }
}

JavaLangCharacter *OrgOssPdfreporterEngineUtilJRProperties_getCharacterPropertyWithNSString_(NSString *key) {
  OrgOssPdfreporterEngineUtilJRProperties_initialize();
  return OrgOssPdfreporterEngineUtilJRProperties_asCharacterWithNSString_([((id<JavaUtilMap>) nil_chk(JreLoadVolatileId(&OrgOssPdfreporterEngineUtilJRProperties_properties))) getWithId:key]);
}

JavaLangCharacter *OrgOssPdfreporterEngineUtilJRProperties_getCharacterPropertyWithOrgOssPdfreporterEngineJRPropertiesMap_withNSString_(OrgOssPdfreporterEngineJRPropertiesMap *propertiesMap, NSString *key) {
  OrgOssPdfreporterEngineUtilJRProperties_initialize();
  NSString *value = OrgOssPdfreporterEngineUtilJRProperties_getPropertyWithOrgOssPdfreporterEngineJRPropertiesMap_withNSString_(propertiesMap, key);
  return OrgOssPdfreporterEngineUtilJRProperties_asCharacterWithNSString_(value);
}

JavaLangCharacter *OrgOssPdfreporterEngineUtilJRProperties_asCharacterWithNSString_(NSString *value) {
  OrgOssPdfreporterEngineUtilJRProperties_initialize();
  return value == nil || ((jint) [value length]) == 0 ? nil : new_JavaLangCharacter_initWithChar_([value charAtWithInt:0]);
}

void OrgOssPdfreporterEngineUtilJRProperties_init(OrgOssPdfreporterEngineUtilJRProperties *self) {
  NSObject_init(self);
}

OrgOssPdfreporterEngineUtilJRProperties *new_OrgOssPdfreporterEngineUtilJRProperties_init() {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineUtilJRProperties, init)
}

OrgOssPdfreporterEngineUtilJRProperties *create_OrgOssPdfreporterEngineUtilJRProperties_init() {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineUtilJRProperties, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineUtilJRProperties)

@implementation OrgOssPdfreporterEngineUtilJRProperties_PropertySuffix

- (instancetype)initWithNSString:(NSString *)key
                    withNSString:(NSString *)suffix
                    withNSString:(NSString *)value {
  OrgOssPdfreporterEngineUtilJRProperties_PropertySuffix_initWithNSString_withNSString_withNSString_(self, key, suffix, value);
  return self;
}

- (NSString *)getKey {
  return key_;
}

- (NSString *)getSuffix {
  return suffix_;
}

- (NSString *)getValue {
  return value_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withNSString:withNSString:", "PropertySuffix", NULL, 0x1, NULL, NULL },
    { "getKey", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getSuffix", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getValue", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "key_", NULL, 0x14, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "suffix_", NULL, 0x14, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "value_", NULL, 0x14, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineUtilJRProperties_PropertySuffix = { 2, "PropertySuffix", "org.oss.pdfreporter.engine.util", "JRProperties", 0x9, 4, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineUtilJRProperties_PropertySuffix;
}

@end

void OrgOssPdfreporterEngineUtilJRProperties_PropertySuffix_initWithNSString_withNSString_withNSString_(OrgOssPdfreporterEngineUtilJRProperties_PropertySuffix *self, NSString *key, NSString *suffix, NSString *value) {
  NSObject_init(self);
  self->key_ = key;
  self->suffix_ = suffix;
  self->value_ = value;
}

OrgOssPdfreporterEngineUtilJRProperties_PropertySuffix *new_OrgOssPdfreporterEngineUtilJRProperties_PropertySuffix_initWithNSString_withNSString_withNSString_(NSString *key, NSString *suffix, NSString *value) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineUtilJRProperties_PropertySuffix, initWithNSString_withNSString_withNSString_, key, suffix, value)
}

OrgOssPdfreporterEngineUtilJRProperties_PropertySuffix *create_OrgOssPdfreporterEngineUtilJRProperties_PropertySuffix_initWithNSString_withNSString_withNSString_(NSString *key, NSString *suffix, NSString *value) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineUtilJRProperties_PropertySuffix, initWithNSString_withNSString_withNSString_, key, suffix, value)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineUtilJRProperties_PropertySuffix)
