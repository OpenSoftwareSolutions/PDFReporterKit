//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/util/LinkedMap.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/NullPointerException.h"
#include "java/util/HashMap.h"
#include "org/oss/pdfreporter/engine/util/LinkedMap.h"

@interface OrgOssPdfreporterEngineUtilLinkedMap () {
 @public
  OrgOssPdfreporterEngineUtilLinkedMap_LinkedValue *header_;
  JavaUtilHashMap *map_;
}

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineUtilLinkedMap, header_, OrgOssPdfreporterEngineUtilLinkedMap_LinkedValue *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineUtilLinkedMap, map_, JavaUtilHashMap *)

@interface OrgOssPdfreporterEngineUtilLinkedMap_LinkedValue () {
 @public
  OrgOssPdfreporterEngineUtilLinkedMap_LinkedValue *prev_;
  OrgOssPdfreporterEngineUtilLinkedMap_LinkedValue *next_;
  id key_;
  id value_;
}

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineUtilLinkedMap_LinkedValue, prev_, OrgOssPdfreporterEngineUtilLinkedMap_LinkedValue *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineUtilLinkedMap_LinkedValue, next_, OrgOssPdfreporterEngineUtilLinkedMap_LinkedValue *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineUtilLinkedMap_LinkedValue, key_, id)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineUtilLinkedMap_LinkedValue, value_, id)

@implementation OrgOssPdfreporterEngineUtilLinkedMap

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterEngineUtilLinkedMap_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)addWithId:(id)key
           withId:(id)value {
  if (key != nil && [((JavaUtilHashMap *) nil_chk(map_)) containsKeyWithId:key]) {
    return;
  }
  OrgOssPdfreporterEngineUtilLinkedMap_LinkedValue *entry_ = new_OrgOssPdfreporterEngineUtilLinkedMap_LinkedValue_initWithId_withId_(key, value);
  entry_->prev_ = ((OrgOssPdfreporterEngineUtilLinkedMap_LinkedValue *) nil_chk(header_))->prev_;
  entry_->next_ = header_;
  ((OrgOssPdfreporterEngineUtilLinkedMap_LinkedValue *) nil_chk(header_->prev_))->next_ = entry_;
  header_->prev_ = entry_;
  if (key != nil) {
    (void) [((JavaUtilHashMap *) nil_chk(map_)) putWithId:key withId:entry_];
  }
}

- (void)addFirstWithId:(id)key
                withId:(id)value {
  if (key != nil && [((JavaUtilHashMap *) nil_chk(map_)) containsKeyWithId:key]) {
    return;
  }
  OrgOssPdfreporterEngineUtilLinkedMap_LinkedValue *entry_ = new_OrgOssPdfreporterEngineUtilLinkedMap_LinkedValue_initWithId_withId_(key, value);
  entry_->next_ = ((OrgOssPdfreporterEngineUtilLinkedMap_LinkedValue *) nil_chk(header_))->next_;
  entry_->prev_ = header_;
  ((OrgOssPdfreporterEngineUtilLinkedMap_LinkedValue *) nil_chk(header_->next_))->prev_ = entry_;
  header_->next_ = entry_;
  if (key != nil) {
    (void) [((JavaUtilHashMap *) nil_chk(map_)) putWithId:key withId:entry_];
  }
}

- (jboolean)isEmpty {
  return ((OrgOssPdfreporterEngineUtilLinkedMap_LinkedValue *) nil_chk(header_))->next_ == header_;
}

- (id)pop {
  if (((OrgOssPdfreporterEngineUtilLinkedMap_LinkedValue *) nil_chk(header_))->next_ == header_) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"Empty map");
  }
  OrgOssPdfreporterEngineUtilLinkedMap_LinkedValue *entry_ = header_->next_;
  ((OrgOssPdfreporterEngineUtilLinkedMap_LinkedValue *) nil_chk(((OrgOssPdfreporterEngineUtilLinkedMap_LinkedValue *) nil_chk(entry_))->prev_))->next_ = entry_->next_;
  ((OrgOssPdfreporterEngineUtilLinkedMap_LinkedValue *) nil_chk(entry_->next_))->prev_ = entry_->prev_;
  if (entry_->key_ != nil) {
    (void) [((JavaUtilHashMap *) nil_chk(map_)) removeWithId:entry_->key_];
  }
  return ((id) entry_->value_);
}

- (id)removeWithId:(id)key {
  if (key == nil) {
    @throw new_JavaLangNullPointerException_initWithNSString_(@"Key cannot be null");
  }
  OrgOssPdfreporterEngineUtilLinkedMap_LinkedValue *entry_ = [((JavaUtilHashMap *) nil_chk(map_)) removeWithId:key];
  if (entry_ == nil) {
    return nil;
  }
  ((OrgOssPdfreporterEngineUtilLinkedMap_LinkedValue *) nil_chk(entry_->prev_))->next_ = entry_->next_;
  ((OrgOssPdfreporterEngineUtilLinkedMap_LinkedValue *) nil_chk(entry_->next_))->prev_ = entry_->prev_;
  return ((id) entry_->value_);
}

- (void)addAllWithOrgOssPdfreporterEngineUtilLinkedMap:(OrgOssPdfreporterEngineUtilLinkedMap *)map {
  for (OrgOssPdfreporterEngineUtilLinkedMap_LinkedValue *entry_ = ((OrgOssPdfreporterEngineUtilLinkedMap_LinkedValue *) nil_chk(((OrgOssPdfreporterEngineUtilLinkedMap *) nil_chk(map))->header_))->next_; entry_ != map->header_; entry_ = entry_->next_) {
    [self addWithId:((id) ((OrgOssPdfreporterEngineUtilLinkedMap_LinkedValue *) nil_chk(entry_))->key_) withId:((id) entry_->value_)];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "LinkedMap", NULL, 0x1, NULL, NULL },
    { "addWithId:withId:", "add", "V", 0x1, NULL, "(TK;TV;)V" },
    { "addFirstWithId:withId:", "addFirst", "V", 0x1, NULL, "(TK;TV;)V" },
    { "isEmpty", NULL, "Z", 0x1, NULL, NULL },
    { "pop", NULL, "TV;", 0x1, NULL, "()TV;" },
    { "removeWithId:", "remove", "TV;", 0x1, NULL, "(TK;)TV;" },
    { "addAllWithOrgOssPdfreporterEngineUtilLinkedMap:", "addAll", "V", 0x1, NULL, "(Lorg/oss/pdfreporter/engine/util/LinkedMap<TK;TV;>;)V" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "header_", NULL, 0x12, "Lorg.oss.pdfreporter.engine.util.LinkedMap$LinkedValue;", NULL, "Lorg/oss/pdfreporter/engine/util/LinkedMap$LinkedValue<TK;TV;>;", .constantValue.asLong = 0 },
    { "map_", NULL, 0x12, "Ljava.util.HashMap;", NULL, "Ljava/util/HashMap<TK;Lorg/oss/pdfreporter/engine/util/LinkedMap$LinkedValue<TK;TV;>;>;", .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lorg.oss.pdfreporter.engine.util.LinkedMap$LinkedValue;"};
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineUtilLinkedMap = { 2, "LinkedMap", "org.oss.pdfreporter.engine.util", NULL, 0x1, 7, methods, 2, fields, 0, NULL, 1, inner_classes, NULL, "<K:Ljava/lang/Object;V:Ljava/lang/Object;>Ljava/lang/Object;" };
  return &_OrgOssPdfreporterEngineUtilLinkedMap;
}

@end

void OrgOssPdfreporterEngineUtilLinkedMap_init(OrgOssPdfreporterEngineUtilLinkedMap *self) {
  NSObject_init(self);
  self->map_ = new_JavaUtilHashMap_init();
  self->header_ = new_OrgOssPdfreporterEngineUtilLinkedMap_LinkedValue_initWithId_withId_(nil, nil);
  self->header_->prev_ = self->header_;
  self->header_->next_ = self->header_;
}

OrgOssPdfreporterEngineUtilLinkedMap *new_OrgOssPdfreporterEngineUtilLinkedMap_init() {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineUtilLinkedMap, init)
}

OrgOssPdfreporterEngineUtilLinkedMap *create_OrgOssPdfreporterEngineUtilLinkedMap_init() {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineUtilLinkedMap, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineUtilLinkedMap)

@implementation OrgOssPdfreporterEngineUtilLinkedMap_LinkedValue

- (instancetype)initWithId:(id)key
                    withId:(id)value {
  OrgOssPdfreporterEngineUtilLinkedMap_LinkedValue_initWithId_withId_(self, key, value);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithId:withId:", "LinkedValue", NULL, 0x4, NULL, "(TK;TV;)V" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "prev_", NULL, 0x2, "Lorg.oss.pdfreporter.engine.util.LinkedMap$LinkedValue;", NULL, "Lorg/oss/pdfreporter/engine/util/LinkedMap$LinkedValue<TK;TV;>;", .constantValue.asLong = 0 },
    { "next_", NULL, 0x2, "Lorg.oss.pdfreporter.engine.util.LinkedMap$LinkedValue;", NULL, "Lorg/oss/pdfreporter/engine/util/LinkedMap$LinkedValue<TK;TV;>;", .constantValue.asLong = 0 },
    { "key_", NULL, 0x2, "TK;", NULL, "TK;", .constantValue.asLong = 0 },
    { "value_", NULL, 0x2, "TV;", NULL, "TV;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineUtilLinkedMap_LinkedValue = { 2, "LinkedValue", "org.oss.pdfreporter.engine.util", "LinkedMap", 0xc, 1, methods, 4, fields, 0, NULL, 0, NULL, NULL, "<K:Ljava/lang/Object;V:Ljava/lang/Object;>Ljava/lang/Object;" };
  return &_OrgOssPdfreporterEngineUtilLinkedMap_LinkedValue;
}

@end

void OrgOssPdfreporterEngineUtilLinkedMap_LinkedValue_initWithId_withId_(OrgOssPdfreporterEngineUtilLinkedMap_LinkedValue *self, id key, id value) {
  NSObject_init(self);
  self->key_ = key;
  self->value_ = value;
}

OrgOssPdfreporterEngineUtilLinkedMap_LinkedValue *new_OrgOssPdfreporterEngineUtilLinkedMap_LinkedValue_initWithId_withId_(id key, id value) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineUtilLinkedMap_LinkedValue, initWithId_withId_, key, value)
}

OrgOssPdfreporterEngineUtilLinkedMap_LinkedValue *create_OrgOssPdfreporterEngineUtilLinkedMap_LinkedValue_initWithId_withId_(id key, id value) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineUtilLinkedMap_LinkedValue, initWithId_withId_, key, value)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineUtilLinkedMap_LinkedValue)
