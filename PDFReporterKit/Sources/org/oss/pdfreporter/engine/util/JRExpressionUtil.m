//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/util/JRExpressionUtil.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/util/regex/Matcher.h"
#include "java/util/regex/Pattern.h"
#include "org/oss/pdfreporter/engine/JRExpression.h"
#include "org/oss/pdfreporter/engine/JRExpressionChunk.h"
#include "org/oss/pdfreporter/engine/JRRuntimeException.h"
#include "org/oss/pdfreporter/engine/util/ExpressionChunkVisitor.h"
#include "org/oss/pdfreporter/engine/util/JRExpressionUtil.h"

@interface OrgOssPdfreporterEngineUtilJRExpressionUtil ()

- (instancetype)init;

@end

inline JavaUtilRegexPattern *OrgOssPdfreporterEngineUtilJRExpressionUtil_get_SIMPLE_EXPRESSION_PATTERN();
static JavaUtilRegexPattern *OrgOssPdfreporterEngineUtilJRExpressionUtil_SIMPLE_EXPRESSION_PATTERN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterEngineUtilJRExpressionUtil, SIMPLE_EXPRESSION_PATTERN, JavaUtilRegexPattern *)

inline jint OrgOssPdfreporterEngineUtilJRExpressionUtil_get_SIMPLE_EXPRESSION_TEXT_GROUP();
#define OrgOssPdfreporterEngineUtilJRExpressionUtil_SIMPLE_EXPRESSION_TEXT_GROUP 1
J2OBJC_STATIC_FIELD_CONSTANT(OrgOssPdfreporterEngineUtilJRExpressionUtil, SIMPLE_EXPRESSION_TEXT_GROUP, jint)

inline JavaUtilRegexPattern *OrgOssPdfreporterEngineUtilJRExpressionUtil_get_TEXT_QUOTE_PATTERN();
static JavaUtilRegexPattern *OrgOssPdfreporterEngineUtilJRExpressionUtil_TEXT_QUOTE_PATTERN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterEngineUtilJRExpressionUtil, TEXT_QUOTE_PATTERN, JavaUtilRegexPattern *)

inline NSString *OrgOssPdfreporterEngineUtilJRExpressionUtil_get_TEXT_QUOTE_REPLACEMENT();
static NSString *OrgOssPdfreporterEngineUtilJRExpressionUtil_TEXT_QUOTE_REPLACEMENT = @"\"";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterEngineUtilJRExpressionUtil, TEXT_QUOTE_REPLACEMENT, NSString *)

__attribute__((unused)) static void OrgOssPdfreporterEngineUtilJRExpressionUtil_init(OrgOssPdfreporterEngineUtilJRExpressionUtil *self);

__attribute__((unused)) static OrgOssPdfreporterEngineUtilJRExpressionUtil *new_OrgOssPdfreporterEngineUtilJRExpressionUtil_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgOssPdfreporterEngineUtilJRExpressionUtil *create_OrgOssPdfreporterEngineUtilJRExpressionUtil_init();

J2OBJC_INITIALIZED_DEFN(OrgOssPdfreporterEngineUtilJRExpressionUtil)

@implementation OrgOssPdfreporterEngineUtilJRExpressionUtil

+ (NSString *)getExpressionTextWithOrgOssPdfreporterEngineJRExpression:(id<OrgOssPdfreporterEngineJRExpression>)exp {
  return OrgOssPdfreporterEngineUtilJRExpressionUtil_getExpressionTextWithOrgOssPdfreporterEngineJRExpression_(exp);
}

+ (NSString *)getSimpleExpressionTextWithOrgOssPdfreporterEngineJRExpression:(id<OrgOssPdfreporterEngineJRExpression>)expression {
  return OrgOssPdfreporterEngineUtilJRExpressionUtil_getSimpleExpressionTextWithOrgOssPdfreporterEngineJRExpression_(expression);
}

+ (void)visitChunksWithOrgOssPdfreporterEngineJRExpression:(id<OrgOssPdfreporterEngineJRExpression>)expression
     withOrgOssPdfreporterEngineUtilExpressionChunkVisitor:(id<OrgOssPdfreporterEngineUtilExpressionChunkVisitor>)visitor {
  OrgOssPdfreporterEngineUtilJRExpressionUtil_visitChunksWithOrgOssPdfreporterEngineJRExpression_withOrgOssPdfreporterEngineUtilExpressionChunkVisitor_(expression, visitor);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterEngineUtilJRExpressionUtil_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)initialize {
  if (self == [OrgOssPdfreporterEngineUtilJRExpressionUtil class]) {
    OrgOssPdfreporterEngineUtilJRExpressionUtil_SIMPLE_EXPRESSION_PATTERN = JavaUtilRegexPattern_compileWithNSString_(@"\\s*\"([^\"]*((?<=\\\\)\"[^\"]*)*)\"\\s*");
    OrgOssPdfreporterEngineUtilJRExpressionUtil_TEXT_QUOTE_PATTERN = JavaUtilRegexPattern_compileWithNSString_(@"\\\\\"");
    J2OBJC_SET_INITIALIZED(OrgOssPdfreporterEngineUtilJRExpressionUtil)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getExpressionTextWithOrgOssPdfreporterEngineJRExpression:", "getExpressionText", "Ljava.lang.String;", 0x9, NULL, NULL },
    { "getSimpleExpressionTextWithOrgOssPdfreporterEngineJRExpression:", "getSimpleExpressionText", "Ljava.lang.String;", 0x9, NULL, NULL },
    { "visitChunksWithOrgOssPdfreporterEngineJRExpression:withOrgOssPdfreporterEngineUtilExpressionChunkVisitor:", "visitChunks", "V", 0x9, NULL, NULL },
    { "init", "JRExpressionUtil", NULL, 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "SIMPLE_EXPRESSION_PATTERN", "SIMPLE_EXPRESSION_PATTERN", 0x1a, "Ljava.util.regex.Pattern;", &OrgOssPdfreporterEngineUtilJRExpressionUtil_SIMPLE_EXPRESSION_PATTERN, NULL, .constantValue.asLong = 0 },
    { "SIMPLE_EXPRESSION_TEXT_GROUP", "SIMPLE_EXPRESSION_TEXT_GROUP", 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgOssPdfreporterEngineUtilJRExpressionUtil_SIMPLE_EXPRESSION_TEXT_GROUP },
    { "TEXT_QUOTE_PATTERN", "TEXT_QUOTE_PATTERN", 0x1a, "Ljava.util.regex.Pattern;", &OrgOssPdfreporterEngineUtilJRExpressionUtil_TEXT_QUOTE_PATTERN, NULL, .constantValue.asLong = 0 },
    { "TEXT_QUOTE_REPLACEMENT", "TEXT_QUOTE_REPLACEMENT", 0x1a, "Ljava.lang.String;", &OrgOssPdfreporterEngineUtilJRExpressionUtil_TEXT_QUOTE_REPLACEMENT, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineUtilJRExpressionUtil = { 2, "JRExpressionUtil", "org.oss.pdfreporter.engine.util", NULL, 0x11, 4, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineUtilJRExpressionUtil;
}

@end

NSString *OrgOssPdfreporterEngineUtilJRExpressionUtil_getExpressionTextWithOrgOssPdfreporterEngineJRExpression_(id<OrgOssPdfreporterEngineJRExpression> exp) {
  OrgOssPdfreporterEngineUtilJRExpressionUtil_initialize();
  return exp == nil ? nil : [exp getText];
}

NSString *OrgOssPdfreporterEngineUtilJRExpressionUtil_getSimpleExpressionTextWithOrgOssPdfreporterEngineJRExpression_(id<OrgOssPdfreporterEngineJRExpression> expression) {
  OrgOssPdfreporterEngineUtilJRExpressionUtil_initialize();
  NSString *value = nil;
  if (expression != nil) {
    IOSObjectArray *chunks = [expression getChunks];
    if (chunks != nil && chunks->size_ == 1 && [((id<OrgOssPdfreporterEngineJRExpressionChunk>) nil_chk(IOSObjectArray_Get(chunks, 0))) getType] == OrgOssPdfreporterEngineJRExpressionChunk_TYPE_TEXT) {
      NSString *chunk = [((id<OrgOssPdfreporterEngineJRExpressionChunk>) nil_chk(IOSObjectArray_Get(chunks, 0))) getText];
      JavaUtilRegexMatcher *matcher = [((JavaUtilRegexPattern *) nil_chk(OrgOssPdfreporterEngineUtilJRExpressionUtil_SIMPLE_EXPRESSION_PATTERN)) matcherWithJavaLangCharSequence:chunk];
      if ([((JavaUtilRegexMatcher *) nil_chk(matcher)) matches]) {
        NSString *text = [matcher groupWithInt:OrgOssPdfreporterEngineUtilJRExpressionUtil_SIMPLE_EXPRESSION_TEXT_GROUP];
        value = [((JavaUtilRegexMatcher *) nil_chk([((JavaUtilRegexPattern *) nil_chk(OrgOssPdfreporterEngineUtilJRExpressionUtil_TEXT_QUOTE_PATTERN)) matcherWithJavaLangCharSequence:text])) replaceAllWithNSString:OrgOssPdfreporterEngineUtilJRExpressionUtil_TEXT_QUOTE_REPLACEMENT];
      }
    }
  }
  return value;
}

void OrgOssPdfreporterEngineUtilJRExpressionUtil_visitChunksWithOrgOssPdfreporterEngineJRExpression_withOrgOssPdfreporterEngineUtilExpressionChunkVisitor_(id<OrgOssPdfreporterEngineJRExpression> expression, id<OrgOssPdfreporterEngineUtilExpressionChunkVisitor> visitor) {
  OrgOssPdfreporterEngineUtilJRExpressionUtil_initialize();
  IOSObjectArray *chunks = [((id<OrgOssPdfreporterEngineJRExpression>) nil_chk(expression)) getChunks];
  if (chunks != nil) {
    {
      IOSObjectArray *a__ = chunks;
      id<OrgOssPdfreporterEngineJRExpressionChunk> const *b__ = a__->buffer_;
      id<OrgOssPdfreporterEngineJRExpressionChunk> const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        id<OrgOssPdfreporterEngineJRExpressionChunk> chunk = *b__++;
        switch ([((id<OrgOssPdfreporterEngineJRExpressionChunk>) nil_chk(chunk)) getType]) {
          case OrgOssPdfreporterEngineJRExpressionChunk_TYPE_TEXT:
          [((id<OrgOssPdfreporterEngineUtilExpressionChunkVisitor>) nil_chk(visitor)) visitTextChunkWithOrgOssPdfreporterEngineJRExpressionChunk:chunk];
          break;
          case OrgOssPdfreporterEngineJRExpressionChunk_TYPE_PARAMETER:
          [((id<OrgOssPdfreporterEngineUtilExpressionChunkVisitor>) nil_chk(visitor)) visitParameterChunkWithOrgOssPdfreporterEngineJRExpressionChunk:chunk];
          break;
          case OrgOssPdfreporterEngineJRExpressionChunk_TYPE_FIELD:
          [((id<OrgOssPdfreporterEngineUtilExpressionChunkVisitor>) nil_chk(visitor)) visitFieldChunkWithOrgOssPdfreporterEngineJRExpressionChunk:chunk];
          break;
          case OrgOssPdfreporterEngineJRExpressionChunk_TYPE_VARIABLE:
          [((id<OrgOssPdfreporterEngineUtilExpressionChunkVisitor>) nil_chk(visitor)) visitVariableChunkWithOrgOssPdfreporterEngineJRExpressionChunk:chunk];
          break;
          case OrgOssPdfreporterEngineJRExpressionChunk_TYPE_RESOURCE:
          [((id<OrgOssPdfreporterEngineUtilExpressionChunkVisitor>) nil_chk(visitor)) visitResourceChunkWithOrgOssPdfreporterEngineJRExpressionChunk:chunk];
          break;
          default:
          @throw new_OrgOssPdfreporterEngineJRRuntimeException_initWithNSString_(JreStrcat("$B", @"Unknown expression chunk type ", [chunk getType]));
        }
      }
    }
  }
}

void OrgOssPdfreporterEngineUtilJRExpressionUtil_init(OrgOssPdfreporterEngineUtilJRExpressionUtil *self) {
  NSObject_init(self);
}

OrgOssPdfreporterEngineUtilJRExpressionUtil *new_OrgOssPdfreporterEngineUtilJRExpressionUtil_init() {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineUtilJRExpressionUtil, init)
}

OrgOssPdfreporterEngineUtilJRExpressionUtil *create_OrgOssPdfreporterEngineUtilJRExpressionUtil_init() {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineUtilJRExpressionUtil, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineUtilJRExpressionUtil)
