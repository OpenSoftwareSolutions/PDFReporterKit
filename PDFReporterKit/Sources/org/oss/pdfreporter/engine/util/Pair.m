//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/util/Pair.java
//

#include "J2ObjC_source.h"
#include "org/oss/pdfreporter/engine/util/Pair.h"

@interface OrgOssPdfreporterEngineUtilPair () {
 @public
  id o1_;
  id o2_;
  jint hash__;
}

- (jint)computeHash;

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineUtilPair, o1_, id)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineUtilPair, o2_, id)

inline jlong OrgOssPdfreporterEngineUtilPair_get_serialVersionUID();
#define OrgOssPdfreporterEngineUtilPair_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgOssPdfreporterEngineUtilPair, serialVersionUID, jlong)

__attribute__((unused)) static jint OrgOssPdfreporterEngineUtilPair_computeHash(OrgOssPdfreporterEngineUtilPair *self);

@implementation OrgOssPdfreporterEngineUtilPair

- (instancetype)initWithId:(id)o1
                    withId:(id)o2 {
  OrgOssPdfreporterEngineUtilPair_initWithId_withId_(self, o1, o2);
  return self;
}

- (id)first {
  return o1_;
}

- (id)second {
  return o2_;
}

- (jint)computeHash {
  return OrgOssPdfreporterEngineUtilPair_computeHash(self);
}

- (jboolean)isEqual:(id)o {
  if (o == self) {
    return true;
  }
  if (o == nil || !([o isKindOfClass:[OrgOssPdfreporterEngineUtilPair class]])) {
    return false;
  }
  OrgOssPdfreporterEngineUtilPair *p = (OrgOssPdfreporterEngineUtilPair *) cast_chk(o, [OrgOssPdfreporterEngineUtilPair class]);
  return (p->o1_ == nil ? o1_ == nil : (o1_ != nil && [((id) nil_chk(p->o1_)) isEqual:o1_])) && (p->o2_ == nil ? o2_ == nil : (o2_ != nil && [((id) nil_chk(p->o2_)) isEqual:o2_]));
}

- (NSUInteger)hash {
  return hash__;
}

- (NSString *)description {
  return JreStrcat("C$$$C", '(', NSString_valueOf_(o1_), @", ", NSString_valueOf_(o2_), ')');
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithId:withId:", "Pair", NULL, 0x1, NULL, "(TT;TU;)V" },
    { "first", NULL, "TT;", 0x1, NULL, "()TT;" },
    { "second", NULL, "TU;", 0x1, NULL, "()TU;" },
    { "computeHash", NULL, "I", 0x2, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "serialVersionUID", 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgOssPdfreporterEngineUtilPair_serialVersionUID },
    { "o1_", NULL, 0x12, "TT;", NULL, "TT;", .constantValue.asLong = 0 },
    { "o2_", NULL, 0x12, "TU;", NULL, "TU;", .constantValue.asLong = 0 },
    { "hash__", "hash", 0x12, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineUtilPair = { 2, "Pair", "org.oss.pdfreporter.engine.util", NULL, 0x1, 7, methods, 4, fields, 0, NULL, 0, NULL, NULL, "<T:Ljava/lang/Object;U:Ljava/lang/Object;>Ljava/lang/Object;Ljava/io/Serializable;" };
  return &_OrgOssPdfreporterEngineUtilPair;
}

@end

void OrgOssPdfreporterEngineUtilPair_initWithId_withId_(OrgOssPdfreporterEngineUtilPair *self, id o1, id o2) {
  NSObject_init(self);
  self->o1_ = o1;
  self->o2_ = o2;
  self->hash__ = OrgOssPdfreporterEngineUtilPair_computeHash(self);
}

OrgOssPdfreporterEngineUtilPair *new_OrgOssPdfreporterEngineUtilPair_initWithId_withId_(id o1, id o2) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineUtilPair, initWithId_withId_, o1, o2)
}

OrgOssPdfreporterEngineUtilPair *create_OrgOssPdfreporterEngineUtilPair_initWithId_withId_(id o1, id o2) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineUtilPair, initWithId_withId_, o1, o2)
}

jint OrgOssPdfreporterEngineUtilPair_computeHash(OrgOssPdfreporterEngineUtilPair *self) {
  jint hashCode = self->o1_ == nil ? 0 : ((jint) [self->o1_ hash]);
  hashCode *= 31;
  hashCode += self->o2_ == nil ? 0 : ((jint) [self->o2_ hash]);
  return hashCode;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineUtilPair)
