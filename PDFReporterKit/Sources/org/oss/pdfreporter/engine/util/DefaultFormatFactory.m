//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/util/DefaultFormatFactory.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/ClassNotFoundException.h"
#include "java/lang/Exception.h"
#include "java/text/DateFormat.h"
#include "java/text/DecimalFormat.h"
#include "java/text/NumberFormat.h"
#include "java/text/SimpleDateFormat.h"
#include "java/util/Locale.h"
#include "java/util/TimeZone.h"
#include "org/oss/pdfreporter/engine/JRRuntimeException.h"
#include "org/oss/pdfreporter/engine/util/DefaultFormatFactory.h"
#include "org/oss/pdfreporter/engine/util/FormatFactory.h"
#include "org/oss/pdfreporter/engine/util/JRClassLoader.h"

NSString *OrgOssPdfreporterEngineUtilDefaultFormatFactory_STANDARD_DATE_FORMAT_DEFAULT = @"default";
NSString *OrgOssPdfreporterEngineUtilDefaultFormatFactory_STANDARD_DATE_FORMAT_SHORT = @"short";
NSString *OrgOssPdfreporterEngineUtilDefaultFormatFactory_STANDARD_DATE_FORMAT_MEDIUM = @"medium";
NSString *OrgOssPdfreporterEngineUtilDefaultFormatFactory_STANDARD_DATE_FORMAT_LONG = @"long";
NSString *OrgOssPdfreporterEngineUtilDefaultFormatFactory_STANDARD_DATE_FORMAT_FULL = @"full";
NSString *OrgOssPdfreporterEngineUtilDefaultFormatFactory_STANDARD_DATE_FORMAT_HIDE = @"hide";
NSString *OrgOssPdfreporterEngineUtilDefaultFormatFactory_STANDARD_DATE_FORMAT_SEPARATOR = @",";

@implementation OrgOssPdfreporterEngineUtilDefaultFormatFactory

+ (NSString *)STANDARD_DATE_FORMAT_DEFAULT {
  return OrgOssPdfreporterEngineUtilDefaultFormatFactory_STANDARD_DATE_FORMAT_DEFAULT;
}

+ (NSString *)STANDARD_DATE_FORMAT_SHORT {
  return OrgOssPdfreporterEngineUtilDefaultFormatFactory_STANDARD_DATE_FORMAT_SHORT;
}

+ (NSString *)STANDARD_DATE_FORMAT_MEDIUM {
  return OrgOssPdfreporterEngineUtilDefaultFormatFactory_STANDARD_DATE_FORMAT_MEDIUM;
}

+ (NSString *)STANDARD_DATE_FORMAT_LONG {
  return OrgOssPdfreporterEngineUtilDefaultFormatFactory_STANDARD_DATE_FORMAT_LONG;
}

+ (NSString *)STANDARD_DATE_FORMAT_FULL {
  return OrgOssPdfreporterEngineUtilDefaultFormatFactory_STANDARD_DATE_FORMAT_FULL;
}

+ (NSString *)STANDARD_DATE_FORMAT_HIDE {
  return OrgOssPdfreporterEngineUtilDefaultFormatFactory_STANDARD_DATE_FORMAT_HIDE;
}

+ (NSString *)STANDARD_DATE_FORMAT_SEPARATOR {
  return OrgOssPdfreporterEngineUtilDefaultFormatFactory_STANDARD_DATE_FORMAT_SEPARATOR;
}

- (JavaTextDateFormat *)createDateFormatWithNSString:(NSString *)pattern
                                  withJavaUtilLocale:(JavaUtilLocale *)locale
                                withJavaUtilTimeZone:(JavaUtilTimeZone *)tz {
  IOSIntArray *dateStyle = nil;
  IOSIntArray *timeStyle = nil;
  if (pattern != nil && ((jint) [((NSString *) nil_chk([pattern trim])) length]) > 0) {
    jint sepIdx = [pattern indexOfString:OrgOssPdfreporterEngineUtilDefaultFormatFactory_STANDARD_DATE_FORMAT_SEPARATOR];
    NSString *dateTok = sepIdx < 0 ? pattern : [pattern substring:0 endIndex:sepIdx];
    dateStyle = OrgOssPdfreporterEngineUtilDefaultFormatFactory_getDateStyleWithNSString_(dateTok);
    if (dateStyle != nil) {
      if (sepIdx >= 0) {
        NSString *timeTok = [pattern substring:sepIdx + ((jint) [((NSString *) nil_chk(OrgOssPdfreporterEngineUtilDefaultFormatFactory_STANDARD_DATE_FORMAT_SEPARATOR)) length])];
        timeStyle = OrgOssPdfreporterEngineUtilDefaultFormatFactory_getDateStyleWithNSString_(timeTok);
      }
      else {
        timeStyle = dateStyle;
      }
    }
  }
  JavaTextDateFormat *format;
  if (dateStyle != nil && timeStyle != nil) {
    format = OrgOssPdfreporterEngineUtilDefaultFormatFactory_getDateFormatWithIntArray_withIntArray_withJavaUtilLocale_(dateStyle, timeStyle, locale);
  }
  else {
    if (locale == nil) {
      format = JavaTextDateFormat_getDateTimeInstanceWithInt_withInt_(JavaTextDateFormat_SHORT, JavaTextDateFormat_SHORT);
    }
    else {
      format = JavaTextDateFormat_getDateTimeInstanceWithInt_withInt_withJavaUtilLocale_(JavaTextDateFormat_SHORT, JavaTextDateFormat_SHORT, locale);
    }
    if (pattern != nil && ((jint) [((NSString *) nil_chk([pattern trim])) length]) > 0 && [format isKindOfClass:[JavaTextSimpleDateFormat class]]) {
      [((JavaTextSimpleDateFormat *) nil_chk(((JavaTextSimpleDateFormat *) cast_chk(format, [JavaTextSimpleDateFormat class])))) applyPatternWithNSString:pattern];
    }
  }
  if (tz != nil) {
    [((JavaTextDateFormat *) nil_chk(format)) setTimeZoneWithJavaUtilTimeZone:tz];
  }
  return format;
}

+ (IOSIntArray *)getDateStyleWithNSString:(NSString *)pattern {
  return OrgOssPdfreporterEngineUtilDefaultFormatFactory_getDateStyleWithNSString_(pattern);
}

+ (JavaTextDateFormat *)getDateFormatWithIntArray:(IOSIntArray *)dateStyle
                                     withIntArray:(IOSIntArray *)timeStyle
                               withJavaUtilLocale:(JavaUtilLocale *)locale {
  return OrgOssPdfreporterEngineUtilDefaultFormatFactory_getDateFormatWithIntArray_withIntArray_withJavaUtilLocale_(dateStyle, timeStyle, locale);
}

- (JavaTextNumberFormat *)createNumberFormatWithNSString:(NSString *)pattern
                                      withJavaUtilLocale:(JavaUtilLocale *)locale {
  JavaTextNumberFormat *format = nil;
  if (pattern != nil && ((jint) [((NSString *) nil_chk([pattern trim])) length]) > 0) {
    if (locale == nil) {
      format = JavaTextNumberFormat_getNumberInstance();
    }
    else {
      format = JavaTextNumberFormat_getNumberInstanceWithJavaUtilLocale_(locale);
    }
    if ([format isKindOfClass:[JavaTextDecimalFormat class]]) {
      [((JavaTextDecimalFormat *) nil_chk(((JavaTextDecimalFormat *) cast_chk(format, [JavaTextDecimalFormat class])))) applyPatternWithNSString:pattern];
    }
  }
  return format;
}

+ (id<OrgOssPdfreporterEngineUtilFormatFactory>)createFormatFactoryWithNSString:(NSString *)formatFactoryClassName {
  return OrgOssPdfreporterEngineUtilDefaultFormatFactory_createFormatFactoryWithNSString_(formatFactoryClassName);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterEngineUtilDefaultFormatFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "createDateFormatWithNSString:withJavaUtilLocale:withJavaUtilTimeZone:", "createDateFormat", "Ljava.text.DateFormat;", 0x1, NULL, NULL },
    { "getDateStyleWithNSString:", "getDateStyle", "[I", 0xc, NULL, NULL },
    { "getDateFormatWithIntArray:withIntArray:withJavaUtilLocale:", "getDateFormat", "Ljava.text.DateFormat;", 0xc, NULL, NULL },
    { "createNumberFormatWithNSString:withJavaUtilLocale:", "createNumberFormat", "Ljava.text.NumberFormat;", 0x1, NULL, NULL },
    { "createFormatFactoryWithNSString:", "createFormatFactory", "Lorg.oss.pdfreporter.engine.util.FormatFactory;", 0x9, NULL, NULL },
    { "init", "DefaultFormatFactory", NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "STANDARD_DATE_FORMAT_DEFAULT", "STANDARD_DATE_FORMAT_DEFAULT", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineUtilDefaultFormatFactory_STANDARD_DATE_FORMAT_DEFAULT, NULL, .constantValue.asLong = 0 },
    { "STANDARD_DATE_FORMAT_SHORT", "STANDARD_DATE_FORMAT_SHORT", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineUtilDefaultFormatFactory_STANDARD_DATE_FORMAT_SHORT, NULL, .constantValue.asLong = 0 },
    { "STANDARD_DATE_FORMAT_MEDIUM", "STANDARD_DATE_FORMAT_MEDIUM", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineUtilDefaultFormatFactory_STANDARD_DATE_FORMAT_MEDIUM, NULL, .constantValue.asLong = 0 },
    { "STANDARD_DATE_FORMAT_LONG", "STANDARD_DATE_FORMAT_LONG", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineUtilDefaultFormatFactory_STANDARD_DATE_FORMAT_LONG, NULL, .constantValue.asLong = 0 },
    { "STANDARD_DATE_FORMAT_FULL", "STANDARD_DATE_FORMAT_FULL", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineUtilDefaultFormatFactory_STANDARD_DATE_FORMAT_FULL, NULL, .constantValue.asLong = 0 },
    { "STANDARD_DATE_FORMAT_HIDE", "STANDARD_DATE_FORMAT_HIDE", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineUtilDefaultFormatFactory_STANDARD_DATE_FORMAT_HIDE, NULL, .constantValue.asLong = 0 },
    { "STANDARD_DATE_FORMAT_SEPARATOR", "STANDARD_DATE_FORMAT_SEPARATOR", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineUtilDefaultFormatFactory_STANDARD_DATE_FORMAT_SEPARATOR, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineUtilDefaultFormatFactory = { 2, "DefaultFormatFactory", "org.oss.pdfreporter.engine.util", NULL, 0x1, 6, methods, 7, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineUtilDefaultFormatFactory;
}

@end

IOSIntArray *OrgOssPdfreporterEngineUtilDefaultFormatFactory_getDateStyleWithNSString_(NSString *pattern) {
  OrgOssPdfreporterEngineUtilDefaultFormatFactory_initialize();
  if ([((NSString *) nil_chk(pattern)) equalsIgnoreCase:OrgOssPdfreporterEngineUtilDefaultFormatFactory_STANDARD_DATE_FORMAT_DEFAULT]) {
    return [IOSIntArray newArrayWithInts:(jint[]){ JavaTextDateFormat_DEFAULT } count:1];
  }
  else if ([pattern equalsIgnoreCase:OrgOssPdfreporterEngineUtilDefaultFormatFactory_STANDARD_DATE_FORMAT_SHORT]) {
    return [IOSIntArray newArrayWithInts:(jint[]){ JavaTextDateFormat_SHORT } count:1];
  }
  else if ([pattern equalsIgnoreCase:OrgOssPdfreporterEngineUtilDefaultFormatFactory_STANDARD_DATE_FORMAT_MEDIUM]) {
    return [IOSIntArray newArrayWithInts:(jint[]){ JavaTextDateFormat_MEDIUM } count:1];
  }
  else if ([pattern equalsIgnoreCase:OrgOssPdfreporterEngineUtilDefaultFormatFactory_STANDARD_DATE_FORMAT_LONG]) {
    return [IOSIntArray newArrayWithInts:(jint[]){ JavaTextDateFormat_LONG } count:1];
  }
  else if ([pattern equalsIgnoreCase:OrgOssPdfreporterEngineUtilDefaultFormatFactory_STANDARD_DATE_FORMAT_FULL]) {
    return [IOSIntArray newArrayWithInts:(jint[]){ JavaTextDateFormat_FULL } count:1];
  }
  else if ([pattern equalsIgnoreCase:OrgOssPdfreporterEngineUtilDefaultFormatFactory_STANDARD_DATE_FORMAT_HIDE]) {
    return [IOSIntArray newArrayWithLength:0];
  }
  else {
    return nil;
  }
}

JavaTextDateFormat *OrgOssPdfreporterEngineUtilDefaultFormatFactory_getDateFormatWithIntArray_withIntArray_withJavaUtilLocale_(IOSIntArray *dateStyle, IOSIntArray *timeStyle, JavaUtilLocale *locale) {
  OrgOssPdfreporterEngineUtilDefaultFormatFactory_initialize();
  if (((IOSIntArray *) nil_chk(dateStyle))->size_ == 0) {
    if (((IOSIntArray *) nil_chk(timeStyle))->size_ == 0) {
      return new_JavaTextSimpleDateFormat_initWithNSString_(@"");
    }
    return locale == nil ? JavaTextDateFormat_getTimeInstanceWithInt_(IOSIntArray_Get(timeStyle, 0)) : JavaTextDateFormat_getTimeInstanceWithInt_withJavaUtilLocale_(IOSIntArray_Get(timeStyle, 0), locale);
  }
  if (((IOSIntArray *) nil_chk(timeStyle))->size_ == 0) {
    return locale == nil ? JavaTextDateFormat_getDateInstanceWithInt_(IOSIntArray_Get(dateStyle, 0)) : JavaTextDateFormat_getDateInstanceWithInt_withJavaUtilLocale_(IOSIntArray_Get(dateStyle, 0), locale);
  }
  return locale == nil ? JavaTextDateFormat_getDateTimeInstanceWithInt_withInt_(IOSIntArray_Get(dateStyle, 0), IOSIntArray_Get(timeStyle, 0)) : JavaTextDateFormat_getDateTimeInstanceWithInt_withInt_withJavaUtilLocale_(IOSIntArray_Get(dateStyle, 0), IOSIntArray_Get(timeStyle, 0), locale);
}

id<OrgOssPdfreporterEngineUtilFormatFactory> OrgOssPdfreporterEngineUtilDefaultFormatFactory_createFormatFactoryWithNSString_(NSString *formatFactoryClassName) {
  OrgOssPdfreporterEngineUtilDefaultFormatFactory_initialize();
  id<OrgOssPdfreporterEngineUtilFormatFactory> formatFactory = nil;
  if (formatFactoryClassName != nil) {
    @try {
      IOSClass *formatFactoryClass = OrgOssPdfreporterEngineUtilJRClassLoader_loadClassForNameWithNSString_(formatFactoryClassName);
      formatFactory = (id<OrgOssPdfreporterEngineUtilFormatFactory>) cast_check([((IOSClass *) nil_chk(formatFactoryClass)) newInstance], OrgOssPdfreporterEngineUtilFormatFactory_class_());
    }
    @catch (JavaLangClassNotFoundException *e) {
      @throw new_OrgOssPdfreporterEngineJRRuntimeException_initWithNSString_withNSException_(JreStrcat("$$", @"Error loading format factory class : ", formatFactoryClassName), e);
    }
    @catch (JavaLangException *e) {
      @throw new_OrgOssPdfreporterEngineJRRuntimeException_initWithNSString_withNSException_(JreStrcat("$$", @"Error creating format factory instance : ", formatFactoryClassName), e);
    }
  }
  else {
    formatFactory = new_OrgOssPdfreporterEngineUtilDefaultFormatFactory_init();
  }
  return formatFactory;
}

void OrgOssPdfreporterEngineUtilDefaultFormatFactory_init(OrgOssPdfreporterEngineUtilDefaultFormatFactory *self) {
  NSObject_init(self);
}

OrgOssPdfreporterEngineUtilDefaultFormatFactory *new_OrgOssPdfreporterEngineUtilDefaultFormatFactory_init() {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineUtilDefaultFormatFactory, init)
}

OrgOssPdfreporterEngineUtilDefaultFormatFactory *create_OrgOssPdfreporterEngineUtilDefaultFormatFactory_init() {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineUtilDefaultFormatFactory, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineUtilDefaultFormatFactory)
