//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/util/xml/JRXmlDocumentProducer.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/io/File.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "org/oss/pdfreporter/engine/JRException.h"
#include "org/oss/pdfreporter/engine/util/JRXmlUtils.h"
#include "org/oss/pdfreporter/engine/util/xml/JRXmlDocumentProducer.h"
#include "org/oss/pdfreporter/uses/org/w3c/dom/Document.h"
#include "org/oss/pdfreporter/uses/org/w3c/dom/Element.h"
#include "org/oss/pdfreporter/uses/org/w3c/dom/Node.h"
#include "org/oss/pdfreporter/xml/parsers/IDocumentBuilder.h"
#include "org/oss/pdfreporter/xml/parsers/IDocumentBuilderFactory.h"
#include "org/oss/pdfreporter/xml/parsers/ParserConfigurationException.h"
#include "org/oss/pdfreporter/xml/parsers/XMLParseException.h"

@interface OrgOssPdfreporterEngineUtilXmlJRXmlDocumentProducer () {
 @public
  JavaIoFile *file_;
  JavaIoInputStream *inputStream_;
  NSString *uri_;
  id<OrgOssPdfreporterXmlParsersIDocumentBuilderFactory> documentBuilderFactory_;
}

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineUtilXmlJRXmlDocumentProducer, file_, JavaIoFile *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineUtilXmlJRXmlDocumentProducer, inputStream_, JavaIoInputStream *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineUtilXmlJRXmlDocumentProducer, uri_, NSString *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineUtilXmlJRXmlDocumentProducer, documentBuilderFactory_, id<OrgOssPdfreporterXmlParsersIDocumentBuilderFactory>)

@implementation OrgOssPdfreporterEngineUtilXmlJRXmlDocumentProducer

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterEngineUtilXmlJRXmlDocumentProducer_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithJavaIoFile:(JavaIoFile *)file {
  OrgOssPdfreporterEngineUtilXmlJRXmlDocumentProducer_initWithJavaIoFile_(self, file);
  return self;
}

- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)inputStream {
  OrgOssPdfreporterEngineUtilXmlJRXmlDocumentProducer_initWithJavaIoInputStream_(self, inputStream);
  return self;
}

- (instancetype)initWithNSString:(NSString *)uri {
  OrgOssPdfreporterEngineUtilXmlJRXmlDocumentProducer_initWithNSString_(self, uri);
  return self;
}

- (id<OrgOssPdfreporterXmlParsersIDocumentBuilderFactory>)getDocumentBuilderFactory {
  return documentBuilderFactory_;
}

- (void)setDocumentBuilderFactoryWithOrgOssPdfreporterXmlParsersIDocumentBuilderFactory:(id<OrgOssPdfreporterXmlParsersIDocumentBuilderFactory>)documentBuilderFactory {
  self->documentBuilderFactory_ = documentBuilderFactory;
}

- (void)setFileWithJavaIoFile:(JavaIoFile *)file {
  self->file_ = file;
}

- (void)setInputStreamWithJavaIoInputStream:(JavaIoInputStream *)inputStream {
  self->inputStream_ = inputStream;
}

- (void)setUriWithNSString:(NSString *)uri {
  self->uri_ = uri;
}

- (id<OrgOssPdfreporterUsesOrgW3cDomDocument>)getDocument {
  @try {
    if (file_ != nil) {
      return [((id<OrgOssPdfreporterXmlParsersIDocumentBuilder>) nil_chk([self getDocumentBuilder])) parseWithJavaIoFile:file_];
    }
    else if (inputStream_ != nil) {
      return [((id<OrgOssPdfreporterXmlParsersIDocumentBuilder>) nil_chk([self getDocumentBuilder])) parseWithJavaIoInputStream:inputStream_];
    }
    else if (uri_ != nil) {
      return [((id<OrgOssPdfreporterXmlParsersIDocumentBuilder>) nil_chk([self getDocumentBuilder])) parseWithNSString:uri_];
    }
  }
  @catch (OrgOssPdfreporterXmlParsersXMLParseException *e) {
    @throw new_OrgOssPdfreporterEngineJRException_initWithNSString_withNSException_(@"Failed to parse the xml document", e);
  }
  @catch (JavaIoIOException *e) {
    @throw new_OrgOssPdfreporterEngineJRException_initWithNSString_withNSException_(@"Failed to parse the xml document", e);
  }
  return nil;
}

- (id<OrgOssPdfreporterUsesOrgW3cDomDocument>)getDocumentWithOrgOssPdfreporterUsesOrgW3cDomNode:(id<OrgOssPdfreporterUsesOrgW3cDomNode>)sourceNode {
  id<OrgOssPdfreporterUsesOrgW3cDomDocument> doc = [((id<OrgOssPdfreporterXmlParsersIDocumentBuilder>) nil_chk([self getDocumentBuilder])) newDocument];
  id<OrgOssPdfreporterUsesOrgW3cDomNode> source;
  if ([((id<OrgOssPdfreporterUsesOrgW3cDomNode>) nil_chk(sourceNode)) getNodeType] == OrgOssPdfreporterUsesOrgW3cDomNode_DOCUMENT_NODE) {
    source = [((id<OrgOssPdfreporterUsesOrgW3cDomDocument>) cast_check(sourceNode, OrgOssPdfreporterUsesOrgW3cDomDocument_class_())) getDocumentElement];
  }
  else {
    source = sourceNode;
  }
  id<OrgOssPdfreporterUsesOrgW3cDomNode> node = [((id<OrgOssPdfreporterUsesOrgW3cDomDocument>) nil_chk(doc)) importNodeWithOrgOssPdfreporterUsesOrgW3cDomNode:source withBoolean:true];
  (void) [doc appendChildWithOrgOssPdfreporterUsesOrgW3cDomNode:node];
  return doc;
}

- (id<OrgOssPdfreporterXmlParsersIDocumentBuilder>)getDocumentBuilder {
  @try {
    if (documentBuilderFactory_ != nil) {
      return [documentBuilderFactory_ newDocumentBuilder];
    }
    else {
      return OrgOssPdfreporterEngineUtilJRXmlUtils_createDocumentBuilder();
    }
  }
  @catch (OrgOssPdfreporterXmlParsersParserConfigurationException *e) {
    @throw new_OrgOssPdfreporterEngineJRException_initWithNSString_withNSException_(@"Failed to create a document builder", e);
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "JRXmlDocumentProducer", NULL, 0x1, NULL, NULL },
    { "initWithJavaIoFile:", "JRXmlDocumentProducer", NULL, 0x1, NULL, NULL },
    { "initWithJavaIoInputStream:", "JRXmlDocumentProducer", NULL, 0x1, NULL, NULL },
    { "initWithNSString:", "JRXmlDocumentProducer", NULL, 0x1, NULL, NULL },
    { "getDocumentBuilderFactory", NULL, "Lorg.oss.pdfreporter.xml.parsers.IDocumentBuilderFactory;", 0x1, NULL, NULL },
    { "setDocumentBuilderFactoryWithOrgOssPdfreporterXmlParsersIDocumentBuilderFactory:", "setDocumentBuilderFactory", "V", 0x1, NULL, NULL },
    { "setFileWithJavaIoFile:", "setFile", "V", 0x1, NULL, NULL },
    { "setInputStreamWithJavaIoInputStream:", "setInputStream", "V", 0x1, NULL, NULL },
    { "setUriWithNSString:", "setUri", "V", 0x1, NULL, NULL },
    { "getDocument", NULL, "Lorg.oss.pdfreporter.uses.org.w3c.dom.Document;", 0x1, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "getDocumentWithOrgOssPdfreporterUsesOrgW3cDomNode:", "getDocument", "Lorg.oss.pdfreporter.uses.org.w3c.dom.Document;", 0x1, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "getDocumentBuilder", NULL, "Lorg.oss.pdfreporter.xml.parsers.IDocumentBuilder;", 0x4, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "file_", NULL, 0x2, "Ljava.io.File;", NULL, NULL, .constantValue.asLong = 0 },
    { "inputStream_", NULL, 0x2, "Ljava.io.InputStream;", NULL, NULL, .constantValue.asLong = 0 },
    { "uri_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "documentBuilderFactory_", NULL, 0x2, "Lorg.oss.pdfreporter.xml.parsers.IDocumentBuilderFactory;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineUtilXmlJRXmlDocumentProducer = { 2, "JRXmlDocumentProducer", "org.oss.pdfreporter.engine.util.xml", NULL, 0x1, 12, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineUtilXmlJRXmlDocumentProducer;
}

@end

void OrgOssPdfreporterEngineUtilXmlJRXmlDocumentProducer_init(OrgOssPdfreporterEngineUtilXmlJRXmlDocumentProducer *self) {
  NSObject_init(self);
}

OrgOssPdfreporterEngineUtilXmlJRXmlDocumentProducer *new_OrgOssPdfreporterEngineUtilXmlJRXmlDocumentProducer_init() {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineUtilXmlJRXmlDocumentProducer, init)
}

OrgOssPdfreporterEngineUtilXmlJRXmlDocumentProducer *create_OrgOssPdfreporterEngineUtilXmlJRXmlDocumentProducer_init() {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineUtilXmlJRXmlDocumentProducer, init)
}

void OrgOssPdfreporterEngineUtilXmlJRXmlDocumentProducer_initWithJavaIoFile_(OrgOssPdfreporterEngineUtilXmlJRXmlDocumentProducer *self, JavaIoFile *file) {
  NSObject_init(self);
  self->file_ = file;
}

OrgOssPdfreporterEngineUtilXmlJRXmlDocumentProducer *new_OrgOssPdfreporterEngineUtilXmlJRXmlDocumentProducer_initWithJavaIoFile_(JavaIoFile *file) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineUtilXmlJRXmlDocumentProducer, initWithJavaIoFile_, file)
}

OrgOssPdfreporterEngineUtilXmlJRXmlDocumentProducer *create_OrgOssPdfreporterEngineUtilXmlJRXmlDocumentProducer_initWithJavaIoFile_(JavaIoFile *file) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineUtilXmlJRXmlDocumentProducer, initWithJavaIoFile_, file)
}

void OrgOssPdfreporterEngineUtilXmlJRXmlDocumentProducer_initWithJavaIoInputStream_(OrgOssPdfreporterEngineUtilXmlJRXmlDocumentProducer *self, JavaIoInputStream *inputStream) {
  NSObject_init(self);
  self->inputStream_ = inputStream;
}

OrgOssPdfreporterEngineUtilXmlJRXmlDocumentProducer *new_OrgOssPdfreporterEngineUtilXmlJRXmlDocumentProducer_initWithJavaIoInputStream_(JavaIoInputStream *inputStream) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineUtilXmlJRXmlDocumentProducer, initWithJavaIoInputStream_, inputStream)
}

OrgOssPdfreporterEngineUtilXmlJRXmlDocumentProducer *create_OrgOssPdfreporterEngineUtilXmlJRXmlDocumentProducer_initWithJavaIoInputStream_(JavaIoInputStream *inputStream) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineUtilXmlJRXmlDocumentProducer, initWithJavaIoInputStream_, inputStream)
}

void OrgOssPdfreporterEngineUtilXmlJRXmlDocumentProducer_initWithNSString_(OrgOssPdfreporterEngineUtilXmlJRXmlDocumentProducer *self, NSString *uri) {
  NSObject_init(self);
  self->uri_ = uri;
}

OrgOssPdfreporterEngineUtilXmlJRXmlDocumentProducer *new_OrgOssPdfreporterEngineUtilXmlJRXmlDocumentProducer_initWithNSString_(NSString *uri) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineUtilXmlJRXmlDocumentProducer, initWithNSString_, uri)
}

OrgOssPdfreporterEngineUtilXmlJRXmlDocumentProducer *create_OrgOssPdfreporterEngineUtilXmlJRXmlDocumentProducer_initWithNSString_(NSString *uri) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineUtilXmlJRXmlDocumentProducer, initWithNSString_, uri)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineUtilXmlJRXmlDocumentProducer)
