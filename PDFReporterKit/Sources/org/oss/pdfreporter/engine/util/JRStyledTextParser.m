//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/util/JRStyledTextParser.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/io/StringReader.h"
#include "java/lang/Boolean.h"
#include "java/lang/Float.h"
#include "java/lang/Integer.h"
#include "java/lang/StringBuffer.h"
#include "java/util/HashMap.h"
#include "java/util/HashSet.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "java/util/StringTokenizer.h"
#include "org/oss/pdfreporter/engine/JRPrintHyperlink.h"
#include "org/oss/pdfreporter/engine/JRPrintHyperlinkParameter.h"
#include "org/oss/pdfreporter/engine/JRPrintHyperlinkParameters.h"
#include "org/oss/pdfreporter/engine/JRRuntimeException.h"
#include "org/oss/pdfreporter/engine/base/JRBasePrintHyperlink.h"
#include "org/oss/pdfreporter/engine/fonts/FontFamily.h"
#include "org/oss/pdfreporter/engine/type/HyperlinkTypeEnum.h"
#include "org/oss/pdfreporter/engine/util/JRColorUtil.h"
#include "org/oss/pdfreporter/engine/util/JRStringUtil.h"
#include "org/oss/pdfreporter/engine/util/JRStyledText.h"
#include "org/oss/pdfreporter/engine/util/JRStyledTextParser.h"
#include "org/oss/pdfreporter/engine/util/JRTextAttribute.h"
#include "org/oss/pdfreporter/engine/util/JRValueStringUtils.h"
#include "org/oss/pdfreporter/extensions/ExtensionsEnvironment.h"
#include "org/oss/pdfreporter/extensions/ExtensionsRegistry.h"
#include "org/oss/pdfreporter/font/IFontManager.h"
#include "org/oss/pdfreporter/font/factory/IFontFactory.h"
#include "org/oss/pdfreporter/font/text/TextAttribute.h"
#include "org/oss/pdfreporter/geometry/IColor.h"
#include "org/oss/pdfreporter/registry/ApiRegistry.h"
#include "org/oss/pdfreporter/registry/IRegistry.h"
#include "org/oss/pdfreporter/text/bundle/StringLocale.h"
#include "org/oss/pdfreporter/uses/java/awt/text/AttributedString.h"
#include "org/oss/pdfreporter/uses/java/awt/text/IAttributedCharacterIterator.h"
#include "org/oss/pdfreporter/uses/org/w3c/dom/Document.h"
#include "org/oss/pdfreporter/uses/org/w3c/dom/Element.h"
#include "org/oss/pdfreporter/uses/org/w3c/dom/NamedNodeMap.h"
#include "org/oss/pdfreporter/uses/org/w3c/dom/Node.h"
#include "org/oss/pdfreporter/uses/org/w3c/dom/NodeList.h"
#include "org/oss/pdfreporter/xml/parsers/IDocumentBuilder.h"
#include "org/oss/pdfreporter/xml/parsers/IDocumentBuilderFactory.h"
#include "org/oss/pdfreporter/xml/parsers/IInputSource.h"
#include "org/oss/pdfreporter/xml/parsers/ParserConfigurationException.h"
#include "org/oss/pdfreporter/xml/parsers/XMLParseException.h"
#include "org/oss/pdfreporter/xml/parsers/factory/IXmlParserFactory.h"

@interface OrgOssPdfreporterEngineUtilJRStyledTextParser () {
 @public
  OrgOssPdfreporterTextBundleStringLocale *locale_;
  id<OrgOssPdfreporterXmlParsersIDocumentBuilder> documentBuilder_;
  OrgOssPdfreporterEngineBaseJRBasePrintHyperlink *hyperlink_;
}

- (instancetype)init;

- (void)parseStyleWithOrgOssPdfreporterEngineUtilJRStyledText:(OrgOssPdfreporterEngineUtilJRStyledText *)styledText
                       withOrgOssPdfreporterUsesOrgW3cDomNode:(id<OrgOssPdfreporterUsesOrgW3cDomNode>)parentNode;

- (void)resizeRunsWithJavaUtilList:(id<JavaUtilList>)runs
                           withInt:(jint)startIndex
                           withInt:(jint)count;

- (JavaLangStringBuffer *)writeStyleAttributesWithJavaUtilMap:(id<JavaUtilMap>)parentAttrs
                                              withJavaUtilMap:(id<JavaUtilMap>)attrs;

- (NSString *)getFirstTextOccurenceWithOrgOssPdfreporterUsesOrgW3cDomNode:(id<OrgOssPdfreporterUsesOrgW3cDomNode>)node;

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineUtilJRStyledTextParser, locale_, OrgOssPdfreporterTextBundleStringLocale *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineUtilJRStyledTextParser, documentBuilder_, id<OrgOssPdfreporterXmlParsersIDocumentBuilder>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineUtilJRStyledTextParser, hyperlink_, OrgOssPdfreporterEngineBaseJRBasePrintHyperlink *)

inline id<JavaUtilSet> OrgOssPdfreporterEngineUtilJRStyledTextParser_get_AVAILABLE_FONT_FACE_NAMES();
static id<JavaUtilSet> OrgOssPdfreporterEngineUtilJRStyledTextParser_AVAILABLE_FONT_FACE_NAMES;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterEngineUtilJRStyledTextParser, AVAILABLE_FONT_FACE_NAMES, id<JavaUtilSet>)

inline OrgOssPdfreporterEngineUtilJRStyledTextParser *OrgOssPdfreporterEngineUtilJRStyledTextParser_get_instance();
static OrgOssPdfreporterEngineUtilJRStyledTextParser *OrgOssPdfreporterEngineUtilJRStyledTextParser_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterEngineUtilJRStyledTextParser, instance, OrgOssPdfreporterEngineUtilJRStyledTextParser *)

inline NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_get_ROOT_START();
static NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_ROOT_START = @"<st>";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterEngineUtilJRStyledTextParser, ROOT_START, NSString *)

inline NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_get_ROOT_END();
static NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_ROOT_END = @"</st>";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterEngineUtilJRStyledTextParser, ROOT_END, NSString *)

inline NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_get_NODE_style();
static NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_NODE_style = @"style";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterEngineUtilJRStyledTextParser, NODE_style, NSString *)

inline NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_get_NODE_bold();
static NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_NODE_bold = @"b";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterEngineUtilJRStyledTextParser, NODE_bold, NSString *)

inline NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_get_NODE_italic();
static NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_NODE_italic = @"i";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterEngineUtilJRStyledTextParser, NODE_italic, NSString *)

inline NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_get_NODE_underline();
static NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_NODE_underline = @"u";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterEngineUtilJRStyledTextParser, NODE_underline, NSString *)

inline NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_get_NODE_sup();
static NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_NODE_sup = @"sup";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterEngineUtilJRStyledTextParser, NODE_sup, NSString *)

inline NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_get_NODE_sub();
static NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_NODE_sub = @"sub";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterEngineUtilJRStyledTextParser, NODE_sub, NSString *)

inline NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_get_NODE_font();
static NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_NODE_font = @"font";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterEngineUtilJRStyledTextParser, NODE_font, NSString *)

inline NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_get_NODE_br();
static NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_NODE_br = @"br";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterEngineUtilJRStyledTextParser, NODE_br, NSString *)

inline NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_get_NODE_li();
static NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_NODE_li = @"li";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterEngineUtilJRStyledTextParser, NODE_li, NSString *)

inline NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_get_NODE_a();
static NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_NODE_a = @"a";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterEngineUtilJRStyledTextParser, NODE_a, NSString *)

inline NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_get_NODE_param();
static NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_NODE_param = @"param";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterEngineUtilJRStyledTextParser, NODE_param, NSString *)

inline NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_get_ATTRIBUTE_fontName();
static NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_fontName = @"fontName";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterEngineUtilJRStyledTextParser, ATTRIBUTE_fontName, NSString *)

inline NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_get_ATTRIBUTE_fontFace();
static NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_fontFace = @"face";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterEngineUtilJRStyledTextParser, ATTRIBUTE_fontFace, NSString *)

inline NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_get_ATTRIBUTE_color();
static NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_color = @"color";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterEngineUtilJRStyledTextParser, ATTRIBUTE_color, NSString *)

inline NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_get_ATTRIBUTE_size();
static NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_size = @"size";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterEngineUtilJRStyledTextParser, ATTRIBUTE_size, NSString *)

inline NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_get_ATTRIBUTE_isBold();
static NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_isBold = @"isBold";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterEngineUtilJRStyledTextParser, ATTRIBUTE_isBold, NSString *)

inline NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_get_ATTRIBUTE_isItalic();
static NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_isItalic = @"isItalic";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterEngineUtilJRStyledTextParser, ATTRIBUTE_isItalic, NSString *)

inline NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_get_ATTRIBUTE_isUnderline();
static NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_isUnderline = @"isUnderline";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterEngineUtilJRStyledTextParser, ATTRIBUTE_isUnderline, NSString *)

inline NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_get_ATTRIBUTE_isStrikeThrough();
static NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_isStrikeThrough = @"isStrikeThrough";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterEngineUtilJRStyledTextParser, ATTRIBUTE_isStrikeThrough, NSString *)

inline NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_get_ATTRIBUTE_forecolor();
static NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_forecolor = @"forecolor";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterEngineUtilJRStyledTextParser, ATTRIBUTE_forecolor, NSString *)

inline NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_get_ATTRIBUTE_backcolor();
static NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_backcolor = @"backcolor";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterEngineUtilJRStyledTextParser, ATTRIBUTE_backcolor, NSString *)

inline NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_get_ATTRIBUTE_pdfFontName();
static NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_pdfFontName = @"pdfFontName";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterEngineUtilJRStyledTextParser, ATTRIBUTE_pdfFontName, NSString *)

inline NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_get_ATTRIBUTE_pdfEncoding();
static NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_pdfEncoding = @"pdfEncoding";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterEngineUtilJRStyledTextParser, ATTRIBUTE_pdfEncoding, NSString *)

inline NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_get_ATTRIBUTE_isPdfEmbedded();
static NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_isPdfEmbedded = @"isPdfEmbedded";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterEngineUtilJRStyledTextParser, ATTRIBUTE_isPdfEmbedded, NSString *)

inline NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_get_ATTRIBUTE_type();
static NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_type = @"type";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterEngineUtilJRStyledTextParser, ATTRIBUTE_type, NSString *)

inline NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_get_ATTRIBUTE_href();
static NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_href = @"href";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterEngineUtilJRStyledTextParser, ATTRIBUTE_href, NSString *)

inline NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_get_ATTRIBUTE_target();
static NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_target = @"target";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterEngineUtilJRStyledTextParser, ATTRIBUTE_target, NSString *)

inline NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_get_ATTRIBUTE_name();
static NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_name = @"name";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterEngineUtilJRStyledTextParser, ATTRIBUTE_name, NSString *)

inline NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_get_ATTRIBUTE_valueClass();
static NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_valueClass = @"valueClass";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterEngineUtilJRStyledTextParser, ATTRIBUTE_valueClass, NSString *)

inline NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_get_SPACE();
static NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_SPACE = @" ";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterEngineUtilJRStyledTextParser, SPACE, NSString *)

inline NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_get_EQUAL_QUOTE();
static NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_EQUAL_QUOTE = @"=\"";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterEngineUtilJRStyledTextParser, EQUAL_QUOTE, NSString *)

inline NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_get_QUOTE();
static NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_QUOTE = @"\"";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterEngineUtilJRStyledTextParser, QUOTE, NSString *)

inline NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_get_SHARP();
static NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_SHARP = @"#";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterEngineUtilJRStyledTextParser, SHARP, NSString *)

inline NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_get_LESS();
static NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_LESS = @"<";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterEngineUtilJRStyledTextParser, LESS, NSString *)

inline NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_get_LESS_SLASH();
static NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_LESS_SLASH = @"</";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterEngineUtilJRStyledTextParser, LESS_SLASH, NSString *)

inline NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_get_GREATER();
static NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_GREATER = @">";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterEngineUtilJRStyledTextParser, GREATER, NSString *)

__attribute__((unused)) static void OrgOssPdfreporterEngineUtilJRStyledTextParser_init(OrgOssPdfreporterEngineUtilJRStyledTextParser *self);

__attribute__((unused)) static OrgOssPdfreporterEngineUtilJRStyledTextParser *new_OrgOssPdfreporterEngineUtilJRStyledTextParser_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgOssPdfreporterEngineUtilJRStyledTextParser *create_OrgOssPdfreporterEngineUtilJRStyledTextParser_init();

__attribute__((unused)) static void OrgOssPdfreporterEngineUtilJRStyledTextParser_parseStyleWithOrgOssPdfreporterEngineUtilJRStyledText_withOrgOssPdfreporterUsesOrgW3cDomNode_(OrgOssPdfreporterEngineUtilJRStyledTextParser *self, OrgOssPdfreporterEngineUtilJRStyledText *styledText, id<OrgOssPdfreporterUsesOrgW3cDomNode> parentNode);

__attribute__((unused)) static void OrgOssPdfreporterEngineUtilJRStyledTextParser_resizeRunsWithJavaUtilList_withInt_withInt_(OrgOssPdfreporterEngineUtilJRStyledTextParser *self, id<JavaUtilList> runs, jint startIndex, jint count);

__attribute__((unused)) static JavaLangStringBuffer *OrgOssPdfreporterEngineUtilJRStyledTextParser_writeStyleAttributesWithJavaUtilMap_withJavaUtilMap_(OrgOssPdfreporterEngineUtilJRStyledTextParser *self, id<JavaUtilMap> parentAttrs, id<JavaUtilMap> attrs);

__attribute__((unused)) static NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_getFirstTextOccurenceWithOrgOssPdfreporterUsesOrgW3cDomNode_(OrgOssPdfreporterEngineUtilJRStyledTextParser *self, id<OrgOssPdfreporterUsesOrgW3cDomNode> node);

J2OBJC_INITIALIZED_DEFN(OrgOssPdfreporterEngineUtilJRStyledTextParser)

@implementation OrgOssPdfreporterEngineUtilJRStyledTextParser

+ (OrgOssPdfreporterEngineUtilJRStyledTextParser *)getInstance {
  return OrgOssPdfreporterEngineUtilJRStyledTextParser_getInstance();
}

+ (void)setLocaleWithOrgOssPdfreporterTextBundleStringLocale:(OrgOssPdfreporterTextBundleStringLocale *)locale {
  OrgOssPdfreporterEngineUtilJRStyledTextParser_setLocaleWithOrgOssPdfreporterTextBundleStringLocale_(locale);
}

+ (OrgOssPdfreporterTextBundleStringLocale *)getLocale {
  return OrgOssPdfreporterEngineUtilJRStyledTextParser_getLocale();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterEngineUtilJRStyledTextParser_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (OrgOssPdfreporterEngineUtilJRStyledText *)parseWithJavaUtilMap:(id<JavaUtilMap>)attributes
                                                     withNSString:(NSString *)text
                      withOrgOssPdfreporterTextBundleStringLocale:(OrgOssPdfreporterTextBundleStringLocale *)locale {
  OrgOssPdfreporterEngineUtilJRStyledText *styledText = new_OrgOssPdfreporterEngineUtilJRStyledText_initWithOrgOssPdfreporterTextBundleStringLocale_(locale);
  id<OrgOssPdfreporterUsesOrgW3cDomDocument> document = nil;
  @try {
    document = [((id<OrgOssPdfreporterXmlParsersIDocumentBuilder>) nil_chk(documentBuilder_)) parseWithOrgOssPdfreporterXmlParsersIInputSource:[((id<OrgOssPdfreporterXmlParsersFactoryIXmlParserFactory>) nil_chk(OrgOssPdfreporterRegistryIRegistry_getIXmlParserFactory())) newInputSourceWithJavaIoReader:new_JavaIoStringReader_initWithNSString_(JreStrcat("$$$", OrgOssPdfreporterEngineUtilJRStyledTextParser_ROOT_START, text, OrgOssPdfreporterEngineUtilJRStyledTextParser_ROOT_END))]];
  }
  @catch (JavaIoIOException *e) {
    @throw new_OrgOssPdfreporterEngineJRRuntimeException_initWithNSException_(e);
  }
  hyperlink_ = nil;
  OrgOssPdfreporterEngineUtilJRStyledTextParser_parseStyleWithOrgOssPdfreporterEngineUtilJRStyledText_withOrgOssPdfreporterUsesOrgW3cDomNode_(self, styledText, [((id<OrgOssPdfreporterUsesOrgW3cDomDocument>) nil_chk(document)) getDocumentElement]);
  [styledText setGlobalAttributesWithJavaUtilMap:attributes];
  return styledText;
}

- (OrgOssPdfreporterEngineUtilJRStyledText *)getStyledTextWithJavaUtilMap:(id<JavaUtilMap>)parentAttributes
                                                             withNSString:(NSString *)text
                                                              withBoolean:(jboolean)isStyledText
                              withOrgOssPdfreporterTextBundleStringLocale:(OrgOssPdfreporterTextBundleStringLocale *)locale {
  OrgOssPdfreporterEngineUtilJRStyledText *styledText = nil;
  if (isStyledText) {
    @try {
      styledText = [self parseWithJavaUtilMap:parentAttributes withNSString:text withOrgOssPdfreporterTextBundleStringLocale:locale];
    }
    @catch (OrgOssPdfreporterXmlParsersXMLParseException *e) {
    }
  }
  if (styledText == nil) {
    styledText = new_OrgOssPdfreporterEngineUtilJRStyledText_initWithOrgOssPdfreporterTextBundleStringLocale_(locale);
    [styledText appendWithNSString:text];
    [styledText setGlobalAttributesWithJavaUtilMap:parentAttributes];
  }
  return styledText;
}

- (NSString *)writeWithOrgOssPdfreporterEngineUtilJRStyledText:(OrgOssPdfreporterEngineUtilJRStyledText *)styledText {
  return [self writeWithJavaUtilMap:[((OrgOssPdfreporterEngineUtilJRStyledText *) nil_chk(styledText)) getGlobalAttributes] withOrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator:[((OrgOssPdfreporterUsesJavaAwtTextAttributedString *) nil_chk([styledText getAttributedString])) getIterator] withNSString:[styledText getText]];
}

- (NSString *)writeWithJavaUtilMap:(id<JavaUtilMap>)parentAttrs
withOrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator:(id<OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator>)iterator
                      withNSString:(NSString *)text {
  JavaLangStringBuffer *sbuffer = new_JavaLangStringBuffer_init();
  jint runLimit = 0;
  while (runLimit < [((id<OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator>) nil_chk(iterator)) getEndIndex] && (runLimit = [iterator getRunLimit]) <= [iterator getEndIndex]) {
    NSString *chunk = [((NSString *) nil_chk(text)) substring:[iterator getIndex] endIndex:runLimit];
    id<JavaUtilMap> attrs = [iterator getAttributes];
    JavaLangStringBuffer *styleBuffer = OrgOssPdfreporterEngineUtilJRStyledTextParser_writeStyleAttributesWithJavaUtilMap_withJavaUtilMap_(self, parentAttrs, attrs);
    if ([((JavaLangStringBuffer *) nil_chk(styleBuffer)) length] > 0) {
      (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_LESS];
      (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_NODE_style];
      (void) [sbuffer appendWithNSString:[styleBuffer description]];
      (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_GREATER];
      [self writeChunkWithJavaLangStringBuffer:sbuffer withJavaUtilMap:parentAttrs withJavaUtilMap:attrs withNSString:chunk];
      (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_LESS_SLASH];
      (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_NODE_style];
      (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_GREATER];
    }
    else {
      [self writeChunkWithJavaLangStringBuffer:sbuffer withJavaUtilMap:parentAttrs withJavaUtilMap:attrs withNSString:chunk];
    }
    [iterator setIndexWithInt:runLimit];
  }
  return [sbuffer description];
}

- (NSString *)writeWithOrgOssPdfreporterEngineUtilJRStyledText:(OrgOssPdfreporterEngineUtilJRStyledText *)styledText
                                                       withInt:(jint)startIndex
                                                       withInt:(jint)endIndex {
  id<OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator> subIterator = [new_OrgOssPdfreporterUsesJavaAwtTextAttributedString_initWithOrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator_withInt_withInt_([((OrgOssPdfreporterUsesJavaAwtTextAttributedString *) nil_chk([((OrgOssPdfreporterEngineUtilJRStyledText *) nil_chk(styledText)) getAttributedString])) getIterator], startIndex, endIndex) getIterator];
  NSString *subText = [((NSString *) nil_chk([styledText getText])) substring:startIndex endIndex:endIndex];
  return [self writeWithJavaUtilMap:[styledText getGlobalAttributes] withOrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator:subIterator withNSString:subText];
}

- (void)writeChunkWithJavaLangStringBuffer:(JavaLangStringBuffer *)sbuffer
                           withJavaUtilMap:(id<JavaUtilMap>)parentAttrs
                           withJavaUtilMap:(id<JavaUtilMap>)attrs
                              withNSString:(NSString *)chunk {
  id value = [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:JreLoadStatic(OrgOssPdfreporterFontTextTextAttribute, SUPERSCRIPT)];
  id oldValue = [((id<JavaUtilMap>) nil_chk(parentAttrs)) getWithId:JreLoadStatic(OrgOssPdfreporterFontTextTextAttribute, SUPERSCRIPT)];
  jboolean isSuper = false;
  jboolean isSub = false;
  if (value != nil && ![value isEqual:oldValue]) {
    isSuper = [((JavaLangInteger *) nil_chk(JreLoadStatic(OrgOssPdfreporterFontTextTextAttribute, SUPERSCRIPT_SUPER))) isEqual:value];
    isSub = [((JavaLangInteger *) nil_chk(JreLoadStatic(OrgOssPdfreporterFontTextTextAttribute, SUPERSCRIPT_SUB))) isEqual:value];
  }
  NSString *scriptNode = isSuper ? OrgOssPdfreporterEngineUtilJRStyledTextParser_NODE_sup : OrgOssPdfreporterEngineUtilJRStyledTextParser_NODE_sub;
  if (isSuper || isSub) {
    (void) [((JavaLangStringBuffer *) nil_chk(sbuffer)) appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_LESS];
    (void) [sbuffer appendWithNSString:scriptNode];
    (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_GREATER];
  }
  id<OrgOssPdfreporterEngineJRPrintHyperlink> hlink = (id<OrgOssPdfreporterEngineJRPrintHyperlink>) cast_check([attrs getWithId:JreLoadStatic(OrgOssPdfreporterEngineUtilJRTextAttribute, HYPERLINK)], OrgOssPdfreporterEngineJRPrintHyperlink_class_());
  if (hlink != nil) {
    (void) [((JavaLangStringBuffer *) nil_chk(sbuffer)) appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_LESS];
    (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_NODE_a];
    NSString *href = [hlink getHyperlinkReference];
    if (href != nil && ((jint) [((NSString *) nil_chk([href trim])) length]) > 0) {
      (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_SPACE];
      (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_href];
      (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_EQUAL_QUOTE];
      (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStringUtil_htmlEncodeWithNSString_(href)];
      (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_QUOTE];
    }
    NSString *type = [hlink getLinkType];
    if (type != nil && ((jint) [((NSString *) nil_chk([type trim])) length]) > 0) {
      (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_SPACE];
      (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_type];
      (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_EQUAL_QUOTE];
      (void) [sbuffer appendWithNSString:type];
      (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_QUOTE];
    }
    NSString *target = [hlink getLinkTarget];
    if (target != nil && ((jint) [((NSString *) nil_chk([target trim])) length]) > 0) {
      (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_SPACE];
      (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_target];
      (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_EQUAL_QUOTE];
      (void) [sbuffer appendWithNSString:target];
      (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_QUOTE];
    }
    (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_GREATER];
    OrgOssPdfreporterEngineJRPrintHyperlinkParameters *parameters = [hlink getHyperlinkParameters];
    if (parameters != nil && [parameters getParameters] != nil) {
      for (OrgOssPdfreporterEngineJRPrintHyperlinkParameter * __strong parameter in nil_chk([parameters getParameters])) {
        (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_LESS];
        (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_NODE_param];
        (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_SPACE];
        (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_name];
        (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_EQUAL_QUOTE];
        (void) [sbuffer appendWithNSString:[((OrgOssPdfreporterEngineJRPrintHyperlinkParameter *) nil_chk(parameter)) getName]];
        (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_QUOTE];
        (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_GREATER];
        if ([parameter getValue] != nil) {
          NSString *strValue = OrgOssPdfreporterEngineUtilJRValueStringUtils_serializeWithNSString_withId_([parameter getValueClass], [parameter getValue]);
          (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStringUtil_xmlEncodeWithNSString_(strValue)];
        }
        (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_LESS_SLASH];
        (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_NODE_param];
        (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_GREATER];
      }
    }
  }
  (void) [((JavaLangStringBuffer *) nil_chk(sbuffer)) appendWithNSString:OrgOssPdfreporterEngineUtilJRStringUtil_xmlEncodeWithNSString_(chunk)];
  if (hlink != nil) {
    (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_LESS_SLASH];
    (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_NODE_a];
    (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_GREATER];
  }
  if (isSuper || isSub) {
    (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_LESS_SLASH];
    (void) [sbuffer appendWithNSString:scriptNode];
    (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_GREATER];
  }
}

- (void)parseStyleWithOrgOssPdfreporterEngineUtilJRStyledText:(OrgOssPdfreporterEngineUtilJRStyledText *)styledText
                       withOrgOssPdfreporterUsesOrgW3cDomNode:(id<OrgOssPdfreporterUsesOrgW3cDomNode>)parentNode {
  OrgOssPdfreporterEngineUtilJRStyledTextParser_parseStyleWithOrgOssPdfreporterEngineUtilJRStyledText_withOrgOssPdfreporterUsesOrgW3cDomNode_(self, styledText, parentNode);
}

- (void)resizeRunsWithJavaUtilList:(id<JavaUtilList>)runs
                           withInt:(jint)startIndex
                           withInt:(jint)count {
  OrgOssPdfreporterEngineUtilJRStyledTextParser_resizeRunsWithJavaUtilList_withInt_withInt_(self, runs, startIndex, count);
}

- (JavaLangStringBuffer *)writeStyleAttributesWithJavaUtilMap:(id<JavaUtilMap>)parentAttrs
                                              withJavaUtilMap:(id<JavaUtilMap>)attrs {
  return OrgOssPdfreporterEngineUtilJRStyledTextParser_writeStyleAttributesWithJavaUtilMap_withJavaUtilMap_(self, parentAttrs, attrs);
}

- (NSString *)getFirstTextOccurenceWithOrgOssPdfreporterUsesOrgW3cDomNode:(id<OrgOssPdfreporterUsesOrgW3cDomNode>)node {
  return OrgOssPdfreporterEngineUtilJRStyledTextParser_getFirstTextOccurenceWithOrgOssPdfreporterUsesOrgW3cDomNode_(self, node);
}

- (void)errorWithOrgOssPdfreporterXmlParsersXMLParseException:(OrgOssPdfreporterXmlParsersXMLParseException *)e {
}

- (void)fatalErrorWithOrgOssPdfreporterXmlParsersXMLParseException:(OrgOssPdfreporterXmlParsersXMLParseException *)e {
}

- (void)warningWithOrgOssPdfreporterXmlParsersXMLParseException:(OrgOssPdfreporterXmlParsersXMLParseException *)e {
}

+ (void)initialize {
  if (self == [OrgOssPdfreporterEngineUtilJRStyledTextParser class]) {
    OrgOssPdfreporterEngineUtilJRStyledTextParser_AVAILABLE_FONT_FACE_NAMES = new_JavaUtilHashSet_init();
    OrgOssPdfreporterEngineUtilJRStyledTextParser_instance = new_OrgOssPdfreporterEngineUtilJRStyledTextParser_init();
    {
      id<JavaUtilList> families = [((id<OrgOssPdfreporterExtensionsExtensionsRegistry>) nil_chk(OrgOssPdfreporterExtensionsExtensionsEnvironment_getExtensionsRegistry())) getExtensionsWithIOSClass:OrgOssPdfreporterEngineFontsFontFamily_class_()];
      for (id<JavaUtilIterator> itf = [((id<JavaUtilList>) nil_chk(families)) iterator]; [((id<JavaUtilIterator>) nil_chk(itf)) hasNext]; ) {
        id<OrgOssPdfreporterEngineFontsFontFamily> family = [itf next];
        [OrgOssPdfreporterEngineUtilJRStyledTextParser_AVAILABLE_FONT_FACE_NAMES addWithId:[((id<OrgOssPdfreporterEngineFontsFontFamily>) nil_chk(family)) getName]];
      }
      [OrgOssPdfreporterEngineUtilJRStyledTextParser_AVAILABLE_FONT_FACE_NAMES addAllWithJavaUtilCollection:[((id<OrgOssPdfreporterFontIFontManager>) nil_chk([((id<OrgOssPdfreporterFontFactoryIFontFactory>) nil_chk(OrgOssPdfreporterRegistryApiRegistry_getFontFactory())) getFontManager])) getFontFamilyNames]];
    }
    J2OBJC_SET_INITIALIZED(OrgOssPdfreporterEngineUtilJRStyledTextParser)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getInstance", NULL, "Lorg.oss.pdfreporter.engine.util.JRStyledTextParser;", 0x9, NULL, NULL },
    { "setLocaleWithOrgOssPdfreporterTextBundleStringLocale:", "setLocale", "V", 0x9, NULL, NULL },
    { "getLocale", NULL, "Lorg.oss.pdfreporter.text.bundle.StringLocale;", 0x9, NULL, NULL },
    { "init", "JRStyledTextParser", NULL, 0x2, NULL, NULL },
    { "parseWithJavaUtilMap:withNSString:withOrgOssPdfreporterTextBundleStringLocale:", "parse", "Lorg.oss.pdfreporter.engine.util.JRStyledText;", 0x1, "Lorg.oss.pdfreporter.xml.parsers.XMLParseException;", "(Ljava/util/Map<Lorg/oss/pdfreporter/uses/java/awt/text/IAttributedCharacterIterator$Attribute;Ljava/lang/Object;>;Ljava/lang/String;Lorg/oss/pdfreporter/text/bundle/StringLocale;)Lorg/oss/pdfreporter/engine/util/JRStyledText;" },
    { "getStyledTextWithJavaUtilMap:withNSString:withBoolean:withOrgOssPdfreporterTextBundleStringLocale:", "getStyledText", "Lorg.oss.pdfreporter.engine.util.JRStyledText;", 0x1, NULL, "(Ljava/util/Map<Lorg/oss/pdfreporter/uses/java/awt/text/IAttributedCharacterIterator$Attribute;Ljava/lang/Object;>;Ljava/lang/String;ZLorg/oss/pdfreporter/text/bundle/StringLocale;)Lorg/oss/pdfreporter/engine/util/JRStyledText;" },
    { "writeWithOrgOssPdfreporterEngineUtilJRStyledText:", "write", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "writeWithJavaUtilMap:withOrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator:withNSString:", "write", "Ljava.lang.String;", 0x1, NULL, "(Ljava/util/Map<Lorg/oss/pdfreporter/uses/java/awt/text/IAttributedCharacterIterator$Attribute;Ljava/lang/Object;>;Lorg/oss/pdfreporter/uses/java/awt/text/IAttributedCharacterIterator;Ljava/lang/String;)Ljava/lang/String;" },
    { "writeWithOrgOssPdfreporterEngineUtilJRStyledText:withInt:withInt:", "write", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "writeChunkWithJavaLangStringBuffer:withJavaUtilMap:withJavaUtilMap:withNSString:", "writeChunk", "V", 0x1, NULL, "(Ljava/lang/StringBuffer;Ljava/util/Map<Lorg/oss/pdfreporter/uses/java/awt/text/IAttributedCharacterIterator$Attribute;Ljava/lang/Object;>;Ljava/util/Map<Lorg/oss/pdfreporter/uses/java/awt/text/IAttributedCharacterIterator$Attribute;Ljava/lang/Object;>;Ljava/lang/String;)V" },
    { "parseStyleWithOrgOssPdfreporterEngineUtilJRStyledText:withOrgOssPdfreporterUsesOrgW3cDomNode:", "parseStyle", "V", 0x2, "Lorg.oss.pdfreporter.xml.parsers.XMLParseException;", NULL },
    { "resizeRunsWithJavaUtilList:withInt:withInt:", "resizeRuns", "V", 0x2, NULL, "(Ljava/util/List<Lorg/oss/pdfreporter/engine/util/JRStyledText$Run;>;II)V" },
    { "writeStyleAttributesWithJavaUtilMap:withJavaUtilMap:", "writeStyleAttributes", "Ljava.lang.StringBuffer;", 0x2, NULL, "(Ljava/util/Map<Lorg/oss/pdfreporter/uses/java/awt/text/IAttributedCharacterIterator$Attribute;Ljava/lang/Object;>;Ljava/util/Map<Lorg/oss/pdfreporter/uses/java/awt/text/IAttributedCharacterIterator$Attribute;Ljava/lang/Object;>;)Ljava/lang/StringBuffer;" },
    { "getFirstTextOccurenceWithOrgOssPdfreporterUsesOrgW3cDomNode:", "getFirstTextOccurence", "Ljava.lang.String;", 0x2, NULL, NULL },
    { "errorWithOrgOssPdfreporterXmlParsersXMLParseException:", "error", "V", 0x1, NULL, NULL },
    { "fatalErrorWithOrgOssPdfreporterXmlParsersXMLParseException:", "fatalError", "V", 0x1, NULL, NULL },
    { "warningWithOrgOssPdfreporterXmlParsersXMLParseException:", "warning", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "AVAILABLE_FONT_FACE_NAMES", "AVAILABLE_FONT_FACE_NAMES", 0x1a, "Ljava.util.Set;", &OrgOssPdfreporterEngineUtilJRStyledTextParser_AVAILABLE_FONT_FACE_NAMES, "Ljava/util/Set<Ljava/lang/String;>;", .constantValue.asLong = 0 },
    { "instance", "instance", 0x1a, "Lorg.oss.pdfreporter.engine.util.JRStyledTextParser;", &OrgOssPdfreporterEngineUtilJRStyledTextParser_instance, NULL, .constantValue.asLong = 0 },
    { "locale_", NULL, 0x2, "Lorg.oss.pdfreporter.text.bundle.StringLocale;", NULL, NULL, .constantValue.asLong = 0 },
    { "ROOT_START", "ROOT_START", 0x1a, "Ljava.lang.String;", &OrgOssPdfreporterEngineUtilJRStyledTextParser_ROOT_START, NULL, .constantValue.asLong = 0 },
    { "ROOT_END", "ROOT_END", 0x1a, "Ljava.lang.String;", &OrgOssPdfreporterEngineUtilJRStyledTextParser_ROOT_END, NULL, .constantValue.asLong = 0 },
    { "NODE_style", "NODE_style", 0x1a, "Ljava.lang.String;", &OrgOssPdfreporterEngineUtilJRStyledTextParser_NODE_style, NULL, .constantValue.asLong = 0 },
    { "NODE_bold", "NODE_bold", 0x1a, "Ljava.lang.String;", &OrgOssPdfreporterEngineUtilJRStyledTextParser_NODE_bold, NULL, .constantValue.asLong = 0 },
    { "NODE_italic", "NODE_italic", 0x1a, "Ljava.lang.String;", &OrgOssPdfreporterEngineUtilJRStyledTextParser_NODE_italic, NULL, .constantValue.asLong = 0 },
    { "NODE_underline", "NODE_underline", 0x1a, "Ljava.lang.String;", &OrgOssPdfreporterEngineUtilJRStyledTextParser_NODE_underline, NULL, .constantValue.asLong = 0 },
    { "NODE_sup", "NODE_sup", 0x1a, "Ljava.lang.String;", &OrgOssPdfreporterEngineUtilJRStyledTextParser_NODE_sup, NULL, .constantValue.asLong = 0 },
    { "NODE_sub", "NODE_sub", 0x1a, "Ljava.lang.String;", &OrgOssPdfreporterEngineUtilJRStyledTextParser_NODE_sub, NULL, .constantValue.asLong = 0 },
    { "NODE_font", "NODE_font", 0x1a, "Ljava.lang.String;", &OrgOssPdfreporterEngineUtilJRStyledTextParser_NODE_font, NULL, .constantValue.asLong = 0 },
    { "NODE_br", "NODE_br", 0x1a, "Ljava.lang.String;", &OrgOssPdfreporterEngineUtilJRStyledTextParser_NODE_br, NULL, .constantValue.asLong = 0 },
    { "NODE_li", "NODE_li", 0x1a, "Ljava.lang.String;", &OrgOssPdfreporterEngineUtilJRStyledTextParser_NODE_li, NULL, .constantValue.asLong = 0 },
    { "NODE_a", "NODE_a", 0x1a, "Ljava.lang.String;", &OrgOssPdfreporterEngineUtilJRStyledTextParser_NODE_a, NULL, .constantValue.asLong = 0 },
    { "NODE_param", "NODE_param", 0x1a, "Ljava.lang.String;", &OrgOssPdfreporterEngineUtilJRStyledTextParser_NODE_param, NULL, .constantValue.asLong = 0 },
    { "ATTRIBUTE_fontName", "ATTRIBUTE_fontName", 0x1a, "Ljava.lang.String;", &OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_fontName, NULL, .constantValue.asLong = 0 },
    { "ATTRIBUTE_fontFace", "ATTRIBUTE_fontFace", 0x1a, "Ljava.lang.String;", &OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_fontFace, NULL, .constantValue.asLong = 0 },
    { "ATTRIBUTE_color", "ATTRIBUTE_color", 0x1a, "Ljava.lang.String;", &OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_color, NULL, .constantValue.asLong = 0 },
    { "ATTRIBUTE_size", "ATTRIBUTE_size", 0x1a, "Ljava.lang.String;", &OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_size, NULL, .constantValue.asLong = 0 },
    { "ATTRIBUTE_isBold", "ATTRIBUTE_isBold", 0x1a, "Ljava.lang.String;", &OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_isBold, NULL, .constantValue.asLong = 0 },
    { "ATTRIBUTE_isItalic", "ATTRIBUTE_isItalic", 0x1a, "Ljava.lang.String;", &OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_isItalic, NULL, .constantValue.asLong = 0 },
    { "ATTRIBUTE_isUnderline", "ATTRIBUTE_isUnderline", 0x1a, "Ljava.lang.String;", &OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_isUnderline, NULL, .constantValue.asLong = 0 },
    { "ATTRIBUTE_isStrikeThrough", "ATTRIBUTE_isStrikeThrough", 0x1a, "Ljava.lang.String;", &OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_isStrikeThrough, NULL, .constantValue.asLong = 0 },
    { "ATTRIBUTE_forecolor", "ATTRIBUTE_forecolor", 0x1a, "Ljava.lang.String;", &OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_forecolor, NULL, .constantValue.asLong = 0 },
    { "ATTRIBUTE_backcolor", "ATTRIBUTE_backcolor", 0x1a, "Ljava.lang.String;", &OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_backcolor, NULL, .constantValue.asLong = 0 },
    { "ATTRIBUTE_pdfFontName", "ATTRIBUTE_pdfFontName", 0x1a, "Ljava.lang.String;", &OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_pdfFontName, NULL, .constantValue.asLong = 0 },
    { "ATTRIBUTE_pdfEncoding", "ATTRIBUTE_pdfEncoding", 0x1a, "Ljava.lang.String;", &OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_pdfEncoding, NULL, .constantValue.asLong = 0 },
    { "ATTRIBUTE_isPdfEmbedded", "ATTRIBUTE_isPdfEmbedded", 0x1a, "Ljava.lang.String;", &OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_isPdfEmbedded, NULL, .constantValue.asLong = 0 },
    { "ATTRIBUTE_type", "ATTRIBUTE_type", 0x1a, "Ljava.lang.String;", &OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_type, NULL, .constantValue.asLong = 0 },
    { "ATTRIBUTE_href", "ATTRIBUTE_href", 0x1a, "Ljava.lang.String;", &OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_href, NULL, .constantValue.asLong = 0 },
    { "ATTRIBUTE_target", "ATTRIBUTE_target", 0x1a, "Ljava.lang.String;", &OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_target, NULL, .constantValue.asLong = 0 },
    { "ATTRIBUTE_name", "ATTRIBUTE_name", 0x1a, "Ljava.lang.String;", &OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_name, NULL, .constantValue.asLong = 0 },
    { "ATTRIBUTE_valueClass", "ATTRIBUTE_valueClass", 0x1a, "Ljava.lang.String;", &OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_valueClass, NULL, .constantValue.asLong = 0 },
    { "SPACE", "SPACE", 0x1a, "Ljava.lang.String;", &OrgOssPdfreporterEngineUtilJRStyledTextParser_SPACE, NULL, .constantValue.asLong = 0 },
    { "EQUAL_QUOTE", "EQUAL_QUOTE", 0x1a, "Ljava.lang.String;", &OrgOssPdfreporterEngineUtilJRStyledTextParser_EQUAL_QUOTE, NULL, .constantValue.asLong = 0 },
    { "QUOTE", "QUOTE", 0x1a, "Ljava.lang.String;", &OrgOssPdfreporterEngineUtilJRStyledTextParser_QUOTE, NULL, .constantValue.asLong = 0 },
    { "SHARP", "SHARP", 0x1a, "Ljava.lang.String;", &OrgOssPdfreporterEngineUtilJRStyledTextParser_SHARP, NULL, .constantValue.asLong = 0 },
    { "LESS", "LESS", 0x1a, "Ljava.lang.String;", &OrgOssPdfreporterEngineUtilJRStyledTextParser_LESS, NULL, .constantValue.asLong = 0 },
    { "LESS_SLASH", "LESS_SLASH", 0x1a, "Ljava.lang.String;", &OrgOssPdfreporterEngineUtilJRStyledTextParser_LESS_SLASH, NULL, .constantValue.asLong = 0 },
    { "GREATER", "GREATER", 0x1a, "Ljava.lang.String;", &OrgOssPdfreporterEngineUtilJRStyledTextParser_GREATER, NULL, .constantValue.asLong = 0 },
    { "documentBuilder_", NULL, 0x2, "Lorg.oss.pdfreporter.xml.parsers.IDocumentBuilder;", NULL, NULL, .constantValue.asLong = 0 },
    { "hyperlink_", NULL, 0x2, "Lorg.oss.pdfreporter.engine.base.JRBasePrintHyperlink;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineUtilJRStyledTextParser = { 2, "JRStyledTextParser", "org.oss.pdfreporter.engine.util", NULL, 0x1, 17, methods, 43, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineUtilJRStyledTextParser;
}

@end

OrgOssPdfreporterEngineUtilJRStyledTextParser *OrgOssPdfreporterEngineUtilJRStyledTextParser_getInstance() {
  OrgOssPdfreporterEngineUtilJRStyledTextParser_initialize();
  return OrgOssPdfreporterEngineUtilJRStyledTextParser_instance;
}

void OrgOssPdfreporterEngineUtilJRStyledTextParser_setLocaleWithOrgOssPdfreporterTextBundleStringLocale_(OrgOssPdfreporterTextBundleStringLocale *locale) {
  OrgOssPdfreporterEngineUtilJRStyledTextParser_initialize();
  ((OrgOssPdfreporterEngineUtilJRStyledTextParser *) nil_chk(OrgOssPdfreporterEngineUtilJRStyledTextParser_instance))->locale_ = locale;
}

OrgOssPdfreporterTextBundleStringLocale *OrgOssPdfreporterEngineUtilJRStyledTextParser_getLocale() {
  OrgOssPdfreporterEngineUtilJRStyledTextParser_initialize();
  return ((OrgOssPdfreporterEngineUtilJRStyledTextParser *) nil_chk(OrgOssPdfreporterEngineUtilJRStyledTextParser_instance))->locale_;
}

void OrgOssPdfreporterEngineUtilJRStyledTextParser_init(OrgOssPdfreporterEngineUtilJRStyledTextParser *self) {
  NSObject_init(self);
  self->locale_ = nil;
  @try {
    id<OrgOssPdfreporterXmlParsersIDocumentBuilderFactory> factory = [((id<OrgOssPdfreporterXmlParsersFactoryIXmlParserFactory>) nil_chk(OrgOssPdfreporterRegistryIRegistry_getIXmlParserFactory())) newDocumentBuilderFactory];
    self->documentBuilder_ = [((id<OrgOssPdfreporterXmlParsersIDocumentBuilderFactory>) nil_chk(factory)) newDocumentBuilder];
    [((id<OrgOssPdfreporterXmlParsersIDocumentBuilder>) nil_chk(self->documentBuilder_)) setErrorHandlerWithOrgOssPdfreporterXmlParsersXMLErrorHandler:self];
  }
  @catch (OrgOssPdfreporterXmlParsersParserConfigurationException *e) {
    @throw new_OrgOssPdfreporterEngineJRRuntimeException_initWithNSException_(e);
  }
}

OrgOssPdfreporterEngineUtilJRStyledTextParser *new_OrgOssPdfreporterEngineUtilJRStyledTextParser_init() {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineUtilJRStyledTextParser, init)
}

OrgOssPdfreporterEngineUtilJRStyledTextParser *create_OrgOssPdfreporterEngineUtilJRStyledTextParser_init() {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineUtilJRStyledTextParser, init)
}

void OrgOssPdfreporterEngineUtilJRStyledTextParser_parseStyleWithOrgOssPdfreporterEngineUtilJRStyledText_withOrgOssPdfreporterUsesOrgW3cDomNode_(OrgOssPdfreporterEngineUtilJRStyledTextParser *self, OrgOssPdfreporterEngineUtilJRStyledText *styledText, id<OrgOssPdfreporterUsesOrgW3cDomNode> parentNode) {
  id<OrgOssPdfreporterUsesOrgW3cDomNodeList> nodeList = [((id<OrgOssPdfreporterUsesOrgW3cDomNode>) nil_chk(parentNode)) getChildNodes];
  for (jint i = 0; i < [((id<OrgOssPdfreporterUsesOrgW3cDomNodeList>) nil_chk(nodeList)) getLength]; i++) {
    id<OrgOssPdfreporterUsesOrgW3cDomNode> node = [nodeList itemWithInt:i];
    if ([((id<OrgOssPdfreporterUsesOrgW3cDomNode>) nil_chk(node)) getNodeType] == OrgOssPdfreporterUsesOrgW3cDomNode_TEXT_NODE) {
      [((OrgOssPdfreporterEngineUtilJRStyledText *) nil_chk(styledText)) appendWithNSString:[node getNodeValue]];
    }
    else if ([node getNodeType] == OrgOssPdfreporterUsesOrgW3cDomNode_ELEMENT_NODE && [((NSString *) nil_chk(OrgOssPdfreporterEngineUtilJRStyledTextParser_NODE_style)) isEqual:[node getNodeName]]) {
      id<OrgOssPdfreporterUsesOrgW3cDomNamedNodeMap> nodeAttrs = [node getAttributes];
      id<JavaUtilMap> styleAttrs = new_JavaUtilHashMap_init();
      if ([((id<OrgOssPdfreporterUsesOrgW3cDomNamedNodeMap>) nil_chk(nodeAttrs)) getNamedItemWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_fontName] != nil) {
        (void) [styleAttrs putWithId:JreLoadStatic(OrgOssPdfreporterFontTextTextAttribute, FAMILY) withId:[((id<OrgOssPdfreporterUsesOrgW3cDomNode>) nil_chk([nodeAttrs getNamedItemWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_fontName])) getNodeValue]];
      }
      if ([nodeAttrs getNamedItemWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_isBold] != nil) {
        (void) [styleAttrs putWithId:JreLoadStatic(OrgOssPdfreporterFontTextTextAttribute, WEIGHT) withId:[((JavaLangBoolean *) nil_chk(JavaLangBoolean_valueOfWithNSString_([((id<OrgOssPdfreporterUsesOrgW3cDomNode>) nil_chk([nodeAttrs getNamedItemWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_isBold])) getNodeValue]))) booleanValue] ? JreLoadStatic(OrgOssPdfreporterFontTextTextAttribute, WEIGHT_BOLD) : JreLoadStatic(OrgOssPdfreporterFontTextTextAttribute, WEIGHT_REGULAR)];
      }
      if ([nodeAttrs getNamedItemWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_isItalic] != nil) {
        (void) [styleAttrs putWithId:JreLoadStatic(OrgOssPdfreporterFontTextTextAttribute, POSTURE) withId:[((JavaLangBoolean *) nil_chk(JavaLangBoolean_valueOfWithNSString_([((id<OrgOssPdfreporterUsesOrgW3cDomNode>) nil_chk([nodeAttrs getNamedItemWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_isItalic])) getNodeValue]))) booleanValue] ? JreLoadStatic(OrgOssPdfreporterFontTextTextAttribute, POSTURE_OBLIQUE) : JreLoadStatic(OrgOssPdfreporterFontTextTextAttribute, POSTURE_REGULAR)];
      }
      if ([nodeAttrs getNamedItemWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_isUnderline] != nil) {
        (void) [styleAttrs putWithId:JreLoadStatic(OrgOssPdfreporterFontTextTextAttribute, UNDERLINE) withId:[((JavaLangBoolean *) nil_chk(JavaLangBoolean_valueOfWithNSString_([((id<OrgOssPdfreporterUsesOrgW3cDomNode>) nil_chk([nodeAttrs getNamedItemWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_isUnderline])) getNodeValue]))) booleanValue] ? JreLoadStatic(OrgOssPdfreporterFontTextTextAttribute, UNDERLINE_ON) : nil];
      }
      if ([nodeAttrs getNamedItemWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_isStrikeThrough] != nil) {
        (void) [styleAttrs putWithId:JreLoadStatic(OrgOssPdfreporterFontTextTextAttribute, STRIKETHROUGH) withId:[((JavaLangBoolean *) nil_chk(JavaLangBoolean_valueOfWithNSString_([((id<OrgOssPdfreporterUsesOrgW3cDomNode>) nil_chk([nodeAttrs getNamedItemWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_isStrikeThrough])) getNodeValue]))) booleanValue] ? JreLoadStatic(OrgOssPdfreporterFontTextTextAttribute, STRIKETHROUGH_ON) : nil];
      }
      if ([nodeAttrs getNamedItemWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_size] != nil) {
        (void) [styleAttrs putWithId:JreLoadStatic(OrgOssPdfreporterFontTextTextAttribute, SIZE) withId:new_JavaLangFloat_initWithNSString_([((id<OrgOssPdfreporterUsesOrgW3cDomNode>) nil_chk([nodeAttrs getNamedItemWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_size])) getNodeValue])];
      }
      if ([nodeAttrs getNamedItemWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_pdfFontName] != nil) {
        (void) [styleAttrs putWithId:JreLoadStatic(OrgOssPdfreporterEngineUtilJRTextAttribute, PDF_FONT_NAME) withId:[((id<OrgOssPdfreporterUsesOrgW3cDomNode>) nil_chk([nodeAttrs getNamedItemWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_pdfFontName])) getNodeValue]];
      }
      if ([nodeAttrs getNamedItemWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_pdfEncoding] != nil) {
        (void) [styleAttrs putWithId:JreLoadStatic(OrgOssPdfreporterEngineUtilJRTextAttribute, PDF_ENCODING) withId:[((id<OrgOssPdfreporterUsesOrgW3cDomNode>) nil_chk([nodeAttrs getNamedItemWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_pdfEncoding])) getNodeValue]];
      }
      if ([nodeAttrs getNamedItemWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_isPdfEmbedded] != nil) {
        (void) [styleAttrs putWithId:JreLoadStatic(OrgOssPdfreporterEngineUtilJRTextAttribute, IS_PDF_EMBEDDED) withId:JavaLangBoolean_valueOfWithNSString_([((id<OrgOssPdfreporterUsesOrgW3cDomNode>) nil_chk([nodeAttrs getNamedItemWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_isPdfEmbedded])) getNodeValue])];
      }
      if ([nodeAttrs getNamedItemWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_forecolor] != nil) {
        id<OrgOssPdfreporterGeometryIColor> color = OrgOssPdfreporterEngineUtilJRColorUtil_getColorWithNSString_withOrgOssPdfreporterGeometryIColor_([((id<OrgOssPdfreporterUsesOrgW3cDomNode>) nil_chk([nodeAttrs getNamedItemWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_forecolor])) getNodeValue], JreLoadStatic(OrgOssPdfreporterGeometryIColor, black));
        (void) [styleAttrs putWithId:JreLoadStatic(OrgOssPdfreporterFontTextTextAttribute, FOREGROUND) withId:color];
      }
      if ([nodeAttrs getNamedItemWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_backcolor] != nil) {
        id<OrgOssPdfreporterGeometryIColor> color = OrgOssPdfreporterEngineUtilJRColorUtil_getColorWithNSString_withOrgOssPdfreporterGeometryIColor_([((id<OrgOssPdfreporterUsesOrgW3cDomNode>) nil_chk([nodeAttrs getNamedItemWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_backcolor])) getNodeValue], JreLoadStatic(OrgOssPdfreporterGeometryIColor, black));
        (void) [styleAttrs putWithId:JreLoadStatic(OrgOssPdfreporterFontTextTextAttribute, BACKGROUND) withId:color];
      }
      jint startIndex = [((OrgOssPdfreporterEngineUtilJRStyledText *) nil_chk(styledText)) length];
      OrgOssPdfreporterEngineUtilJRStyledTextParser_parseStyleWithOrgOssPdfreporterEngineUtilJRStyledText_withOrgOssPdfreporterUsesOrgW3cDomNode_(self, styledText, node);
      [styledText addRunWithOrgOssPdfreporterEngineUtilJRStyledText_Run:new_OrgOssPdfreporterEngineUtilJRStyledText_Run_initWithJavaUtilMap_withInt_withInt_(styleAttrs, startIndex, [styledText length])];
    }
    else if ([node getNodeType] == OrgOssPdfreporterUsesOrgW3cDomNode_ELEMENT_NODE && [((NSString *) nil_chk(OrgOssPdfreporterEngineUtilJRStyledTextParser_NODE_bold)) equalsIgnoreCase:[node getNodeName]]) {
      id<JavaUtilMap> styleAttrs = new_JavaUtilHashMap_init();
      (void) [styleAttrs putWithId:JreLoadStatic(OrgOssPdfreporterFontTextTextAttribute, WEIGHT) withId:JreLoadStatic(OrgOssPdfreporterFontTextTextAttribute, WEIGHT_BOLD)];
      jint startIndex = [((OrgOssPdfreporterEngineUtilJRStyledText *) nil_chk(styledText)) length];
      OrgOssPdfreporterEngineUtilJRStyledTextParser_parseStyleWithOrgOssPdfreporterEngineUtilJRStyledText_withOrgOssPdfreporterUsesOrgW3cDomNode_(self, styledText, node);
      [styledText addRunWithOrgOssPdfreporterEngineUtilJRStyledText_Run:new_OrgOssPdfreporterEngineUtilJRStyledText_Run_initWithJavaUtilMap_withInt_withInt_(styleAttrs, startIndex, [styledText length])];
    }
    else if ([node getNodeType] == OrgOssPdfreporterUsesOrgW3cDomNode_ELEMENT_NODE && [((NSString *) nil_chk(OrgOssPdfreporterEngineUtilJRStyledTextParser_NODE_italic)) equalsIgnoreCase:[node getNodeName]]) {
      id<JavaUtilMap> styleAttrs = new_JavaUtilHashMap_init();
      (void) [styleAttrs putWithId:JreLoadStatic(OrgOssPdfreporterFontTextTextAttribute, POSTURE) withId:JreLoadStatic(OrgOssPdfreporterFontTextTextAttribute, POSTURE_OBLIQUE)];
      jint startIndex = [((OrgOssPdfreporterEngineUtilJRStyledText *) nil_chk(styledText)) length];
      OrgOssPdfreporterEngineUtilJRStyledTextParser_parseStyleWithOrgOssPdfreporterEngineUtilJRStyledText_withOrgOssPdfreporterUsesOrgW3cDomNode_(self, styledText, node);
      [styledText addRunWithOrgOssPdfreporterEngineUtilJRStyledText_Run:new_OrgOssPdfreporterEngineUtilJRStyledText_Run_initWithJavaUtilMap_withInt_withInt_(styleAttrs, startIndex, [styledText length])];
    }
    else if ([node getNodeType] == OrgOssPdfreporterUsesOrgW3cDomNode_ELEMENT_NODE && [((NSString *) nil_chk(OrgOssPdfreporterEngineUtilJRStyledTextParser_NODE_underline)) equalsIgnoreCase:[node getNodeName]]) {
      id<JavaUtilMap> styleAttrs = new_JavaUtilHashMap_init();
      (void) [styleAttrs putWithId:JreLoadStatic(OrgOssPdfreporterFontTextTextAttribute, UNDERLINE) withId:JreLoadStatic(OrgOssPdfreporterFontTextTextAttribute, UNDERLINE_ON)];
      jint startIndex = [((OrgOssPdfreporterEngineUtilJRStyledText *) nil_chk(styledText)) length];
      OrgOssPdfreporterEngineUtilJRStyledTextParser_parseStyleWithOrgOssPdfreporterEngineUtilJRStyledText_withOrgOssPdfreporterUsesOrgW3cDomNode_(self, styledText, node);
      [styledText addRunWithOrgOssPdfreporterEngineUtilJRStyledText_Run:new_OrgOssPdfreporterEngineUtilJRStyledText_Run_initWithJavaUtilMap_withInt_withInt_(styleAttrs, startIndex, [styledText length])];
    }
    else if ([node getNodeType] == OrgOssPdfreporterUsesOrgW3cDomNode_ELEMENT_NODE && [((NSString *) nil_chk(OrgOssPdfreporterEngineUtilJRStyledTextParser_NODE_sup)) equalsIgnoreCase:[node getNodeName]]) {
      id<JavaUtilMap> styleAttrs = new_JavaUtilHashMap_init();
      (void) [styleAttrs putWithId:JreLoadStatic(OrgOssPdfreporterFontTextTextAttribute, SUPERSCRIPT) withId:JreLoadStatic(OrgOssPdfreporterFontTextTextAttribute, SUPERSCRIPT_SUPER)];
      jint startIndex = [((OrgOssPdfreporterEngineUtilJRStyledText *) nil_chk(styledText)) length];
      OrgOssPdfreporterEngineUtilJRStyledTextParser_parseStyleWithOrgOssPdfreporterEngineUtilJRStyledText_withOrgOssPdfreporterUsesOrgW3cDomNode_(self, styledText, node);
      [styledText addRunWithOrgOssPdfreporterEngineUtilJRStyledText_Run:new_OrgOssPdfreporterEngineUtilJRStyledText_Run_initWithJavaUtilMap_withInt_withInt_(styleAttrs, startIndex, [styledText length])];
    }
    else if ([node getNodeType] == OrgOssPdfreporterUsesOrgW3cDomNode_ELEMENT_NODE && [((NSString *) nil_chk(OrgOssPdfreporterEngineUtilJRStyledTextParser_NODE_sub)) equalsIgnoreCase:[node getNodeName]]) {
      id<JavaUtilMap> styleAttrs = new_JavaUtilHashMap_init();
      (void) [styleAttrs putWithId:JreLoadStatic(OrgOssPdfreporterFontTextTextAttribute, SUPERSCRIPT) withId:JreLoadStatic(OrgOssPdfreporterFontTextTextAttribute, SUPERSCRIPT_SUB)];
      jint startIndex = [((OrgOssPdfreporterEngineUtilJRStyledText *) nil_chk(styledText)) length];
      OrgOssPdfreporterEngineUtilJRStyledTextParser_parseStyleWithOrgOssPdfreporterEngineUtilJRStyledText_withOrgOssPdfreporterUsesOrgW3cDomNode_(self, styledText, node);
      [styledText addRunWithOrgOssPdfreporterEngineUtilJRStyledText_Run:new_OrgOssPdfreporterEngineUtilJRStyledText_Run_initWithJavaUtilMap_withInt_withInt_(styleAttrs, startIndex, [styledText length])];
    }
    else if ([node getNodeType] == OrgOssPdfreporterUsesOrgW3cDomNode_ELEMENT_NODE && [((NSString *) nil_chk(OrgOssPdfreporterEngineUtilJRStyledTextParser_NODE_font)) equalsIgnoreCase:[node getNodeName]]) {
      id<OrgOssPdfreporterUsesOrgW3cDomNamedNodeMap> nodeAttrs = [node getAttributes];
      id<JavaUtilMap> styleAttrs = new_JavaUtilHashMap_init();
      if ([((id<OrgOssPdfreporterUsesOrgW3cDomNamedNodeMap>) nil_chk(nodeAttrs)) getNamedItemWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_size] != nil) {
        (void) [styleAttrs putWithId:JreLoadStatic(OrgOssPdfreporterFontTextTextAttribute, SIZE) withId:new_JavaLangFloat_initWithNSString_([((id<OrgOssPdfreporterUsesOrgW3cDomNode>) nil_chk([nodeAttrs getNamedItemWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_size])) getNodeValue])];
      }
      if ([nodeAttrs getNamedItemWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_color] != nil) {
        id<OrgOssPdfreporterGeometryIColor> color = OrgOssPdfreporterEngineUtilJRColorUtil_getColorWithNSString_withOrgOssPdfreporterGeometryIColor_([((id<OrgOssPdfreporterUsesOrgW3cDomNode>) nil_chk([nodeAttrs getNamedItemWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_color])) getNodeValue], JreLoadStatic(OrgOssPdfreporterGeometryIColor, black));
        (void) [styleAttrs putWithId:JreLoadStatic(OrgOssPdfreporterFontTextTextAttribute, FOREGROUND) withId:color];
      }
      if ([nodeAttrs getNamedItemWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_fontFace] != nil) {
        NSString *fontFaces = [((id<OrgOssPdfreporterUsesOrgW3cDomNode>) nil_chk([nodeAttrs getNamedItemWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_fontFace])) getNodeValue];
        JavaUtilStringTokenizer *t = new_JavaUtilStringTokenizer_initWithNSString_withNSString_(fontFaces, @",");
        while ([t hasMoreTokens]) {
          NSString *face = [((NSString *) nil_chk([t nextToken])) trim];
          if ([((id<JavaUtilSet>) nil_chk(OrgOssPdfreporterEngineUtilJRStyledTextParser_AVAILABLE_FONT_FACE_NAMES)) containsWithId:face]) {
            (void) [styleAttrs putWithId:JreLoadStatic(OrgOssPdfreporterFontTextTextAttribute, FAMILY) withId:face];
            break;
          }
        }
      }
      jint startIndex = [((OrgOssPdfreporterEngineUtilJRStyledText *) nil_chk(styledText)) length];
      OrgOssPdfreporterEngineUtilJRStyledTextParser_parseStyleWithOrgOssPdfreporterEngineUtilJRStyledText_withOrgOssPdfreporterUsesOrgW3cDomNode_(self, styledText, node);
      [styledText addRunWithOrgOssPdfreporterEngineUtilJRStyledText_Run:new_OrgOssPdfreporterEngineUtilJRStyledText_Run_initWithJavaUtilMap_withInt_withInt_(styleAttrs, startIndex, [styledText length])];
    }
    else if ([node getNodeType] == OrgOssPdfreporterUsesOrgW3cDomNode_ELEMENT_NODE && [((NSString *) nil_chk(OrgOssPdfreporterEngineUtilJRStyledTextParser_NODE_br)) equalsIgnoreCase:[node getNodeName]]) {
      [((OrgOssPdfreporterEngineUtilJRStyledText *) nil_chk(styledText)) appendWithNSString:@"\n"];
      jint startIndex = [styledText length];
      OrgOssPdfreporterEngineUtilJRStyledTextParser_resizeRunsWithJavaUtilList_withInt_withInt_(self, [styledText getRuns], startIndex, 1);
      OrgOssPdfreporterEngineUtilJRStyledTextParser_parseStyleWithOrgOssPdfreporterEngineUtilJRStyledText_withOrgOssPdfreporterUsesOrgW3cDomNode_(self, styledText, node);
      [styledText addRunWithOrgOssPdfreporterEngineUtilJRStyledText_Run:new_OrgOssPdfreporterEngineUtilJRStyledText_Run_initWithJavaUtilMap_withInt_withInt_(new_JavaUtilHashMap_init(), startIndex, [styledText length])];
      if (startIndex < [styledText length]) {
        [styledText appendWithNSString:@"\n"];
        OrgOssPdfreporterEngineUtilJRStyledTextParser_resizeRunsWithJavaUtilList_withInt_withInt_(self, [styledText getRuns], startIndex, 1);
      }
    }
    else if ([node getNodeType] == OrgOssPdfreporterUsesOrgW3cDomNode_ELEMENT_NODE && [((NSString *) nil_chk(OrgOssPdfreporterEngineUtilJRStyledTextParser_NODE_li)) equalsIgnoreCase:[node getNodeName]]) {
      NSString *tmpText = [((OrgOssPdfreporterEngineUtilJRStyledText *) nil_chk(styledText)) getText];
      if (((jint) [((NSString *) nil_chk(tmpText)) length]) > 0 && ![tmpText hasSuffix:@"\n"]) {
        [styledText appendWithNSString:@"\n"];
      }
      [styledText appendWithNSString:@" \u2022 "];
      jint startIndex = [styledText length];
      OrgOssPdfreporterEngineUtilJRStyledTextParser_resizeRunsWithJavaUtilList_withInt_withInt_(self, [styledText getRuns], startIndex, 1);
      OrgOssPdfreporterEngineUtilJRStyledTextParser_parseStyleWithOrgOssPdfreporterEngineUtilJRStyledText_withOrgOssPdfreporterUsesOrgW3cDomNode_(self, styledText, node);
      [styledText addRunWithOrgOssPdfreporterEngineUtilJRStyledText_Run:new_OrgOssPdfreporterEngineUtilJRStyledText_Run_initWithJavaUtilMap_withInt_withInt_(new_JavaUtilHashMap_init(), startIndex, [styledText length])];
      id<OrgOssPdfreporterUsesOrgW3cDomNode> nextNode = [node getNextSibling];
      NSString *textContent = OrgOssPdfreporterEngineUtilJRStyledTextParser_getFirstTextOccurenceWithOrgOssPdfreporterUsesOrgW3cDomNode_(self, nextNode);
      if (nextNode != nil && !((([nextNode getNodeType] == OrgOssPdfreporterUsesOrgW3cDomNode_ELEMENT_NODE && [((NSString *) nil_chk(OrgOssPdfreporterEngineUtilJRStyledTextParser_NODE_li)) equalsIgnoreCase:[nextNode getNodeName]]) || (textContent != nil && [textContent hasPrefix:@"\n"])))) {
        [styledText appendWithNSString:@"\n"];
        OrgOssPdfreporterEngineUtilJRStyledTextParser_resizeRunsWithJavaUtilList_withInt_withInt_(self, [styledText getRuns], startIndex, 1);
      }
    }
    else if ([node getNodeType] == OrgOssPdfreporterUsesOrgW3cDomNode_ELEMENT_NODE && [((NSString *) nil_chk(OrgOssPdfreporterEngineUtilJRStyledTextParser_NODE_a)) equalsIgnoreCase:[node getNodeName]]) {
      if (self->hyperlink_ == nil) {
        id<OrgOssPdfreporterUsesOrgW3cDomNamedNodeMap> nodeAttrs = [node getAttributes];
        id<JavaUtilMap> styleAttrs = new_JavaUtilHashMap_init();
        self->hyperlink_ = new_OrgOssPdfreporterEngineBaseJRBasePrintHyperlink_init();
        [self->hyperlink_ setHyperlinkTypeWithOrgOssPdfreporterEngineTypeHyperlinkTypeEnum:JreLoadEnum(OrgOssPdfreporterEngineTypeHyperlinkTypeEnum, REFERENCE)];
        (void) [styleAttrs putWithId:JreLoadStatic(OrgOssPdfreporterEngineUtilJRTextAttribute, HYPERLINK) withId:self->hyperlink_];
        if ([((id<OrgOssPdfreporterUsesOrgW3cDomNamedNodeMap>) nil_chk(nodeAttrs)) getNamedItemWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_href] != nil) {
          [((OrgOssPdfreporterEngineBaseJRBasePrintHyperlink *) nil_chk(self->hyperlink_)) setHyperlinkReferenceWithNSString:[((id<OrgOssPdfreporterUsesOrgW3cDomNode>) nil_chk([nodeAttrs getNamedItemWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_href])) getNodeValue]];
        }
        if ([nodeAttrs getNamedItemWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_type] != nil) {
          [((OrgOssPdfreporterEngineBaseJRBasePrintHyperlink *) nil_chk(self->hyperlink_)) setLinkTypeWithNSString:[((id<OrgOssPdfreporterUsesOrgW3cDomNode>) nil_chk([nodeAttrs getNamedItemWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_type])) getNodeValue]];
        }
        if ([nodeAttrs getNamedItemWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_target] != nil) {
          [((OrgOssPdfreporterEngineBaseJRBasePrintHyperlink *) nil_chk(self->hyperlink_)) setLinkTargetWithNSString:[((id<OrgOssPdfreporterUsesOrgW3cDomNode>) nil_chk([nodeAttrs getNamedItemWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_target])) getNodeValue]];
        }
        jint startIndex = [((OrgOssPdfreporterEngineUtilJRStyledText *) nil_chk(styledText)) length];
        OrgOssPdfreporterEngineUtilJRStyledTextParser_parseStyleWithOrgOssPdfreporterEngineUtilJRStyledText_withOrgOssPdfreporterUsesOrgW3cDomNode_(self, styledText, node);
        [styledText addRunWithOrgOssPdfreporterEngineUtilJRStyledText_Run:new_OrgOssPdfreporterEngineUtilJRStyledText_Run_initWithJavaUtilMap_withInt_withInt_(styleAttrs, startIndex, [styledText length])];
        self->hyperlink_ = nil;
      }
      else {
        @throw new_OrgOssPdfreporterXmlParsersXMLParseException_initWithNSString_(@"Hyperlink <a> tags cannot be nested.");
      }
    }
    else if ([node getNodeType] == OrgOssPdfreporterUsesOrgW3cDomNode_ELEMENT_NODE && [((NSString *) nil_chk(OrgOssPdfreporterEngineUtilJRStyledTextParser_NODE_param)) equalsIgnoreCase:[node getNodeName]]) {
      if (self->hyperlink_ == nil) {
        @throw new_OrgOssPdfreporterXmlParsersXMLParseException_initWithNSString_(@"Hyperlink <param> tags must appear inside an <a> tag only.");
      }
      else {
        id<OrgOssPdfreporterUsesOrgW3cDomNamedNodeMap> nodeAttrs = [node getAttributes];
        OrgOssPdfreporterEngineJRPrintHyperlinkParameter *parameter = new_OrgOssPdfreporterEngineJRPrintHyperlinkParameter_init();
        if ([((id<OrgOssPdfreporterUsesOrgW3cDomNamedNodeMap>) nil_chk(nodeAttrs)) getNamedItemWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_name] != nil) {
          [parameter setNameWithNSString:[((id<OrgOssPdfreporterUsesOrgW3cDomNode>) nil_chk([nodeAttrs getNamedItemWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_name])) getNodeValue]];
        }
        if ([nodeAttrs getNamedItemWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_valueClass] != nil) {
          [parameter setValueClassWithNSString:[((id<OrgOssPdfreporterUsesOrgW3cDomNode>) nil_chk([nodeAttrs getNamedItemWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_valueClass])) getNodeValue]];
        }
        NSString *strValue = [node getTextContent];
        if (strValue != nil) {
          id value = OrgOssPdfreporterEngineUtilJRValueStringUtils_deserializeWithNSString_withNSString_([parameter getValueClass], strValue);
          [parameter setValueWithId:value];
        }
        [((OrgOssPdfreporterEngineBaseJRBasePrintHyperlink *) nil_chk(self->hyperlink_)) addHyperlinkParameterWithOrgOssPdfreporterEngineJRPrintHyperlinkParameter:parameter];
      }
    }
    else if ([node getNodeType] == OrgOssPdfreporterUsesOrgW3cDomNode_ELEMENT_NODE) {
      NSString *nodeName = JreStrcat("C$C", '<', [node getNodeName], '>');
      @throw new_OrgOssPdfreporterXmlParsersXMLParseException_initWithNSString_(JreStrcat("$$$", @"Tag ", nodeName, @" is not a valid styled text tag."));
    }
  }
}

void OrgOssPdfreporterEngineUtilJRStyledTextParser_resizeRunsWithJavaUtilList_withInt_withInt_(OrgOssPdfreporterEngineUtilJRStyledTextParser *self, id<JavaUtilList> runs, jint startIndex, jint count) {
  for (jint j = 0; j < [((id<JavaUtilList>) nil_chk(runs)) size]; j++) {
    OrgOssPdfreporterEngineUtilJRStyledText_Run *run = [runs getWithInt:j];
    if (((OrgOssPdfreporterEngineUtilJRStyledText_Run *) nil_chk(run))->startIndex_ <= startIndex && run->endIndex_ > startIndex - count) {
      run->endIndex_ += count;
    }
  }
}

JavaLangStringBuffer *OrgOssPdfreporterEngineUtilJRStyledTextParser_writeStyleAttributesWithJavaUtilMap_withJavaUtilMap_(OrgOssPdfreporterEngineUtilJRStyledTextParser *self, id<JavaUtilMap> parentAttrs, id<JavaUtilMap> attrs) {
  JavaLangStringBuffer *sbuffer = new_JavaLangStringBuffer_init();
  id value = [((id<JavaUtilMap>) nil_chk(attrs)) getWithId:JreLoadStatic(OrgOssPdfreporterFontTextTextAttribute, FAMILY)];
  id oldValue = [((id<JavaUtilMap>) nil_chk(parentAttrs)) getWithId:JreLoadStatic(OrgOssPdfreporterFontTextTextAttribute, FAMILY)];
  if (value != nil && ![value isEqual:oldValue]) {
    (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_SPACE];
    (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_fontName];
    (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_EQUAL_QUOTE];
    (void) [sbuffer appendWithId:value];
    (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_QUOTE];
  }
  value = [attrs getWithId:JreLoadStatic(OrgOssPdfreporterFontTextTextAttribute, WEIGHT)];
  oldValue = [parentAttrs getWithId:JreLoadStatic(OrgOssPdfreporterFontTextTextAttribute, WEIGHT)];
  if (value != nil && ![value isEqual:oldValue]) {
    (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_SPACE];
    (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_isBold];
    (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_EQUAL_QUOTE];
    (void) [sbuffer appendWithBoolean:[value isEqual:JreLoadStatic(OrgOssPdfreporterFontTextTextAttribute, WEIGHT_BOLD)]];
    (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_QUOTE];
  }
  value = [attrs getWithId:JreLoadStatic(OrgOssPdfreporterFontTextTextAttribute, POSTURE)];
  oldValue = [parentAttrs getWithId:JreLoadStatic(OrgOssPdfreporterFontTextTextAttribute, POSTURE)];
  if (value != nil && ![value isEqual:oldValue]) {
    (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_SPACE];
    (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_isItalic];
    (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_EQUAL_QUOTE];
    (void) [sbuffer appendWithBoolean:[value isEqual:JreLoadStatic(OrgOssPdfreporterFontTextTextAttribute, POSTURE_OBLIQUE)]];
    (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_QUOTE];
  }
  value = [attrs getWithId:JreLoadStatic(OrgOssPdfreporterFontTextTextAttribute, UNDERLINE)];
  oldValue = [parentAttrs getWithId:JreLoadStatic(OrgOssPdfreporterFontTextTextAttribute, UNDERLINE)];
  if ((value == nil && oldValue != nil) || (value != nil && ![value isEqual:oldValue])) {
    (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_SPACE];
    (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_isUnderline];
    (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_EQUAL_QUOTE];
    (void) [sbuffer appendWithBoolean:value != nil];
    (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_QUOTE];
  }
  value = [attrs getWithId:JreLoadStatic(OrgOssPdfreporterFontTextTextAttribute, STRIKETHROUGH)];
  oldValue = [parentAttrs getWithId:JreLoadStatic(OrgOssPdfreporterFontTextTextAttribute, STRIKETHROUGH)];
  if ((value == nil && oldValue != nil) || (value != nil && ![value isEqual:oldValue])) {
    (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_SPACE];
    (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_isStrikeThrough];
    (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_EQUAL_QUOTE];
    (void) [sbuffer appendWithBoolean:value != nil];
    (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_QUOTE];
  }
  value = [attrs getWithId:JreLoadStatic(OrgOssPdfreporterFontTextTextAttribute, SIZE)];
  oldValue = [parentAttrs getWithId:JreLoadStatic(OrgOssPdfreporterFontTextTextAttribute, SIZE)];
  if (value != nil && ![value isEqual:oldValue]) {
    (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_SPACE];
    (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_size];
    (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_EQUAL_QUOTE];
    (void) [sbuffer appendWithInt:[((JavaLangFloat *) cast_chk(value, [JavaLangFloat class])) intValue]];
    (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_QUOTE];
  }
  value = [attrs getWithId:JreLoadStatic(OrgOssPdfreporterEngineUtilJRTextAttribute, PDF_FONT_NAME)];
  oldValue = [parentAttrs getWithId:JreLoadStatic(OrgOssPdfreporterEngineUtilJRTextAttribute, PDF_FONT_NAME)];
  if (value != nil && ![value isEqual:oldValue]) {
    (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_SPACE];
    (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_pdfFontName];
    (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_EQUAL_QUOTE];
    (void) [sbuffer appendWithId:value];
    (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_QUOTE];
  }
  value = [attrs getWithId:JreLoadStatic(OrgOssPdfreporterEngineUtilJRTextAttribute, PDF_ENCODING)];
  oldValue = [parentAttrs getWithId:JreLoadStatic(OrgOssPdfreporterEngineUtilJRTextAttribute, PDF_ENCODING)];
  if (value != nil && ![value isEqual:oldValue]) {
    (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_SPACE];
    (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_pdfEncoding];
    (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_EQUAL_QUOTE];
    (void) [sbuffer appendWithId:value];
    (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_QUOTE];
  }
  value = [attrs getWithId:JreLoadStatic(OrgOssPdfreporterEngineUtilJRTextAttribute, IS_PDF_EMBEDDED)];
  oldValue = [parentAttrs getWithId:JreLoadStatic(OrgOssPdfreporterEngineUtilJRTextAttribute, IS_PDF_EMBEDDED)];
  if (value != nil && ![value isEqual:oldValue]) {
    (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_SPACE];
    (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_isPdfEmbedded];
    (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_EQUAL_QUOTE];
    (void) [sbuffer appendWithId:value];
    (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_QUOTE];
  }
  value = [attrs getWithId:JreLoadStatic(OrgOssPdfreporterFontTextTextAttribute, FOREGROUND)];
  oldValue = [parentAttrs getWithId:JreLoadStatic(OrgOssPdfreporterFontTextTextAttribute, FOREGROUND)];
  if (value != nil && ![value isEqual:oldValue]) {
    (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_SPACE];
    (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_forecolor];
    (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_EQUAL_QUOTE];
    (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_SHARP];
    (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRColorUtil_getColorHexaWithOrgOssPdfreporterGeometryIColor_((id<OrgOssPdfreporterGeometryIColor>) cast_check(value, OrgOssPdfreporterGeometryIColor_class_()))];
    (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_QUOTE];
  }
  value = [attrs getWithId:JreLoadStatic(OrgOssPdfreporterFontTextTextAttribute, BACKGROUND)];
  oldValue = [parentAttrs getWithId:JreLoadStatic(OrgOssPdfreporterFontTextTextAttribute, BACKGROUND)];
  if (value != nil && ![value isEqual:oldValue]) {
    (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_SPACE];
    (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_ATTRIBUTE_backcolor];
    (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_EQUAL_QUOTE];
    (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_SHARP];
    (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRColorUtil_getColorHexaWithOrgOssPdfreporterGeometryIColor_((id<OrgOssPdfreporterGeometryIColor>) cast_check(value, OrgOssPdfreporterGeometryIColor_class_()))];
    (void) [sbuffer appendWithNSString:OrgOssPdfreporterEngineUtilJRStyledTextParser_QUOTE];
  }
  return sbuffer;
}

NSString *OrgOssPdfreporterEngineUtilJRStyledTextParser_getFirstTextOccurenceWithOrgOssPdfreporterUsesOrgW3cDomNode_(OrgOssPdfreporterEngineUtilJRStyledTextParser *self, id<OrgOssPdfreporterUsesOrgW3cDomNode> node) {
  if (node != nil) {
    if ([node getNodeValue] != nil) {
      return [node getNodeValue];
    }
    id<OrgOssPdfreporterUsesOrgW3cDomNodeList> nodeList = [node getChildNodes];
    for (jint i = 0; i < [((id<OrgOssPdfreporterUsesOrgW3cDomNodeList>) nil_chk(nodeList)) getLength]; i++) {
      NSString *firstOccurence = OrgOssPdfreporterEngineUtilJRStyledTextParser_getFirstTextOccurenceWithOrgOssPdfreporterUsesOrgW3cDomNode_(self, [nodeList itemWithInt:i]);
      if (firstOccurence != nil) {
        return firstOccurence;
      }
    }
  }
  return nil;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineUtilJRStyledTextParser)
