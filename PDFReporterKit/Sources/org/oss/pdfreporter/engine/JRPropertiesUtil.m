//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/JRPropertiesUtil.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/lang/Boolean.h"
#include "java/lang/Character.h"
#include "java/lang/Float.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/SecurityException.h"
#include "java/util/ArrayList.h"
#include "java/util/HashSet.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "org/oss/pdfreporter/engine/JRException.h"
#include "org/oss/pdfreporter/engine/JRPropertiesHolder.h"
#include "org/oss/pdfreporter/engine/JRPropertiesMap.h"
#include "org/oss/pdfreporter/engine/JRPropertiesUtil.h"
#include "org/oss/pdfreporter/engine/JasperReportsContext.h"
#include "org/oss/pdfreporter/engine/util/JRLoader.h"
#include "org/oss/pdfreporter/uses/java/util/Properties.h"

@interface OrgOssPdfreporterEngineJRPropertiesUtil () {
 @public
  id<OrgOssPdfreporterEngineJasperReportsContext> jasperReportsContext_;
}

- (instancetype)initWithOrgOssPdfreporterEngineJasperReportsContext:(id<OrgOssPdfreporterEngineJasperReportsContext>)jasperReportsContext;

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineJRPropertiesUtil, jasperReportsContext_, id<OrgOssPdfreporterEngineJasperReportsContext>)

__attribute__((unused)) static void OrgOssPdfreporterEngineJRPropertiesUtil_initWithOrgOssPdfreporterEngineJasperReportsContext_(OrgOssPdfreporterEngineJRPropertiesUtil *self, id<OrgOssPdfreporterEngineJasperReportsContext> jasperReportsContext);

__attribute__((unused)) static OrgOssPdfreporterEngineJRPropertiesUtil *new_OrgOssPdfreporterEngineJRPropertiesUtil_initWithOrgOssPdfreporterEngineJasperReportsContext_(id<OrgOssPdfreporterEngineJasperReportsContext> jasperReportsContext) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgOssPdfreporterEngineJRPropertiesUtil *create_OrgOssPdfreporterEngineJRPropertiesUtil_initWithOrgOssPdfreporterEngineJasperReportsContext_(id<OrgOssPdfreporterEngineJasperReportsContext> jasperReportsContext);

NSString *OrgOssPdfreporterEngineJRPropertiesUtil_PROPERTY_PREFIX = @"net.sf.jasperreports.";

@implementation OrgOssPdfreporterEngineJRPropertiesUtil

+ (NSString *)PROPERTY_PREFIX {
  return OrgOssPdfreporterEngineJRPropertiesUtil_PROPERTY_PREFIX;
}

- (instancetype)initWithOrgOssPdfreporterEngineJasperReportsContext:(id<OrgOssPdfreporterEngineJasperReportsContext>)jasperReportsContext {
  OrgOssPdfreporterEngineJRPropertiesUtil_initWithOrgOssPdfreporterEngineJasperReportsContext_(self, jasperReportsContext);
  return self;
}

+ (OrgOssPdfreporterEngineJRPropertiesUtil *)getInstanceWithOrgOssPdfreporterEngineJasperReportsContext:(id<OrgOssPdfreporterEngineJasperReportsContext>)jasperReportsContext {
  return OrgOssPdfreporterEngineJRPropertiesUtil_getInstanceWithOrgOssPdfreporterEngineJasperReportsContext_(jasperReportsContext);
}

+ (OrgOssPdfreporterUsesJavaUtilProperties *)loadPropertiesWithNSString:(NSString *)name
                            withOrgOssPdfreporterUsesJavaUtilProperties:(OrgOssPdfreporterUsesJavaUtilProperties *)defaults {
  return OrgOssPdfreporterEngineJRPropertiesUtil_loadPropertiesWithNSString_withOrgOssPdfreporterUsesJavaUtilProperties_(name, defaults);
}

- (NSString *)getPropertyWithNSString:(NSString *)key {
  return [((id<OrgOssPdfreporterEngineJasperReportsContext>) nil_chk(jasperReportsContext_)) getPropertyWithNSString:key];
}

- (void)setPropertyWithNSString:(NSString *)key
                   withNSString:(NSString *)value {
  [((id<OrgOssPdfreporterEngineJasperReportsContext>) nil_chk(jasperReportsContext_)) setPropertyWithNSString:key withNSString:value];
}

- (void)removePropertyWithNSString:(NSString *)key {
  [((id<OrgOssPdfreporterEngineJasperReportsContext>) nil_chk(jasperReportsContext_)) removePropertyWithNSString:key];
}

- (jboolean)getBooleanPropertyWithNSString:(NSString *)key {
  return OrgOssPdfreporterEngineJRPropertiesUtil_asBooleanWithNSString_([self getPropertyWithNSString:key]);
}

- (jint)getIntegerPropertyWithNSString:(NSString *)key {
  return OrgOssPdfreporterEngineJRPropertiesUtil_asIntegerWithNSString_([self getPropertyWithNSString:key]);
}

- (jfloat)getFloatPropertyWithNSString:(NSString *)key {
  return OrgOssPdfreporterEngineJRPropertiesUtil_asFloatWithNSString_([self getPropertyWithNSString:key]);
}

+ (jboolean)asBooleanWithNSString:(NSString *)value {
  return OrgOssPdfreporterEngineJRPropertiesUtil_asBooleanWithNSString_(value);
}

+ (jboolean)asBooleanWithNSString:(NSString *)value
                      withBoolean:(jboolean)defaultValue {
  return OrgOssPdfreporterEngineJRPropertiesUtil_asBooleanWithNSString_withBoolean_(value, defaultValue);
}

+ (jint)asIntegerWithNSString:(NSString *)value {
  return OrgOssPdfreporterEngineJRPropertiesUtil_asIntegerWithNSString_(value);
}

+ (jfloat)asFloatWithNSString:(NSString *)value {
  return OrgOssPdfreporterEngineJRPropertiesUtil_asFloatWithNSString_(value);
}

- (id<JavaUtilList>)getPropertiesWithNSString:(NSString *)prefix {
  id<JavaUtilMap> properties = [((id<OrgOssPdfreporterEngineJasperReportsContext>) nil_chk(jasperReportsContext_)) getProperties];
  jint prefixLength = ((jint) [((NSString *) nil_chk(prefix)) length]);
  id<JavaUtilList> values = new_JavaUtilArrayList_init();
  for (id<JavaUtilMap_Entry> __strong entry_ in nil_chk([((id<JavaUtilMap>) nil_chk(properties)) entrySet])) {
    NSString *name = [((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey];
    if ([((NSString *) nil_chk(name)) hasPrefix:prefix]) {
      NSString *suffix = [name substring:prefixLength];
      NSString *value = [entry_ getValue];
      [values addWithId:new_OrgOssPdfreporterEngineJRPropertiesUtil_PropertySuffix_initWithNSString_withNSString_withNSString_(name, suffix, value)];
    }
  }
  return values;
}

+ (id<JavaUtilList>)getPropertiesWithOrgOssPdfreporterEngineJRPropertiesHolder:(id<OrgOssPdfreporterEngineJRPropertiesHolder>)propertiesHolder
                                                                  withNSString:(NSString *)prefix {
  return OrgOssPdfreporterEngineJRPropertiesUtil_getPropertiesWithOrgOssPdfreporterEngineJRPropertiesHolder_withNSString_(propertiesHolder, prefix);
}

- (id<JavaUtilList>)getAllPropertiesWithOrgOssPdfreporterEngineJRPropertiesHolder:(id<OrgOssPdfreporterEngineJRPropertiesHolder>)propertiesHolder
                                                                     withNSString:(NSString *)prefix {
  return [self getAllPropertiesWithOrgOssPdfreporterEngineJRPropertiesMap:OrgOssPdfreporterEngineJRPropertiesUtil_getOwnPropertiesWithOrgOssPdfreporterEngineJRPropertiesHolder_(propertiesHolder) withNSString:prefix];
}

+ (id<JavaUtilList>)getPropertiesWithOrgOssPdfreporterEngineJRPropertiesMap:(OrgOssPdfreporterEngineJRPropertiesMap *)propertiesMap
                                                               withNSString:(NSString *)prefix {
  return OrgOssPdfreporterEngineJRPropertiesUtil_getPropertiesWithOrgOssPdfreporterEngineJRPropertiesMap_withNSString_(propertiesMap, prefix);
}

- (id<JavaUtilList>)getAllPropertiesWithOrgOssPdfreporterEngineJRPropertiesMap:(OrgOssPdfreporterEngineJRPropertiesMap *)propertiesMap
                                                                  withNSString:(NSString *)prefix {
  id<JavaUtilList> own = OrgOssPdfreporterEngineJRPropertiesUtil_getPropertiesWithOrgOssPdfreporterEngineJRPropertiesMap_withNSString_(propertiesMap, prefix);
  id<JavaUtilList> global = [self getPropertiesWithNSString:prefix];
  id<JavaUtilList> collected;
  if ([((id<JavaUtilList>) nil_chk(own)) isEmpty]) {
    collected = global;
  }
  else {
    if (![((id<JavaUtilList>) nil_chk(global)) isEmpty]) {
      id<JavaUtilSet> ownSuffixes = new_JavaUtilHashSet_init();
      for (id<JavaUtilIterator> it = [own iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
        OrgOssPdfreporterEngineJRPropertiesUtil_PropertySuffix *prop = [it next];
        [ownSuffixes addWithId:[((OrgOssPdfreporterEngineJRPropertiesUtil_PropertySuffix *) nil_chk(prop)) getSuffix]];
      }
      for (id<JavaUtilIterator> it = [global iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
        OrgOssPdfreporterEngineJRPropertiesUtil_PropertySuffix *prop = [it next];
        if (![ownSuffixes containsWithId:[((OrgOssPdfreporterEngineJRPropertiesUtil_PropertySuffix *) nil_chk(prop)) getSuffix]]) {
          [own addWithId:prop];
        }
      }
    }
    collected = own;
  }
  return collected;
}

- (NSString *)getPropertyWithOrgOssPdfreporterEngineJRPropertiesHolder:(id<OrgOssPdfreporterEngineJRPropertiesHolder>)propertiesHolder
                                                          withNSString:(NSString *)key {
  NSString *value = nil;
  while (propertiesHolder != nil && value == nil) {
    if ([propertiesHolder hasProperties]) {
      value = [((OrgOssPdfreporterEngineJRPropertiesMap *) nil_chk([propertiesHolder getPropertiesMap])) getPropertyWithNSString:key];
    }
    propertiesHolder = [propertiesHolder getParentProperties];
  }
  if (value == nil) {
    value = [self getPropertyWithNSString:key];
  }
  return value;
}

- (NSString *)getPropertyWithNSString:(NSString *)key
withOrgOssPdfreporterEngineJRPropertiesHolderArray:(IOSObjectArray *)propertiesHolders {
  NSString *value = nil;
  {
    IOSObjectArray *a__ = propertiesHolders;
    id<OrgOssPdfreporterEngineJRPropertiesHolder> const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    id<OrgOssPdfreporterEngineJRPropertiesHolder> const *e__ = b__ + a__->size_;
    main: while (b__ < e__) {
      id<OrgOssPdfreporterEngineJRPropertiesHolder> propertiesHolder = *b__++;
      while (propertiesHolder != nil) {
        if ([propertiesHolder hasProperties]) {
          NSString *prop = [((OrgOssPdfreporterEngineJRPropertiesMap *) nil_chk([propertiesHolder getPropertiesMap])) getPropertyWithNSString:key];
          if (prop != nil) {
            value = prop;
            return value;
          }
        }
        propertiesHolder = [propertiesHolder getParentProperties];
      }
    }
  }
  if (value == nil) {
    value = [self getPropertyWithNSString:key];
  }
  return value;
}

- (NSString *)getPropertyWithOrgOssPdfreporterEngineJRPropertiesMap:(OrgOssPdfreporterEngineJRPropertiesMap *)propertiesMap
                                                       withNSString:(NSString *)key {
  NSString *value = nil;
  if (propertiesMap != nil) {
    value = [propertiesMap getPropertyWithNSString:key];
  }
  if (value == nil) {
    value = [self getPropertyWithNSString:key];
  }
  return value;
}

- (jboolean)getBooleanPropertyWithOrgOssPdfreporterEngineJRPropertiesHolder:(id<OrgOssPdfreporterEngineJRPropertiesHolder>)propertiesHolder
                                                               withNSString:(NSString *)key
                                                                withBoolean:(jboolean)defaultValue {
  NSString *value = [self getPropertyWithOrgOssPdfreporterEngineJRPropertiesHolder:propertiesHolder withNSString:key];
  return value == nil ? defaultValue : OrgOssPdfreporterEngineJRPropertiesUtil_asBooleanWithNSString_(value);
}

- (jboolean)getBooleanPropertyWithOrgOssPdfreporterEngineJRPropertiesMap:(OrgOssPdfreporterEngineJRPropertiesMap *)propertiesMap
                                                            withNSString:(NSString *)key
                                                             withBoolean:(jboolean)defaultValue {
  NSString *value = [self getPropertyWithOrgOssPdfreporterEngineJRPropertiesMap:propertiesMap withNSString:key];
  return value == nil ? defaultValue : OrgOssPdfreporterEngineJRPropertiesUtil_asBooleanWithNSString_(value);
}

- (jint)getIntegerPropertyWithOrgOssPdfreporterEngineJRPropertiesHolder:(id<OrgOssPdfreporterEngineJRPropertiesHolder>)propertiesHolder
                                                           withNSString:(NSString *)key
                                                                withInt:(jint)defaultValue {
  NSString *value = [self getPropertyWithOrgOssPdfreporterEngineJRPropertiesHolder:propertiesHolder withNSString:key];
  return value == nil ? defaultValue : OrgOssPdfreporterEngineJRPropertiesUtil_asIntegerWithNSString_(value);
}

- (jint)getIntegerPropertyWithOrgOssPdfreporterEngineJRPropertiesMap:(OrgOssPdfreporterEngineJRPropertiesMap *)propertiesMap
                                                        withNSString:(NSString *)key
                                                             withInt:(jint)defaultValue {
  NSString *value = [self getPropertyWithOrgOssPdfreporterEngineJRPropertiesMap:propertiesMap withNSString:key];
  return value == nil ? defaultValue : OrgOssPdfreporterEngineJRPropertiesUtil_asIntegerWithNSString_(value);
}

- (jint)getIntegerPropertyWithNSString:(NSString *)key
                               withInt:(jint)defaultValue {
  NSString *value = [self getPropertyWithNSString:key];
  return value == nil ? defaultValue : OrgOssPdfreporterEngineJRPropertiesUtil_asIntegerWithNSString_(value);
}

- (jfloat)getFloatPropertyWithOrgOssPdfreporterEngineJRPropertiesHolder:(id<OrgOssPdfreporterEngineJRPropertiesHolder>)propertiesHolder
                                                           withNSString:(NSString *)key
                                                              withFloat:(jfloat)defaultValue {
  NSString *value = [self getPropertyWithOrgOssPdfreporterEngineJRPropertiesHolder:propertiesHolder withNSString:key];
  return value == nil ? defaultValue : OrgOssPdfreporterEngineJRPropertiesUtil_asFloatWithNSString_(value);
}

- (jfloat)getFloatPropertyWithOrgOssPdfreporterEngineJRPropertiesMap:(OrgOssPdfreporterEngineJRPropertiesMap *)propertiesMap
                                                        withNSString:(NSString *)key
                                                           withFloat:(jfloat)defaultValue {
  NSString *value = [self getPropertyWithOrgOssPdfreporterEngineJRPropertiesMap:propertiesMap withNSString:key];
  return value == nil ? defaultValue : OrgOssPdfreporterEngineJRPropertiesUtil_asFloatWithNSString_(value);
}

- (jfloat)getFloatPropertyWithNSString:(NSString *)key
                             withFloat:(jfloat)defaultValue {
  NSString *value = [self getPropertyWithNSString:key];
  return value == nil ? defaultValue : OrgOssPdfreporterEngineJRPropertiesUtil_asFloatWithNSString_(value);
}

+ (jlong)asLongWithNSString:(NSString *)value {
  return OrgOssPdfreporterEngineJRPropertiesUtil_asLongWithNSString_(value);
}

- (jlong)getLongPropertyWithNSString:(NSString *)key {
  return OrgOssPdfreporterEngineJRPropertiesUtil_asLongWithNSString_([self getPropertyWithNSString:key]);
}

- (jlong)getLongPropertyWithOrgOssPdfreporterEngineJRPropertiesMap:(OrgOssPdfreporterEngineJRPropertiesMap *)propertiesMap
                                                      withNSString:(NSString *)key
                                                           withInt:(jint)defaultValue {
  NSString *value = [self getPropertyWithOrgOssPdfreporterEngineJRPropertiesMap:propertiesMap withNSString:key];
  return value == nil ? defaultValue : OrgOssPdfreporterEngineJRPropertiesUtil_asLongWithNSString_(value);
}

- (jlong)getLongPropertyWithOrgOssPdfreporterEngineJRPropertiesHolder:(id<OrgOssPdfreporterEngineJRPropertiesHolder>)propertiesHolder
                                                         withNSString:(NSString *)key
                                                              withInt:(jint)defaultValue {
  NSString *value = [self getPropertyWithOrgOssPdfreporterEngineJRPropertiesHolder:propertiesHolder withNSString:key];
  return value == nil ? defaultValue : OrgOssPdfreporterEngineJRPropertiesUtil_asLongWithNSString_(value);
}

+ (OrgOssPdfreporterEngineJRPropertiesMap *)getOwnPropertiesWithOrgOssPdfreporterEngineJRPropertiesHolder:(id<OrgOssPdfreporterEngineJRPropertiesHolder>)propertiesHolder {
  return OrgOssPdfreporterEngineJRPropertiesUtil_getOwnPropertiesWithOrgOssPdfreporterEngineJRPropertiesHolder_(propertiesHolder);
}

- (void)transferPropertiesWithOrgOssPdfreporterEngineJRPropertiesHolder:(id<OrgOssPdfreporterEngineJRPropertiesHolder>)source
                          withOrgOssPdfreporterEngineJRPropertiesHolder:(id<OrgOssPdfreporterEngineJRPropertiesHolder>)destination
                                                           withNSString:(NSString *)tranferPropertiesPrefix {
  if (![((id<OrgOssPdfreporterEngineJRPropertiesHolder>) nil_chk(source)) hasProperties]) {
    return;
  }
  [self transferWithOrgOssPdfreporterEngineJRPropertiesMap:[source getPropertiesMap] withOrgOssPdfreporterEngineJRPropertiesHolder:destination withNSString:tranferPropertiesPrefix];
}

- (void)transferPropertiesWithOrgOssPdfreporterEngineJRPropertiesMap:(OrgOssPdfreporterEngineJRPropertiesMap *)source
                       withOrgOssPdfreporterEngineJRPropertiesHolder:(id<OrgOssPdfreporterEngineJRPropertiesHolder>)destination
                                                        withNSString:(NSString *)tranferPropertiesPrefix {
  if (source == nil || ![source hasProperties]) {
    return;
  }
  [self transferWithOrgOssPdfreporterEngineJRPropertiesMap:source withOrgOssPdfreporterEngineJRPropertiesHolder:destination withNSString:tranferPropertiesPrefix];
}

- (void)transferWithOrgOssPdfreporterEngineJRPropertiesMap:(OrgOssPdfreporterEngineJRPropertiesMap *)source
             withOrgOssPdfreporterEngineJRPropertiesHolder:(id<OrgOssPdfreporterEngineJRPropertiesHolder>)destination
                                              withNSString:(NSString *)tranferPropertiesPrefix {
  id<JavaUtilList> transferPrefixProps = [self getPropertiesWithNSString:tranferPropertiesPrefix];
  for (id<JavaUtilIterator> prefixIt = [((id<JavaUtilList>) nil_chk(transferPrefixProps)) iterator]; [((id<JavaUtilIterator>) nil_chk(prefixIt)) hasNext]; ) {
    OrgOssPdfreporterEngineJRPropertiesUtil_PropertySuffix *transferPrefixProp = [prefixIt next];
    NSString *transferPrefix = [((OrgOssPdfreporterEngineJRPropertiesUtil_PropertySuffix *) nil_chk(transferPrefixProp)) getValue];
    if (transferPrefix != nil && ((jint) [transferPrefix length]) > 0) {
      id<JavaUtilList> transferProps = OrgOssPdfreporterEngineJRPropertiesUtil_getPropertiesWithOrgOssPdfreporterEngineJRPropertiesMap_withNSString_(source, transferPrefix);
      for (id<JavaUtilIterator> propIt = [((id<JavaUtilList>) nil_chk(transferProps)) iterator]; [((id<JavaUtilIterator>) nil_chk(propIt)) hasNext]; ) {
        OrgOssPdfreporterEngineJRPropertiesUtil_PropertySuffix *property = [propIt next];
        NSString *value = [((OrgOssPdfreporterEngineJRPropertiesUtil_PropertySuffix *) nil_chk(property)) getValue];
        [((OrgOssPdfreporterEngineJRPropertiesMap *) nil_chk([((id<OrgOssPdfreporterEngineJRPropertiesHolder>) nil_chk(destination)) getPropertiesMap])) setPropertyWithNSString:[property getKey] withNSString:value];
      }
    }
  }
}

- (JavaLangCharacter *)getCharacterPropertyWithNSString:(NSString *)key {
  return OrgOssPdfreporterEngineJRPropertiesUtil_asCharacterWithNSString_([self getPropertyWithNSString:key]);
}

- (JavaLangCharacter *)getCharacterPropertyWithOrgOssPdfreporterEngineJRPropertiesMap:(OrgOssPdfreporterEngineJRPropertiesMap *)propertiesMap
                                                                         withNSString:(NSString *)key {
  NSString *value = [self getPropertyWithOrgOssPdfreporterEngineJRPropertiesMap:propertiesMap withNSString:key];
  return OrgOssPdfreporterEngineJRPropertiesUtil_asCharacterWithNSString_(value);
}

+ (JavaLangCharacter *)asCharacterWithNSString:(NSString *)value {
  return OrgOssPdfreporterEngineJRPropertiesUtil_asCharacterWithNSString_(value);
}

+ (NSString *)getOwnPropertyWithOrgOssPdfreporterEngineJRPropertiesHolder:(id<OrgOssPdfreporterEngineJRPropertiesHolder>)propertiesHolder
                                                             withNSString:(NSString *)key {
  return OrgOssPdfreporterEngineJRPropertiesUtil_getOwnPropertyWithOrgOssPdfreporterEngineJRPropertiesHolder_withNSString_(propertiesHolder, key);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgOssPdfreporterEngineJasperReportsContext:", "JRPropertiesUtil", NULL, 0x2, NULL, NULL },
    { "getInstanceWithOrgOssPdfreporterEngineJasperReportsContext:", "getInstance", "Lorg.oss.pdfreporter.engine.JRPropertiesUtil;", 0x9, NULL, NULL },
    { "loadPropertiesWithNSString:withOrgOssPdfreporterUsesJavaUtilProperties:", "loadProperties", "Lorg.oss.pdfreporter.uses.java.util.Properties;", 0x9, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "getPropertyWithNSString:", "getProperty", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "setPropertyWithNSString:withNSString:", "setProperty", "V", 0x1, NULL, NULL },
    { "removePropertyWithNSString:", "removeProperty", "V", 0x1, NULL, NULL },
    { "getBooleanPropertyWithNSString:", "getBooleanProperty", "Z", 0x1, NULL, NULL },
    { "getIntegerPropertyWithNSString:", "getIntegerProperty", "I", 0x1, NULL, NULL },
    { "getFloatPropertyWithNSString:", "getFloatProperty", "F", 0x1, NULL, NULL },
    { "asBooleanWithNSString:", "asBoolean", "Z", 0x9, NULL, NULL },
    { "asBooleanWithNSString:withBoolean:", "asBoolean", "Z", 0x9, NULL, NULL },
    { "asIntegerWithNSString:", "asInteger", "I", 0x9, NULL, NULL },
    { "asFloatWithNSString:", "asFloat", "F", 0x9, NULL, NULL },
    { "getPropertiesWithNSString:", "getProperties", "Ljava.util.List;", 0x1, NULL, "(Ljava/lang/String;)Ljava/util/List<Lorg/oss/pdfreporter/engine/JRPropertiesUtil$PropertySuffix;>;" },
    { "getPropertiesWithOrgOssPdfreporterEngineJRPropertiesHolder:withNSString:", "getProperties", "Ljava.util.List;", 0x9, NULL, "(Lorg/oss/pdfreporter/engine/JRPropertiesHolder;Ljava/lang/String;)Ljava/util/List<Lorg/oss/pdfreporter/engine/JRPropertiesUtil$PropertySuffix;>;" },
    { "getAllPropertiesWithOrgOssPdfreporterEngineJRPropertiesHolder:withNSString:", "getAllProperties", "Ljava.util.List;", 0x1, NULL, "(Lorg/oss/pdfreporter/engine/JRPropertiesHolder;Ljava/lang/String;)Ljava/util/List<Lorg/oss/pdfreporter/engine/JRPropertiesUtil$PropertySuffix;>;" },
    { "getPropertiesWithOrgOssPdfreporterEngineJRPropertiesMap:withNSString:", "getProperties", "Ljava.util.List;", 0x9, NULL, "(Lorg/oss/pdfreporter/engine/JRPropertiesMap;Ljava/lang/String;)Ljava/util/List<Lorg/oss/pdfreporter/engine/JRPropertiesUtil$PropertySuffix;>;" },
    { "getAllPropertiesWithOrgOssPdfreporterEngineJRPropertiesMap:withNSString:", "getAllProperties", "Ljava.util.List;", 0x1, NULL, "(Lorg/oss/pdfreporter/engine/JRPropertiesMap;Ljava/lang/String;)Ljava/util/List<Lorg/oss/pdfreporter/engine/JRPropertiesUtil$PropertySuffix;>;" },
    { "getPropertyWithOrgOssPdfreporterEngineJRPropertiesHolder:withNSString:", "getProperty", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getPropertyWithNSString:withOrgOssPdfreporterEngineJRPropertiesHolderArray:", "getProperty", "Ljava.lang.String;", 0x81, NULL, NULL },
    { "getPropertyWithOrgOssPdfreporterEngineJRPropertiesMap:withNSString:", "getProperty", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getBooleanPropertyWithOrgOssPdfreporterEngineJRPropertiesHolder:withNSString:withBoolean:", "getBooleanProperty", "Z", 0x1, NULL, NULL },
    { "getBooleanPropertyWithOrgOssPdfreporterEngineJRPropertiesMap:withNSString:withBoolean:", "getBooleanProperty", "Z", 0x1, NULL, NULL },
    { "getIntegerPropertyWithOrgOssPdfreporterEngineJRPropertiesHolder:withNSString:withInt:", "getIntegerProperty", "I", 0x1, NULL, NULL },
    { "getIntegerPropertyWithOrgOssPdfreporterEngineJRPropertiesMap:withNSString:withInt:", "getIntegerProperty", "I", 0x1, NULL, NULL },
    { "getIntegerPropertyWithNSString:withInt:", "getIntegerProperty", "I", 0x1, NULL, NULL },
    { "getFloatPropertyWithOrgOssPdfreporterEngineJRPropertiesHolder:withNSString:withFloat:", "getFloatProperty", "F", 0x1, NULL, NULL },
    { "getFloatPropertyWithOrgOssPdfreporterEngineJRPropertiesMap:withNSString:withFloat:", "getFloatProperty", "F", 0x1, NULL, NULL },
    { "getFloatPropertyWithNSString:withFloat:", "getFloatProperty", "F", 0x1, NULL, NULL },
    { "asLongWithNSString:", "asLong", "J", 0x9, NULL, NULL },
    { "getLongPropertyWithNSString:", "getLongProperty", "J", 0x1, NULL, NULL },
    { "getLongPropertyWithOrgOssPdfreporterEngineJRPropertiesMap:withNSString:withInt:", "getLongProperty", "J", 0x1, NULL, NULL },
    { "getLongPropertyWithOrgOssPdfreporterEngineJRPropertiesHolder:withNSString:withInt:", "getLongProperty", "J", 0x1, NULL, NULL },
    { "getOwnPropertiesWithOrgOssPdfreporterEngineJRPropertiesHolder:", "getOwnProperties", "Lorg.oss.pdfreporter.engine.JRPropertiesMap;", 0xc, NULL, NULL },
    { "transferPropertiesWithOrgOssPdfreporterEngineJRPropertiesHolder:withOrgOssPdfreporterEngineJRPropertiesHolder:withNSString:", "transferProperties", "V", 0x1, NULL, NULL },
    { "transferPropertiesWithOrgOssPdfreporterEngineJRPropertiesMap:withOrgOssPdfreporterEngineJRPropertiesHolder:withNSString:", "transferProperties", "V", 0x1, NULL, NULL },
    { "transferWithOrgOssPdfreporterEngineJRPropertiesMap:withOrgOssPdfreporterEngineJRPropertiesHolder:withNSString:", "transfer", "V", 0x4, NULL, NULL },
    { "getCharacterPropertyWithNSString:", "getCharacterProperty", "Ljava.lang.Character;", 0x1, NULL, NULL },
    { "getCharacterPropertyWithOrgOssPdfreporterEngineJRPropertiesMap:withNSString:", "getCharacterProperty", "Ljava.lang.Character;", 0x1, NULL, NULL },
    { "asCharacterWithNSString:", "asCharacter", "Ljava.lang.Character;", 0x9, NULL, NULL },
    { "getOwnPropertyWithOrgOssPdfreporterEngineJRPropertiesHolder:withNSString:", "getOwnProperty", "Ljava.lang.String;", 0x9, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "PROPERTY_PREFIX", "PROPERTY_PREFIX", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterEngineJRPropertiesUtil_PROPERTY_PREFIX, NULL, .constantValue.asLong = 0 },
    { "jasperReportsContext_", NULL, 0x2, "Lorg.oss.pdfreporter.engine.JasperReportsContext;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lorg.oss.pdfreporter.engine.JRPropertiesUtil$PropertySuffix;"};
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineJRPropertiesUtil = { 2, "JRPropertiesUtil", "org.oss.pdfreporter.engine", NULL, 0x11, 41, methods, 2, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_OrgOssPdfreporterEngineJRPropertiesUtil;
}

@end

void OrgOssPdfreporterEngineJRPropertiesUtil_initWithOrgOssPdfreporterEngineJasperReportsContext_(OrgOssPdfreporterEngineJRPropertiesUtil *self, id<OrgOssPdfreporterEngineJasperReportsContext> jasperReportsContext) {
  NSObject_init(self);
  self->jasperReportsContext_ = jasperReportsContext;
}

OrgOssPdfreporterEngineJRPropertiesUtil *new_OrgOssPdfreporterEngineJRPropertiesUtil_initWithOrgOssPdfreporterEngineJasperReportsContext_(id<OrgOssPdfreporterEngineJasperReportsContext> jasperReportsContext) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineJRPropertiesUtil, initWithOrgOssPdfreporterEngineJasperReportsContext_, jasperReportsContext)
}

OrgOssPdfreporterEngineJRPropertiesUtil *create_OrgOssPdfreporterEngineJRPropertiesUtil_initWithOrgOssPdfreporterEngineJasperReportsContext_(id<OrgOssPdfreporterEngineJasperReportsContext> jasperReportsContext) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineJRPropertiesUtil, initWithOrgOssPdfreporterEngineJasperReportsContext_, jasperReportsContext)
}

OrgOssPdfreporterEngineJRPropertiesUtil *OrgOssPdfreporterEngineJRPropertiesUtil_getInstanceWithOrgOssPdfreporterEngineJasperReportsContext_(id<OrgOssPdfreporterEngineJasperReportsContext> jasperReportsContext) {
  OrgOssPdfreporterEngineJRPropertiesUtil_initialize();
  return new_OrgOssPdfreporterEngineJRPropertiesUtil_initWithOrgOssPdfreporterEngineJasperReportsContext_(jasperReportsContext);
}

OrgOssPdfreporterUsesJavaUtilProperties *OrgOssPdfreporterEngineJRPropertiesUtil_loadPropertiesWithNSString_withOrgOssPdfreporterUsesJavaUtilProperties_(NSString *name, OrgOssPdfreporterUsesJavaUtilProperties *defaults) {
  OrgOssPdfreporterEngineJRPropertiesUtil_initialize();
  OrgOssPdfreporterUsesJavaUtilProperties *properties = nil;
  JavaIoInputStream *is = nil;
  @try {
    is = OrgOssPdfreporterEngineUtilJRLoader_getLocationInputStreamWithNSString_(name);
  }
  @catch (JavaLangSecurityException *e) {
  }
  if (is != nil) {
    properties = new_OrgOssPdfreporterUsesJavaUtilProperties_initWithOrgOssPdfreporterUsesJavaUtilProperties_(defaults);
    @try {
      [properties load__WithJavaIoInputStream:is];
    }
    @catch (JavaIoIOException *e) {
      @throw new_OrgOssPdfreporterEngineJRException_initWithNSString_withNSException_(JreStrcat("$$C", @"Failed to load properties file \"", name, '"'), e);
    }
    @finally {
      @try {
        [is close];
      }
      @catch (JavaIoIOException *e) {
      }
    }
  }
  return properties;
}

jboolean OrgOssPdfreporterEngineJRPropertiesUtil_asBooleanWithNSString_(NSString *value) {
  OrgOssPdfreporterEngineJRPropertiesUtil_initialize();
  return [((JavaLangBoolean *) nil_chk(JavaLangBoolean_valueOfWithNSString_(value))) booleanValue];
}

jboolean OrgOssPdfreporterEngineJRPropertiesUtil_asBooleanWithNSString_withBoolean_(NSString *value, jboolean defaultValue) {
  OrgOssPdfreporterEngineJRPropertiesUtil_initialize();
  return value == nil ? defaultValue : [((JavaLangBoolean *) nil_chk(JavaLangBoolean_valueOfWithNSString_(value))) booleanValue];
}

jint OrgOssPdfreporterEngineJRPropertiesUtil_asIntegerWithNSString_(NSString *value) {
  OrgOssPdfreporterEngineJRPropertiesUtil_initialize();
  return JavaLangInteger_parseIntWithNSString_(value);
}

jfloat OrgOssPdfreporterEngineJRPropertiesUtil_asFloatWithNSString_(NSString *value) {
  OrgOssPdfreporterEngineJRPropertiesUtil_initialize();
  return JavaLangFloat_parseFloatWithNSString_(value);
}

id<JavaUtilList> OrgOssPdfreporterEngineJRPropertiesUtil_getPropertiesWithOrgOssPdfreporterEngineJRPropertiesHolder_withNSString_(id<OrgOssPdfreporterEngineJRPropertiesHolder> propertiesHolder, NSString *prefix) {
  OrgOssPdfreporterEngineJRPropertiesUtil_initialize();
  return OrgOssPdfreporterEngineJRPropertiesUtil_getPropertiesWithOrgOssPdfreporterEngineJRPropertiesMap_withNSString_(OrgOssPdfreporterEngineJRPropertiesUtil_getOwnPropertiesWithOrgOssPdfreporterEngineJRPropertiesHolder_(propertiesHolder), prefix);
}

id<JavaUtilList> OrgOssPdfreporterEngineJRPropertiesUtil_getPropertiesWithOrgOssPdfreporterEngineJRPropertiesMap_withNSString_(OrgOssPdfreporterEngineJRPropertiesMap *propertiesMap, NSString *prefix) {
  OrgOssPdfreporterEngineJRPropertiesUtil_initialize();
  jint prefixLength = ((jint) [((NSString *) nil_chk(prefix)) length]);
  id<JavaUtilList> values = new_JavaUtilArrayList_init();
  if (propertiesMap != nil) {
    IOSObjectArray *propertyNames = [propertiesMap getPropertyNames];
    for (jint i = 0; i < ((IOSObjectArray *) nil_chk(propertyNames))->size_; i++) {
      NSString *name = IOSObjectArray_Get(propertyNames, i);
      if ([((NSString *) nil_chk(name)) hasPrefix:prefix]) {
        NSString *suffix = [name substring:prefixLength];
        NSString *value = [propertiesMap getPropertyWithNSString:name];
        [values addWithId:new_OrgOssPdfreporterEngineJRPropertiesUtil_PropertySuffix_initWithNSString_withNSString_withNSString_(name, suffix, value)];
      }
    }
  }
  return values;
}

jlong OrgOssPdfreporterEngineJRPropertiesUtil_asLongWithNSString_(NSString *value) {
  OrgOssPdfreporterEngineJRPropertiesUtil_initialize();
  return JavaLangLong_parseLongWithNSString_(value);
}

OrgOssPdfreporterEngineJRPropertiesMap *OrgOssPdfreporterEngineJRPropertiesUtil_getOwnPropertiesWithOrgOssPdfreporterEngineJRPropertiesHolder_(id<OrgOssPdfreporterEngineJRPropertiesHolder> propertiesHolder) {
  OrgOssPdfreporterEngineJRPropertiesUtil_initialize();
  return [((id<OrgOssPdfreporterEngineJRPropertiesHolder>) nil_chk(propertiesHolder)) hasProperties] ? [propertiesHolder getPropertiesMap] : nil;
}

JavaLangCharacter *OrgOssPdfreporterEngineJRPropertiesUtil_asCharacterWithNSString_(NSString *value) {
  OrgOssPdfreporterEngineJRPropertiesUtil_initialize();
  return value == nil || ((jint) [value length]) == 0 ? nil : new_JavaLangCharacter_initWithChar_([value charAtWithInt:0]);
}

NSString *OrgOssPdfreporterEngineJRPropertiesUtil_getOwnPropertyWithOrgOssPdfreporterEngineJRPropertiesHolder_withNSString_(id<OrgOssPdfreporterEngineJRPropertiesHolder> propertiesHolder, NSString *key) {
  OrgOssPdfreporterEngineJRPropertiesUtil_initialize();
  NSString *value = nil;
  if ([((id<OrgOssPdfreporterEngineJRPropertiesHolder>) nil_chk(propertiesHolder)) hasProperties]) {
    value = [((OrgOssPdfreporterEngineJRPropertiesMap *) nil_chk([propertiesHolder getPropertiesMap])) getPropertyWithNSString:key];
  }
  return value;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineJRPropertiesUtil)

@implementation OrgOssPdfreporterEngineJRPropertiesUtil_PropertySuffix

- (instancetype)initWithNSString:(NSString *)key
                    withNSString:(NSString *)suffix
                    withNSString:(NSString *)value {
  OrgOssPdfreporterEngineJRPropertiesUtil_PropertySuffix_initWithNSString_withNSString_withNSString_(self, key, suffix, value);
  return self;
}

- (NSString *)getKey {
  return key_;
}

- (NSString *)getSuffix {
  return suffix_;
}

- (NSString *)getValue {
  return value_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withNSString:withNSString:", "PropertySuffix", NULL, 0x1, NULL, NULL },
    { "getKey", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getSuffix", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getValue", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "key_", NULL, 0x14, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "suffix_", NULL, 0x14, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "value_", NULL, 0x14, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineJRPropertiesUtil_PropertySuffix = { 2, "PropertySuffix", "org.oss.pdfreporter.engine", "JRPropertiesUtil", 0x9, 4, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineJRPropertiesUtil_PropertySuffix;
}

@end

void OrgOssPdfreporterEngineJRPropertiesUtil_PropertySuffix_initWithNSString_withNSString_withNSString_(OrgOssPdfreporterEngineJRPropertiesUtil_PropertySuffix *self, NSString *key, NSString *suffix, NSString *value) {
  NSObject_init(self);
  self->key_ = key;
  self->suffix_ = suffix;
  self->value_ = value;
}

OrgOssPdfreporterEngineJRPropertiesUtil_PropertySuffix *new_OrgOssPdfreporterEngineJRPropertiesUtil_PropertySuffix_initWithNSString_withNSString_withNSString_(NSString *key, NSString *suffix, NSString *value) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineJRPropertiesUtil_PropertySuffix, initWithNSString_withNSString_withNSString_, key, suffix, value)
}

OrgOssPdfreporterEngineJRPropertiesUtil_PropertySuffix *create_OrgOssPdfreporterEngineJRPropertiesUtil_PropertySuffix_initWithNSString_withNSString_withNSString_(NSString *key, NSString *suffix, NSString *value) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineJRPropertiesUtil_PropertySuffix, initWithNSString_withNSString_withNSString_, key, suffix, value)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineJRPropertiesUtil_PropertySuffix)
