//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/type/JsonOperatorEnum.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "org/oss/pdfreporter/engine/type/JsonOperatorEnum.h"

@interface OrgOssPdfreporterEngineTypeJsonOperatorEnum () {
 @public
  NSString *value_;
  NSString *name_JsonOperatorEnum_;
}

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineTypeJsonOperatorEnum, value_, NSString *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineTypeJsonOperatorEnum, name_JsonOperatorEnum_, NSString *)

__attribute__((unused)) static void OrgOssPdfreporterEngineTypeJsonOperatorEnum_initWithNSString_withNSString_withNSString_withInt_(OrgOssPdfreporterEngineTypeJsonOperatorEnum *self, NSString *value, NSString *enumName, NSString *__name, jint __ordinal);

__attribute__((unused)) static OrgOssPdfreporterEngineTypeJsonOperatorEnum *new_OrgOssPdfreporterEngineTypeJsonOperatorEnum_initWithNSString_withNSString_withNSString_withInt_(NSString *value, NSString *enumName, NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

__attribute__((unused)) static NSString *OrgOssPdfreporterEngineTypeJsonOperatorEnum_getValue(OrgOssPdfreporterEngineTypeJsonOperatorEnum *self);

J2OBJC_INITIALIZED_DEFN(OrgOssPdfreporterEngineTypeJsonOperatorEnum)

OrgOssPdfreporterEngineTypeJsonOperatorEnum *OrgOssPdfreporterEngineTypeJsonOperatorEnum_values_[6];

@implementation OrgOssPdfreporterEngineTypeJsonOperatorEnum

+ (OrgOssPdfreporterEngineTypeJsonOperatorEnum *)LT {
  return JreEnum(OrgOssPdfreporterEngineTypeJsonOperatorEnum, LT);
}

+ (OrgOssPdfreporterEngineTypeJsonOperatorEnum *)LE {
  return JreEnum(OrgOssPdfreporterEngineTypeJsonOperatorEnum, LE);
}

+ (OrgOssPdfreporterEngineTypeJsonOperatorEnum *)GT {
  return JreEnum(OrgOssPdfreporterEngineTypeJsonOperatorEnum, GT);
}

+ (OrgOssPdfreporterEngineTypeJsonOperatorEnum *)GE {
  return JreEnum(OrgOssPdfreporterEngineTypeJsonOperatorEnum, GE);
}

+ (OrgOssPdfreporterEngineTypeJsonOperatorEnum *)EQ {
  return JreEnum(OrgOssPdfreporterEngineTypeJsonOperatorEnum, EQ);
}

+ (OrgOssPdfreporterEngineTypeJsonOperatorEnum *)NE {
  return JreEnum(OrgOssPdfreporterEngineTypeJsonOperatorEnum, NE);
}

- (NSString *)getValue {
  return OrgOssPdfreporterEngineTypeJsonOperatorEnum_getValue(self);
}

- (NSString *)getName {
  return name_JsonOperatorEnum_;
}

+ (OrgOssPdfreporterEngineTypeJsonOperatorEnum *)getByValueWithNSString:(NSString *)value {
  return OrgOssPdfreporterEngineTypeJsonOperatorEnum_getByValueWithNSString_(value);
}

+ (IOSObjectArray *)values {
  return OrgOssPdfreporterEngineTypeJsonOperatorEnum_values();
}

+ (OrgOssPdfreporterEngineTypeJsonOperatorEnum *)valueOfWithNSString:(NSString *)name {
  return OrgOssPdfreporterEngineTypeJsonOperatorEnum_valueOfWithNSString_(name);
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (void)initialize {
  if (self == [OrgOssPdfreporterEngineTypeJsonOperatorEnum class]) {
    JreEnum(OrgOssPdfreporterEngineTypeJsonOperatorEnum, LT) = new_OrgOssPdfreporterEngineTypeJsonOperatorEnum_initWithNSString_withNSString_withNSString_withInt_(@"<", @"Lower than", @"LT", 0);
    JreEnum(OrgOssPdfreporterEngineTypeJsonOperatorEnum, LE) = new_OrgOssPdfreporterEngineTypeJsonOperatorEnum_initWithNSString_withNSString_withNSString_withInt_(@"<=", @"Lower or equal", @"LE", 1);
    JreEnum(OrgOssPdfreporterEngineTypeJsonOperatorEnum, GT) = new_OrgOssPdfreporterEngineTypeJsonOperatorEnum_initWithNSString_withNSString_withNSString_withInt_(@">", @"Greater than", @"GT", 2);
    JreEnum(OrgOssPdfreporterEngineTypeJsonOperatorEnum, GE) = new_OrgOssPdfreporterEngineTypeJsonOperatorEnum_initWithNSString_withNSString_withNSString_withInt_(@">=", @"Greater or equal", @"GE", 3);
    JreEnum(OrgOssPdfreporterEngineTypeJsonOperatorEnum, EQ) = new_OrgOssPdfreporterEngineTypeJsonOperatorEnum_initWithNSString_withNSString_withNSString_withInt_(@"==", @"Equal", @"EQ", 4);
    JreEnum(OrgOssPdfreporterEngineTypeJsonOperatorEnum, NE) = new_OrgOssPdfreporterEngineTypeJsonOperatorEnum_initWithNSString_withNSString_withNSString_withInt_(@"!=", @"Not equal", @"NE", 5);
    J2OBJC_SET_INITIALIZED(OrgOssPdfreporterEngineTypeJsonOperatorEnum)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getValue", NULL, "Ljava.lang.String;", 0x11, NULL, NULL },
    { "getName", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getByValueWithNSString:", "getByValue", "Lorg.oss.pdfreporter.engine.type.JsonOperatorEnum;", 0x9, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "LT", "LT", 0x4019, "Lorg.oss.pdfreporter.engine.type.JsonOperatorEnum;", &JreEnum(OrgOssPdfreporterEngineTypeJsonOperatorEnum, LT), NULL, .constantValue.asLong = 0 },
    { "LE", "LE", 0x4019, "Lorg.oss.pdfreporter.engine.type.JsonOperatorEnum;", &JreEnum(OrgOssPdfreporterEngineTypeJsonOperatorEnum, LE), NULL, .constantValue.asLong = 0 },
    { "GT", "GT", 0x4019, "Lorg.oss.pdfreporter.engine.type.JsonOperatorEnum;", &JreEnum(OrgOssPdfreporterEngineTypeJsonOperatorEnum, GT), NULL, .constantValue.asLong = 0 },
    { "GE", "GE", 0x4019, "Lorg.oss.pdfreporter.engine.type.JsonOperatorEnum;", &JreEnum(OrgOssPdfreporterEngineTypeJsonOperatorEnum, GE), NULL, .constantValue.asLong = 0 },
    { "EQ", "EQ", 0x4019, "Lorg.oss.pdfreporter.engine.type.JsonOperatorEnum;", &JreEnum(OrgOssPdfreporterEngineTypeJsonOperatorEnum, EQ), NULL, .constantValue.asLong = 0 },
    { "NE", "NE", 0x4019, "Lorg.oss.pdfreporter.engine.type.JsonOperatorEnum;", &JreEnum(OrgOssPdfreporterEngineTypeJsonOperatorEnum, NE), NULL, .constantValue.asLong = 0 },
    { "value_", NULL, 0x92, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "name_JsonOperatorEnum_", "name", 0x92, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *superclass_type_args[] = {"Lorg.oss.pdfreporter.engine.type.JsonOperatorEnum;"};
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineTypeJsonOperatorEnum = { 2, "JsonOperatorEnum", "org.oss.pdfreporter.engine.type", NULL, 0x4011, 3, methods, 8, fields, 1, superclass_type_args, 0, NULL, NULL, "Ljava/lang/Enum<Lorg/oss/pdfreporter/engine/type/JsonOperatorEnum;>;" };
  return &_OrgOssPdfreporterEngineTypeJsonOperatorEnum;
}

@end

void OrgOssPdfreporterEngineTypeJsonOperatorEnum_initWithNSString_withNSString_withNSString_withInt_(OrgOssPdfreporterEngineTypeJsonOperatorEnum *self, NSString *value, NSString *enumName, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
  self->value_ = value;
  self->name_JsonOperatorEnum_ = enumName;
}

OrgOssPdfreporterEngineTypeJsonOperatorEnum *new_OrgOssPdfreporterEngineTypeJsonOperatorEnum_initWithNSString_withNSString_withNSString_withInt_(NSString *value, NSString *enumName, NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineTypeJsonOperatorEnum, initWithNSString_withNSString_withNSString_withInt_, value, enumName, __name, __ordinal)
}

NSString *OrgOssPdfreporterEngineTypeJsonOperatorEnum_getValue(OrgOssPdfreporterEngineTypeJsonOperatorEnum *self) {
  return self->value_;
}

OrgOssPdfreporterEngineTypeJsonOperatorEnum *OrgOssPdfreporterEngineTypeJsonOperatorEnum_getByValueWithNSString_(NSString *value) {
  OrgOssPdfreporterEngineTypeJsonOperatorEnum_initialize();
  {
    IOSObjectArray *a__ = OrgOssPdfreporterEngineTypeJsonOperatorEnum_values();
    OrgOssPdfreporterEngineTypeJsonOperatorEnum * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    OrgOssPdfreporterEngineTypeJsonOperatorEnum * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      OrgOssPdfreporterEngineTypeJsonOperatorEnum *joe = *b__++;
      if ([((NSString *) nil_chk(value)) isEqual:OrgOssPdfreporterEngineTypeJsonOperatorEnum_getValue(nil_chk(joe))]) {
        return joe;
      }
    }
  }
  return nil;
}

IOSObjectArray *OrgOssPdfreporterEngineTypeJsonOperatorEnum_values() {
  OrgOssPdfreporterEngineTypeJsonOperatorEnum_initialize();
  return [IOSObjectArray arrayWithObjects:OrgOssPdfreporterEngineTypeJsonOperatorEnum_values_ count:6 type:OrgOssPdfreporterEngineTypeJsonOperatorEnum_class_()];
}

OrgOssPdfreporterEngineTypeJsonOperatorEnum *OrgOssPdfreporterEngineTypeJsonOperatorEnum_valueOfWithNSString_(NSString *name) {
  OrgOssPdfreporterEngineTypeJsonOperatorEnum_initialize();
  for (int i = 0; i < 6; i++) {
    OrgOssPdfreporterEngineTypeJsonOperatorEnum *e = OrgOssPdfreporterEngineTypeJsonOperatorEnum_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:name];
  return nil;
}

OrgOssPdfreporterEngineTypeJsonOperatorEnum *OrgOssPdfreporterEngineTypeJsonOperatorEnum_fromOrdinal(NSUInteger ordinal) {
  OrgOssPdfreporterEngineTypeJsonOperatorEnum_initialize();
  if (ordinal >= 6) {
    return nil;
  }
  return OrgOssPdfreporterEngineTypeJsonOperatorEnum_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineTypeJsonOperatorEnum)
