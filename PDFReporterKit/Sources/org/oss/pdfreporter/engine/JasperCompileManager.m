//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/engine/JasperCompileManager.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/io/File.h"
#include "java/io/InputStream.h"
#include "java/io/OutputStream.h"
#include "java/util/Collection.h"
#include "java/util/logging/Logger.h"
#include "org/oss/pdfreporter/compilers/factory/ICompilerFactory.h"
#include "org/oss/pdfreporter/compilers/jeval/JEvalCompiler.h"
#include "org/oss/pdfreporter/compilers/jshuntingyard/JSHuntingYardCompiler.h"
#include "org/oss/pdfreporter/crosstabs/JRCrosstab.h"
#include "org/oss/pdfreporter/engine/DefaultJasperReportsContext.h"
#include "org/oss/pdfreporter/engine/JRDataset.h"
#include "org/oss/pdfreporter/engine/JRException.h"
#include "org/oss/pdfreporter/engine/JRReport.h"
#include "org/oss/pdfreporter/engine/JasperCompileManager.h"
#include "org/oss/pdfreporter/engine/JasperReport.h"
#include "org/oss/pdfreporter/engine/JasperReportsContext.h"
#include "org/oss/pdfreporter/engine/design/JRCompiler.h"
#include "org/oss/pdfreporter/engine/design/JRVerifier.h"
#include "org/oss/pdfreporter/engine/design/JasperDesign.h"
#include "org/oss/pdfreporter/engine/fill/JREvaluator.h"
#include "org/oss/pdfreporter/engine/fill/JasperReportsContextAware.h"
#include "org/oss/pdfreporter/engine/util/JRSaver.h"
#include "org/oss/pdfreporter/engine/xml/JRXmlLoader.h"
#include "org/oss/pdfreporter/progress/IProgressHandler.h"
#include "org/oss/pdfreporter/progress/ProgressManager.h"
#include "org/oss/pdfreporter/registry/ApiRegistry.h"

@interface OrgOssPdfreporterEngineJasperCompileManager () {
 @public
  id<OrgOssPdfreporterEngineJasperReportsContext> jasperReportsContext_;
}

- (instancetype)initWithOrgOssPdfreporterEngineJasperReportsContext:(id<OrgOssPdfreporterEngineJasperReportsContext>)jasperReportsContext;

+ (OrgOssPdfreporterEngineJasperCompileManager *)getDefaultInstance;

- (id<OrgOssPdfreporterEngineDesignJRCompiler>)getCompilerWithOrgOssPdfreporterEngineJasperReport:(OrgOssPdfreporterEngineJasperReport *)jasperReport;

- (id<OrgOssPdfreporterEngineDesignJRCompiler>)getCompilerWithOrgOssPdfreporterEngineDesignJasperDesign:(OrgOssPdfreporterEngineDesignJasperDesign *)jasperDesign;

- (id<OrgOssPdfreporterEngineDesignJRCompiler>)getCompilerByLanguageWithNSString:(NSString *)language;

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterEngineJasperCompileManager, jasperReportsContext_, id<OrgOssPdfreporterEngineJasperReportsContext>)

inline JavaUtilLoggingLogger *OrgOssPdfreporterEngineJasperCompileManager_get_logger();
static JavaUtilLoggingLogger *OrgOssPdfreporterEngineJasperCompileManager_logger;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterEngineJasperCompileManager, logger, JavaUtilLoggingLogger *)

inline NSString *OrgOssPdfreporterEngineJasperCompileManager_get_JEVAL_COMPILER();
static NSString *OrgOssPdfreporterEngineJasperCompileManager_JEVAL_COMPILER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterEngineJasperCompileManager, JEVAL_COMPILER, NSString *)

inline NSString *OrgOssPdfreporterEngineJasperCompileManager_get_JSHUNTINGYARD_COMPILER();
static NSString *OrgOssPdfreporterEngineJasperCompileManager_JSHUNTINGYARD_COMPILER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterEngineJasperCompileManager, JSHUNTINGYARD_COMPILER, NSString *)

__attribute__((unused)) static void OrgOssPdfreporterEngineJasperCompileManager_initWithOrgOssPdfreporterEngineJasperReportsContext_(OrgOssPdfreporterEngineJasperCompileManager *self, id<OrgOssPdfreporterEngineJasperReportsContext> jasperReportsContext);

__attribute__((unused)) static OrgOssPdfreporterEngineJasperCompileManager *new_OrgOssPdfreporterEngineJasperCompileManager_initWithOrgOssPdfreporterEngineJasperReportsContext_(id<OrgOssPdfreporterEngineJasperReportsContext> jasperReportsContext) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgOssPdfreporterEngineJasperCompileManager *create_OrgOssPdfreporterEngineJasperCompileManager_initWithOrgOssPdfreporterEngineJasperReportsContext_(id<OrgOssPdfreporterEngineJasperReportsContext> jasperReportsContext);

__attribute__((unused)) static OrgOssPdfreporterEngineJasperCompileManager *OrgOssPdfreporterEngineJasperCompileManager_getDefaultInstance();

__attribute__((unused)) static id<OrgOssPdfreporterEngineDesignJRCompiler> OrgOssPdfreporterEngineJasperCompileManager_getCompilerWithOrgOssPdfreporterEngineJasperReport_(OrgOssPdfreporterEngineJasperCompileManager *self, OrgOssPdfreporterEngineJasperReport *jasperReport);

__attribute__((unused)) static id<OrgOssPdfreporterEngineDesignJRCompiler> OrgOssPdfreporterEngineJasperCompileManager_getCompilerWithOrgOssPdfreporterEngineDesignJasperDesign_(OrgOssPdfreporterEngineJasperCompileManager *self, OrgOssPdfreporterEngineDesignJasperDesign *jasperDesign);

__attribute__((unused)) static id<OrgOssPdfreporterEngineDesignJRCompiler> OrgOssPdfreporterEngineJasperCompileManager_getCompilerByLanguageWithNSString_(OrgOssPdfreporterEngineJasperCompileManager *self, NSString *language);

J2OBJC_INITIALIZED_DEFN(OrgOssPdfreporterEngineJasperCompileManager)

@implementation OrgOssPdfreporterEngineJasperCompileManager

- (instancetype)initWithOrgOssPdfreporterEngineJasperReportsContext:(id<OrgOssPdfreporterEngineJasperReportsContext>)jasperReportsContext {
  OrgOssPdfreporterEngineJasperCompileManager_initWithOrgOssPdfreporterEngineJasperReportsContext_(self, jasperReportsContext);
  return self;
}

+ (OrgOssPdfreporterEngineJasperCompileManager *)getDefaultInstance {
  return OrgOssPdfreporterEngineJasperCompileManager_getDefaultInstance();
}

+ (OrgOssPdfreporterEngineJasperCompileManager *)getInstanceWithOrgOssPdfreporterEngineJasperReportsContext:(id<OrgOssPdfreporterEngineJasperReportsContext>)jasperReportsContext {
  return OrgOssPdfreporterEngineJasperCompileManager_getInstanceWithOrgOssPdfreporterEngineJasperReportsContext_(jasperReportsContext);
}

- (NSString *)compileToFileWithNSString:(NSString *)sourceFileName {
  JavaIoFile *sourceFile = new_JavaIoFile_initWithNSString_(sourceFileName);
  OrgOssPdfreporterEngineDesignJasperDesign *jasperDesign = OrgOssPdfreporterEngineXmlJRXmlLoader_load__WithNSString_(sourceFileName);
  JavaIoFile *destFile = new_JavaIoFile_initWithNSString_withNSString_([sourceFile getParent], JreStrcat("$$", [((OrgOssPdfreporterEngineDesignJasperDesign *) nil_chk(jasperDesign)) getName], @".jasper"));
  NSString *destFileName = [destFile description];
  [self compileToFileWithOrgOssPdfreporterEngineDesignJasperDesign:jasperDesign withNSString:destFileName];
  return destFileName;
}

- (void)compileToFileWithNSString:(NSString *)sourceFileName
                     withNSString:(NSString *)destFileName {
  OrgOssPdfreporterEngineDesignJasperDesign *jasperDesign = OrgOssPdfreporterEngineXmlJRXmlLoader_load__WithNSString_(sourceFileName);
  [self compileToFileWithOrgOssPdfreporterEngineDesignJasperDesign:jasperDesign withNSString:destFileName];
}

- (void)compileToFileWithOrgOssPdfreporterEngineDesignJasperDesign:(OrgOssPdfreporterEngineDesignJasperDesign *)jasperDesign
                                                      withNSString:(NSString *)destFileName {
  OrgOssPdfreporterEngineJasperReport *jasperReport = [self compileWithOrgOssPdfreporterEngineDesignJasperDesign:jasperDesign];
  OrgOssPdfreporterEngineUtilJRSaver_saveObjectWithId_withNSString_(jasperReport, destFileName);
}

- (OrgOssPdfreporterEngineJasperReport *)compileWithNSString:(NSString *)sourceFileName {
  OrgOssPdfreporterEngineDesignJasperDesign *jasperDesign = OrgOssPdfreporterEngineXmlJRXmlLoader_load__WithNSString_(sourceFileName);
  return [self compileWithOrgOssPdfreporterEngineDesignJasperDesign:jasperDesign];
}

- (void)compileToStreamWithJavaIoInputStream:(JavaIoInputStream *)inputStream
                      withJavaIoOutputStream:(JavaIoOutputStream *)outputStream {
  OrgOssPdfreporterEngineDesignJasperDesign *jasperDesign = OrgOssPdfreporterEngineXmlJRXmlLoader_load__WithJavaIoInputStream_(inputStream);
  [self compileToStreamWithOrgOssPdfreporterEngineDesignJasperDesign:jasperDesign withJavaIoOutputStream:outputStream];
}

- (void)compileToStreamWithOrgOssPdfreporterEngineDesignJasperDesign:(OrgOssPdfreporterEngineDesignJasperDesign *)jasperDesign
                                              withJavaIoOutputStream:(JavaIoOutputStream *)outputStream {
  OrgOssPdfreporterEngineJasperReport *jasperReport = [self compileWithOrgOssPdfreporterEngineDesignJasperDesign:jasperDesign];
  OrgOssPdfreporterEngineUtilJRSaver_saveObjectWithId_withJavaIoOutputStream_(jasperReport, outputStream);
}

- (OrgOssPdfreporterEngineJasperReport *)compileWithJavaIoInputStream:(JavaIoInputStream *)inputStream {
  OrgOssPdfreporterEngineDesignJasperDesign *jasperDesign = OrgOssPdfreporterEngineXmlJRXmlLoader_load__WithJavaIoInputStream_(inputStream);
  return [self compileWithOrgOssPdfreporterEngineDesignJasperDesign:jasperDesign];
}

- (OrgOssPdfreporterEngineJasperReport *)compileWithOrgOssPdfreporterEngineDesignJasperDesign:(OrgOssPdfreporterEngineDesignJasperDesign *)jasperDesign {
  OrgOssPdfreporterProgressProgressManager *pm = new_OrgOssPdfreporterProgressProgressManager_initWithOrgOssPdfreporterProgressIProgressHandler_ProgressState_(JreLoadEnum(OrgOssPdfreporterProgressIProgressHandler_ProgressState, COMPILING));
  @try {
    return [((id<OrgOssPdfreporterEngineDesignJRCompiler>) nil_chk(OrgOssPdfreporterEngineJasperCompileManager_getCompilerWithOrgOssPdfreporterEngineDesignJasperDesign_(self, jasperDesign))) compileReportWithOrgOssPdfreporterEngineDesignJasperDesign:jasperDesign];
  }
  @finally {
    [pm done];
  }
}

- (id<JavaUtilCollection>)verifyWithOrgOssPdfreporterEngineDesignJasperDesign:(OrgOssPdfreporterEngineDesignJasperDesign *)jasperDesign {
  return OrgOssPdfreporterEngineDesignJRVerifier_verifyDesignWithOrgOssPdfreporterEngineDesignJasperDesign_(jasperDesign);
}

- (OrgOssPdfreporterEngineFillJREvaluator *)getEvaluatorWithOrgOssPdfreporterEngineJasperReport:(OrgOssPdfreporterEngineJasperReport *)jasperReport
                                                           withOrgOssPdfreporterEngineJRDataset:(id<OrgOssPdfreporterEngineJRDataset>)dataset {
  id<OrgOssPdfreporterEngineDesignJRCompiler> compiler = OrgOssPdfreporterEngineJasperCompileManager_getCompilerWithOrgOssPdfreporterEngineJasperReport_(self, jasperReport);
  OrgOssPdfreporterEngineFillJREvaluator *evaluator = [((id<OrgOssPdfreporterEngineDesignJRCompiler>) nil_chk(compiler)) loadEvaluatorWithOrgOssPdfreporterEngineJasperReport:jasperReport withOrgOssPdfreporterEngineJRDataset:dataset];
  [self initialize__WithOrgOssPdfreporterEngineFillJREvaluator:evaluator];
  return evaluator;
}

- (OrgOssPdfreporterEngineFillJREvaluator *)getEvaluatorWithOrgOssPdfreporterEngineJasperReport:(OrgOssPdfreporterEngineJasperReport *)jasperReport
                                                       withOrgOssPdfreporterCrosstabsJRCrosstab:(id<OrgOssPdfreporterCrosstabsJRCrosstab>)crosstab {
  id<OrgOssPdfreporterEngineDesignJRCompiler> compiler = OrgOssPdfreporterEngineJasperCompileManager_getCompilerWithOrgOssPdfreporterEngineJasperReport_(self, jasperReport);
  OrgOssPdfreporterEngineFillJREvaluator *evaluator = [((id<OrgOssPdfreporterEngineDesignJRCompiler>) nil_chk(compiler)) loadEvaluatorWithOrgOssPdfreporterEngineJasperReport:jasperReport withOrgOssPdfreporterCrosstabsJRCrosstab:crosstab];
  [self initialize__WithOrgOssPdfreporterEngineFillJREvaluator:evaluator];
  return evaluator;
}

- (OrgOssPdfreporterEngineFillJREvaluator *)getEvaluatorWithOrgOssPdfreporterEngineJasperReport:(OrgOssPdfreporterEngineJasperReport *)jasperReport {
  return [self getEvaluatorWithOrgOssPdfreporterEngineJasperReport:jasperReport withOrgOssPdfreporterEngineJRDataset:[((OrgOssPdfreporterEngineJasperReport *) nil_chk(jasperReport)) getMainDataset]];
}

- (void)initialize__WithOrgOssPdfreporterEngineFillJREvaluator:(OrgOssPdfreporterEngineFillJREvaluator *)evaluator {
  if ([OrgOssPdfreporterEngineFillJasperReportsContextAware_class_() isInstance:evaluator]) {
    [((id<OrgOssPdfreporterEngineFillJasperReportsContextAware>) nil_chk(((id<OrgOssPdfreporterEngineFillJasperReportsContextAware>) cast_check(evaluator, OrgOssPdfreporterEngineFillJasperReportsContextAware_class_())))) setJasperReportsContextWithOrgOssPdfreporterEngineJasperReportsContext:jasperReportsContext_];
  }
}

+ (NSString *)compileReportToFileWithNSString:(NSString *)sourceFileName {
  return OrgOssPdfreporterEngineJasperCompileManager_compileReportToFileWithNSString_(sourceFileName);
}

+ (void)compileReportToFileWithNSString:(NSString *)sourceFileName
                           withNSString:(NSString *)destFileName {
  OrgOssPdfreporterEngineJasperCompileManager_compileReportToFileWithNSString_withNSString_(sourceFileName, destFileName);
}

+ (void)compileReportToFileWithOrgOssPdfreporterEngineDesignJasperDesign:(OrgOssPdfreporterEngineDesignJasperDesign *)jasperDesign
                                                            withNSString:(NSString *)destFileName {
  OrgOssPdfreporterEngineJasperCompileManager_compileReportToFileWithOrgOssPdfreporterEngineDesignJasperDesign_withNSString_(jasperDesign, destFileName);
}

+ (OrgOssPdfreporterEngineJasperReport *)compileReportWithNSString:(NSString *)sourceFileName {
  return OrgOssPdfreporterEngineJasperCompileManager_compileReportWithNSString_(sourceFileName);
}

+ (void)compileReportToStreamWithJavaIoInputStream:(JavaIoInputStream *)inputStream
                            withJavaIoOutputStream:(JavaIoOutputStream *)outputStream {
  OrgOssPdfreporterEngineJasperCompileManager_compileReportToStreamWithJavaIoInputStream_withJavaIoOutputStream_(inputStream, outputStream);
}

+ (void)compileReportToStreamWithOrgOssPdfreporterEngineDesignJasperDesign:(OrgOssPdfreporterEngineDesignJasperDesign *)jasperDesign
                                                    withJavaIoOutputStream:(JavaIoOutputStream *)outputStream {
  OrgOssPdfreporterEngineJasperCompileManager_compileReportToStreamWithOrgOssPdfreporterEngineDesignJasperDesign_withJavaIoOutputStream_(jasperDesign, outputStream);
}

+ (OrgOssPdfreporterEngineJasperReport *)compileReportWithJavaIoInputStream:(JavaIoInputStream *)inputStream {
  return OrgOssPdfreporterEngineJasperCompileManager_compileReportWithJavaIoInputStream_(inputStream);
}

+ (OrgOssPdfreporterEngineJasperReport *)compileReportWithOrgOssPdfreporterEngineDesignJasperDesign:(OrgOssPdfreporterEngineDesignJasperDesign *)jasperDesign {
  return OrgOssPdfreporterEngineJasperCompileManager_compileReportWithOrgOssPdfreporterEngineDesignJasperDesign_(jasperDesign);
}

+ (id<JavaUtilCollection>)verifyDesignWithOrgOssPdfreporterEngineDesignJasperDesign:(OrgOssPdfreporterEngineDesignJasperDesign *)jasperDesign {
  return OrgOssPdfreporterEngineJasperCompileManager_verifyDesignWithOrgOssPdfreporterEngineDesignJasperDesign_(jasperDesign);
}

+ (OrgOssPdfreporterEngineFillJREvaluator *)loadEvaluatorWithOrgOssPdfreporterEngineJasperReport:(OrgOssPdfreporterEngineJasperReport *)jasperReport
                                                            withOrgOssPdfreporterEngineJRDataset:(id<OrgOssPdfreporterEngineJRDataset>)dataset {
  return OrgOssPdfreporterEngineJasperCompileManager_loadEvaluatorWithOrgOssPdfreporterEngineJasperReport_withOrgOssPdfreporterEngineJRDataset_(jasperReport, dataset);
}

+ (OrgOssPdfreporterEngineFillJREvaluator *)loadEvaluatorWithOrgOssPdfreporterEngineJasperReport:(OrgOssPdfreporterEngineJasperReport *)jasperReport
                                                        withOrgOssPdfreporterCrosstabsJRCrosstab:(id<OrgOssPdfreporterCrosstabsJRCrosstab>)crosstab {
  return OrgOssPdfreporterEngineJasperCompileManager_loadEvaluatorWithOrgOssPdfreporterEngineJasperReport_withOrgOssPdfreporterCrosstabsJRCrosstab_(jasperReport, crosstab);
}

+ (OrgOssPdfreporterEngineFillJREvaluator *)loadEvaluatorWithOrgOssPdfreporterEngineJasperReport:(OrgOssPdfreporterEngineJasperReport *)jasperReport {
  return OrgOssPdfreporterEngineJasperCompileManager_loadEvaluatorWithOrgOssPdfreporterEngineJasperReport_(jasperReport);
}

- (id<OrgOssPdfreporterEngineDesignJRCompiler>)getCompilerWithOrgOssPdfreporterEngineJasperReport:(OrgOssPdfreporterEngineJasperReport *)jasperReport {
  return OrgOssPdfreporterEngineJasperCompileManager_getCompilerWithOrgOssPdfreporterEngineJasperReport_(self, jasperReport);
}

- (id<OrgOssPdfreporterEngineDesignJRCompiler>)getCompilerWithOrgOssPdfreporterEngineDesignJasperDesign:(OrgOssPdfreporterEngineDesignJasperDesign *)jasperDesign {
  return OrgOssPdfreporterEngineJasperCompileManager_getCompilerWithOrgOssPdfreporterEngineDesignJasperDesign_(self, jasperDesign);
}

- (id<OrgOssPdfreporterEngineDesignJRCompiler>)getCompilerByLanguageWithNSString:(NSString *)language {
  return OrgOssPdfreporterEngineJasperCompileManager_getCompilerByLanguageWithNSString_(self, language);
}

+ (void)initialize {
  if (self == [OrgOssPdfreporterEngineJasperCompileManager class]) {
    OrgOssPdfreporterEngineJasperCompileManager_logger = JavaUtilLoggingLogger_getLoggerWithNSString_([OrgOssPdfreporterEngineJasperCompileManager_class_() getName]);
    OrgOssPdfreporterEngineJasperCompileManager_JEVAL_COMPILER = [OrgOssPdfreporterCompilersJevalJEvalCompiler_class_() getName];
    OrgOssPdfreporterEngineJasperCompileManager_JSHUNTINGYARD_COMPILER = [OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardCompiler_class_() getName];
    J2OBJC_SET_INITIALIZED(OrgOssPdfreporterEngineJasperCompileManager)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgOssPdfreporterEngineJasperReportsContext:", "JasperCompileManager", NULL, 0x2, NULL, NULL },
    { "getDefaultInstance", NULL, "Lorg.oss.pdfreporter.engine.JasperCompileManager;", 0xa, NULL, NULL },
    { "getInstanceWithOrgOssPdfreporterEngineJasperReportsContext:", "getInstance", "Lorg.oss.pdfreporter.engine.JasperCompileManager;", 0x9, NULL, NULL },
    { "compileToFileWithNSString:", "compileToFile", "Ljava.lang.String;", 0x1, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "compileToFileWithNSString:withNSString:", "compileToFile", "V", 0x1, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "compileToFileWithOrgOssPdfreporterEngineDesignJasperDesign:withNSString:", "compileToFile", "V", 0x1, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "compileWithNSString:", "compile", "Lorg.oss.pdfreporter.engine.JasperReport;", 0x1, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "compileToStreamWithJavaIoInputStream:withJavaIoOutputStream:", "compileToStream", "V", 0x1, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "compileToStreamWithOrgOssPdfreporterEngineDesignJasperDesign:withJavaIoOutputStream:", "compileToStream", "V", 0x1, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "compileWithJavaIoInputStream:", "compile", "Lorg.oss.pdfreporter.engine.JasperReport;", 0x1, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "compileWithOrgOssPdfreporterEngineDesignJasperDesign:", "compile", "Lorg.oss.pdfreporter.engine.JasperReport;", 0x1, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "verifyWithOrgOssPdfreporterEngineDesignJasperDesign:", "verify", "Ljava.util.Collection;", 0x1, NULL, "(Lorg/oss/pdfreporter/engine/design/JasperDesign;)Ljava/util/Collection<Lorg/oss/pdfreporter/engine/design/JRValidationFault;>;" },
    { "getEvaluatorWithOrgOssPdfreporterEngineJasperReport:withOrgOssPdfreporterEngineJRDataset:", "getEvaluator", "Lorg.oss.pdfreporter.engine.fill.JREvaluator;", 0x1, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "getEvaluatorWithOrgOssPdfreporterEngineJasperReport:withOrgOssPdfreporterCrosstabsJRCrosstab:", "getEvaluator", "Lorg.oss.pdfreporter.engine.fill.JREvaluator;", 0x1, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "getEvaluatorWithOrgOssPdfreporterEngineJasperReport:", "getEvaluator", "Lorg.oss.pdfreporter.engine.fill.JREvaluator;", 0x1, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "initialize__WithOrgOssPdfreporterEngineFillJREvaluator:", "initialize", "V", 0x1, NULL, NULL },
    { "compileReportToFileWithNSString:", "compileReportToFile", "Ljava.lang.String;", 0x9, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "compileReportToFileWithNSString:withNSString:", "compileReportToFile", "V", 0x9, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "compileReportToFileWithOrgOssPdfreporterEngineDesignJasperDesign:withNSString:", "compileReportToFile", "V", 0x9, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "compileReportWithNSString:", "compileReport", "Lorg.oss.pdfreporter.engine.JasperReport;", 0x9, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "compileReportToStreamWithJavaIoInputStream:withJavaIoOutputStream:", "compileReportToStream", "V", 0x9, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "compileReportToStreamWithOrgOssPdfreporterEngineDesignJasperDesign:withJavaIoOutputStream:", "compileReportToStream", "V", 0x9, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "compileReportWithJavaIoInputStream:", "compileReport", "Lorg.oss.pdfreporter.engine.JasperReport;", 0x9, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "compileReportWithOrgOssPdfreporterEngineDesignJasperDesign:", "compileReport", "Lorg.oss.pdfreporter.engine.JasperReport;", 0x9, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "verifyDesignWithOrgOssPdfreporterEngineDesignJasperDesign:", "verifyDesign", "Ljava.util.Collection;", 0x9, NULL, "(Lorg/oss/pdfreporter/engine/design/JasperDesign;)Ljava/util/Collection<Lorg/oss/pdfreporter/engine/design/JRValidationFault;>;" },
    { "loadEvaluatorWithOrgOssPdfreporterEngineJasperReport:withOrgOssPdfreporterEngineJRDataset:", "loadEvaluator", "Lorg.oss.pdfreporter.engine.fill.JREvaluator;", 0x9, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "loadEvaluatorWithOrgOssPdfreporterEngineJasperReport:withOrgOssPdfreporterCrosstabsJRCrosstab:", "loadEvaluator", "Lorg.oss.pdfreporter.engine.fill.JREvaluator;", 0x9, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "loadEvaluatorWithOrgOssPdfreporterEngineJasperReport:", "loadEvaluator", "Lorg.oss.pdfreporter.engine.fill.JREvaluator;", 0x9, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "getCompilerWithOrgOssPdfreporterEngineJasperReport:", "getCompiler", "Lorg.oss.pdfreporter.engine.design.JRCompiler;", 0x2, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "getCompilerWithOrgOssPdfreporterEngineDesignJasperDesign:", "getCompiler", "Lorg.oss.pdfreporter.engine.design.JRCompiler;", 0x2, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "getCompilerByLanguageWithNSString:", "getCompilerByLanguage", "Lorg.oss.pdfreporter.engine.design.JRCompiler;", 0x2, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "logger", "logger", 0x1a, "Ljava.util.logging.Logger;", &OrgOssPdfreporterEngineJasperCompileManager_logger, NULL, .constantValue.asLong = 0 },
    { "JEVAL_COMPILER", "JEVAL_COMPILER", 0x1a, "Ljava.lang.String;", &OrgOssPdfreporterEngineJasperCompileManager_JEVAL_COMPILER, NULL, .constantValue.asLong = 0 },
    { "JSHUNTINGYARD_COMPILER", "JSHUNTINGYARD_COMPILER", 0x1a, "Ljava.lang.String;", &OrgOssPdfreporterEngineJasperCompileManager_JSHUNTINGYARD_COMPILER, NULL, .constantValue.asLong = 0 },
    { "jasperReportsContext_", NULL, 0x2, "Lorg.oss.pdfreporter.engine.JasperReportsContext;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterEngineJasperCompileManager = { 2, "JasperCompileManager", "org.oss.pdfreporter.engine", NULL, 0x11, 31, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterEngineJasperCompileManager;
}

@end

void OrgOssPdfreporterEngineJasperCompileManager_initWithOrgOssPdfreporterEngineJasperReportsContext_(OrgOssPdfreporterEngineJasperCompileManager *self, id<OrgOssPdfreporterEngineJasperReportsContext> jasperReportsContext) {
  NSObject_init(self);
  self->jasperReportsContext_ = jasperReportsContext;
}

OrgOssPdfreporterEngineJasperCompileManager *new_OrgOssPdfreporterEngineJasperCompileManager_initWithOrgOssPdfreporterEngineJasperReportsContext_(id<OrgOssPdfreporterEngineJasperReportsContext> jasperReportsContext) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterEngineJasperCompileManager, initWithOrgOssPdfreporterEngineJasperReportsContext_, jasperReportsContext)
}

OrgOssPdfreporterEngineJasperCompileManager *create_OrgOssPdfreporterEngineJasperCompileManager_initWithOrgOssPdfreporterEngineJasperReportsContext_(id<OrgOssPdfreporterEngineJasperReportsContext> jasperReportsContext) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterEngineJasperCompileManager, initWithOrgOssPdfreporterEngineJasperReportsContext_, jasperReportsContext)
}

OrgOssPdfreporterEngineJasperCompileManager *OrgOssPdfreporterEngineJasperCompileManager_getDefaultInstance() {
  OrgOssPdfreporterEngineJasperCompileManager_initialize();
  return new_OrgOssPdfreporterEngineJasperCompileManager_initWithOrgOssPdfreporterEngineJasperReportsContext_(OrgOssPdfreporterEngineDefaultJasperReportsContext_getInstance());
}

OrgOssPdfreporterEngineJasperCompileManager *OrgOssPdfreporterEngineJasperCompileManager_getInstanceWithOrgOssPdfreporterEngineJasperReportsContext_(id<OrgOssPdfreporterEngineJasperReportsContext> jasperReportsContext) {
  OrgOssPdfreporterEngineJasperCompileManager_initialize();
  return new_OrgOssPdfreporterEngineJasperCompileManager_initWithOrgOssPdfreporterEngineJasperReportsContext_(jasperReportsContext);
}

NSString *OrgOssPdfreporterEngineJasperCompileManager_compileReportToFileWithNSString_(NSString *sourceFileName) {
  OrgOssPdfreporterEngineJasperCompileManager_initialize();
  return [((OrgOssPdfreporterEngineJasperCompileManager *) nil_chk(OrgOssPdfreporterEngineJasperCompileManager_getDefaultInstance())) compileToFileWithNSString:sourceFileName];
}

void OrgOssPdfreporterEngineJasperCompileManager_compileReportToFileWithNSString_withNSString_(NSString *sourceFileName, NSString *destFileName) {
  OrgOssPdfreporterEngineJasperCompileManager_initialize();
  [((OrgOssPdfreporterEngineJasperCompileManager *) nil_chk(OrgOssPdfreporterEngineJasperCompileManager_getDefaultInstance())) compileToFileWithNSString:sourceFileName withNSString:destFileName];
}

void OrgOssPdfreporterEngineJasperCompileManager_compileReportToFileWithOrgOssPdfreporterEngineDesignJasperDesign_withNSString_(OrgOssPdfreporterEngineDesignJasperDesign *jasperDesign, NSString *destFileName) {
  OrgOssPdfreporterEngineJasperCompileManager_initialize();
  [((OrgOssPdfreporterEngineJasperCompileManager *) nil_chk(OrgOssPdfreporterEngineJasperCompileManager_getDefaultInstance())) compileToFileWithOrgOssPdfreporterEngineDesignJasperDesign:jasperDesign withNSString:destFileName];
}

OrgOssPdfreporterEngineJasperReport *OrgOssPdfreporterEngineJasperCompileManager_compileReportWithNSString_(NSString *sourceFileName) {
  OrgOssPdfreporterEngineJasperCompileManager_initialize();
  return [((OrgOssPdfreporterEngineJasperCompileManager *) nil_chk(OrgOssPdfreporterEngineJasperCompileManager_getDefaultInstance())) compileWithNSString:sourceFileName];
}

void OrgOssPdfreporterEngineJasperCompileManager_compileReportToStreamWithJavaIoInputStream_withJavaIoOutputStream_(JavaIoInputStream *inputStream, JavaIoOutputStream *outputStream) {
  OrgOssPdfreporterEngineJasperCompileManager_initialize();
  [((OrgOssPdfreporterEngineJasperCompileManager *) nil_chk(OrgOssPdfreporterEngineJasperCompileManager_getDefaultInstance())) compileToStreamWithJavaIoInputStream:inputStream withJavaIoOutputStream:outputStream];
}

void OrgOssPdfreporterEngineJasperCompileManager_compileReportToStreamWithOrgOssPdfreporterEngineDesignJasperDesign_withJavaIoOutputStream_(OrgOssPdfreporterEngineDesignJasperDesign *jasperDesign, JavaIoOutputStream *outputStream) {
  OrgOssPdfreporterEngineJasperCompileManager_initialize();
  [((OrgOssPdfreporterEngineJasperCompileManager *) nil_chk(OrgOssPdfreporterEngineJasperCompileManager_getDefaultInstance())) compileToStreamWithOrgOssPdfreporterEngineDesignJasperDesign:jasperDesign withJavaIoOutputStream:outputStream];
}

OrgOssPdfreporterEngineJasperReport *OrgOssPdfreporterEngineJasperCompileManager_compileReportWithJavaIoInputStream_(JavaIoInputStream *inputStream) {
  OrgOssPdfreporterEngineJasperCompileManager_initialize();
  return [((OrgOssPdfreporterEngineJasperCompileManager *) nil_chk(OrgOssPdfreporterEngineJasperCompileManager_getDefaultInstance())) compileWithJavaIoInputStream:inputStream];
}

OrgOssPdfreporterEngineJasperReport *OrgOssPdfreporterEngineJasperCompileManager_compileReportWithOrgOssPdfreporterEngineDesignJasperDesign_(OrgOssPdfreporterEngineDesignJasperDesign *jasperDesign) {
  OrgOssPdfreporterEngineJasperCompileManager_initialize();
  return [((OrgOssPdfreporterEngineJasperCompileManager *) nil_chk(OrgOssPdfreporterEngineJasperCompileManager_getDefaultInstance())) compileWithOrgOssPdfreporterEngineDesignJasperDesign:jasperDesign];
}

id<JavaUtilCollection> OrgOssPdfreporterEngineJasperCompileManager_verifyDesignWithOrgOssPdfreporterEngineDesignJasperDesign_(OrgOssPdfreporterEngineDesignJasperDesign *jasperDesign) {
  OrgOssPdfreporterEngineJasperCompileManager_initialize();
  return [((OrgOssPdfreporterEngineJasperCompileManager *) nil_chk(OrgOssPdfreporterEngineJasperCompileManager_getDefaultInstance())) verifyWithOrgOssPdfreporterEngineDesignJasperDesign:jasperDesign];
}

OrgOssPdfreporterEngineFillJREvaluator *OrgOssPdfreporterEngineJasperCompileManager_loadEvaluatorWithOrgOssPdfreporterEngineJasperReport_withOrgOssPdfreporterEngineJRDataset_(OrgOssPdfreporterEngineJasperReport *jasperReport, id<OrgOssPdfreporterEngineJRDataset> dataset) {
  OrgOssPdfreporterEngineJasperCompileManager_initialize();
  return [((OrgOssPdfreporterEngineJasperCompileManager *) nil_chk(OrgOssPdfreporterEngineJasperCompileManager_getDefaultInstance())) getEvaluatorWithOrgOssPdfreporterEngineJasperReport:jasperReport withOrgOssPdfreporterEngineJRDataset:dataset];
}

OrgOssPdfreporterEngineFillJREvaluator *OrgOssPdfreporterEngineJasperCompileManager_loadEvaluatorWithOrgOssPdfreporterEngineJasperReport_withOrgOssPdfreporterCrosstabsJRCrosstab_(OrgOssPdfreporterEngineJasperReport *jasperReport, id<OrgOssPdfreporterCrosstabsJRCrosstab> crosstab) {
  OrgOssPdfreporterEngineJasperCompileManager_initialize();
  return [((OrgOssPdfreporterEngineJasperCompileManager *) nil_chk(OrgOssPdfreporterEngineJasperCompileManager_getDefaultInstance())) getEvaluatorWithOrgOssPdfreporterEngineJasperReport:jasperReport withOrgOssPdfreporterCrosstabsJRCrosstab:crosstab];
}

OrgOssPdfreporterEngineFillJREvaluator *OrgOssPdfreporterEngineJasperCompileManager_loadEvaluatorWithOrgOssPdfreporterEngineJasperReport_(OrgOssPdfreporterEngineJasperReport *jasperReport) {
  OrgOssPdfreporterEngineJasperCompileManager_initialize();
  return [((OrgOssPdfreporterEngineJasperCompileManager *) nil_chk(OrgOssPdfreporterEngineJasperCompileManager_getDefaultInstance())) getEvaluatorWithOrgOssPdfreporterEngineJasperReport:jasperReport];
}

id<OrgOssPdfreporterEngineDesignJRCompiler> OrgOssPdfreporterEngineJasperCompileManager_getCompilerWithOrgOssPdfreporterEngineJasperReport_(OrgOssPdfreporterEngineJasperCompileManager *self, OrgOssPdfreporterEngineJasperReport *jasperReport) {
  NSString *compilerClassName = [((OrgOssPdfreporterEngineJasperReport *) nil_chk(jasperReport)) getCompilerClass];
  if ([((NSString *) nil_chk(OrgOssPdfreporterEngineJasperCompileManager_JEVAL_COMPILER)) isEqual:compilerClassName]) {
    return new_OrgOssPdfreporterCompilersJevalJEvalCompiler_initWithOrgOssPdfreporterEngineJasperReportsContext_(self->jasperReportsContext_);
  }
  else if ([((NSString *) nil_chk(OrgOssPdfreporterEngineJasperCompileManager_JSHUNTINGYARD_COMPILER)) isEqual:compilerClassName]) {
    return new_OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardCompiler_initWithOrgOssPdfreporterEngineJasperReportsContext_(self->jasperReportsContext_);
  }
  return OrgOssPdfreporterEngineJasperCompileManager_getCompilerByLanguageWithNSString_(self, [jasperReport getLanguage]);
}

id<OrgOssPdfreporterEngineDesignJRCompiler> OrgOssPdfreporterEngineJasperCompileManager_getCompilerWithOrgOssPdfreporterEngineDesignJasperDesign_(OrgOssPdfreporterEngineJasperCompileManager *self, OrgOssPdfreporterEngineDesignJasperDesign *jasperDesign) {
  NSString *language = [((OrgOssPdfreporterEngineDesignJasperDesign *) nil_chk(jasperDesign)) getLanguage];
  if ([((NSString *) nil_chk(OrgOssPdfreporterEngineJRReport_LANGUAGE_JEVAL)) isEqual:language]) {
    return new_OrgOssPdfreporterCompilersJevalJEvalCompiler_initWithOrgOssPdfreporterEngineJasperReportsContext_withBoolean_(self->jasperReportsContext_, false);
  }
  else if ([((NSString *) nil_chk(OrgOssPdfreporterEngineJRReport_LANGUAGE_JSHUNTINGYARD)) isEqual:language]) {
    return new_OrgOssPdfreporterCompilersJshuntingyardJSHuntingYardCompiler_initWithOrgOssPdfreporterEngineJasperReportsContext_withBoolean_(self->jasperReportsContext_, false);
  }
  return OrgOssPdfreporterEngineJasperCompileManager_getCompilerByLanguageWithNSString_(self, language);
}

id<OrgOssPdfreporterEngineDesignJRCompiler> OrgOssPdfreporterEngineJasperCompileManager_getCompilerByLanguageWithNSString_(OrgOssPdfreporterEngineJasperCompileManager *self, NSString *language) {
  if (language == nil) {
    @throw new_OrgOssPdfreporterEngineJRException_initWithNSString_(@"There is no default language set for compiler. You should include a dtd to your jrxml report file.");
  }
  [((JavaUtilLoggingLogger *) nil_chk(OrgOssPdfreporterEngineJasperCompileManager_logger)) finestWithNSString:NSString_formatWithNSString_withNSObjectArray_(@"Try loading compiler %s with ApiRegistry", [IOSObjectArray newArrayWithObjects:(id[]){ language } count:1 type:NSObject_class_()])];
  id<OrgOssPdfreporterEngineDesignJRCompiler> compiler = [((id<OrgOssPdfreporterCompilersFactoryICompilerFactory>) nil_chk(OrgOssPdfreporterRegistryApiRegistry_getCompilerFactory())) getCompilerByNameWithOrgOssPdfreporterEngineJasperReportsContext:self->jasperReportsContext_ withNSString:language];
  if (compiler != nil) {
    return compiler;
  }
  @throw new_OrgOssPdfreporterEngineJRException_initWithNSString_(JreStrcat("$$", @"No report compiler set for language : ", language));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterEngineJasperCompileManager)
