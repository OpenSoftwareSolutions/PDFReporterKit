//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-ios/src/org/oss/pdfreporter/font/FontFactory.java
//

#include "J2ObjC_source.h"
#include "org/oss/pdfreporter/font/FontFactory.h"
#include "org/oss/pdfreporter/font/FontFactoryBase.h"
#include "org/oss/pdfreporter/font/FontManager.h"
#include "org/oss/pdfreporter/font/IFontManager.h"
#include "org/oss/pdfreporter/registry/ApiRegistry.h"

@interface OrgOssPdfreporterFontFontFactory () {
 @public
  id<OrgOssPdfreporterFontIFontManager> fontManager_;
}

- (instancetype)init;

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterFontFontFactory, fontManager_, id<OrgOssPdfreporterFontIFontManager>)

__attribute__((unused)) static void OrgOssPdfreporterFontFontFactory_init(OrgOssPdfreporterFontFontFactory *self);

__attribute__((unused)) static OrgOssPdfreporterFontFontFactory *new_OrgOssPdfreporterFontFontFactory_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgOssPdfreporterFontFontFactory *create_OrgOssPdfreporterFontFontFactory_init();

@implementation OrgOssPdfreporterFontFontFactory

+ (void)registerFactory {
  OrgOssPdfreporterFontFontFactory_registerFactory();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterFontFontFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<OrgOssPdfreporterFontIFontManager>)getFontManager {
  return fontManager_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "registerFactory", NULL, "V", 0x9, NULL, NULL },
    { "init", "FontFactory", NULL, 0x2, NULL, NULL },
    { "getFontManager", NULL, "Lorg.oss.pdfreporter.font.IFontManager;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "fontManager_", NULL, 0x12, "Lorg.oss.pdfreporter.font.IFontManager;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterFontFontFactory = { 2, "FontFactory", "org.oss.pdfreporter.font", NULL, 0x1, 3, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterFontFontFactory;
}

@end

void OrgOssPdfreporterFontFontFactory_registerFactory() {
  OrgOssPdfreporterFontFontFactory_initialize();
  OrgOssPdfreporterRegistryApiRegistry_register__WithOrgOssPdfreporterFontFactoryIFontFactory_(new_OrgOssPdfreporterFontFontFactory_init());
}

void OrgOssPdfreporterFontFontFactory_init(OrgOssPdfreporterFontFontFactory *self) {
  OrgOssPdfreporterFontFontFactoryBase_init(self);
  self->fontManager_ = new_OrgOssPdfreporterFontFontManager_init();
}

OrgOssPdfreporterFontFontFactory *new_OrgOssPdfreporterFontFontFactory_init() {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterFontFontFactory, init)
}

OrgOssPdfreporterFontFontFactory *create_OrgOssPdfreporterFontFontFactory_init() {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterFontFontFactory, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterFontFontFactory)
