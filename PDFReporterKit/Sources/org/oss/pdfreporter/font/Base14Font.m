//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/font/Base14Font.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/util/ArrayList.h"
#include "java/util/HashMap.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/logging/Logger.h"
#include "org/oss/pdfreporter/font/AbstractFontManager.h"
#include "org/oss/pdfreporter/font/Base14Font.h"
#include "org/oss/pdfreporter/font/IFont.h"
#include "org/oss/pdfreporter/font/IFontManager.h"
#include "org/oss/pdfreporter/font/IFontMetric.h"
#include "org/oss/pdfreporter/font/IFontPeer.h"

@interface OrgOssPdfreporterFontBase14Font () {
 @public
  OrgOssPdfreporterFontAbstractFontManager *fontManager_;
  NSString *pdfName_;
  NSString *name_;
  OrgOssPdfreporterFontIFont_FontStyle *style_;
  id<OrgOssPdfreporterFontIFontPeer> delegate_;
}

- (instancetype)initWithOrgOssPdfreporterFontAbstractFontManager:(OrgOssPdfreporterFontAbstractFontManager *)fontManager
                                                    withNSString:(NSString *)pdfName
                                                    withNSString:(NSString *)name
                        withOrgOssPdfreporterFontIFont_FontStyle:(OrgOssPdfreporterFontIFont_FontStyle *)style;

- (id<OrgOssPdfreporterFontIFontPeer>)getDelegate;

- (void)load__;

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterFontBase14Font, fontManager_, OrgOssPdfreporterFontAbstractFontManager *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterFontBase14Font, pdfName_, NSString *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterFontBase14Font, name_, NSString *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterFontBase14Font, style_, OrgOssPdfreporterFontIFont_FontStyle *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterFontBase14Font, delegate_, id<OrgOssPdfreporterFontIFontPeer>)

inline JavaUtilLoggingLogger *OrgOssPdfreporterFontBase14Font_get_logger();
static JavaUtilLoggingLogger *OrgOssPdfreporterFontBase14Font_logger;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterFontBase14Font, logger, JavaUtilLoggingLogger *)

__attribute__((unused)) static void OrgOssPdfreporterFontBase14Font_initWithOrgOssPdfreporterFontAbstractFontManager_withNSString_withNSString_withOrgOssPdfreporterFontIFont_FontStyle_(OrgOssPdfreporterFontBase14Font *self, OrgOssPdfreporterFontAbstractFontManager *fontManager, NSString *pdfName, NSString *name, OrgOssPdfreporterFontIFont_FontStyle *style);

__attribute__((unused)) static OrgOssPdfreporterFontBase14Font *new_OrgOssPdfreporterFontBase14Font_initWithOrgOssPdfreporterFontAbstractFontManager_withNSString_withNSString_withOrgOssPdfreporterFontIFont_FontStyle_(OrgOssPdfreporterFontAbstractFontManager *fontManager, NSString *pdfName, NSString *name, OrgOssPdfreporterFontIFont_FontStyle *style) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgOssPdfreporterFontBase14Font *create_OrgOssPdfreporterFontBase14Font_initWithOrgOssPdfreporterFontAbstractFontManager_withNSString_withNSString_withOrgOssPdfreporterFontIFont_FontStyle_(OrgOssPdfreporterFontAbstractFontManager *fontManager, NSString *pdfName, NSString *name, OrgOssPdfreporterFontIFont_FontStyle *style);

__attribute__((unused)) static id<OrgOssPdfreporterFontIFontPeer> OrgOssPdfreporterFontBase14Font_getDelegate(OrgOssPdfreporterFontBase14Font *self);

__attribute__((unused)) static void OrgOssPdfreporterFontBase14Font_load__(OrgOssPdfreporterFontBase14Font *self);

J2OBJC_INITIALIZED_DEFN(OrgOssPdfreporterFontBase14Font)

@implementation OrgOssPdfreporterFontBase14Font

- (instancetype)initWithOrgOssPdfreporterFontAbstractFontManager:(OrgOssPdfreporterFontAbstractFontManager *)fontManager
                                                    withNSString:(NSString *)pdfName
                                                    withNSString:(NSString *)name
                        withOrgOssPdfreporterFontIFont_FontStyle:(OrgOssPdfreporterFontIFont_FontStyle *)style {
  OrgOssPdfreporterFontBase14Font_initWithOrgOssPdfreporterFontAbstractFontManager_withNSString_withNSString_withOrgOssPdfreporterFontIFont_FontStyle_(self, fontManager, pdfName, name, style);
  return self;
}

+ (id<JavaUtilList>)getListWithOrgOssPdfreporterFontAbstractFontManager:(OrgOssPdfreporterFontAbstractFontManager *)fontManager {
  return OrgOssPdfreporterFontBase14Font_getListWithOrgOssPdfreporterFontAbstractFontManager_(fontManager);
}

+ (id<OrgOssPdfreporterFontIFont>)findFontWithOrgOssPdfreporterFontAbstractFontManager:(OrgOssPdfreporterFontAbstractFontManager *)fontManager
                                                                          withNSString:(NSString *)name
                                              withOrgOssPdfreporterFontIFont_FontStyle:(OrgOssPdfreporterFontIFont_FontStyle *)style {
  return OrgOssPdfreporterFontBase14Font_findFontWithOrgOssPdfreporterFontAbstractFontManager_withNSString_withOrgOssPdfreporterFontIFont_FontStyle_(fontManager, name, style);
}

+ (id<JavaUtilMap>)getLogicalFontNames {
  return OrgOssPdfreporterFontBase14Font_getLogicalFontNames();
}

- (NSString *)getName {
  return name_;
}

- (jfloat)getSize {
  return 1.0f;
}

- (OrgOssPdfreporterFontIFont_FontStyle *)getStyle {
  return style_;
}

- (OrgOssPdfreporterFontIFont_FontDecoration *)getDecoration {
  return JreLoadEnum(OrgOssPdfreporterFontIFont_FontDecoration, NONE);
}

- (id<OrgOssPdfreporterFontIFontMetric>)getMetric {
  return [((id<OrgOssPdfreporterFontIFontPeer>) nil_chk(OrgOssPdfreporterFontBase14Font_getDelegate(self))) getMetric];
}

- (NSString *)getResourcePath {
  return nil;
}

- (id)getPeer {
  return [((id<OrgOssPdfreporterFontIFontPeer>) nil_chk(OrgOssPdfreporterFontBase14Font_getDelegate(self))) getPeer];
}

- (id<OrgOssPdfreporterFontIFontPeer>)getDelegate {
  return OrgOssPdfreporterFontBase14Font_getDelegate(self);
}

- (NSString *)getEncoding {
  return @"UTF-8";
}

- (void)load__ {
  OrgOssPdfreporterFontBase14Font_load__(self);
}

- (id<OrgOssPdfreporterFontIFontManager>)getFontManager {
  return fontManager_;
}

+ (void)initialize {
  if (self == [OrgOssPdfreporterFontBase14Font class]) {
    OrgOssPdfreporterFontBase14Font_logger = JavaUtilLoggingLogger_getLoggerWithNSString_([OrgOssPdfreporterFontBase14Font_class_() getName]);
    J2OBJC_SET_INITIALIZED(OrgOssPdfreporterFontBase14Font)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgOssPdfreporterFontAbstractFontManager:withNSString:withNSString:withOrgOssPdfreporterFontIFont_FontStyle:", "Base14Font", NULL, 0x2, NULL, NULL },
    { "getListWithOrgOssPdfreporterFontAbstractFontManager:", "getList", "Ljava.util.List;", 0x8, NULL, "(Lorg/oss/pdfreporter/font/AbstractFontManager;)Ljava/util/List<Lorg/oss/pdfreporter/font/IFont;>;" },
    { "findFontWithOrgOssPdfreporterFontAbstractFontManager:withNSString:withOrgOssPdfreporterFontIFont_FontStyle:", "findFont", "Lorg.oss.pdfreporter.font.IFont;", 0x8, NULL, NULL },
    { "getLogicalFontNames", NULL, "Ljava.util.Map;", 0x8, NULL, "()Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;" },
    { "getName", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getSize", NULL, "F", 0x1, NULL, NULL },
    { "getStyle", NULL, "Lorg.oss.pdfreporter.font.IFont$FontStyle;", 0x1, NULL, NULL },
    { "getDecoration", NULL, "Lorg.oss.pdfreporter.font.IFont$FontDecoration;", 0x1, NULL, NULL },
    { "getMetric", NULL, "Lorg.oss.pdfreporter.font.IFontMetric;", 0x1, NULL, NULL },
    { "getResourcePath", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getPeer", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "getDelegate", NULL, "Lorg.oss.pdfreporter.font.IFontPeer;", 0x2, NULL, NULL },
    { "getEncoding", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "load__", "load", "V", 0x2, NULL, NULL },
    { "getFontManager", NULL, "Lorg.oss.pdfreporter.font.IFontManager;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "logger", "logger", 0x1a, "Ljava.util.logging.Logger;", &OrgOssPdfreporterFontBase14Font_logger, NULL, .constantValue.asLong = 0 },
    { "fontManager_", NULL, 0x12, "Lorg.oss.pdfreporter.font.AbstractFontManager;", NULL, NULL, .constantValue.asLong = 0 },
    { "pdfName_", NULL, 0x12, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "name_", NULL, 0x12, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "style_", NULL, 0x12, "Lorg.oss.pdfreporter.font.IFont$FontStyle;", NULL, NULL, .constantValue.asLong = 0 },
    { "delegate_", NULL, 0x2, "Lorg.oss.pdfreporter.font.IFontPeer;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterFontBase14Font = { 2, "Base14Font", "org.oss.pdfreporter.font", NULL, 0x1, 15, methods, 6, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterFontBase14Font;
}

@end

void OrgOssPdfreporterFontBase14Font_initWithOrgOssPdfreporterFontAbstractFontManager_withNSString_withNSString_withOrgOssPdfreporterFontIFont_FontStyle_(OrgOssPdfreporterFontBase14Font *self, OrgOssPdfreporterFontAbstractFontManager *fontManager, NSString *pdfName, NSString *name, OrgOssPdfreporterFontIFont_FontStyle *style) {
  NSObject_init(self);
  self->delegate_ = nil;
  self->fontManager_ = fontManager;
  self->pdfName_ = pdfName;
  self->name_ = name;
  self->style_ = style;
}

OrgOssPdfreporterFontBase14Font *new_OrgOssPdfreporterFontBase14Font_initWithOrgOssPdfreporterFontAbstractFontManager_withNSString_withNSString_withOrgOssPdfreporterFontIFont_FontStyle_(OrgOssPdfreporterFontAbstractFontManager *fontManager, NSString *pdfName, NSString *name, OrgOssPdfreporterFontIFont_FontStyle *style) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterFontBase14Font, initWithOrgOssPdfreporterFontAbstractFontManager_withNSString_withNSString_withOrgOssPdfreporterFontIFont_FontStyle_, fontManager, pdfName, name, style)
}

OrgOssPdfreporterFontBase14Font *create_OrgOssPdfreporterFontBase14Font_initWithOrgOssPdfreporterFontAbstractFontManager_withNSString_withNSString_withOrgOssPdfreporterFontIFont_FontStyle_(OrgOssPdfreporterFontAbstractFontManager *fontManager, NSString *pdfName, NSString *name, OrgOssPdfreporterFontIFont_FontStyle *style) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterFontBase14Font, initWithOrgOssPdfreporterFontAbstractFontManager_withNSString_withNSString_withOrgOssPdfreporterFontIFont_FontStyle_, fontManager, pdfName, name, style)
}

id<JavaUtilList> OrgOssPdfreporterFontBase14Font_getListWithOrgOssPdfreporterFontAbstractFontManager_(OrgOssPdfreporterFontAbstractFontManager *fontManager) {
  OrgOssPdfreporterFontBase14Font_initialize();
  id<JavaUtilList> builtInFonts = new_JavaUtilArrayList_init();
  [builtInFonts addWithId:new_OrgOssPdfreporterFontBase14Font_initWithOrgOssPdfreporterFontAbstractFontManager_withNSString_withNSString_withOrgOssPdfreporterFontIFont_FontStyle_(fontManager, OrgOssPdfreporterFontIFont_COURIER, OrgOssPdfreporterFontIFont_COURIER, JreLoadEnum(OrgOssPdfreporterFontIFont_FontStyle, PLAIN))];
  [builtInFonts addWithId:new_OrgOssPdfreporterFontBase14Font_initWithOrgOssPdfreporterFontAbstractFontManager_withNSString_withNSString_withOrgOssPdfreporterFontIFont_FontStyle_(fontManager, @"Courier-Bold", OrgOssPdfreporterFontIFont_COURIER, JreLoadEnum(OrgOssPdfreporterFontIFont_FontStyle, BOLD))];
  [builtInFonts addWithId:new_OrgOssPdfreporterFontBase14Font_initWithOrgOssPdfreporterFontAbstractFontManager_withNSString_withNSString_withOrgOssPdfreporterFontIFont_FontStyle_(fontManager, @"Courier-Oblique", OrgOssPdfreporterFontIFont_COURIER, JreLoadEnum(OrgOssPdfreporterFontIFont_FontStyle, OBLIQUE))];
  [builtInFonts addWithId:new_OrgOssPdfreporterFontBase14Font_initWithOrgOssPdfreporterFontAbstractFontManager_withNSString_withNSString_withOrgOssPdfreporterFontIFont_FontStyle_(fontManager, @"Courier-BoldOblique", OrgOssPdfreporterFontIFont_COURIER, JreLoadEnum(OrgOssPdfreporterFontIFont_FontStyle, BOLD_OBLIQUE))];
  [builtInFonts addWithId:new_OrgOssPdfreporterFontBase14Font_initWithOrgOssPdfreporterFontAbstractFontManager_withNSString_withNSString_withOrgOssPdfreporterFontIFont_FontStyle_(fontManager, OrgOssPdfreporterFontIFont_HELVETICA, OrgOssPdfreporterFontIFont_HELVETICA, JreLoadEnum(OrgOssPdfreporterFontIFont_FontStyle, PLAIN))];
  [builtInFonts addWithId:new_OrgOssPdfreporterFontBase14Font_initWithOrgOssPdfreporterFontAbstractFontManager_withNSString_withNSString_withOrgOssPdfreporterFontIFont_FontStyle_(fontManager, @"Helvetica-Bold", OrgOssPdfreporterFontIFont_HELVETICA, JreLoadEnum(OrgOssPdfreporterFontIFont_FontStyle, BOLD))];
  [builtInFonts addWithId:new_OrgOssPdfreporterFontBase14Font_initWithOrgOssPdfreporterFontAbstractFontManager_withNSString_withNSString_withOrgOssPdfreporterFontIFont_FontStyle_(fontManager, @"Helvetica-Oblique", OrgOssPdfreporterFontIFont_HELVETICA, JreLoadEnum(OrgOssPdfreporterFontIFont_FontStyle, OBLIQUE))];
  [builtInFonts addWithId:new_OrgOssPdfreporterFontBase14Font_initWithOrgOssPdfreporterFontAbstractFontManager_withNSString_withNSString_withOrgOssPdfreporterFontIFont_FontStyle_(fontManager, @"Helvetica-BoldOblique", OrgOssPdfreporterFontIFont_HELVETICA, JreLoadEnum(OrgOssPdfreporterFontIFont_FontStyle, BOLD_OBLIQUE))];
  [builtInFonts addWithId:new_OrgOssPdfreporterFontBase14Font_initWithOrgOssPdfreporterFontAbstractFontManager_withNSString_withNSString_withOrgOssPdfreporterFontIFont_FontStyle_(fontManager, OrgOssPdfreporterFontIFont_TIMES_ROMAN, OrgOssPdfreporterFontIFont_TIMES_ROMAN, JreLoadEnum(OrgOssPdfreporterFontIFont_FontStyle, PLAIN))];
  [builtInFonts addWithId:new_OrgOssPdfreporterFontBase14Font_initWithOrgOssPdfreporterFontAbstractFontManager_withNSString_withNSString_withOrgOssPdfreporterFontIFont_FontStyle_(fontManager, @"Times-Bold", OrgOssPdfreporterFontIFont_TIMES_ROMAN, JreLoadEnum(OrgOssPdfreporterFontIFont_FontStyle, BOLD))];
  [builtInFonts addWithId:new_OrgOssPdfreporterFontBase14Font_initWithOrgOssPdfreporterFontAbstractFontManager_withNSString_withNSString_withOrgOssPdfreporterFontIFont_FontStyle_(fontManager, @"Times-Italic", OrgOssPdfreporterFontIFont_TIMES_ROMAN, JreLoadEnum(OrgOssPdfreporterFontIFont_FontStyle, OBLIQUE))];
  [builtInFonts addWithId:new_OrgOssPdfreporterFontBase14Font_initWithOrgOssPdfreporterFontAbstractFontManager_withNSString_withNSString_withOrgOssPdfreporterFontIFont_FontStyle_(fontManager, @"Times-BoldItalic", OrgOssPdfreporterFontIFont_TIMES_ROMAN, JreLoadEnum(OrgOssPdfreporterFontIFont_FontStyle, BOLD_OBLIQUE))];
  [builtInFonts addWithId:new_OrgOssPdfreporterFontBase14Font_initWithOrgOssPdfreporterFontAbstractFontManager_withNSString_withNSString_withOrgOssPdfreporterFontIFont_FontStyle_(fontManager, OrgOssPdfreporterFontIFont_SYMBOL, OrgOssPdfreporterFontIFont_SYMBOL, JreLoadEnum(OrgOssPdfreporterFontIFont_FontStyle, PLAIN))];
  [builtInFonts addWithId:new_OrgOssPdfreporterFontBase14Font_initWithOrgOssPdfreporterFontAbstractFontManager_withNSString_withNSString_withOrgOssPdfreporterFontIFont_FontStyle_(fontManager, OrgOssPdfreporterFontIFont_ZAPF_DINGBATS, OrgOssPdfreporterFontIFont_ZAPF_DINGBATS, JreLoadEnum(OrgOssPdfreporterFontIFont_FontStyle, PLAIN))];
  return builtInFonts;
}

id<OrgOssPdfreporterFontIFont> OrgOssPdfreporterFontBase14Font_findFontWithOrgOssPdfreporterFontAbstractFontManager_withNSString_withOrgOssPdfreporterFontIFont_FontStyle_(OrgOssPdfreporterFontAbstractFontManager *fontManager, NSString *name, OrgOssPdfreporterFontIFont_FontStyle *style) {
  OrgOssPdfreporterFontBase14Font_initialize();
  if ([((NSString *) nil_chk(name)) equalsIgnoreCase:@"DialogInput"] || [name equalsIgnoreCase:@"Monospaced"] || [name equalsIgnoreCase:OrgOssPdfreporterFontIFont_COURIER]) {
    return [((OrgOssPdfreporterFontAbstractFontManager *) nil_chk(fontManager)) getFontWithNSString:OrgOssPdfreporterFontIFont_COURIER withOrgOssPdfreporterFontIFont_FontStyle:style];
  }
  else if ([name equalsIgnoreCase:@"Serif"] || [name equalsIgnoreCase:@"TimesRoman"]) {
    return [((OrgOssPdfreporterFontAbstractFontManager *) nil_chk(fontManager)) getFontWithNSString:OrgOssPdfreporterFontIFont_TIMES_ROMAN withOrgOssPdfreporterFontIFont_FontStyle:style];
  }
  else {
    return [((OrgOssPdfreporterFontAbstractFontManager *) nil_chk(fontManager)) getFontWithNSString:OrgOssPdfreporterFontIFont_HELVETICA withOrgOssPdfreporterFontIFont_FontStyle:style];
  }
}

id<JavaUtilMap> OrgOssPdfreporterFontBase14Font_getLogicalFontNames() {
  OrgOssPdfreporterFontBase14Font_initialize();
  id<JavaUtilMap> logicalFonts = new_JavaUtilHashMap_init();
  (void) [logicalFonts putWithId:@"DialogInput" withId:OrgOssPdfreporterFontIFont_COURIER];
  (void) [logicalFonts putWithId:@"Monospaced" withId:OrgOssPdfreporterFontIFont_COURIER];
  (void) [logicalFonts putWithId:@"Serif" withId:OrgOssPdfreporterFontIFont_TIMES_ROMAN];
  (void) [logicalFonts putWithId:@"TimesRoman" withId:OrgOssPdfreporterFontIFont_TIMES_ROMAN];
  (void) [logicalFonts putWithId:@"SansSerif" withId:OrgOssPdfreporterFontIFont_HELVETICA];
  return logicalFonts;
}

id<OrgOssPdfreporterFontIFontPeer> OrgOssPdfreporterFontBase14Font_getDelegate(OrgOssPdfreporterFontBase14Font *self) {
  OrgOssPdfreporterFontBase14Font_load__(self);
  return self->delegate_;
}

void OrgOssPdfreporterFontBase14Font_load__(OrgOssPdfreporterFontBase14Font *self) {
  if (self->delegate_ == nil) {
    [((JavaUtilLoggingLogger *) nil_chk(OrgOssPdfreporterFontBase14Font_logger)) fineWithNSString:JreStrcat("$$", @"Load Base14 font: ", self->pdfName_)];
    self->delegate_ = [((OrgOssPdfreporterFontAbstractFontManager *) nil_chk(self->fontManager_)) getFontInternalWithNSString:self->pdfName_];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterFontBase14Font)
