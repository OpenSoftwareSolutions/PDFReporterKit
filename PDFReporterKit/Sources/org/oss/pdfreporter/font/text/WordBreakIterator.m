//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-portable/src/org/oss/pdfreporter/font/text/WordBreakIterator.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/util/logging/Logger.h"
#include "org/oss/pdfreporter/font/text/WordBreakIterator.h"
#include "org/oss/pdfreporter/text/Paragraph.h"
#include "org/oss/pdfreporter/text/ParagraphText.h"

@interface OrgOssPdfreporterFontTextWordBreakIterator () {
 @public
  OrgOssPdfreporterTextParagraph *paragraph_;
}

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterFontTextWordBreakIterator, paragraph_, OrgOssPdfreporterTextParagraph *)

inline JavaUtilLoggingLogger *OrgOssPdfreporterFontTextWordBreakIterator_get_logger();
static JavaUtilLoggingLogger *OrgOssPdfreporterFontTextWordBreakIterator_logger;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterFontTextWordBreakIterator, logger, JavaUtilLoggingLogger *)

J2OBJC_INITIALIZED_DEFN(OrgOssPdfreporterFontTextWordBreakIterator)

@implementation OrgOssPdfreporterFontTextWordBreakIterator

- (void)setTextWithOrgOssPdfreporterTextParagraph:(OrgOssPdfreporterTextParagraph *)paragraph {
  self->paragraph_ = paragraph;
}

- (jint)nextWithFloat:(jfloat)wrappingWidth {
  jint charactersAdvanced = 0;
  jfloat remainingWidth = wrappingWidth;
  for (OrgOssPdfreporterTextParagraphText * __strong text in nil_chk(paragraph_)) {
    jint chars = [((OrgOssPdfreporterTextParagraphText *) nil_chk(text)) measureTextWithFloat:remainingWidth withBoolean:true];
    charactersAdvanced += chars;
    if (chars < [text getLength]) {
      break;
    }
    else {
      JreMinusAssignFloatF(&remainingWidth, [text getWidth]);
    }
  }
  [((JavaUtilLoggingLogger *) nil_chk(OrgOssPdfreporterFontTextWordBreakIterator_logger)) finestWithNSString:JreStrcat("$I", @"Characters advanced: ", charactersAdvanced)];
  return charactersAdvanced;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterFontTextWordBreakIterator_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)initialize {
  if (self == [OrgOssPdfreporterFontTextWordBreakIterator class]) {
    OrgOssPdfreporterFontTextWordBreakIterator_logger = JavaUtilLoggingLogger_getLoggerWithNSString_([OrgOssPdfreporterFontTextWordBreakIterator_class_() getName]);
    J2OBJC_SET_INITIALIZED(OrgOssPdfreporterFontTextWordBreakIterator)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "setTextWithOrgOssPdfreporterTextParagraph:", "setText", "V", 0x1, NULL, NULL },
    { "nextWithFloat:", "next", "I", 0x1, NULL, NULL },
    { "init", "WordBreakIterator", NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "logger", "logger", 0x1a, "Ljava.util.logging.Logger;", &OrgOssPdfreporterFontTextWordBreakIterator_logger, NULL, .constantValue.asLong = 0 },
    { "paragraph_", NULL, 0x2, "Lorg.oss.pdfreporter.text.Paragraph;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterFontTextWordBreakIterator = { 2, "WordBreakIterator", "org.oss.pdfreporter.font.text", NULL, 0x1, 3, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterFontTextWordBreakIterator;
}

@end

void OrgOssPdfreporterFontTextWordBreakIterator_init(OrgOssPdfreporterFontTextWordBreakIterator *self) {
  NSObject_init(self);
}

OrgOssPdfreporterFontTextWordBreakIterator *new_OrgOssPdfreporterFontTextWordBreakIterator_init() {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterFontTextWordBreakIterator, init)
}

OrgOssPdfreporterFontTextWordBreakIterator *create_OrgOssPdfreporterFontTextWordBreakIterator_init() {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterFontTextWordBreakIterator, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterFontTextWordBreakIterator)
