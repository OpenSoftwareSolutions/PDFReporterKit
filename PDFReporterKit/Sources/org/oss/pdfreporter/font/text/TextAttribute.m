//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/font/text/TextAttribute.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/Boolean.h"
#include "java/lang/Float.h"
#include "java/lang/Integer.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"
#include "org/oss/pdfreporter/font/text/TextAttribute.h"
#include "org/oss/pdfreporter/uses/java/awt/text/IAttributedCharacterIterator.h"

inline jlong OrgOssPdfreporterFontTextTextAttribute_get_serialVersionUID();
#define OrgOssPdfreporterFontTextTextAttribute_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgOssPdfreporterFontTextTextAttribute, serialVersionUID, jlong)

inline id<JavaUtilMap> OrgOssPdfreporterFontTextTextAttribute_get_instanceMap();
static id<JavaUtilMap> OrgOssPdfreporterFontTextTextAttribute_instanceMap;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterFontTextTextAttribute, instanceMap, id<JavaUtilMap>)

J2OBJC_INITIALIZED_DEFN(OrgOssPdfreporterFontTextTextAttribute)

OrgOssPdfreporterFontTextTextAttribute *OrgOssPdfreporterFontTextTextAttribute_SIZE;
OrgOssPdfreporterFontTextTextAttribute *OrgOssPdfreporterFontTextTextAttribute_FAMILY;
OrgOssPdfreporterFontTextTextAttribute *OrgOssPdfreporterFontTextTextAttribute_FONT;
OrgOssPdfreporterFontTextTextAttribute *OrgOssPdfreporterFontTextTextAttribute_FOREGROUND;
OrgOssPdfreporterFontTextTextAttribute *OrgOssPdfreporterFontTextTextAttribute_BACKGROUND;
OrgOssPdfreporterFontTextTextAttribute *OrgOssPdfreporterFontTextTextAttribute_WEIGHT;
JavaLangFloat *OrgOssPdfreporterFontTextTextAttribute_WEIGHT_BOLD;
JavaLangFloat *OrgOssPdfreporterFontTextTextAttribute_WEIGHT_REGULAR;
OrgOssPdfreporterFontTextTextAttribute *OrgOssPdfreporterFontTextTextAttribute_POSTURE;
JavaLangFloat *OrgOssPdfreporterFontTextTextAttribute_POSTURE_OBLIQUE;
JavaLangFloat *OrgOssPdfreporterFontTextTextAttribute_POSTURE_REGULAR;
OrgOssPdfreporterFontTextTextAttribute *OrgOssPdfreporterFontTextTextAttribute_UNDERLINE;
JavaLangInteger *OrgOssPdfreporterFontTextTextAttribute_UNDERLINE_ON;
OrgOssPdfreporterFontTextTextAttribute *OrgOssPdfreporterFontTextTextAttribute_SUPERSCRIPT;
JavaLangInteger *OrgOssPdfreporterFontTextTextAttribute_SUPERSCRIPT_SUPER;
JavaLangInteger *OrgOssPdfreporterFontTextTextAttribute_SUPERSCRIPT_SUB;
OrgOssPdfreporterFontTextTextAttribute *OrgOssPdfreporterFontTextTextAttribute_STRIKETHROUGH;
JavaLangBoolean *OrgOssPdfreporterFontTextTextAttribute_STRIKETHROUGH_ON;

@implementation OrgOssPdfreporterFontTextTextAttribute

+ (OrgOssPdfreporterFontTextTextAttribute *)SIZE {
  return OrgOssPdfreporterFontTextTextAttribute_SIZE;
}

+ (OrgOssPdfreporterFontTextTextAttribute *)FAMILY {
  return OrgOssPdfreporterFontTextTextAttribute_FAMILY;
}

+ (OrgOssPdfreporterFontTextTextAttribute *)FONT {
  return OrgOssPdfreporterFontTextTextAttribute_FONT;
}

+ (OrgOssPdfreporterFontTextTextAttribute *)FOREGROUND {
  return OrgOssPdfreporterFontTextTextAttribute_FOREGROUND;
}

+ (OrgOssPdfreporterFontTextTextAttribute *)BACKGROUND {
  return OrgOssPdfreporterFontTextTextAttribute_BACKGROUND;
}

+ (OrgOssPdfreporterFontTextTextAttribute *)WEIGHT {
  return OrgOssPdfreporterFontTextTextAttribute_WEIGHT;
}

+ (JavaLangFloat *)WEIGHT_BOLD {
  return OrgOssPdfreporterFontTextTextAttribute_WEIGHT_BOLD;
}

+ (JavaLangFloat *)WEIGHT_REGULAR {
  return OrgOssPdfreporterFontTextTextAttribute_WEIGHT_REGULAR;
}

+ (OrgOssPdfreporterFontTextTextAttribute *)POSTURE {
  return OrgOssPdfreporterFontTextTextAttribute_POSTURE;
}

+ (JavaLangFloat *)POSTURE_OBLIQUE {
  return OrgOssPdfreporterFontTextTextAttribute_POSTURE_OBLIQUE;
}

+ (JavaLangFloat *)POSTURE_REGULAR {
  return OrgOssPdfreporterFontTextTextAttribute_POSTURE_REGULAR;
}

+ (OrgOssPdfreporterFontTextTextAttribute *)UNDERLINE {
  return OrgOssPdfreporterFontTextTextAttribute_UNDERLINE;
}

+ (JavaLangInteger *)UNDERLINE_ON {
  return OrgOssPdfreporterFontTextTextAttribute_UNDERLINE_ON;
}

+ (OrgOssPdfreporterFontTextTextAttribute *)SUPERSCRIPT {
  return OrgOssPdfreporterFontTextTextAttribute_SUPERSCRIPT;
}

+ (JavaLangInteger *)SUPERSCRIPT_SUPER {
  return OrgOssPdfreporterFontTextTextAttribute_SUPERSCRIPT_SUPER;
}

+ (JavaLangInteger *)SUPERSCRIPT_SUB {
  return OrgOssPdfreporterFontTextTextAttribute_SUPERSCRIPT_SUB;
}

+ (OrgOssPdfreporterFontTextTextAttribute *)STRIKETHROUGH {
  return OrgOssPdfreporterFontTextTextAttribute_STRIKETHROUGH;
}

+ (JavaLangBoolean *)STRIKETHROUGH_ON {
  return OrgOssPdfreporterFontTextTextAttribute_STRIKETHROUGH_ON;
}

- (instancetype)initWithNSString:(NSString *)name {
  OrgOssPdfreporterFontTextTextAttribute_initWithNSString_(self, name);
  return self;
}

+ (void)initialize {
  if (self == [OrgOssPdfreporterFontTextTextAttribute class]) {
    OrgOssPdfreporterFontTextTextAttribute_instanceMap = new_JavaUtilHashMap_initWithInt_(9);
    OrgOssPdfreporterFontTextTextAttribute_SIZE = new_OrgOssPdfreporterFontTextTextAttribute_initWithNSString_(@"size");
    OrgOssPdfreporterFontTextTextAttribute_FAMILY = new_OrgOssPdfreporterFontTextTextAttribute_initWithNSString_(@"family");
    OrgOssPdfreporterFontTextTextAttribute_FONT = new_OrgOssPdfreporterFontTextTextAttribute_initWithNSString_(@"font");
    OrgOssPdfreporterFontTextTextAttribute_FOREGROUND = new_OrgOssPdfreporterFontTextTextAttribute_initWithNSString_(@"foreground");
    OrgOssPdfreporterFontTextTextAttribute_BACKGROUND = new_OrgOssPdfreporterFontTextTextAttribute_initWithNSString_(@"background");
    OrgOssPdfreporterFontTextTextAttribute_WEIGHT = new_OrgOssPdfreporterFontTextTextAttribute_initWithNSString_(@"weight");
    OrgOssPdfreporterFontTextTextAttribute_WEIGHT_BOLD = JavaLangFloat_valueOfWithFloat_(2.0f);
    OrgOssPdfreporterFontTextTextAttribute_WEIGHT_REGULAR = JavaLangFloat_valueOfWithFloat_(1.0f);
    OrgOssPdfreporterFontTextTextAttribute_POSTURE = new_OrgOssPdfreporterFontTextTextAttribute_initWithNSString_(@"posture");
    OrgOssPdfreporterFontTextTextAttribute_POSTURE_OBLIQUE = JavaLangFloat_valueOfWithFloat_(0.20f);
    OrgOssPdfreporterFontTextTextAttribute_POSTURE_REGULAR = JavaLangFloat_valueOfWithFloat_(0.0f);
    OrgOssPdfreporterFontTextTextAttribute_UNDERLINE = new_OrgOssPdfreporterFontTextTextAttribute_initWithNSString_(@"underline");
    OrgOssPdfreporterFontTextTextAttribute_UNDERLINE_ON = JavaLangInteger_valueOfWithInt_(0);
    OrgOssPdfreporterFontTextTextAttribute_SUPERSCRIPT = new_OrgOssPdfreporterFontTextTextAttribute_initWithNSString_(@"superscript");
    OrgOssPdfreporterFontTextTextAttribute_SUPERSCRIPT_SUPER = JavaLangInteger_valueOfWithInt_(1);
    OrgOssPdfreporterFontTextTextAttribute_SUPERSCRIPT_SUB = JavaLangInteger_valueOfWithInt_(-1);
    OrgOssPdfreporterFontTextTextAttribute_STRIKETHROUGH = new_OrgOssPdfreporterFontTextTextAttribute_initWithNSString_(@"strikethrough");
    OrgOssPdfreporterFontTextTextAttribute_STRIKETHROUGH_ON = JreLoadStatic(JavaLangBoolean, TRUE);
    J2OBJC_SET_INITIALIZED(OrgOssPdfreporterFontTextTextAttribute)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:", "TextAttribute", NULL, 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "serialVersionUID", 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgOssPdfreporterFontTextTextAttribute_serialVersionUID },
    { "instanceMap", "instanceMap", 0x1a, "Ljava.util.Map;", &OrgOssPdfreporterFontTextTextAttribute_instanceMap, "Ljava/util/Map<Ljava/lang/String;Lorg/oss/pdfreporter/font/text/TextAttribute;>;", .constantValue.asLong = 0 },
    { "SIZE", "SIZE", 0x19, "Lorg.oss.pdfreporter.font.text.TextAttribute;", &OrgOssPdfreporterFontTextTextAttribute_SIZE, NULL, .constantValue.asLong = 0 },
    { "FAMILY", "FAMILY", 0x19, "Lorg.oss.pdfreporter.font.text.TextAttribute;", &OrgOssPdfreporterFontTextTextAttribute_FAMILY, NULL, .constantValue.asLong = 0 },
    { "FONT", "FONT", 0x19, "Lorg.oss.pdfreporter.font.text.TextAttribute;", &OrgOssPdfreporterFontTextTextAttribute_FONT, NULL, .constantValue.asLong = 0 },
    { "FOREGROUND", "FOREGROUND", 0x19, "Lorg.oss.pdfreporter.font.text.TextAttribute;", &OrgOssPdfreporterFontTextTextAttribute_FOREGROUND, NULL, .constantValue.asLong = 0 },
    { "BACKGROUND", "BACKGROUND", 0x19, "Lorg.oss.pdfreporter.font.text.TextAttribute;", &OrgOssPdfreporterFontTextTextAttribute_BACKGROUND, NULL, .constantValue.asLong = 0 },
    { "WEIGHT", "WEIGHT", 0x19, "Lorg.oss.pdfreporter.font.text.TextAttribute;", &OrgOssPdfreporterFontTextTextAttribute_WEIGHT, NULL, .constantValue.asLong = 0 },
    { "WEIGHT_BOLD", "WEIGHT_BOLD", 0x19, "Ljava.lang.Float;", &OrgOssPdfreporterFontTextTextAttribute_WEIGHT_BOLD, NULL, .constantValue.asLong = 0 },
    { "WEIGHT_REGULAR", "WEIGHT_REGULAR", 0x19, "Ljava.lang.Float;", &OrgOssPdfreporterFontTextTextAttribute_WEIGHT_REGULAR, NULL, .constantValue.asLong = 0 },
    { "POSTURE", "POSTURE", 0x19, "Lorg.oss.pdfreporter.font.text.TextAttribute;", &OrgOssPdfreporterFontTextTextAttribute_POSTURE, NULL, .constantValue.asLong = 0 },
    { "POSTURE_OBLIQUE", "POSTURE_OBLIQUE", 0x19, "Ljava.lang.Float;", &OrgOssPdfreporterFontTextTextAttribute_POSTURE_OBLIQUE, NULL, .constantValue.asLong = 0 },
    { "POSTURE_REGULAR", "POSTURE_REGULAR", 0x19, "Ljava.lang.Float;", &OrgOssPdfreporterFontTextTextAttribute_POSTURE_REGULAR, NULL, .constantValue.asLong = 0 },
    { "UNDERLINE", "UNDERLINE", 0x19, "Lorg.oss.pdfreporter.font.text.TextAttribute;", &OrgOssPdfreporterFontTextTextAttribute_UNDERLINE, NULL, .constantValue.asLong = 0 },
    { "UNDERLINE_ON", "UNDERLINE_ON", 0x19, "Ljava.lang.Integer;", &OrgOssPdfreporterFontTextTextAttribute_UNDERLINE_ON, NULL, .constantValue.asLong = 0 },
    { "SUPERSCRIPT", "SUPERSCRIPT", 0x19, "Lorg.oss.pdfreporter.font.text.TextAttribute;", &OrgOssPdfreporterFontTextTextAttribute_SUPERSCRIPT, NULL, .constantValue.asLong = 0 },
    { "SUPERSCRIPT_SUPER", "SUPERSCRIPT_SUPER", 0x19, "Ljava.lang.Integer;", &OrgOssPdfreporterFontTextTextAttribute_SUPERSCRIPT_SUPER, NULL, .constantValue.asLong = 0 },
    { "SUPERSCRIPT_SUB", "SUPERSCRIPT_SUB", 0x19, "Ljava.lang.Integer;", &OrgOssPdfreporterFontTextTextAttribute_SUPERSCRIPT_SUB, NULL, .constantValue.asLong = 0 },
    { "STRIKETHROUGH", "STRIKETHROUGH", 0x19, "Lorg.oss.pdfreporter.font.text.TextAttribute;", &OrgOssPdfreporterFontTextTextAttribute_STRIKETHROUGH, NULL, .constantValue.asLong = 0 },
    { "STRIKETHROUGH_ON", "STRIKETHROUGH_ON", 0x19, "Ljava.lang.Boolean;", &OrgOssPdfreporterFontTextTextAttribute_STRIKETHROUGH_ON, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterFontTextTextAttribute = { 2, "TextAttribute", "org.oss.pdfreporter.font.text", NULL, 0x1, 1, methods, 20, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterFontTextTextAttribute;
}

@end

void OrgOssPdfreporterFontTextTextAttribute_initWithNSString_(OrgOssPdfreporterFontTextTextAttribute *self, NSString *name) {
  OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator_Attribute_initWithNSString_(self, name);
  if ([self getClass] == (id) OrgOssPdfreporterFontTextTextAttribute_class_()) {
    (void) [((id<JavaUtilMap>) nil_chk(OrgOssPdfreporterFontTextTextAttribute_instanceMap)) putWithId:name withId:self];
  }
}

OrgOssPdfreporterFontTextTextAttribute *new_OrgOssPdfreporterFontTextTextAttribute_initWithNSString_(NSString *name) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterFontTextTextAttribute, initWithNSString_, name)
}

OrgOssPdfreporterFontTextTextAttribute *create_OrgOssPdfreporterFontTextTextAttribute_initWithNSString_(NSString *name) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterFontTextTextAttribute, initWithNSString_, name)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterFontTextTextAttribute)
