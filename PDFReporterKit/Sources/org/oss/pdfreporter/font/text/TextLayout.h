//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-portable/src/org/oss/pdfreporter/font/text/TextLayout.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgOssPdfreporterFontTextTextLayout")
#ifdef RESTRICT_OrgOssPdfreporterFontTextTextLayout
#define INCLUDE_ALL_OrgOssPdfreporterFontTextTextLayout 0
#else
#define INCLUDE_ALL_OrgOssPdfreporterFontTextTextLayout 1
#endif
#undef RESTRICT_OrgOssPdfreporterFontTextTextLayout

#if !defined (OrgOssPdfreporterFontTextTextLayout_) && (INCLUDE_ALL_OrgOssPdfreporterFontTextTextLayout || defined(INCLUDE_OrgOssPdfreporterFontTextTextLayout))
#define OrgOssPdfreporterFontTextTextLayout_

#define RESTRICT_OrgOssPdfreporterFontTextITextLayout 1
#define INCLUDE_OrgOssPdfreporterFontTextITextLayout 1
#include "org/oss/pdfreporter/font/text/ITextLayout.h"

@class OrgOssPdfreporterTextParagraph;

@interface OrgOssPdfreporterFontTextTextLayout : NSObject < OrgOssPdfreporterFontTextITextLayout >

#pragma mark Public

- (jfloat)getAdvance;

- (jfloat)getAscent;

- (jint)getCharacterCount;

- (jfloat)getDescent;

- (id<OrgOssPdfreporterFontTextITextLayout>)getJustifiedLayoutWithFloat:(jfloat)justificationWidth;

- (jfloat)getLeading;

- (OrgOssPdfreporterTextParagraph *)getParagraph;

- (jfloat)getVisibleAdvance;

- (jboolean)isLeftToRight;

#pragma mark Package-Private

- (instancetype)initWithOrgOssPdfreporterTextParagraph:(OrgOssPdfreporterTextParagraph *)paragraph
                                               withInt:(jint)characterCount;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgOssPdfreporterFontTextTextLayout)

FOUNDATION_EXPORT void OrgOssPdfreporterFontTextTextLayout_initWithOrgOssPdfreporterTextParagraph_withInt_(OrgOssPdfreporterFontTextTextLayout *self, OrgOssPdfreporterTextParagraph *paragraph, jint characterCount);

FOUNDATION_EXPORT OrgOssPdfreporterFontTextTextLayout *new_OrgOssPdfreporterFontTextTextLayout_initWithOrgOssPdfreporterTextParagraph_withInt_(OrgOssPdfreporterTextParagraph *paragraph, jint characterCount) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgOssPdfreporterFontTextTextLayout *create_OrgOssPdfreporterFontTextTextLayout_initWithOrgOssPdfreporterTextParagraph_withInt_(OrgOssPdfreporterTextParagraph *paragraph, jint characterCount);

J2OBJC_TYPE_LITERAL_HEADER(OrgOssPdfreporterFontTextTextLayout)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgOssPdfreporterFontTextTextLayout")
