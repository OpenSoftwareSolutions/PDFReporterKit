//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/font/DecoratedFont.java
//

#include "J2ObjC_source.h"
#include "org/oss/pdfreporter/font/DecoratedFont.h"
#include "org/oss/pdfreporter/font/IFont.h"
#include "org/oss/pdfreporter/font/IFontManager.h"
#include "org/oss/pdfreporter/font/IFontMetric.h"
#include "org/oss/pdfreporter/font/ScaledFontMetric.h"

@interface OrgOssPdfreporterFontDecoratedFont () {
 @public
  id<OrgOssPdfreporterFontIFont> delegate_;
  OrgOssPdfreporterFontIFont_FontDecoration *decoration_;
  jfloat size_;
}

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterFontDecoratedFont, delegate_, id<OrgOssPdfreporterFontIFont>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterFontDecoratedFont, decoration_, OrgOssPdfreporterFontIFont_FontDecoration *)

@implementation OrgOssPdfreporterFontDecoratedFont

- (instancetype)initWithOrgOssPdfreporterFontIFont:(id<OrgOssPdfreporterFontIFont>)delegate
                                         withFloat:(jfloat)size
     withOrgOssPdfreporterFontIFont_FontDecoration:(OrgOssPdfreporterFontIFont_FontDecoration *)decoration {
  OrgOssPdfreporterFontDecoratedFont_initWithOrgOssPdfreporterFontIFont_withFloat_withOrgOssPdfreporterFontIFont_FontDecoration_(self, delegate, size, decoration);
  return self;
}

- (NSString *)getName {
  return [((id<OrgOssPdfreporterFontIFont>) nil_chk(delegate_)) getName];
}

- (jfloat)getSize {
  return size_;
}

- (OrgOssPdfreporterFontIFont_FontStyle *)getStyle {
  return [((id<OrgOssPdfreporterFontIFont>) nil_chk(delegate_)) getStyle];
}

- (OrgOssPdfreporterFontIFont_FontDecoration *)getDecoration {
  return decoration_;
}

- (id<OrgOssPdfreporterFontIFontMetric>)getMetric {
  id<OrgOssPdfreporterFontIFontMetric> fm = [((id<OrgOssPdfreporterFontIFont>) nil_chk(delegate_)) getMetric];
  if ([delegate_ getSize] != size_) {
    fm = new_OrgOssPdfreporterFontScaledFontMetric_initWithOrgOssPdfreporterFontIFontMetric_withFloat_([delegate_ getMetric], size_ / [delegate_ getSize]);
  }
  return fm;
}

- (NSString *)getResourcePath {
  return [((id<OrgOssPdfreporterFontIFont>) nil_chk(delegate_)) getResourcePath];
}

- (id)getPeer {
  return [((id<OrgOssPdfreporterFontIFont>) nil_chk(delegate_)) getPeer];
}

- (NSString *)getEncoding {
  return [((id<OrgOssPdfreporterFontIFont>) nil_chk(delegate_)) getEncoding];
}

- (id<OrgOssPdfreporterFontIFontManager>)getFontManager {
  return [((id<OrgOssPdfreporterFontIFont>) nil_chk(delegate_)) getFontManager];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgOssPdfreporterFontIFont:withFloat:withOrgOssPdfreporterFontIFont_FontDecoration:", "DecoratedFont", NULL, 0x0, NULL, NULL },
    { "getName", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getSize", NULL, "F", 0x1, NULL, NULL },
    { "getStyle", NULL, "Lorg.oss.pdfreporter.font.IFont$FontStyle;", 0x1, NULL, NULL },
    { "getDecoration", NULL, "Lorg.oss.pdfreporter.font.IFont$FontDecoration;", 0x1, NULL, NULL },
    { "getMetric", NULL, "Lorg.oss.pdfreporter.font.IFontMetric;", 0x1, NULL, NULL },
    { "getResourcePath", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getPeer", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "getEncoding", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getFontManager", NULL, "Lorg.oss.pdfreporter.font.IFontManager;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "delegate_", NULL, 0x12, "Lorg.oss.pdfreporter.font.IFont;", NULL, NULL, .constantValue.asLong = 0 },
    { "decoration_", NULL, 0x12, "Lorg.oss.pdfreporter.font.IFont$FontDecoration;", NULL, NULL, .constantValue.asLong = 0 },
    { "size_", NULL, 0x12, "F", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterFontDecoratedFont = { 2, "DecoratedFont", "org.oss.pdfreporter.font", NULL, 0x1, 10, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterFontDecoratedFont;
}

@end

void OrgOssPdfreporterFontDecoratedFont_initWithOrgOssPdfreporterFontIFont_withFloat_withOrgOssPdfreporterFontIFont_FontDecoration_(OrgOssPdfreporterFontDecoratedFont *self, id<OrgOssPdfreporterFontIFont> delegate, jfloat size, OrgOssPdfreporterFontIFont_FontDecoration *decoration) {
  NSObject_init(self);
  self->delegate_ = delegate;
  self->size_ = size;
  self->decoration_ = decoration;
}

OrgOssPdfreporterFontDecoratedFont *new_OrgOssPdfreporterFontDecoratedFont_initWithOrgOssPdfreporterFontIFont_withFloat_withOrgOssPdfreporterFontIFont_FontDecoration_(id<OrgOssPdfreporterFontIFont> delegate, jfloat size, OrgOssPdfreporterFontIFont_FontDecoration *decoration) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterFontDecoratedFont, initWithOrgOssPdfreporterFontIFont_withFloat_withOrgOssPdfreporterFontIFont_FontDecoration_, delegate, size, decoration)
}

OrgOssPdfreporterFontDecoratedFont *create_OrgOssPdfreporterFontDecoratedFont_initWithOrgOssPdfreporterFontIFont_withFloat_withOrgOssPdfreporterFontIFont_FontDecoration_(id<OrgOssPdfreporterFontIFont> delegate, jfloat size, OrgOssPdfreporterFontIFont_FontDecoration *decoration) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterFontDecoratedFont, initWithOrgOssPdfreporterFontIFont_withFloat_withOrgOssPdfreporterFontIFont_FontDecoration_, delegate, size, decoration)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterFontDecoratedFont)
