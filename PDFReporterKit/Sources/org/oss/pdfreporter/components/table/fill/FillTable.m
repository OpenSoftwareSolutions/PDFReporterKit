//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/components/table/fill/FillTable.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/io/Serializable.h"
#include "java/lang/Boolean.h"
#include "java/lang/Integer.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/HashMap.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/logging/Level.h"
#include "java/util/logging/Logger.h"
#include "org/oss/pdfreporter/components/table/BaseColumn.h"
#include "org/oss/pdfreporter/components/table/Column.h"
#include "org/oss/pdfreporter/components/table/ColumnGroup.h"
#include "org/oss/pdfreporter/components/table/TableComponent.h"
#include "org/oss/pdfreporter/components/table/fill/DatasetCloneObjectFactory.h"
#include "org/oss/pdfreporter/components/table/fill/FillColumn.h"
#include "org/oss/pdfreporter/components/table/fill/FillTable.h"
#include "org/oss/pdfreporter/components/table/fill/FillTableSubreport.h"
#include "org/oss/pdfreporter/components/table/fill/TableJasperReport.h"
#include "org/oss/pdfreporter/components/table/fill/TableReport.h"
#include "org/oss/pdfreporter/components/table/fill/TableReportBaseObjectFactory.h"
#include "org/oss/pdfreporter/components/table/fill/TableReportCompileData.h"
#include "org/oss/pdfreporter/components/table/fill/TableReportDataset.h"
#include "org/oss/pdfreporter/components/table/fill/TableSubreport.h"
#include "org/oss/pdfreporter/engine/JRComponentElement.h"
#include "org/oss/pdfreporter/engine/JRDataset.h"
#include "org/oss/pdfreporter/engine/JRDatasetRun.h"
#include "org/oss/pdfreporter/engine/JRDefaultStyleProvider.h"
#include "org/oss/pdfreporter/engine/JRException.h"
#include "org/oss/pdfreporter/engine/JRExpression.h"
#include "org/oss/pdfreporter/engine/JRLineBox.h"
#include "org/oss/pdfreporter/engine/JROrigin.h"
#include "org/oss/pdfreporter/engine/JRPrintElement.h"
#include "org/oss/pdfreporter/engine/JRPropertiesMap.h"
#include "org/oss/pdfreporter/engine/JRPropertyExpression.h"
#include "org/oss/pdfreporter/engine/JRRuntimeException.h"
#include "org/oss/pdfreporter/engine/JRStyle.h"
#include "org/oss/pdfreporter/engine/JasperReport.h"
#include "org/oss/pdfreporter/engine/component/BaseFillComponent.h"
#include "org/oss/pdfreporter/engine/component/FillContext.h"
#include "org/oss/pdfreporter/engine/component/FillPrepareResult.h"
#include "org/oss/pdfreporter/engine/design/JRAbstractCompiler.h"
#include "org/oss/pdfreporter/engine/design/JRReportCompileData.h"
#include "org/oss/pdfreporter/engine/fill/IJRBaseFiller.h"
#include "org/oss/pdfreporter/engine/fill/JRFillObjectFactory.h"
#include "org/oss/pdfreporter/engine/fill/JRTemplateFrame.h"
#include "org/oss/pdfreporter/engine/fill/JRTemplatePrintFrame.h"
#include "org/oss/pdfreporter/engine/util/JRReportUtils.h"
#include "org/oss/pdfreporter/uses/java/util/UUID.h"

@interface OrgOssPdfreporterComponentsTableFillFillTable () {
 @public
  id<OrgOssPdfreporterComponentsTableTableComponent> table_;
  OrgOssPdfreporterEngineFillJRFillObjectFactory *factory_;
  id<JavaUtilMap> fillSubreports_;
  OrgOssPdfreporterComponentsTableFillFillTableSubreport *fillSubreport_;
  jboolean filling_;
  id<JavaUtilList> fillColumns_;
  jint fillWidth_;
  id<JavaUtilMap> printFrameTemplates_;
}

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterComponentsTableFillFillTable, table_, id<OrgOssPdfreporterComponentsTableTableComponent>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterComponentsTableFillFillTable, factory_, OrgOssPdfreporterEngineFillJRFillObjectFactory *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterComponentsTableFillFillTable, fillSubreports_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterComponentsTableFillFillTable, fillSubreport_, OrgOssPdfreporterComponentsTableFillFillTableSubreport *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterComponentsTableFillFillTable, fillColumns_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterComponentsTableFillFillTable, printFrameTemplates_, id<JavaUtilMap>)

inline JavaUtilLoggingLogger *OrgOssPdfreporterComponentsTableFillFillTable_get_log();
static JavaUtilLoggingLogger *OrgOssPdfreporterComponentsTableFillFillTable_log;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterComponentsTableFillFillTable, log, JavaUtilLoggingLogger *)

@interface OrgOssPdfreporterComponentsTableFillFillTable_FillColumnEvaluator () {
 @public
  OrgOssPdfreporterComponentsTableFillFillTable *this$0_;
}

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterComponentsTableFillFillTable_FillColumnEvaluator, this$0_, OrgOssPdfreporterComponentsTableFillFillTable *)

J2OBJC_INITIALIZED_DEFN(OrgOssPdfreporterComponentsTableFillFillTable)

@implementation OrgOssPdfreporterComponentsTableFillFillTable

- (instancetype)initWithOrgOssPdfreporterComponentsTableTableComponent:(id<OrgOssPdfreporterComponentsTableTableComponent>)table
                    withOrgOssPdfreporterEngineFillJRFillObjectFactory:(OrgOssPdfreporterEngineFillJRFillObjectFactory *)factory {
  OrgOssPdfreporterComponentsTableFillFillTable_initWithOrgOssPdfreporterComponentsTableTableComponent_withOrgOssPdfreporterEngineFillJRFillObjectFactory_(self, table, factory);
  return self;
}

- (void)evaluateWithByte:(jbyte)evaluation {
  if (filling_) {
    [((JavaUtilLoggingLogger *) nil_chk(OrgOssPdfreporterComponentsTableFillFillTable_log)) warningWithNSString:@"Table fill did not complete, canceling previous table subreport"];
    [((OrgOssPdfreporterComponentsTableFillFillTableSubreport *) nil_chk(fillSubreport_)) cancelSubreportFill];
  }
  filling_ = false;
  [self evaluateColumnsWithByte:evaluation];
  if (![((id<JavaUtilList>) nil_chk(fillColumns_)) isEmpty]) {
    [self createFillSubreport];
    [((OrgOssPdfreporterComponentsTableFillFillTableSubreport *) nil_chk(fillSubreport_)) evaluateSubreportWithByte:evaluation];
  }
}

- (jboolean)toPrintColumnWithOrgOssPdfreporterComponentsTableBaseColumn:(id<OrgOssPdfreporterComponentsTableBaseColumn>)column
                                                               withByte:(jbyte)evaluation {
  jboolean toPrint;
  id<OrgOssPdfreporterEngineJRExpression> printWhenExpression = [((id<OrgOssPdfreporterComponentsTableBaseColumn>) nil_chk(column)) getPrintWhenExpression];
  if (printWhenExpression == nil) {
    toPrint = true;
  }
  else {
    JavaLangBoolean *printWhenVal = (JavaLangBoolean *) cast_chk([self evaluateExpressionWithOrgOssPdfreporterEngineJRExpression:printWhenExpression withByte:evaluation], [JavaLangBoolean class]);
    if (printWhenVal == nil) {
      toPrint = false;
    }
    else {
      toPrint = [printWhenVal booleanValue];
    }
  }
  return toPrint;
}

- (OrgOssPdfreporterEngineJRPropertiesMap *)evaluatePropertiesWithOrgOssPdfreporterComponentsTableBaseColumn:(id<OrgOssPdfreporterComponentsTableBaseColumn>)column
                                                                                                    withByte:(jbyte)evaluation {
  OrgOssPdfreporterEngineJRPropertiesMap *staticProperties = [((id<OrgOssPdfreporterComponentsTableBaseColumn>) nil_chk(column)) hasProperties] ? [((OrgOssPdfreporterEngineJRPropertiesMap *) nil_chk([column getPropertiesMap])) cloneProperties] : nil;
  OrgOssPdfreporterEngineJRPropertiesMap *mergedProperties = nil;
  IOSObjectArray *propExprs = [column getPropertyExpressions];
  if (propExprs == nil || propExprs->size_ == 0) {
    mergedProperties = staticProperties;
  }
  else {
    OrgOssPdfreporterEngineJRPropertiesMap *dynamicProperties = new_OrgOssPdfreporterEngineJRPropertiesMap_init();
    for (jint i = 0; i < propExprs->size_; i++) {
      id<OrgOssPdfreporterEngineJRPropertyExpression> prop = IOSObjectArray_Get(propExprs, i);
      NSString *value = (NSString *) cast_chk([self evaluateExpressionWithOrgOssPdfreporterEngineJRExpression:[((id<OrgOssPdfreporterEngineJRPropertyExpression>) nil_chk(prop)) getValueExpression] withByte:evaluation], [NSString class]);
      if (value != nil) {
        [dynamicProperties setPropertyWithNSString:[prop getName] withNSString:value];
      }
    }
    mergedProperties = [dynamicProperties cloneProperties];
    [((OrgOssPdfreporterEngineJRPropertiesMap *) nil_chk(mergedProperties)) setBasePropertiesWithOrgOssPdfreporterEngineJRPropertiesMap:staticProperties];
  }
  return mergedProperties;
}

- (void)evaluateColumnsWithByte:(jbyte)evaluation {
  OrgOssPdfreporterComponentsTableFillFillTable_FillColumnEvaluator *columnEvaluator = new_OrgOssPdfreporterComponentsTableFillFillTable_FillColumnEvaluator_initWithOrgOssPdfreporterComponentsTableFillFillTable_withByte_(self, evaluation);
  id<JavaUtilList> columns = [((id<OrgOssPdfreporterComponentsTableTableComponent>) nil_chk(table_)) getColumns];
  fillColumns_ = new_JavaUtilArrayList_initWithInt_([((id<JavaUtilList>) nil_chk(columns)) size]);
  fillWidth_ = 0;
  for (id<OrgOssPdfreporterComponentsTableBaseColumn> __strong column in columns) {
    OrgOssPdfreporterComponentsTableFillFillColumn *fillColumn = [((id<OrgOssPdfreporterComponentsTableBaseColumn>) nil_chk(column)) visitColumnWithOrgOssPdfreporterComponentsTableColumnVisitor:columnEvaluator];
    if (fillColumn != nil) {
      [((id<JavaUtilList>) nil_chk(fillColumns_)) addWithId:fillColumn];
      fillWidth_ += [fillColumn getWidth];
    }
  }
}

- (void)createFillSubreport {
  fillSubreport_ = [((id<JavaUtilMap>) nil_chk(fillSubreports_)) getWithId:fillColumns_];
  if (fillSubreport_ == nil) {
    fillSubreport_ = [self createFillTableSubreport];
    (void) [fillSubreports_ putWithId:fillColumns_ withId:fillSubreport_];
  }
}

- (OrgOssPdfreporterComponentsTableFillFillTableSubreport *)createFillTableSubreport {
  OrgOssPdfreporterEngineJasperReport *parentReport = [((id<OrgOssPdfreporterEngineFillIJRBaseFiller>) nil_chk([((id<OrgOssPdfreporterEngineComponentFillContext>) nil_chk(fillContext_)) getFiller])) getJasperReport];
  id<OrgOssPdfreporterEngineJRDataset> reportSubdataset = OrgOssPdfreporterEngineUtilJRReportUtils_findSubdatasetWithOrgOssPdfreporterEngineJRDatasetRun_withOrgOssPdfreporterEngineJasperReport_([((id<OrgOssPdfreporterComponentsTableTableComponent>) nil_chk(table_)) getDatasetRun], parentReport);
  id<JavaUtilMap> builtinEvaluators = new_JavaUtilHashMap_init();
  NSString *tableReportName = OrgOssPdfreporterEngineDesignJRAbstractCompiler_getUnitNameWithOrgOssPdfreporterEngineJasperReport_withOrgOssPdfreporterEngineJRDataset_(parentReport, reportSubdataset);
  id<OrgOssPdfreporterEngineJRDataset> tableSubdataset = OrgOssPdfreporterComponentsTableFillDatasetCloneObjectFactory_cloneDatasetWithOrgOssPdfreporterEngineJRDataset_(reportSubdataset);
  OrgOssPdfreporterComponentsTableFillTableReportDataset *reportDataset = new_OrgOssPdfreporterComponentsTableFillTableReportDataset_initWithOrgOssPdfreporterEngineJRDataset_withNSString_(tableSubdataset, tableReportName);
  OrgOssPdfreporterComponentsTableFillTableReport *tableReport = new_OrgOssPdfreporterComponentsTableFillTableReport_initWithOrgOssPdfreporterEngineComponentFillContext_withOrgOssPdfreporterComponentsTableTableComponent_withOrgOssPdfreporterComponentsTableFillTableReportDataset_withJavaUtilList_withJavaUtilMap_(fillContext_, table_, reportDataset, fillColumns_, builtinEvaluators);
  if ([((JavaUtilLoggingLogger *) nil_chk(OrgOssPdfreporterComponentsTableFillFillTable_log)) isLoggableWithJavaUtilLoggingLevel:JreLoadStatic(JavaUtilLoggingLevel, FINEST)]) {
    [OrgOssPdfreporterComponentsTableFillFillTable_log warningWithNSString:@"JRXmlWriter ist not implemented"];
  }
  OrgOssPdfreporterEngineDesignJRReportCompileData *tableReportCompileData = [self createTableReportCompileDataWithOrgOssPdfreporterEngineJasperReport:parentReport withOrgOssPdfreporterEngineJRDataset:reportSubdataset];
  OrgOssPdfreporterComponentsTableFillTableJasperReport *compiledTableReport = new_OrgOssPdfreporterComponentsTableFillTableJasperReport_initWithOrgOssPdfreporterEngineJasperReport_withOrgOssPdfreporterEngineJRReport_withJavaIoSerializable_withOrgOssPdfreporterEngineBaseJRBaseObjectFactory_withNSString_(parentReport, tableReport, tableReportCompileData, new_OrgOssPdfreporterComponentsTableFillTableReportBaseObjectFactory_initWithOrgOssPdfreporterComponentsTableFillTableReportDataset_(reportDataset), @"");
  OrgOssPdfreporterComponentsTableFillTableSubreport *subreport = new_OrgOssPdfreporterComponentsTableFillTableSubreport_initWithOrgOssPdfreporterEngineJRDatasetRun_withOrgOssPdfreporterEngineComponentFillContext_([table_ getDatasetRun], fillContext_);
  return new_OrgOssPdfreporterComponentsTableFillFillTableSubreport_initWithOrgOssPdfreporterEngineComponentFillContext_withOrgOssPdfreporterEngineJRSubreport_withOrgOssPdfreporterEngineFillJRFillObjectFactory_withOrgOssPdfreporterEngineJasperReport_withJavaUtilMap_(fillContext_, subreport, factory_, compiledTableReport, builtinEvaluators);
}

- (OrgOssPdfreporterEngineDesignJRReportCompileData *)createTableReportCompileDataWithOrgOssPdfreporterEngineJasperReport:(OrgOssPdfreporterEngineJasperReport *)parentReport
                                                                                     withOrgOssPdfreporterEngineJRDataset:(id<OrgOssPdfreporterEngineJRDataset>)reportSubdataset {
  id<JavaIoSerializable> reportCompileDataObj = [((OrgOssPdfreporterEngineJasperReport *) nil_chk(parentReport)) getCompileData];
  if (!([reportCompileDataObj isKindOfClass:[OrgOssPdfreporterEngineDesignJRReportCompileData class]])) {
    @throw new_OrgOssPdfreporterEngineJRRuntimeException_initWithNSString_(JreStrcat("$$", @"Unsupported compiled report data of type ", [[((id<JavaIoSerializable>) nil_chk(reportCompileDataObj)) getClass] getName]));
  }
  OrgOssPdfreporterEngineDesignJRReportCompileData *reportCompileData = (OrgOssPdfreporterEngineDesignJRReportCompileData *) cast_chk(reportCompileDataObj, [OrgOssPdfreporterEngineDesignJRReportCompileData class]);
  id<JavaIoSerializable> datasetCompileData = [((OrgOssPdfreporterEngineDesignJRReportCompileData *) nil_chk(reportCompileData)) getDatasetCompileDataWithOrgOssPdfreporterEngineJRDataset:reportSubdataset];
  OrgOssPdfreporterEngineDesignJRReportCompileData *tableReportCompileData = new_OrgOssPdfreporterComponentsTableFillTableReportCompileData_initWithOrgOssPdfreporterEngineJasperReport_(parentReport);
  [tableReportCompileData setMainDatasetCompileDataWithJavaIoSerializable:datasetCompileData];
  IOSObjectArray *datasets = [parentReport getDatasets];
  if (datasets != nil) {
    {
      IOSObjectArray *a__ = datasets;
      id<OrgOssPdfreporterEngineJRDataset> const *b__ = a__->buffer_;
      id<OrgOssPdfreporterEngineJRDataset> const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        id<OrgOssPdfreporterEngineJRDataset> dataset = *b__++;
        id<JavaIoSerializable> compileData = [reportCompileData getDatasetCompileDataWithOrgOssPdfreporterEngineJRDataset:dataset];
        [tableReportCompileData setDatasetCompileDataWithOrgOssPdfreporterEngineJRDataset:dataset withJavaIoSerializable:compileData];
      }
    }
  }
  return tableReportCompileData;
}

- (OrgOssPdfreporterEngineComponentFillPrepareResult *)prepareWithInt:(jint)availableHeight {
  @try {
    if ([((id<JavaUtilList>) nil_chk(fillColumns_)) isEmpty]) {
      return JreLoadStatic(OrgOssPdfreporterEngineComponentFillPrepareResult, NO_PRINT_NO_OVERFLOW);
    }
    OrgOssPdfreporterEngineFillJRTemplatePrintFrame *printFrame = new_OrgOssPdfreporterEngineFillJRTemplatePrintFrame_initWithOrgOssPdfreporterEngineFillJRTemplateFrame_withInt_([self getFrameTemplate], elementId_);
    id<OrgOssPdfreporterEngineJRLineBox> lineBox = [printFrame getLineBox];
    OrgOssPdfreporterEngineComponentFillPrepareResult *result = [((OrgOssPdfreporterComponentsTableFillFillTableSubreport *) nil_chk(fillSubreport_)) prepareSubreportWithInt:availableHeight - [((JavaLangInteger *) nil_chk([((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk(lineBox)) getTopPadding])) intValue] - [((JavaLangInteger *) nil_chk([lineBox getBottomPadding])) intValue] withBoolean:filling_];
    filling_ = [((OrgOssPdfreporterEngineComponentFillPrepareResult *) nil_chk(result)) willOverflow];
    return result;
  }
  @catch (OrgOssPdfreporterEngineJRException *e) {
    @throw new_OrgOssPdfreporterEngineJRRuntimeException_initWithNSException_(e);
  }
}

- (id<OrgOssPdfreporterEngineJRPrintElement>)fill {
  OrgOssPdfreporterEngineFillJRTemplatePrintFrame *printFrame = new_OrgOssPdfreporterEngineFillJRTemplatePrintFrame_initWithOrgOssPdfreporterEngineFillJRTemplateFrame_withInt_([self getFrameTemplate], elementId_);
  id<OrgOssPdfreporterEngineJRLineBox> lineBox = [printFrame getLineBox];
  [printFrame setUUIDWithOrgOssPdfreporterUsesJavaUtilUUID:[((id<OrgOssPdfreporterEngineJRComponentElement>) nil_chk([((id<OrgOssPdfreporterEngineComponentFillContext>) nil_chk(fillContext_)) getComponentElement])) getUUID]];
  [printFrame setXWithInt:[((id<OrgOssPdfreporterEngineJRComponentElement>) nil_chk([((id<OrgOssPdfreporterEngineComponentFillContext>) nil_chk(fillContext_)) getComponentElement])) getX]];
  [printFrame setYWithInt:[((id<OrgOssPdfreporterEngineComponentFillContext>) nil_chk(fillContext_)) getElementPrintY]];
  [printFrame setWidthWithInt:fillWidth_ + [((JavaLangInteger *) nil_chk([((id<OrgOssPdfreporterEngineJRLineBox>) nil_chk(lineBox)) getLeftPadding])) intValue] + [((JavaLangInteger *) nil_chk([lineBox getRightPadding])) intValue]];
  [printFrame setHeightWithInt:[((OrgOssPdfreporterComponentsTableFillFillTableSubreport *) nil_chk(fillSubreport_)) getContentsStretchHeight] + [((JavaLangInteger *) nil_chk([lineBox getTopPadding])) intValue] + [((JavaLangInteger *) nil_chk([lineBox getBottomPadding])) intValue]];
  id<JavaUtilCollection> elements = [((OrgOssPdfreporterComponentsTableFillFillTableSubreport *) nil_chk(fillSubreport_)) getPrintElements];
  if (elements != nil) {
    for (id<JavaUtilIterator> it = [elements iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
      id<OrgOssPdfreporterEngineJRPrintElement> element = [it next];
      [printFrame addElementWithOrgOssPdfreporterEngineJRPrintElement:element];
    }
  }
  [((OrgOssPdfreporterComponentsTableFillFillTableSubreport *) nil_chk(fillSubreport_)) subreportPageFilled];
  return printFrame;
}

- (OrgOssPdfreporterEngineFillJRTemplateFrame *)getFrameTemplate {
  id<OrgOssPdfreporterEngineJRStyle> style = [((id<OrgOssPdfreporterEngineComponentFillContext>) nil_chk(fillContext_)) getElementStyle];
  OrgOssPdfreporterEngineFillJRTemplateFrame *frameTemplate = [((id<JavaUtilMap>) nil_chk(printFrameTemplates_)) getWithId:style];
  if (frameTemplate == nil) {
    frameTemplate = new_OrgOssPdfreporterEngineFillJRTemplateFrame_initWithOrgOssPdfreporterEngineJROrigin_withOrgOssPdfreporterEngineJRDefaultStyleProvider_([((id<OrgOssPdfreporterEngineComponentFillContext>) nil_chk(fillContext_)) getElementOrigin], [((id<OrgOssPdfreporterEngineComponentFillContext>) nil_chk(fillContext_)) getDefaultStyleProvider]);
    [frameTemplate setElementWithOrgOssPdfreporterEngineJRElement:[((id<OrgOssPdfreporterEngineComponentFillContext>) nil_chk(fillContext_)) getComponentElement]];
    frameTemplate = [self deduplicateWithOrgOssPdfreporterEngineDeduplicable:frameTemplate];
    (void) [((id<JavaUtilMap>) nil_chk(printFrameTemplates_)) putWithId:style withId:frameTemplate];
  }
  return frameTemplate;
}

- (void)rewind {
  if (filling_) {
    if ([((JavaUtilLoggingLogger *) nil_chk(OrgOssPdfreporterComponentsTableFillFillTable_log)) isLoggableWithJavaUtilLoggingLevel:JreLoadStatic(JavaUtilLoggingLevel, FINEST)]) {
      [OrgOssPdfreporterComponentsTableFillFillTable_log finestWithNSString:@"Rewinding table subreport"];
    }
    @try {
      [((OrgOssPdfreporterComponentsTableFillFillTableSubreport *) nil_chk(fillSubreport_)) rewind];
    }
    @catch (OrgOssPdfreporterEngineJRException *e) {
      @throw new_OrgOssPdfreporterEngineJRRuntimeException_initWithNSException_(e);
    }
    filling_ = false;
  }
}

+ (void)initialize {
  if (self == [OrgOssPdfreporterComponentsTableFillFillTable class]) {
    OrgOssPdfreporterComponentsTableFillFillTable_log = JavaUtilLoggingLogger_getLoggerWithNSString_([OrgOssPdfreporterComponentsTableFillFillTable_class_() getName]);
    J2OBJC_SET_INITIALIZED(OrgOssPdfreporterComponentsTableFillFillTable)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgOssPdfreporterComponentsTableTableComponent:withOrgOssPdfreporterEngineFillJRFillObjectFactory:", "FillTable", NULL, 0x1, NULL, NULL },
    { "evaluateWithByte:", "evaluate", "V", 0x1, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "toPrintColumnWithOrgOssPdfreporterComponentsTableBaseColumn:withByte:", "toPrintColumn", "Z", 0x4, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "evaluatePropertiesWithOrgOssPdfreporterComponentsTableBaseColumn:withByte:", "evaluateProperties", "Lorg.oss.pdfreporter.engine.JRPropertiesMap;", 0x4, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "evaluateColumnsWithByte:", "evaluateColumns", "V", 0x4, NULL, NULL },
    { "createFillSubreport", NULL, "V", 0x4, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "createFillTableSubreport", NULL, "Lorg.oss.pdfreporter.components.table.fill.FillTableSubreport;", 0x4, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "createTableReportCompileDataWithOrgOssPdfreporterEngineJasperReport:withOrgOssPdfreporterEngineJRDataset:", "createTableReportCompileData", "Lorg.oss.pdfreporter.engine.design.JRReportCompileData;", 0x4, "Lorg.oss.pdfreporter.engine.JRException;", NULL },
    { "prepareWithInt:", "prepare", "Lorg.oss.pdfreporter.engine.component.FillPrepareResult;", 0x1, NULL, NULL },
    { "fill", NULL, "Lorg.oss.pdfreporter.engine.JRPrintElement;", 0x1, NULL, NULL },
    { "getFrameTemplate", NULL, "Lorg.oss.pdfreporter.engine.fill.JRTemplateFrame;", 0x4, NULL, NULL },
    { "rewind", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "log", "log", 0x1a, "Ljava.util.logging.Logger;", &OrgOssPdfreporterComponentsTableFillFillTable_log, NULL, .constantValue.asLong = 0 },
    { "table_", NULL, 0x12, "Lorg.oss.pdfreporter.components.table.TableComponent;", NULL, NULL, .constantValue.asLong = 0 },
    { "factory_", NULL, 0x12, "Lorg.oss.pdfreporter.engine.fill.JRFillObjectFactory;", NULL, NULL, .constantValue.asLong = 0 },
    { "fillSubreports_", NULL, 0x12, "Ljava.util.Map;", NULL, "Ljava/util/Map<Ljava/util/List<Lorg/oss/pdfreporter/components/table/fill/FillColumn;>;Lorg/oss/pdfreporter/components/table/fill/FillTableSubreport;>;", .constantValue.asLong = 0 },
    { "fillSubreport_", NULL, 0x2, "Lorg.oss.pdfreporter.components.table.fill.FillTableSubreport;", NULL, NULL, .constantValue.asLong = 0 },
    { "filling_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "fillColumns_", NULL, 0x2, "Ljava.util.List;", NULL, "Ljava/util/List<Lorg/oss/pdfreporter/components/table/fill/FillColumn;>;", .constantValue.asLong = 0 },
    { "fillWidth_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "printFrameTemplates_", NULL, 0x2, "Ljava.util.Map;", NULL, "Ljava/util/Map<Lorg/oss/pdfreporter/engine/JRStyle;Lorg/oss/pdfreporter/engine/fill/JRTemplateFrame;>;", .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lorg.oss.pdfreporter.components.table.fill.FillTable$FillColumnEvaluator;"};
  static const J2ObjcClassInfo _OrgOssPdfreporterComponentsTableFillFillTable = { 2, "FillTable", "org.oss.pdfreporter.components.table.fill", NULL, 0x1, 12, methods, 9, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_OrgOssPdfreporterComponentsTableFillFillTable;
}

@end

void OrgOssPdfreporterComponentsTableFillFillTable_initWithOrgOssPdfreporterComponentsTableTableComponent_withOrgOssPdfreporterEngineFillJRFillObjectFactory_(OrgOssPdfreporterComponentsTableFillFillTable *self, id<OrgOssPdfreporterComponentsTableTableComponent> table, OrgOssPdfreporterEngineFillJRFillObjectFactory *factory) {
  OrgOssPdfreporterEngineComponentBaseFillComponent_init(self);
  self->fillSubreports_ = new_JavaUtilHashMap_init();
  self->printFrameTemplates_ = new_JavaUtilHashMap_init();
  self->table_ = table;
  self->factory_ = factory;
}

OrgOssPdfreporterComponentsTableFillFillTable *new_OrgOssPdfreporterComponentsTableFillFillTable_initWithOrgOssPdfreporterComponentsTableTableComponent_withOrgOssPdfreporterEngineFillJRFillObjectFactory_(id<OrgOssPdfreporterComponentsTableTableComponent> table, OrgOssPdfreporterEngineFillJRFillObjectFactory *factory) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterComponentsTableFillFillTable, initWithOrgOssPdfreporterComponentsTableTableComponent_withOrgOssPdfreporterEngineFillJRFillObjectFactory_, table, factory)
}

OrgOssPdfreporterComponentsTableFillFillTable *create_OrgOssPdfreporterComponentsTableFillFillTable_initWithOrgOssPdfreporterComponentsTableTableComponent_withOrgOssPdfreporterEngineFillJRFillObjectFactory_(id<OrgOssPdfreporterComponentsTableTableComponent> table, OrgOssPdfreporterEngineFillJRFillObjectFactory *factory) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterComponentsTableFillFillTable, initWithOrgOssPdfreporterComponentsTableTableComponent_withOrgOssPdfreporterEngineFillJRFillObjectFactory_, table, factory)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterComponentsTableFillFillTable)

@implementation OrgOssPdfreporterComponentsTableFillFillTable_FillColumnEvaluator

- (instancetype)initWithOrgOssPdfreporterComponentsTableFillFillTable:(OrgOssPdfreporterComponentsTableFillFillTable *)outer$
                                                             withByte:(jbyte)evaluation {
  OrgOssPdfreporterComponentsTableFillFillTable_FillColumnEvaluator_initWithOrgOssPdfreporterComponentsTableFillFillTable_withByte_(self, outer$, evaluation);
  return self;
}

- (OrgOssPdfreporterComponentsTableFillFillColumn *)visitColumnWithOrgOssPdfreporterComponentsTableColumn:(id<OrgOssPdfreporterComponentsTableColumn>)column {
  @try {
    jboolean toPrint = [this$0_ toPrintColumnWithOrgOssPdfreporterComponentsTableBaseColumn:column withByte:evaluation_];
    if (toPrint) {
      OrgOssPdfreporterEngineJRPropertiesMap *properties = [this$0_ evaluatePropertiesWithOrgOssPdfreporterComponentsTableBaseColumn:column withByte:evaluation_];
      return new_OrgOssPdfreporterComponentsTableFillFillColumn_initWithOrgOssPdfreporterComponentsTableBaseColumn_withOrgOssPdfreporterEngineJRPropertiesMap_(column, properties);
    }
    return nil;
  }
  @catch (OrgOssPdfreporterEngineJRException *e) {
    @throw new_OrgOssPdfreporterEngineJRRuntimeException_initWithNSException_(e);
  }
}

- (OrgOssPdfreporterComponentsTableFillFillColumn *)visitColumnGroupWithOrgOssPdfreporterComponentsTableColumnGroup:(id<OrgOssPdfreporterComponentsTableColumnGroup>)columnGroup {
  @try {
    jboolean toPrint = [this$0_ toPrintColumnWithOrgOssPdfreporterComponentsTableBaseColumn:columnGroup withByte:evaluation_];
    OrgOssPdfreporterComponentsTableFillFillColumn *fillColumn;
    if (toPrint) {
      id<JavaUtilList> columns = [((id<OrgOssPdfreporterComponentsTableColumnGroup>) nil_chk(columnGroup)) getColumns];
      id<JavaUtilList> subColumns = new_JavaUtilArrayList_initWithInt_([((id<JavaUtilList>) nil_chk(columns)) size]);
      jint printWidth = 0;
      for (id<OrgOssPdfreporterComponentsTableBaseColumn> __strong column in columns) {
        OrgOssPdfreporterComponentsTableFillFillColumn *fillSubColumn = [((id<OrgOssPdfreporterComponentsTableBaseColumn>) nil_chk(column)) visitColumnWithOrgOssPdfreporterComponentsTableColumnVisitor:self];
        if (fillSubColumn != nil) {
          printWidth += [fillSubColumn getWidth];
          [subColumns addWithId:fillSubColumn];
        }
      }
      if ([subColumns isEmpty]) {
        fillColumn = nil;
      }
      else {
        OrgOssPdfreporterEngineJRPropertiesMap *properties = [this$0_ evaluatePropertiesWithOrgOssPdfreporterComponentsTableBaseColumn:columnGroup withByte:evaluation_];
        fillColumn = new_OrgOssPdfreporterComponentsTableFillFillColumn_initWithOrgOssPdfreporterComponentsTableBaseColumn_withInt_withJavaUtilList_withOrgOssPdfreporterEngineJRPropertiesMap_(columnGroup, printWidth, subColumns, properties);
      }
    }
    else {
      fillColumn = nil;
    }
    return fillColumn;
  }
  @catch (OrgOssPdfreporterEngineJRException *e) {
    @throw new_OrgOssPdfreporterEngineJRRuntimeException_initWithNSException_(e);
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgOssPdfreporterComponentsTableFillFillTable:withByte:", "FillColumnEvaluator", NULL, 0x1, NULL, NULL },
    { "visitColumnWithOrgOssPdfreporterComponentsTableColumn:", "visitColumn", "Lorg.oss.pdfreporter.components.table.fill.FillColumn;", 0x1, NULL, NULL },
    { "visitColumnGroupWithOrgOssPdfreporterComponentsTableColumnGroup:", "visitColumnGroup", "Lorg.oss.pdfreporter.components.table.fill.FillColumn;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.oss.pdfreporter.components.table.fill.FillTable;", NULL, NULL, .constantValue.asLong = 0 },
    { "evaluation_", NULL, 0x10, "B", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterComponentsTableFillFillTable_FillColumnEvaluator = { 2, "FillColumnEvaluator", "org.oss.pdfreporter.components.table.fill", "FillTable", 0x4, 3, methods, 2, fields, 0, NULL, 0, NULL, NULL, "Ljava/lang/Object;Lorg/oss/pdfreporter/components/table/ColumnVisitor<Lorg/oss/pdfreporter/components/table/fill/FillColumn;>;" };
  return &_OrgOssPdfreporterComponentsTableFillFillTable_FillColumnEvaluator;
}

@end

void OrgOssPdfreporterComponentsTableFillFillTable_FillColumnEvaluator_initWithOrgOssPdfreporterComponentsTableFillFillTable_withByte_(OrgOssPdfreporterComponentsTableFillFillTable_FillColumnEvaluator *self, OrgOssPdfreporterComponentsTableFillFillTable *outer$, jbyte evaluation) {
  self->this$0_ = outer$;
  NSObject_init(self);
  self->evaluation_ = evaluation;
}

OrgOssPdfreporterComponentsTableFillFillTable_FillColumnEvaluator *new_OrgOssPdfreporterComponentsTableFillFillTable_FillColumnEvaluator_initWithOrgOssPdfreporterComponentsTableFillFillTable_withByte_(OrgOssPdfreporterComponentsTableFillFillTable *outer$, jbyte evaluation) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterComponentsTableFillFillTable_FillColumnEvaluator, initWithOrgOssPdfreporterComponentsTableFillFillTable_withByte_, outer$, evaluation)
}

OrgOssPdfreporterComponentsTableFillFillTable_FillColumnEvaluator *create_OrgOssPdfreporterComponentsTableFillFillTable_FillColumnEvaluator_initWithOrgOssPdfreporterComponentsTableFillFillTable_withByte_(OrgOssPdfreporterComponentsTableFillFillTable *outer$, jbyte evaluation) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterComponentsTableFillFillTable_FillColumnEvaluator, initWithOrgOssPdfreporterComponentsTableFillFillTable_withByte_, outer$, evaluation)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterComponentsTableFillFillTable_FillColumnEvaluator)
