//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/components/table/fill/TableReportDataset.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/ArrayList.h"
#include "java/util/Collections.h"
#include "java/util/List.h"
#include "org/oss/pdfreporter/components/table/fill/TableReportDataset.h"
#include "org/oss/pdfreporter/components/table/fill/TableReportGroup.h"
#include "org/oss/pdfreporter/engine/JRDataset.h"
#include "org/oss/pdfreporter/engine/JRExpression.h"
#include "org/oss/pdfreporter/engine/JRGroup.h"
#include "org/oss/pdfreporter/engine/JRParameter.h"
#include "org/oss/pdfreporter/engine/JRPropertiesHolder.h"
#include "org/oss/pdfreporter/engine/JRPropertiesMap.h"
#include "org/oss/pdfreporter/engine/JRQuery.h"
#include "org/oss/pdfreporter/engine/JRScriptlet.h"
#include "org/oss/pdfreporter/engine/design/JRDesignParameter.h"
#include "org/oss/pdfreporter/engine/design/JRDesignScriptlet.h"
#include "org/oss/pdfreporter/engine/type/WhenResourceMissingTypeEnum.h"
#include "org/oss/pdfreporter/uses/java/util/UUID.h"

@interface OrgOssPdfreporterComponentsTableFillTableReportDataset () {
 @public
  id<OrgOssPdfreporterEngineJRDataset> tableSubdataset_;
  NSString *name_;
  IOSObjectArray *tableGroups_;
  id<JavaUtilList> groups_;
  OrgOssPdfreporterEngineJRPropertiesMap *properties_;
  id<JavaUtilList> scriptlets_;
  id<JavaUtilList> parameters_;
}

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterComponentsTableFillTableReportDataset, tableSubdataset_, id<OrgOssPdfreporterEngineJRDataset>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterComponentsTableFillTableReportDataset, name_, NSString *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterComponentsTableFillTableReportDataset, tableGroups_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterComponentsTableFillTableReportDataset, groups_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterComponentsTableFillTableReportDataset, properties_, OrgOssPdfreporterEngineJRPropertiesMap *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterComponentsTableFillTableReportDataset, scriptlets_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterComponentsTableFillTableReportDataset, parameters_, id<JavaUtilList>)

@implementation OrgOssPdfreporterComponentsTableFillTableReportDataset

- (instancetype)initWithOrgOssPdfreporterEngineJRDataset:(id<OrgOssPdfreporterEngineJRDataset>)tableSubdataset
                                            withNSString:(NSString *)name {
  OrgOssPdfreporterComponentsTableFillTableReportDataset_initWithOrgOssPdfreporterEngineJRDataset_withNSString_(self, tableSubdataset, name);
  return self;
}

- (IOSObjectArray *)getFields {
  return [((id<OrgOssPdfreporterEngineJRDataset>) nil_chk(tableSubdataset_)) getFields];
}

- (id<OrgOssPdfreporterEngineJRExpression>)getFilterExpression {
  return [((id<OrgOssPdfreporterEngineJRDataset>) nil_chk(tableSubdataset_)) getFilterExpression];
}

- (IOSObjectArray *)getTableGroups {
  return tableGroups_;
}

- (IOSObjectArray *)getGroups {
  return [((id<JavaUtilList>) nil_chk(groups_)) toArrayWithNSObjectArray:[IOSObjectArray newArrayWithLength:[groups_ size] type:OrgOssPdfreporterEngineJRGroup_class_()]];
}

- (void)addFirstGroupWithOrgOssPdfreporterEngineJRGroup:(id<OrgOssPdfreporterEngineJRGroup>)group {
  [((id<JavaUtilList>) nil_chk(groups_)) addWithInt:0 withId:group];
}

- (OrgOssPdfreporterUsesJavaUtilUUID *)getUUID {
  return [((id<OrgOssPdfreporterEngineJRDataset>) nil_chk(tableSubdataset_)) getUUID];
}

- (NSString *)getName {
  return name_;
}

- (IOSObjectArray *)getParameters {
  return [((id<JavaUtilList>) nil_chk(parameters_)) toArrayWithNSObjectArray:[IOSObjectArray newArrayWithLength:[parameters_ size] type:OrgOssPdfreporterEngineJRParameter_class_()]];
}

- (id<OrgOssPdfreporterEngineJRQuery>)getQuery {
  return [((id<OrgOssPdfreporterEngineJRDataset>) nil_chk(tableSubdataset_)) getQuery];
}

- (NSString *)getResourceBundle {
  return [((id<OrgOssPdfreporterEngineJRDataset>) nil_chk(tableSubdataset_)) getResourceBundle];
}

- (NSString *)getScriptletClass {
  return [((id<OrgOssPdfreporterEngineJRDataset>) nil_chk(tableSubdataset_)) getScriptletClass];
}

- (IOSObjectArray *)getScriptlets {
  return [((id<JavaUtilList>) nil_chk(scriptlets_)) toArrayWithNSObjectArray:[IOSObjectArray newArrayWithLength:[scriptlets_ size] type:OrgOssPdfreporterEngineJRScriptlet_class_()]];
}

- (IOSObjectArray *)getSortFields {
  return [((id<OrgOssPdfreporterEngineJRDataset>) nil_chk(tableSubdataset_)) getSortFields];
}

- (IOSObjectArray *)getVariables {
  return [((id<OrgOssPdfreporterEngineJRDataset>) nil_chk(tableSubdataset_)) getVariables];
}

- (OrgOssPdfreporterEngineTypeWhenResourceMissingTypeEnum *)getWhenResourceMissingTypeValue {
  return [((id<OrgOssPdfreporterEngineJRDataset>) nil_chk(tableSubdataset_)) getWhenResourceMissingTypeValue];
}

- (jboolean)isMainDataset {
  return true;
}

- (void)setWhenResourceMissingTypeWithOrgOssPdfreporterEngineTypeWhenResourceMissingTypeEnum:(OrgOssPdfreporterEngineTypeWhenResourceMissingTypeEnum *)whenResourceMissingType {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (id<OrgOssPdfreporterEngineJRPropertiesHolder>)getParentProperties {
  return [((id<OrgOssPdfreporterEngineJRDataset>) nil_chk(tableSubdataset_)) getParentProperties];
}

- (OrgOssPdfreporterEngineJRPropertiesMap *)getPropertiesMap {
  return properties_;
}

- (jboolean)hasProperties {
  return [((OrgOssPdfreporterEngineJRPropertiesMap *) nil_chk(properties_)) hasProperties];
}

- (id)clone {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (void)addScriptletWithNSString:(NSString *)name
                    withIOSClass:(IOSClass *)type {
  OrgOssPdfreporterEngineDesignJRDesignScriptlet *scriptlet = new_OrgOssPdfreporterEngineDesignJRDesignScriptlet_init();
  [scriptlet setNameWithNSString:name];
  [scriptlet setValueClassWithIOSClass:type];
  OrgOssPdfreporterEngineDesignJRDesignParameter *parameter = new_OrgOssPdfreporterEngineDesignJRDesignParameter_init();
  [parameter setNameWithNSString:JreStrcat("$$", name, OrgOssPdfreporterEngineJRScriptlet_SCRIPTLET_PARAMETER_NAME_SUFFIX)];
  [parameter setValueClassWithIOSClass:[scriptlet getValueClass]];
  [parameter setSystemDefinedWithBoolean:true];
  [parameter setForPromptingWithBoolean:false];
  [((id<JavaUtilList>) nil_chk(scriptlets_)) addWithId:scriptlet];
  [((id<JavaUtilList>) nil_chk(parameters_)) addWithId:parameter];
}

- (id)copyWithZone:(NSZone *)zone {
  return [self clone];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgOssPdfreporterEngineJRDataset:withNSString:", "TableReportDataset", NULL, 0x1, NULL, NULL },
    { "getFields", NULL, "[Lorg.oss.pdfreporter.engine.JRField;", 0x1, NULL, NULL },
    { "getFilterExpression", NULL, "Lorg.oss.pdfreporter.engine.JRExpression;", 0x1, NULL, NULL },
    { "getTableGroups", NULL, "[Lorg.oss.pdfreporter.components.table.fill.TableReportGroup;", 0x1, NULL, NULL },
    { "getGroups", NULL, "[Lorg.oss.pdfreporter.engine.JRGroup;", 0x1, NULL, NULL },
    { "addFirstGroupWithOrgOssPdfreporterEngineJRGroup:", "addFirstGroup", "V", 0x1, NULL, NULL },
    { "getUUID", NULL, "Lorg.oss.pdfreporter.uses.java.util.UUID;", 0x1, NULL, NULL },
    { "getName", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getParameters", NULL, "[Lorg.oss.pdfreporter.engine.JRParameter;", 0x1, NULL, NULL },
    { "getQuery", NULL, "Lorg.oss.pdfreporter.engine.JRQuery;", 0x1, NULL, NULL },
    { "getResourceBundle", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getScriptletClass", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getScriptlets", NULL, "[Lorg.oss.pdfreporter.engine.JRScriptlet;", 0x1, NULL, NULL },
    { "getSortFields", NULL, "[Lorg.oss.pdfreporter.engine.JRSortField;", 0x1, NULL, NULL },
    { "getVariables", NULL, "[Lorg.oss.pdfreporter.engine.JRVariable;", 0x1, NULL, NULL },
    { "getWhenResourceMissingTypeValue", NULL, "Lorg.oss.pdfreporter.engine.type.WhenResourceMissingTypeEnum;", 0x1, NULL, NULL },
    { "isMainDataset", NULL, "Z", 0x1, NULL, NULL },
    { "setWhenResourceMissingTypeWithOrgOssPdfreporterEngineTypeWhenResourceMissingTypeEnum:", "setWhenResourceMissingType", "V", 0x1, NULL, NULL },
    { "getParentProperties", NULL, "Lorg.oss.pdfreporter.engine.JRPropertiesHolder;", 0x1, NULL, NULL },
    { "getPropertiesMap", NULL, "Lorg.oss.pdfreporter.engine.JRPropertiesMap;", 0x1, NULL, NULL },
    { "hasProperties", NULL, "Z", 0x1, NULL, NULL },
    { "clone", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "addScriptletWithNSString:withIOSClass:", "addScriptlet", "V", 0x1, NULL, "(Ljava/lang/String;Ljava/lang/Class<+Lorg/oss/pdfreporter/engine/JRAbstractScriptlet;>;)V" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "tableSubdataset_", NULL, 0x12, "Lorg.oss.pdfreporter.engine.JRDataset;", NULL, NULL, .constantValue.asLong = 0 },
    { "name_", NULL, 0x12, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "tableGroups_", NULL, 0x12, "[Lorg.oss.pdfreporter.components.table.fill.TableReportGroup;", NULL, NULL, .constantValue.asLong = 0 },
    { "groups_", NULL, 0x12, "Ljava.util.List;", NULL, "Ljava/util/List<Lorg/oss/pdfreporter/engine/JRGroup;>;", .constantValue.asLong = 0 },
    { "properties_", NULL, 0x12, "Lorg.oss.pdfreporter.engine.JRPropertiesMap;", NULL, NULL, .constantValue.asLong = 0 },
    { "scriptlets_", NULL, 0x12, "Ljava.util.List;", NULL, "Ljava/util/List<Lorg/oss/pdfreporter/engine/JRScriptlet;>;", .constantValue.asLong = 0 },
    { "parameters_", NULL, 0x12, "Ljava.util.List;", NULL, "Ljava/util/List<Lorg/oss/pdfreporter/engine/JRParameter;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterComponentsTableFillTableReportDataset = { 2, "TableReportDataset", "org.oss.pdfreporter.components.table.fill", NULL, 0x1, 23, methods, 7, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterComponentsTableFillTableReportDataset;
}

@end

void OrgOssPdfreporterComponentsTableFillTableReportDataset_initWithOrgOssPdfreporterEngineJRDataset_withNSString_(OrgOssPdfreporterComponentsTableFillTableReportDataset *self, id<OrgOssPdfreporterEngineJRDataset> tableSubdataset, NSString *name) {
  NSObject_init(self);
  self->tableSubdataset_ = tableSubdataset;
  self->name_ = name;
  IOSObjectArray *datasetGroups = [((id<OrgOssPdfreporterEngineJRDataset>) nil_chk(tableSubdataset)) getGroups];
  self->groups_ = new_JavaUtilArrayList_init();
  if (datasetGroups == nil) {
    self->tableGroups_ = nil;
  }
  else {
    self->tableGroups_ = [IOSObjectArray newArrayWithLength:datasetGroups->size_ type:OrgOssPdfreporterComponentsTableFillTableReportGroup_class_()];
    for (jint i = 0; i < datasetGroups->size_; i++) {
      (void) IOSObjectArray_SetAndConsume(self->tableGroups_, i, new_OrgOssPdfreporterComponentsTableFillTableReportGroup_initWithOrgOssPdfreporterEngineJRGroup_(IOSObjectArray_Get(datasetGroups, i)));
      [self->groups_ addWithId:IOSObjectArray_Get(self->tableGroups_, i)];
    }
  }
  self->properties_ = [((OrgOssPdfreporterEngineJRPropertiesMap *) nil_chk([tableSubdataset getPropertiesMap])) cloneProperties];
  self->scriptlets_ = new_JavaUtilArrayList_init();
  IOSObjectArray *datasetScriptlets = [tableSubdataset getScriptlets];
  if (datasetScriptlets != nil) {
    JavaUtilCollections_addAllWithJavaUtilCollection_withNSObjectArray_(self->scriptlets_, datasetScriptlets);
  }
  IOSObjectArray *datasetParameters = [tableSubdataset getParameters];
  self->parameters_ = new_JavaUtilArrayList_init();
  if (datasetParameters != nil) {
    JavaUtilCollections_addAllWithJavaUtilCollection_withNSObjectArray_(self->parameters_, datasetParameters);
  }
}

OrgOssPdfreporterComponentsTableFillTableReportDataset *new_OrgOssPdfreporterComponentsTableFillTableReportDataset_initWithOrgOssPdfreporterEngineJRDataset_withNSString_(id<OrgOssPdfreporterEngineJRDataset> tableSubdataset, NSString *name) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterComponentsTableFillTableReportDataset, initWithOrgOssPdfreporterEngineJRDataset_withNSString_, tableSubdataset, name)
}

OrgOssPdfreporterComponentsTableFillTableReportDataset *create_OrgOssPdfreporterComponentsTableFillTableReportDataset_initWithOrgOssPdfreporterEngineJRDataset_withNSString_(id<OrgOssPdfreporterEngineJRDataset> tableSubdataset, NSString *name) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterComponentsTableFillTableReportDataset, initWithOrgOssPdfreporterEngineJRDataset_withNSString_, tableSubdataset, name)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterComponentsTableFillTableReportDataset)
