//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/components/table/fill/TableReportBaseObjectFactory.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"
#include "org/oss/pdfreporter/components/table/fill/TableReportBaseObjectFactory.h"
#include "org/oss/pdfreporter/components/table/fill/TableReportDataset.h"
#include "org/oss/pdfreporter/components/table/fill/TableReportGroup.h"
#include "org/oss/pdfreporter/engine/JRExpression.h"
#include "org/oss/pdfreporter/engine/JRGroup.h"
#include "org/oss/pdfreporter/engine/base/JRBaseGroup.h"
#include "org/oss/pdfreporter/engine/base/JRBaseObjectFactory.h"

@interface OrgOssPdfreporterComponentsTableFillTableReportBaseObjectFactory () {
 @public
  id<JavaUtilMap> tableGroupMap_;
}

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterComponentsTableFillTableReportBaseObjectFactory, tableGroupMap_, id<JavaUtilMap>)

@implementation OrgOssPdfreporterComponentsTableFillTableReportBaseObjectFactory

- (instancetype)initWithOrgOssPdfreporterComponentsTableFillTableReportDataset:(OrgOssPdfreporterComponentsTableFillTableReportDataset *)reportDataset {
  OrgOssPdfreporterComponentsTableFillTableReportBaseObjectFactory_initWithOrgOssPdfreporterComponentsTableFillTableReportDataset_(self, reportDataset);
  return self;
}

- (id<OrgOssPdfreporterEngineJRExpression>)getExpressionWithOrgOssPdfreporterEngineJRExpression:(id<OrgOssPdfreporterEngineJRExpression>)expression
                                                                                    withBoolean:(jboolean)assignNotUsedId {
  return expression;
}

- (OrgOssPdfreporterEngineBaseJRBaseGroup *)getGroupWithOrgOssPdfreporterEngineJRGroup:(id<OrgOssPdfreporterEngineJRGroup>)group {
  id<OrgOssPdfreporterEngineJRGroup> origGroup;
  if ([((id<JavaUtilMap>) nil_chk(tableGroupMap_)) containsKeyWithId:group]) {
    origGroup = [((id<JavaUtilMap>) nil_chk(tableGroupMap_)) getWithId:group];
  }
  else {
    origGroup = group;
  }
  return [super getGroupWithOrgOssPdfreporterEngineJRGroup:origGroup];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgOssPdfreporterComponentsTableFillTableReportDataset:", "TableReportBaseObjectFactory", NULL, 0x1, NULL, NULL },
    { "getExpressionWithOrgOssPdfreporterEngineJRExpression:withBoolean:", "getExpression", "Lorg.oss.pdfreporter.engine.JRExpression;", 0x1, NULL, NULL },
    { "getGroupWithOrgOssPdfreporterEngineJRGroup:", "getGroup", "Lorg.oss.pdfreporter.engine.base.JRBaseGroup;", 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "tableGroupMap_", NULL, 0x2, "Ljava.util.Map;", NULL, "Ljava/util/Map<Lorg/oss/pdfreporter/engine/JRGroup;Lorg/oss/pdfreporter/components/table/fill/TableReportGroup;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterComponentsTableFillTableReportBaseObjectFactory = { 2, "TableReportBaseObjectFactory", "org.oss.pdfreporter.components.table.fill", NULL, 0x1, 3, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterComponentsTableFillTableReportBaseObjectFactory;
}

@end

void OrgOssPdfreporterComponentsTableFillTableReportBaseObjectFactory_initWithOrgOssPdfreporterComponentsTableFillTableReportDataset_(OrgOssPdfreporterComponentsTableFillTableReportBaseObjectFactory *self, OrgOssPdfreporterComponentsTableFillTableReportDataset *reportDataset) {
  OrgOssPdfreporterEngineBaseJRBaseObjectFactory_initWithOrgOssPdfreporterEngineJRExpressionCollector_(self, nil);
  self->tableGroupMap_ = new_JavaUtilHashMap_init();
  IOSObjectArray *tableGroups = [((OrgOssPdfreporterComponentsTableFillTableReportDataset *) nil_chk(reportDataset)) getTableGroups];
  if (tableGroups != nil) {
    {
      IOSObjectArray *a__ = tableGroups;
      OrgOssPdfreporterComponentsTableFillTableReportGroup * const *b__ = a__->buffer_;
      OrgOssPdfreporterComponentsTableFillTableReportGroup * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        OrgOssPdfreporterComponentsTableFillTableReportGroup *tableReportGroup = *b__++;
        (void) [((id<JavaUtilMap>) nil_chk(self->tableGroupMap_)) putWithId:[((OrgOssPdfreporterComponentsTableFillTableReportGroup *) nil_chk(tableReportGroup)) getOriginalGroup] withId:tableReportGroup];
      }
    }
  }
}

OrgOssPdfreporterComponentsTableFillTableReportBaseObjectFactory *new_OrgOssPdfreporterComponentsTableFillTableReportBaseObjectFactory_initWithOrgOssPdfreporterComponentsTableFillTableReportDataset_(OrgOssPdfreporterComponentsTableFillTableReportDataset *reportDataset) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterComponentsTableFillTableReportBaseObjectFactory, initWithOrgOssPdfreporterComponentsTableFillTableReportDataset_, reportDataset)
}

OrgOssPdfreporterComponentsTableFillTableReportBaseObjectFactory *create_OrgOssPdfreporterComponentsTableFillTableReportBaseObjectFactory_initWithOrgOssPdfreporterComponentsTableFillTableReportDataset_(OrgOssPdfreporterComponentsTableFillTableReportDataset *reportDataset) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterComponentsTableFillTableReportBaseObjectFactory, initWithOrgOssPdfreporterComponentsTableFillTableReportDataset_, reportDataset)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterComponentsTableFillTableReportBaseObjectFactory)
