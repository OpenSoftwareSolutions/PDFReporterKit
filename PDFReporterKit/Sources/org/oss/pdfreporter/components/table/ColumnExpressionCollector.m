//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/components/table/ColumnExpressionCollector.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Void.h"
#include "java/util/List.h"
#include "org/oss/pdfreporter/components/table/BaseColumn.h"
#include "org/oss/pdfreporter/components/table/Cell.h"
#include "org/oss/pdfreporter/components/table/Column.h"
#include "org/oss/pdfreporter/components/table/ColumnExpressionCollector.h"
#include "org/oss/pdfreporter/components/table/ColumnGroup.h"
#include "org/oss/pdfreporter/components/table/GroupCell.h"
#include "org/oss/pdfreporter/engine/JRElement.h"
#include "org/oss/pdfreporter/engine/JRExpression.h"
#include "org/oss/pdfreporter/engine/JRExpressionCollector.h"
#include "org/oss/pdfreporter/engine/JRStyle.h"

@interface OrgOssPdfreporterComponentsTableColumnExpressionCollector () {
 @public
  OrgOssPdfreporterEngineJRExpressionCollector *mainCollector_;
  OrgOssPdfreporterEngineJRExpressionCollector *datasetCollector_;
}

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterComponentsTableColumnExpressionCollector, mainCollector_, OrgOssPdfreporterEngineJRExpressionCollector *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterComponentsTableColumnExpressionCollector, datasetCollector_, OrgOssPdfreporterEngineJRExpressionCollector *)

@implementation OrgOssPdfreporterComponentsTableColumnExpressionCollector

- (instancetype)initWithOrgOssPdfreporterEngineJRExpressionCollector:(OrgOssPdfreporterEngineJRExpressionCollector *)mainCollector
                    withOrgOssPdfreporterEngineJRExpressionCollector:(OrgOssPdfreporterEngineJRExpressionCollector *)datasetCollector {
  OrgOssPdfreporterComponentsTableColumnExpressionCollector_initWithOrgOssPdfreporterEngineJRExpressionCollector_withOrgOssPdfreporterEngineJRExpressionCollector_(self, mainCollector, datasetCollector);
  return self;
}

- (void)collectColumnsWithJavaUtilList:(id<JavaUtilList>)columns {
  for (id<OrgOssPdfreporterComponentsTableBaseColumn> __strong column in nil_chk(columns)) {
    (void) [((id<OrgOssPdfreporterComponentsTableBaseColumn>) nil_chk(column)) visitColumnWithOrgOssPdfreporterComponentsTableColumnVisitor:self];
  }
}

- (id)visitColumnWithOrgOssPdfreporterComponentsTableColumn:(id<OrgOssPdfreporterComponentsTableColumn>)column {
  [((OrgOssPdfreporterEngineJRExpressionCollector *) nil_chk(mainCollector_)) collectPropertyExpressionsWithOrgOssPdfreporterEngineJRPropertyExpressionArray:[((id<OrgOssPdfreporterComponentsTableColumn>) nil_chk(column)) getPropertyExpressions]];
  [mainCollector_ addExpressionWithOrgOssPdfreporterEngineJRExpression:[column getPrintWhenExpression]];
  [self collectCellWithOrgOssPdfreporterComponentsTableCell:[column getTableHeader]];
  [self collectCellWithOrgOssPdfreporterComponentsTableCell:[column getTableFooter]];
  [self collectGroupCellsWithJavaUtilList:[column getGroupHeaders]];
  [self collectGroupCellsWithJavaUtilList:[column getGroupFooters]];
  [self collectCellWithOrgOssPdfreporterComponentsTableCell:[column getColumnHeader]];
  [self collectCellWithOrgOssPdfreporterComponentsTableCell:[column getColumnFooter]];
  [self collectCellWithOrgOssPdfreporterComponentsTableCell:[column getDetailCell]];
  return nil;
}

- (id)visitColumnGroupWithOrgOssPdfreporterComponentsTableColumnGroup:(id<OrgOssPdfreporterComponentsTableColumnGroup>)columnGroup {
  [((OrgOssPdfreporterEngineJRExpressionCollector *) nil_chk(mainCollector_)) collectPropertyExpressionsWithOrgOssPdfreporterEngineJRPropertyExpressionArray:[((id<OrgOssPdfreporterComponentsTableColumnGroup>) nil_chk(columnGroup)) getPropertyExpressions]];
  [mainCollector_ addExpressionWithOrgOssPdfreporterEngineJRExpression:[columnGroup getPrintWhenExpression]];
  [self collectCellWithOrgOssPdfreporterComponentsTableCell:[columnGroup getTableHeader]];
  [self collectCellWithOrgOssPdfreporterComponentsTableCell:[columnGroup getTableFooter]];
  [self collectGroupCellsWithJavaUtilList:[columnGroup getGroupHeaders]];
  [self collectGroupCellsWithJavaUtilList:[columnGroup getGroupFooters]];
  [self collectCellWithOrgOssPdfreporterComponentsTableCell:[columnGroup getColumnHeader]];
  [self collectCellWithOrgOssPdfreporterComponentsTableCell:[columnGroup getColumnFooter]];
  [self collectColumnsWithJavaUtilList:[columnGroup getColumns]];
  return nil;
}

- (void)collectGroupCellsWithJavaUtilList:(id<JavaUtilList>)groupCells {
  if (groupCells != nil) {
    for (id<OrgOssPdfreporterComponentsTableGroupCell> __strong groupCell in groupCells) {
      [self collectCellWithOrgOssPdfreporterComponentsTableCell:[((id<OrgOssPdfreporterComponentsTableGroupCell>) nil_chk(groupCell)) getCell]];
    }
  }
}

- (void)collectCellWithOrgOssPdfreporterComponentsTableCell:(id<OrgOssPdfreporterComponentsTableCell>)cell {
  if (cell == nil) {
    return;
  }
  [((OrgOssPdfreporterEngineJRExpressionCollector *) nil_chk(datasetCollector_)) collectWithOrgOssPdfreporterEngineJRStyle:[cell getStyle]];
  IOSObjectArray *elements = [cell getElements];
  if (elements != nil) {
    for (jint i = 0; i < elements->size_; i++) {
      [((id<OrgOssPdfreporterEngineJRElement>) nil_chk(IOSObjectArray_Get(elements, i))) collectExpressionsWithOrgOssPdfreporterEngineJRExpressionCollector:datasetCollector_];
    }
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgOssPdfreporterEngineJRExpressionCollector:withOrgOssPdfreporterEngineJRExpressionCollector:", "ColumnExpressionCollector", NULL, 0x1, NULL, NULL },
    { "collectColumnsWithJavaUtilList:", "collectColumns", "V", 0x1, NULL, "(Ljava/util/List<Lorg/oss/pdfreporter/components/table/BaseColumn;>;)V" },
    { "visitColumnWithOrgOssPdfreporterComponentsTableColumn:", "visitColumn", "Ljava.lang.Void;", 0x1, NULL, NULL },
    { "visitColumnGroupWithOrgOssPdfreporterComponentsTableColumnGroup:", "visitColumnGroup", "Ljava.lang.Void;", 0x1, NULL, NULL },
    { "collectGroupCellsWithJavaUtilList:", "collectGroupCells", "V", 0x4, NULL, "(Ljava/util/List<Lorg/oss/pdfreporter/components/table/GroupCell;>;)V" },
    { "collectCellWithOrgOssPdfreporterComponentsTableCell:", "collectCell", "V", 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "mainCollector_", NULL, 0x12, "Lorg.oss.pdfreporter.engine.JRExpressionCollector;", NULL, NULL, .constantValue.asLong = 0 },
    { "datasetCollector_", NULL, 0x12, "Lorg.oss.pdfreporter.engine.JRExpressionCollector;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterComponentsTableColumnExpressionCollector = { 2, "ColumnExpressionCollector", "org.oss.pdfreporter.components.table", NULL, 0x1, 6, methods, 2, fields, 0, NULL, 0, NULL, NULL, "Ljava/lang/Object;Lorg/oss/pdfreporter/components/table/ColumnVisitor<Ljava/lang/Void;>;" };
  return &_OrgOssPdfreporterComponentsTableColumnExpressionCollector;
}

@end

void OrgOssPdfreporterComponentsTableColumnExpressionCollector_initWithOrgOssPdfreporterEngineJRExpressionCollector_withOrgOssPdfreporterEngineJRExpressionCollector_(OrgOssPdfreporterComponentsTableColumnExpressionCollector *self, OrgOssPdfreporterEngineJRExpressionCollector *mainCollector, OrgOssPdfreporterEngineJRExpressionCollector *datasetCollector) {
  NSObject_init(self);
  self->mainCollector_ = mainCollector;
  self->datasetCollector_ = datasetCollector;
}

OrgOssPdfreporterComponentsTableColumnExpressionCollector *new_OrgOssPdfreporterComponentsTableColumnExpressionCollector_initWithOrgOssPdfreporterEngineJRExpressionCollector_withOrgOssPdfreporterEngineJRExpressionCollector_(OrgOssPdfreporterEngineJRExpressionCollector *mainCollector, OrgOssPdfreporterEngineJRExpressionCollector *datasetCollector) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterComponentsTableColumnExpressionCollector, initWithOrgOssPdfreporterEngineJRExpressionCollector_withOrgOssPdfreporterEngineJRExpressionCollector_, mainCollector, datasetCollector)
}

OrgOssPdfreporterComponentsTableColumnExpressionCollector *create_OrgOssPdfreporterComponentsTableColumnExpressionCollector_initWithOrgOssPdfreporterEngineJRExpressionCollector_withOrgOssPdfreporterEngineJRExpressionCollector_(OrgOssPdfreporterEngineJRExpressionCollector *mainCollector, OrgOssPdfreporterEngineJRExpressionCollector *datasetCollector) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterComponentsTableColumnExpressionCollector, initWithOrgOssPdfreporterEngineJRExpressionCollector_withOrgOssPdfreporterEngineJRExpressionCollector_, mainCollector, datasetCollector)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterComponentsTableColumnExpressionCollector)
