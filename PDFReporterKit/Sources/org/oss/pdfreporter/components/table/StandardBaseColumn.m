//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/components/table/StandardBaseColumn.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/io/ObjectInputStream.h"
#include "java/lang/ClassNotFoundException.h"
#include "java/lang/CloneNotSupportedException.h"
#include "java/lang/Integer.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "java/util/ListIterator.h"
#include "org/oss/pdfreporter/components/table/BaseColumn.h"
#include "org/oss/pdfreporter/components/table/Cell.h"
#include "org/oss/pdfreporter/components/table/ColumnFactory.h"
#include "org/oss/pdfreporter/components/table/GroupCell.h"
#include "org/oss/pdfreporter/components/table/StandardBaseColumn.h"
#include "org/oss/pdfreporter/components/table/StandardGroupCell.h"
#include "org/oss/pdfreporter/engine/JRCloneable.h"
#include "org/oss/pdfreporter/engine/JRConstants.h"
#include "org/oss/pdfreporter/engine/JRExpression.h"
#include "org/oss/pdfreporter/engine/JRPropertiesHolder.h"
#include "org/oss/pdfreporter/engine/JRPropertiesMap.h"
#include "org/oss/pdfreporter/engine/JRPropertyExpression.h"
#include "org/oss/pdfreporter/engine/JRRuntimeException.h"
#include "org/oss/pdfreporter/engine/base/JRBaseObjectFactory.h"
#include "org/oss/pdfreporter/engine/design/JRDesignElement.h"
#include "org/oss/pdfreporter/engine/design/events/JRPropertyChangeSupport.h"
#include "org/oss/pdfreporter/engine/util/JRCloneUtils.h"
#include "org/oss/pdfreporter/uses/java/util/UUID.h"

#pragma clang diagnostic ignored "-Wprotocol"

@interface OrgOssPdfreporterComponentsTableStandardBaseColumn () {
 @public
  OrgOssPdfreporterUsesJavaUtilUUID *uuid_;
  id<OrgOssPdfreporterEngineJRExpression> printWhenExpression_;
  id<OrgOssPdfreporterComponentsTableCell> tableHeader_;
  id<OrgOssPdfreporterComponentsTableCell> tableFooter_;
  id<JavaUtilList> groupHeaders_;
  id<JavaUtilList> groupFooters_;
  id<OrgOssPdfreporterComponentsTableCell> columnHeader_;
  id<OrgOssPdfreporterComponentsTableCell> columnFooter_;
  JavaLangInteger *width_;
  OrgOssPdfreporterEngineJRPropertiesMap *propertiesMap_;
  id<JavaUtilList> propertyExpressions_;
  OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *eventSupport_;
}

- (void)copyPropertyExpressionsWithOrgOssPdfreporterComponentsTableBaseColumn:(id<OrgOssPdfreporterComponentsTableBaseColumn>)column
                            withOrgOssPdfreporterComponentsTableColumnFactory:(OrgOssPdfreporterComponentsTableColumnFactory *)factory OBJC_METHOD_FAMILY_NONE;

- (void)readObjectWithJavaIoObjectInputStream:(JavaIoObjectInputStream *)inArg;

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterComponentsTableStandardBaseColumn, uuid_, OrgOssPdfreporterUsesJavaUtilUUID *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterComponentsTableStandardBaseColumn, printWhenExpression_, id<OrgOssPdfreporterEngineJRExpression>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterComponentsTableStandardBaseColumn, tableHeader_, id<OrgOssPdfreporterComponentsTableCell>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterComponentsTableStandardBaseColumn, tableFooter_, id<OrgOssPdfreporterComponentsTableCell>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterComponentsTableStandardBaseColumn, groupHeaders_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterComponentsTableStandardBaseColumn, groupFooters_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterComponentsTableStandardBaseColumn, columnHeader_, id<OrgOssPdfreporterComponentsTableCell>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterComponentsTableStandardBaseColumn, columnFooter_, id<OrgOssPdfreporterComponentsTableCell>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterComponentsTableStandardBaseColumn, width_, JavaLangInteger *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterComponentsTableStandardBaseColumn, propertiesMap_, OrgOssPdfreporterEngineJRPropertiesMap *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterComponentsTableStandardBaseColumn, propertyExpressions_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterComponentsTableStandardBaseColumn, eventSupport_, OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *)

inline jlong OrgOssPdfreporterComponentsTableStandardBaseColumn_get_serialVersionUID();
#define OrgOssPdfreporterComponentsTableStandardBaseColumn_serialVersionUID 10200LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgOssPdfreporterComponentsTableStandardBaseColumn, serialVersionUID, jlong)

__attribute__((unused)) static void OrgOssPdfreporterComponentsTableStandardBaseColumn_copyPropertyExpressionsWithOrgOssPdfreporterComponentsTableBaseColumn_withOrgOssPdfreporterComponentsTableColumnFactory_(OrgOssPdfreporterComponentsTableStandardBaseColumn *self, id<OrgOssPdfreporterComponentsTableBaseColumn> column, OrgOssPdfreporterComponentsTableColumnFactory *factory);

NSString *OrgOssPdfreporterComponentsTableStandardBaseColumn_PROPERTY_PRINT_WHEN_EXPRESSION = @"printWhenExpression";
NSString *OrgOssPdfreporterComponentsTableStandardBaseColumn_PROPERTY_TABLE_HEADER = @"tableHeader";
NSString *OrgOssPdfreporterComponentsTableStandardBaseColumn_PROPERTY_TABLE_FOOTER = @"tableFooter";
NSString *OrgOssPdfreporterComponentsTableStandardBaseColumn_PROPERTY_COLUMN_HEADER = @"columnHeader";
NSString *OrgOssPdfreporterComponentsTableStandardBaseColumn_PROPERTY_COLUMN_FOOTER = @"columnFooter";
NSString *OrgOssPdfreporterComponentsTableStandardBaseColumn_PROPERTY_GROUP_HEADERS = @"groupHeaders";
NSString *OrgOssPdfreporterComponentsTableStandardBaseColumn_PROPERTY_GROUP_FOOTERS = @"groupFooters";
NSString *OrgOssPdfreporterComponentsTableStandardBaseColumn_PROPERTY_WIDTH = @"width";

@implementation OrgOssPdfreporterComponentsTableStandardBaseColumn

+ (NSString *)PROPERTY_PRINT_WHEN_EXPRESSION {
  return OrgOssPdfreporterComponentsTableStandardBaseColumn_PROPERTY_PRINT_WHEN_EXPRESSION;
}

+ (NSString *)PROPERTY_TABLE_HEADER {
  return OrgOssPdfreporterComponentsTableStandardBaseColumn_PROPERTY_TABLE_HEADER;
}

+ (NSString *)PROPERTY_TABLE_FOOTER {
  return OrgOssPdfreporterComponentsTableStandardBaseColumn_PROPERTY_TABLE_FOOTER;
}

+ (NSString *)PROPERTY_COLUMN_HEADER {
  return OrgOssPdfreporterComponentsTableStandardBaseColumn_PROPERTY_COLUMN_HEADER;
}

+ (NSString *)PROPERTY_COLUMN_FOOTER {
  return OrgOssPdfreporterComponentsTableStandardBaseColumn_PROPERTY_COLUMN_FOOTER;
}

+ (NSString *)PROPERTY_GROUP_HEADERS {
  return OrgOssPdfreporterComponentsTableStandardBaseColumn_PROPERTY_GROUP_HEADERS;
}

+ (NSString *)PROPERTY_GROUP_FOOTERS {
  return OrgOssPdfreporterComponentsTableStandardBaseColumn_PROPERTY_GROUP_FOOTERS;
}

+ (NSString *)PROPERTY_WIDTH {
  return OrgOssPdfreporterComponentsTableStandardBaseColumn_PROPERTY_WIDTH;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterComponentsTableStandardBaseColumn_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithOrgOssPdfreporterComponentsTableBaseColumn:(id<OrgOssPdfreporterComponentsTableBaseColumn>)column
                 withOrgOssPdfreporterComponentsTableColumnFactory:(OrgOssPdfreporterComponentsTableColumnFactory *)factory {
  OrgOssPdfreporterComponentsTableStandardBaseColumn_initWithOrgOssPdfreporterComponentsTableBaseColumn_withOrgOssPdfreporterComponentsTableColumnFactory_(self, column, factory);
  return self;
}

- (void)copyPropertyExpressionsWithOrgOssPdfreporterComponentsTableBaseColumn:(id<OrgOssPdfreporterComponentsTableBaseColumn>)column
                            withOrgOssPdfreporterComponentsTableColumnFactory:(OrgOssPdfreporterComponentsTableColumnFactory *)factory {
  OrgOssPdfreporterComponentsTableStandardBaseColumn_copyPropertyExpressionsWithOrgOssPdfreporterComponentsTableBaseColumn_withOrgOssPdfreporterComponentsTableColumnFactory_(self, column, factory);
}

- (OrgOssPdfreporterUsesJavaUtilUUID *)getUUID {
  if (uuid_ == nil) {
    uuid_ = OrgOssPdfreporterUsesJavaUtilUUID_randomUUID();
  }
  return uuid_;
}

- (void)setUUIDWithOrgOssPdfreporterUsesJavaUtilUUID:(OrgOssPdfreporterUsesJavaUtilUUID *)uuid {
  self->uuid_ = uuid;
}

- (id<OrgOssPdfreporterComponentsTableCell>)getColumnHeader {
  return columnHeader_;
}

- (id<OrgOssPdfreporterComponentsTableCell>)getColumnFooter {
  return columnFooter_;
}

- (id<OrgOssPdfreporterEngineJRExpression>)getPrintWhenExpression {
  return printWhenExpression_;
}

- (void)setPrintWhenExpressionWithOrgOssPdfreporterEngineJRExpression:(id<OrgOssPdfreporterEngineJRExpression>)printWhenExpression {
  id old = self->printWhenExpression_;
  self->printWhenExpression_ = printWhenExpression;
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) firePropertyChangeWithNSString:OrgOssPdfreporterComponentsTableStandardBaseColumn_PROPERTY_PRINT_WHEN_EXPRESSION withId:old withId:self->printWhenExpression_];
}

- (void)setColumnHeaderWithOrgOssPdfreporterComponentsTableCell:(id<OrgOssPdfreporterComponentsTableCell>)header {
  id old = self->columnHeader_;
  self->columnHeader_ = header;
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) firePropertyChangeWithNSString:OrgOssPdfreporterComponentsTableStandardBaseColumn_PROPERTY_COLUMN_HEADER withId:old withId:self->columnHeader_];
}

- (void)setColumnFooterWithOrgOssPdfreporterComponentsTableCell:(id<OrgOssPdfreporterComponentsTableCell>)header {
  id old = self->columnFooter_;
  self->columnFooter_ = header;
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) firePropertyChangeWithNSString:OrgOssPdfreporterComponentsTableStandardBaseColumn_PROPERTY_COLUMN_FOOTER withId:old withId:self->columnFooter_];
}

- (id)clone {
  OrgOssPdfreporterComponentsTableStandardBaseColumn *clone = nil;
  @try {
    clone = (OrgOssPdfreporterComponentsTableStandardBaseColumn *) cast_chk([super clone], [OrgOssPdfreporterComponentsTableStandardBaseColumn class]);
  }
  @catch (JavaLangCloneNotSupportedException *e) {
    @throw new_OrgOssPdfreporterEngineJRRuntimeException_initWithNSException_(e);
  }
  ((OrgOssPdfreporterComponentsTableStandardBaseColumn *) nil_chk(clone))->tableHeader_ = OrgOssPdfreporterEngineUtilJRCloneUtils_nullSafeCloneWithOrgOssPdfreporterEngineJRCloneable_(tableHeader_);
  clone->tableFooter_ = OrgOssPdfreporterEngineUtilJRCloneUtils_nullSafeCloneWithOrgOssPdfreporterEngineJRCloneable_(tableFooter_);
  clone->groupHeaders_ = OrgOssPdfreporterEngineUtilJRCloneUtils_cloneListWithJavaUtilList_(groupHeaders_);
  clone->groupFooters_ = OrgOssPdfreporterEngineUtilJRCloneUtils_cloneListWithJavaUtilList_(groupFooters_);
  clone->columnHeader_ = OrgOssPdfreporterEngineUtilJRCloneUtils_nullSafeCloneWithOrgOssPdfreporterEngineJRCloneable_(columnHeader_);
  clone->columnFooter_ = OrgOssPdfreporterEngineUtilJRCloneUtils_nullSafeCloneWithOrgOssPdfreporterEngineJRCloneable_(columnFooter_);
  clone->printWhenExpression_ = OrgOssPdfreporterEngineUtilJRCloneUtils_nullSafeCloneWithOrgOssPdfreporterEngineJRCloneable_(printWhenExpression_);
  clone->eventSupport_ = nil;
  clone->uuid_ = nil;
  return clone;
}

- (id<OrgOssPdfreporterComponentsTableCell>)getTableHeader {
  return tableHeader_;
}

- (void)setTableHeaderWithOrgOssPdfreporterComponentsTableCell:(id<OrgOssPdfreporterComponentsTableCell>)tableHeader {
  id old = self->tableHeader_;
  self->tableHeader_ = tableHeader;
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) firePropertyChangeWithNSString:OrgOssPdfreporterComponentsTableStandardBaseColumn_PROPERTY_TABLE_HEADER withId:old withId:self->tableHeader_];
}

- (id<OrgOssPdfreporterComponentsTableCell>)getTableFooter {
  return tableFooter_;
}

- (void)setTableFooterWithOrgOssPdfreporterComponentsTableCell:(id<OrgOssPdfreporterComponentsTableCell>)tableFooter {
  id old = self->tableFooter_;
  self->tableFooter_ = tableFooter;
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) firePropertyChangeWithNSString:OrgOssPdfreporterComponentsTableStandardBaseColumn_PROPERTY_TABLE_FOOTER withId:old withId:self->tableFooter_];
}

- (JavaLangInteger *)getWidth {
  return width_;
}

- (void)setWidthWithJavaLangInteger:(JavaLangInteger *)width {
  id old = self->width_;
  self->width_ = width;
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) firePropertyChangeWithNSString:OrgOssPdfreporterComponentsTableStandardBaseColumn_PROPERTY_WIDTH withId:old withId:self->width_];
}

- (OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *)getEventSupport {
  @synchronized(self) {
    if (eventSupport_ == nil) {
      eventSupport_ = new_OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport_initWithId_(self);
    }
  }
  return eventSupport_;
}

- (id<JavaUtilList>)getGroupHeaders {
  return groupHeaders_;
}

- (id<JavaUtilList>)getGroupFooters {
  return groupFooters_;
}

- (jint)findGroupCellIndexWithJavaUtilList:(id<JavaUtilList>)groupCells
                              withNSString:(NSString *)groupName {
  jint idx = -1;
  for (id<JavaUtilListIterator> it = [((id<JavaUtilList>) nil_chk(groupCells)) listIterator]; [((id<JavaUtilListIterator>) nil_chk(it)) hasNext]; ) {
    id<OrgOssPdfreporterComponentsTableGroupCell> groupCell = [it next];
    if ([((NSString *) nil_chk(groupName)) isEqual:[((id<OrgOssPdfreporterComponentsTableGroupCell>) nil_chk(groupCell)) getGroupName]]) {
      idx = [it previousIndex];
    }
  }
  return idx;
}

- (id<OrgOssPdfreporterComponentsTableCell>)getGroupFooterWithNSString:(NSString *)groupName {
  jint idx = [self findGroupCellIndexWithJavaUtilList:groupFooters_ withNSString:groupName];
  return idx < 0 ? nil : [((id<OrgOssPdfreporterComponentsTableGroupCell>) nil_chk([((id<JavaUtilList>) nil_chk(groupFooters_)) getWithInt:idx])) getCell];
}

- (id<OrgOssPdfreporterComponentsTableCell>)getGroupHeaderWithNSString:(NSString *)groupName {
  jint idx = [self findGroupCellIndexWithJavaUtilList:groupHeaders_ withNSString:groupName];
  return idx < 0 ? nil : [((id<OrgOssPdfreporterComponentsTableGroupCell>) nil_chk([((id<JavaUtilList>) nil_chk(groupHeaders_)) getWithInt:idx])) getCell];
}

- (void)setGroupHeadersWithJavaUtilList:(id<JavaUtilList>)groupHeaders {
  id old = self->groupHeaders_;
  self->groupHeaders_ = groupHeaders;
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) firePropertyChangeWithNSString:OrgOssPdfreporterComponentsTableStandardBaseColumn_PROPERTY_GROUP_HEADERS withId:old withId:self->groupHeaders_];
}

- (void)setGroupFootersWithJavaUtilList:(id<JavaUtilList>)groupFooters {
  id old = self->groupFooters_;
  self->groupFooters_ = groupFooters;
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) firePropertyChangeWithNSString:OrgOssPdfreporterComponentsTableStandardBaseColumn_PROPERTY_GROUP_FOOTERS withId:old withId:self->groupFooters_];
}

- (void)addGroupHeaderWithOrgOssPdfreporterComponentsTableGroupCell:(id<OrgOssPdfreporterComponentsTableGroupCell>)groupCell {
  [((id<JavaUtilList>) nil_chk(groupHeaders_)) addWithId:groupCell];
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) fireCollectionElementAddedEventWithNSString:OrgOssPdfreporterComponentsTableStandardBaseColumn_PROPERTY_GROUP_HEADERS withId:groupCell withInt:[((id<JavaUtilList>) nil_chk(groupHeaders_)) size] - 1];
}

- (void)addGroupFooterWithOrgOssPdfreporterComponentsTableGroupCell:(id<OrgOssPdfreporterComponentsTableGroupCell>)groupCell {
  [((id<JavaUtilList>) nil_chk(groupFooters_)) addWithId:groupCell];
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) fireCollectionElementAddedEventWithNSString:OrgOssPdfreporterComponentsTableStandardBaseColumn_PROPERTY_GROUP_FOOTERS withId:groupCell withInt:[((id<JavaUtilList>) nil_chk(groupFooters_)) size] - 1];
}

- (jboolean)removeGroupFooterWithOrgOssPdfreporterComponentsTableGroupCell:(id<OrgOssPdfreporterComponentsTableGroupCell>)groupCell {
  jint idx = [((id<JavaUtilList>) nil_chk(groupFooters_)) indexOfWithId:groupCell];
  if (idx >= 0) {
    (void) [((id<JavaUtilList>) nil_chk(groupFooters_)) removeWithInt:idx];
    [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) fireCollectionElementRemovedEventWithNSString:OrgOssPdfreporterComponentsTableStandardBaseColumn_PROPERTY_GROUP_FOOTERS withId:groupCell withInt:idx];
  }
  return idx >= 0;
}

- (jboolean)removeGroupHeaderWithOrgOssPdfreporterComponentsTableGroupCell:(id<OrgOssPdfreporterComponentsTableGroupCell>)groupCell {
  jint idx = [((id<JavaUtilList>) nil_chk(groupHeaders_)) indexOfWithId:groupCell];
  if (idx >= 0) {
    (void) [((id<JavaUtilList>) nil_chk(groupHeaders_)) removeWithInt:idx];
    [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) fireCollectionElementRemovedEventWithNSString:OrgOssPdfreporterComponentsTableStandardBaseColumn_PROPERTY_GROUP_HEADERS withId:groupCell withInt:idx];
  }
  return idx >= 0;
}

- (void)setGroupFooterWithNSString:(NSString *)groupName
withOrgOssPdfreporterComponentsTableCell:(id<OrgOssPdfreporterComponentsTableCell>)cell {
  jint idx = [self findGroupCellIndexWithJavaUtilList:groupFooters_ withNSString:groupName];
  if (idx >= 0) {
    id<OrgOssPdfreporterComponentsTableGroupCell> old = [((id<JavaUtilList>) nil_chk(groupFooters_)) getWithInt:idx];
    if (cell == nil) {
      (void) [((id<JavaUtilList>) nil_chk(groupFooters_)) removeWithInt:idx];
      [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) fireCollectionElementRemovedEventWithNSString:OrgOssPdfreporterComponentsTableStandardBaseColumn_PROPERTY_GROUP_FOOTERS withId:old withInt:idx];
    }
    else {
      OrgOssPdfreporterComponentsTableStandardGroupCell *groupCell = new_OrgOssPdfreporterComponentsTableStandardGroupCell_initWithNSString_withOrgOssPdfreporterComponentsTableCell_(groupName, cell);
      (void) [((id<JavaUtilList>) nil_chk(groupFooters_)) setWithInt:idx withId:groupCell];
      [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) fireIndexedPropertyChangeWithNSString:OrgOssPdfreporterComponentsTableStandardBaseColumn_PROPERTY_GROUP_FOOTERS withInt:idx withId:old withId:groupCell];
    }
  }
  else if (cell != nil) {
    OrgOssPdfreporterComponentsTableStandardGroupCell *groupCell = new_OrgOssPdfreporterComponentsTableStandardGroupCell_initWithNSString_withOrgOssPdfreporterComponentsTableCell_(groupName, cell);
    [self addGroupFooterWithOrgOssPdfreporterComponentsTableGroupCell:groupCell];
  }
}

- (void)setGroupHeaderWithNSString:(NSString *)groupName
withOrgOssPdfreporterComponentsTableCell:(id<OrgOssPdfreporterComponentsTableCell>)cell {
  jint idx = [self findGroupCellIndexWithJavaUtilList:groupHeaders_ withNSString:groupName];
  if (idx >= 0) {
    id<OrgOssPdfreporterComponentsTableGroupCell> old = [((id<JavaUtilList>) nil_chk(groupHeaders_)) getWithInt:idx];
    if (cell == nil) {
      (void) [((id<JavaUtilList>) nil_chk(groupHeaders_)) removeWithInt:idx];
      [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) fireCollectionElementRemovedEventWithNSString:OrgOssPdfreporterComponentsTableStandardBaseColumn_PROPERTY_GROUP_HEADERS withId:old withInt:idx];
    }
    else {
      OrgOssPdfreporterComponentsTableStandardGroupCell *groupCell = new_OrgOssPdfreporterComponentsTableStandardGroupCell_initWithNSString_withOrgOssPdfreporterComponentsTableCell_(groupName, cell);
      (void) [((id<JavaUtilList>) nil_chk(groupHeaders_)) setWithInt:idx withId:groupCell];
      [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) fireIndexedPropertyChangeWithNSString:OrgOssPdfreporterComponentsTableStandardBaseColumn_PROPERTY_GROUP_HEADERS withInt:idx withId:old withId:groupCell];
    }
  }
  else if (cell != nil) {
    OrgOssPdfreporterComponentsTableStandardGroupCell *groupCell = new_OrgOssPdfreporterComponentsTableStandardGroupCell_initWithNSString_withOrgOssPdfreporterComponentsTableCell_(groupName, cell);
    [self addGroupHeaderWithOrgOssPdfreporterComponentsTableGroupCell:groupCell];
  }
}

- (jboolean)hasProperties {
  return propertiesMap_ != nil && [propertiesMap_ hasProperties];
}

- (OrgOssPdfreporterEngineJRPropertiesMap *)getPropertiesMap {
  if (propertiesMap_ == nil) {
    propertiesMap_ = new_OrgOssPdfreporterEngineJRPropertiesMap_init();
  }
  return propertiesMap_;
}

- (id<OrgOssPdfreporterEngineJRPropertiesHolder>)getParentProperties {
  return nil;
}

- (IOSObjectArray *)getPropertyExpressions {
  IOSObjectArray *props;
  if ([((id<JavaUtilList>) nil_chk(propertyExpressions_)) isEmpty]) {
    props = nil;
  }
  else {
    props = [((id<JavaUtilList>) nil_chk(propertyExpressions_)) toArrayWithNSObjectArray:[IOSObjectArray newArrayWithLength:[propertyExpressions_ size] type:OrgOssPdfreporterEngineJRPropertyExpression_class_()]];
  }
  return props;
}

- (void)addPropertyExpressionWithOrgOssPdfreporterEngineJRPropertyExpression:(id<OrgOssPdfreporterEngineJRPropertyExpression>)propertyExpression {
  [((id<JavaUtilList>) nil_chk(propertyExpressions_)) addWithId:propertyExpression];
  [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) fireCollectionElementAddedEventWithNSString:OrgOssPdfreporterEngineDesignJRDesignElement_PROPERTY_PROPERTY_EXPRESSIONS withId:propertyExpression withInt:[((id<JavaUtilList>) nil_chk(propertyExpressions_)) size] - 1];
}

- (void)removePropertyExpressionWithOrgOssPdfreporterEngineJRPropertyExpression:(id<OrgOssPdfreporterEngineJRPropertyExpression>)propertyExpression {
  jint idx = [((id<JavaUtilList>) nil_chk(propertyExpressions_)) indexOfWithId:propertyExpression];
  if (idx >= 0) {
    (void) [((id<JavaUtilList>) nil_chk(propertyExpressions_)) removeWithInt:idx];
    [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) fireCollectionElementRemovedEventWithNSString:OrgOssPdfreporterEngineDesignJRDesignElement_PROPERTY_PROPERTY_EXPRESSIONS withId:propertyExpression withInt:idx];
  }
}

- (id<OrgOssPdfreporterEngineJRPropertyExpression>)removePropertyExpressionWithNSString:(NSString *)name {
  id<OrgOssPdfreporterEngineJRPropertyExpression> removed = nil;
  for (id<JavaUtilListIterator> it = [((id<JavaUtilList>) nil_chk(propertyExpressions_)) listIterator]; [((id<JavaUtilListIterator>) nil_chk(it)) hasNext]; ) {
    id<OrgOssPdfreporterEngineJRPropertyExpression> prop = [it next];
    if ([((NSString *) nil_chk(name)) isEqual:[((id<OrgOssPdfreporterEngineJRPropertyExpression>) nil_chk(prop)) getName]]) {
      removed = prop;
      jint idx = [it previousIndex];
      [it remove];
      [((OrgOssPdfreporterEngineDesignEventsJRPropertyChangeSupport *) nil_chk([self getEventSupport])) fireCollectionElementRemovedEventWithNSString:OrgOssPdfreporterEngineDesignJRDesignElement_PROPERTY_PROPERTY_EXPRESSIONS withId:removed withInt:idx];
      break;
    }
  }
  return removed;
}

- (id<JavaUtilList>)getPropertyExpressionsList {
  return propertyExpressions_;
}

- (void)readObjectWithJavaIoObjectInputStream:(JavaIoObjectInputStream *)inArg {
  [((JavaIoObjectInputStream *) nil_chk(inArg)) defaultReadObject];
  if (propertyExpressions_ == nil) {
    propertyExpressions_ = new_JavaUtilArrayList_init();
  }
}

- (id)copyWithZone:(NSZone *)zone {
  return [self clone];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "StandardBaseColumn", NULL, 0x1, NULL, NULL },
    { "initWithOrgOssPdfreporterComponentsTableBaseColumn:withOrgOssPdfreporterComponentsTableColumnFactory:", "StandardBaseColumn", NULL, 0x1, NULL, NULL },
    { "copyPropertyExpressionsWithOrgOssPdfreporterComponentsTableBaseColumn:withOrgOssPdfreporterComponentsTableColumnFactory:", "copyPropertyExpressions", "V", 0x2, NULL, NULL },
    { "getUUID", NULL, "Lorg.oss.pdfreporter.uses.java.util.UUID;", 0x1, NULL, NULL },
    { "setUUIDWithOrgOssPdfreporterUsesJavaUtilUUID:", "setUUID", "V", 0x1, NULL, NULL },
    { "getColumnHeader", NULL, "Lorg.oss.pdfreporter.components.table.Cell;", 0x1, NULL, NULL },
    { "getColumnFooter", NULL, "Lorg.oss.pdfreporter.components.table.Cell;", 0x1, NULL, NULL },
    { "getPrintWhenExpression", NULL, "Lorg.oss.pdfreporter.engine.JRExpression;", 0x1, NULL, NULL },
    { "setPrintWhenExpressionWithOrgOssPdfreporterEngineJRExpression:", "setPrintWhenExpression", "V", 0x1, NULL, NULL },
    { "setColumnHeaderWithOrgOssPdfreporterComponentsTableCell:", "setColumnHeader", "V", 0x1, NULL, NULL },
    { "setColumnFooterWithOrgOssPdfreporterComponentsTableCell:", "setColumnFooter", "V", 0x1, NULL, NULL },
    { "clone", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "getTableHeader", NULL, "Lorg.oss.pdfreporter.components.table.Cell;", 0x1, NULL, NULL },
    { "setTableHeaderWithOrgOssPdfreporterComponentsTableCell:", "setTableHeader", "V", 0x1, NULL, NULL },
    { "getTableFooter", NULL, "Lorg.oss.pdfreporter.components.table.Cell;", 0x1, NULL, NULL },
    { "setTableFooterWithOrgOssPdfreporterComponentsTableCell:", "setTableFooter", "V", 0x1, NULL, NULL },
    { "getWidth", NULL, "Ljava.lang.Integer;", 0x1, NULL, NULL },
    { "setWidthWithJavaLangInteger:", "setWidth", "V", 0x1, NULL, NULL },
    { "getEventSupport", NULL, "Lorg.oss.pdfreporter.engine.design.events.JRPropertyChangeSupport;", 0x1, NULL, NULL },
    { "getGroupHeaders", NULL, "Ljava.util.List;", 0x1, NULL, "()Ljava/util/List<Lorg/oss/pdfreporter/components/table/GroupCell;>;" },
    { "getGroupFooters", NULL, "Ljava.util.List;", 0x1, NULL, "()Ljava/util/List<Lorg/oss/pdfreporter/components/table/GroupCell;>;" },
    { "findGroupCellIndexWithJavaUtilList:withNSString:", "findGroupCellIndex", "I", 0x4, NULL, "(Ljava/util/List<Lorg/oss/pdfreporter/components/table/GroupCell;>;Ljava/lang/String;)I" },
    { "getGroupFooterWithNSString:", "getGroupFooter", "Lorg.oss.pdfreporter.components.table.Cell;", 0x1, NULL, NULL },
    { "getGroupHeaderWithNSString:", "getGroupHeader", "Lorg.oss.pdfreporter.components.table.Cell;", 0x1, NULL, NULL },
    { "setGroupHeadersWithJavaUtilList:", "setGroupHeaders", "V", 0x1, NULL, "(Ljava/util/List<Lorg/oss/pdfreporter/components/table/GroupCell;>;)V" },
    { "setGroupFootersWithJavaUtilList:", "setGroupFooters", "V", 0x1, NULL, "(Ljava/util/List<Lorg/oss/pdfreporter/components/table/GroupCell;>;)V" },
    { "addGroupHeaderWithOrgOssPdfreporterComponentsTableGroupCell:", "addGroupHeader", "V", 0x1, NULL, NULL },
    { "addGroupFooterWithOrgOssPdfreporterComponentsTableGroupCell:", "addGroupFooter", "V", 0x1, NULL, NULL },
    { "removeGroupFooterWithOrgOssPdfreporterComponentsTableGroupCell:", "removeGroupFooter", "Z", 0x1, NULL, NULL },
    { "removeGroupHeaderWithOrgOssPdfreporterComponentsTableGroupCell:", "removeGroupHeader", "Z", 0x1, NULL, NULL },
    { "setGroupFooterWithNSString:withOrgOssPdfreporterComponentsTableCell:", "setGroupFooter", "V", 0x1, NULL, NULL },
    { "setGroupHeaderWithNSString:withOrgOssPdfreporterComponentsTableCell:", "setGroupHeader", "V", 0x1, NULL, NULL },
    { "hasProperties", NULL, "Z", 0x1, NULL, NULL },
    { "getPropertiesMap", NULL, "Lorg.oss.pdfreporter.engine.JRPropertiesMap;", 0x1, NULL, NULL },
    { "getParentProperties", NULL, "Lorg.oss.pdfreporter.engine.JRPropertiesHolder;", 0x1, NULL, NULL },
    { "getPropertyExpressions", NULL, "[Lorg.oss.pdfreporter.engine.JRPropertyExpression;", 0x1, NULL, NULL },
    { "addPropertyExpressionWithOrgOssPdfreporterEngineJRPropertyExpression:", "addPropertyExpression", "V", 0x1, NULL, NULL },
    { "removePropertyExpressionWithOrgOssPdfreporterEngineJRPropertyExpression:", "removePropertyExpression", "V", 0x1, NULL, NULL },
    { "removePropertyExpressionWithNSString:", "removePropertyExpression", "Lorg.oss.pdfreporter.engine.JRPropertyExpression;", 0x1, NULL, NULL },
    { "getPropertyExpressionsList", NULL, "Ljava.util.List;", 0x1, NULL, "()Ljava/util/List<Lorg/oss/pdfreporter/engine/JRPropertyExpression;>;" },
    { "readObjectWithJavaIoObjectInputStream:", "readObject", "V", 0x2, "Ljava.io.IOException;Ljava.lang.ClassNotFoundException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "serialVersionUID", 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgOssPdfreporterComponentsTableStandardBaseColumn_serialVersionUID },
    { "PROPERTY_PRINT_WHEN_EXPRESSION", "PROPERTY_PRINT_WHEN_EXPRESSION", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterComponentsTableStandardBaseColumn_PROPERTY_PRINT_WHEN_EXPRESSION, NULL, .constantValue.asLong = 0 },
    { "PROPERTY_TABLE_HEADER", "PROPERTY_TABLE_HEADER", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterComponentsTableStandardBaseColumn_PROPERTY_TABLE_HEADER, NULL, .constantValue.asLong = 0 },
    { "PROPERTY_TABLE_FOOTER", "PROPERTY_TABLE_FOOTER", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterComponentsTableStandardBaseColumn_PROPERTY_TABLE_FOOTER, NULL, .constantValue.asLong = 0 },
    { "PROPERTY_COLUMN_HEADER", "PROPERTY_COLUMN_HEADER", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterComponentsTableStandardBaseColumn_PROPERTY_COLUMN_HEADER, NULL, .constantValue.asLong = 0 },
    { "PROPERTY_COLUMN_FOOTER", "PROPERTY_COLUMN_FOOTER", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterComponentsTableStandardBaseColumn_PROPERTY_COLUMN_FOOTER, NULL, .constantValue.asLong = 0 },
    { "PROPERTY_GROUP_HEADERS", "PROPERTY_GROUP_HEADERS", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterComponentsTableStandardBaseColumn_PROPERTY_GROUP_HEADERS, NULL, .constantValue.asLong = 0 },
    { "PROPERTY_GROUP_FOOTERS", "PROPERTY_GROUP_FOOTERS", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterComponentsTableStandardBaseColumn_PROPERTY_GROUP_FOOTERS, NULL, .constantValue.asLong = 0 },
    { "PROPERTY_WIDTH", "PROPERTY_WIDTH", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterComponentsTableStandardBaseColumn_PROPERTY_WIDTH, NULL, .constantValue.asLong = 0 },
    { "uuid_", NULL, 0x2, "Lorg.oss.pdfreporter.uses.java.util.UUID;", NULL, NULL, .constantValue.asLong = 0 },
    { "printWhenExpression_", NULL, 0x2, "Lorg.oss.pdfreporter.engine.JRExpression;", NULL, NULL, .constantValue.asLong = 0 },
    { "tableHeader_", NULL, 0x2, "Lorg.oss.pdfreporter.components.table.Cell;", NULL, NULL, .constantValue.asLong = 0 },
    { "tableFooter_", NULL, 0x2, "Lorg.oss.pdfreporter.components.table.Cell;", NULL, NULL, .constantValue.asLong = 0 },
    { "groupHeaders_", NULL, 0x2, "Ljava.util.List;", NULL, "Ljava/util/List<Lorg/oss/pdfreporter/components/table/GroupCell;>;", .constantValue.asLong = 0 },
    { "groupFooters_", NULL, 0x2, "Ljava.util.List;", NULL, "Ljava/util/List<Lorg/oss/pdfreporter/components/table/GroupCell;>;", .constantValue.asLong = 0 },
    { "columnHeader_", NULL, 0x2, "Lorg.oss.pdfreporter.components.table.Cell;", NULL, NULL, .constantValue.asLong = 0 },
    { "columnFooter_", NULL, 0x2, "Lorg.oss.pdfreporter.components.table.Cell;", NULL, NULL, .constantValue.asLong = 0 },
    { "width_", NULL, 0x2, "Ljava.lang.Integer;", NULL, NULL, .constantValue.asLong = 0 },
    { "propertiesMap_", NULL, 0x2, "Lorg.oss.pdfreporter.engine.JRPropertiesMap;", NULL, NULL, .constantValue.asLong = 0 },
    { "propertyExpressions_", NULL, 0x2, "Ljava.util.List;", NULL, "Ljava/util/List<Lorg/oss/pdfreporter/engine/JRPropertyExpression;>;", .constantValue.asLong = 0 },
    { "eventSupport_", NULL, 0x82, "Lorg.oss.pdfreporter.engine.design.events.JRPropertyChangeSupport;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterComponentsTableStandardBaseColumn = { 2, "StandardBaseColumn", "org.oss.pdfreporter.components.table", NULL, 0x401, 41, methods, 21, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterComponentsTableStandardBaseColumn;
}

@end

void OrgOssPdfreporterComponentsTableStandardBaseColumn_init(OrgOssPdfreporterComponentsTableStandardBaseColumn *self) {
  NSObject_init(self);
  self->propertyExpressions_ = new_JavaUtilArrayList_init();
  self->groupHeaders_ = new_JavaUtilArrayList_init();
  self->groupFooters_ = new_JavaUtilArrayList_init();
}

void OrgOssPdfreporterComponentsTableStandardBaseColumn_initWithOrgOssPdfreporterComponentsTableBaseColumn_withOrgOssPdfreporterComponentsTableColumnFactory_(OrgOssPdfreporterComponentsTableStandardBaseColumn *self, id<OrgOssPdfreporterComponentsTableBaseColumn> column, OrgOssPdfreporterComponentsTableColumnFactory *factory) {
  NSObject_init(self);
  self->propertyExpressions_ = new_JavaUtilArrayList_init();
  self->uuid_ = [((id<OrgOssPdfreporterComponentsTableBaseColumn>) nil_chk(column)) getUUID];
  self->printWhenExpression_ = [((OrgOssPdfreporterEngineBaseJRBaseObjectFactory *) nil_chk([((OrgOssPdfreporterComponentsTableColumnFactory *) nil_chk(factory)) getBaseObjectFactory])) getExpressionWithOrgOssPdfreporterEngineJRExpression:[column getPrintWhenExpression]];
  self->tableHeader_ = [factory createCellWithOrgOssPdfreporterComponentsTableCell:[column getTableHeader]];
  self->tableFooter_ = [factory createCellWithOrgOssPdfreporterComponentsTableCell:[column getTableFooter]];
  self->groupHeaders_ = [factory createGroupCellsWithJavaUtilList:[column getGroupHeaders]];
  self->groupFooters_ = [factory createGroupCellsWithJavaUtilList:[column getGroupFooters]];
  self->columnHeader_ = [factory createCellWithOrgOssPdfreporterComponentsTableCell:[column getColumnHeader]];
  self->columnFooter_ = [factory createCellWithOrgOssPdfreporterComponentsTableCell:[column getColumnFooter]];
  self->width_ = [column getWidth];
  self->propertiesMap_ = OrgOssPdfreporterEngineJRPropertiesMap_getPropertiesCloneWithOrgOssPdfreporterEngineJRPropertiesHolder_(column);
  OrgOssPdfreporterComponentsTableStandardBaseColumn_copyPropertyExpressionsWithOrgOssPdfreporterComponentsTableBaseColumn_withOrgOssPdfreporterComponentsTableColumnFactory_(self, column, factory);
}

void OrgOssPdfreporterComponentsTableStandardBaseColumn_copyPropertyExpressionsWithOrgOssPdfreporterComponentsTableBaseColumn_withOrgOssPdfreporterComponentsTableColumnFactory_(OrgOssPdfreporterComponentsTableStandardBaseColumn *self, id<OrgOssPdfreporterComponentsTableBaseColumn> column, OrgOssPdfreporterComponentsTableColumnFactory *factory) {
  IOSObjectArray *props = [((id<OrgOssPdfreporterComponentsTableBaseColumn>) nil_chk(column)) getPropertyExpressions];
  if (props != nil && props->size_ > 0) {
    self->propertyExpressions_ = new_JavaUtilArrayList_initWithInt_(props->size_);
    for (jint i = 0; i < props->size_; i++) {
      [((id<JavaUtilList>) nil_chk(self->propertyExpressions_)) addWithId:[((OrgOssPdfreporterEngineBaseJRBaseObjectFactory *) nil_chk([((OrgOssPdfreporterComponentsTableColumnFactory *) nil_chk(factory)) getBaseObjectFactory])) getPropertyExpressionWithOrgOssPdfreporterEngineJRPropertyExpression:IOSObjectArray_Get(props, i)]];
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterComponentsTableStandardBaseColumn)
