//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/repo/RepositoryManager.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "java/util/logging/Logger.h"
#include "org/oss/pdfreporter/repo/RepositoryManager.h"

@interface OrgOssPdfreporterRepoRepositoryManager () {
 @public
  id<JavaUtilList> repositoryFolders_;
}

- (instancetype)init;

- (void)ensureDefaultFoldersSet;

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterRepoRepositoryManager, repositoryFolders_, id<JavaUtilList>)

inline JavaUtilLoggingLogger *OrgOssPdfreporterRepoRepositoryManager_get_logger();
static JavaUtilLoggingLogger *OrgOssPdfreporterRepoRepositoryManager_logger;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterRepoRepositoryManager, logger, JavaUtilLoggingLogger *)

inline OrgOssPdfreporterRepoRepositoryManager *OrgOssPdfreporterRepoRepositoryManager_get_INSTANCE();
static OrgOssPdfreporterRepoRepositoryManager *OrgOssPdfreporterRepoRepositoryManager_INSTANCE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterRepoRepositoryManager, INSTANCE, OrgOssPdfreporterRepoRepositoryManager *)

inline NSString *OrgOssPdfreporterRepoRepositoryManager_get_DEFAULT_RESOURCE_FOLDER();
static NSString *OrgOssPdfreporterRepoRepositoryManager_DEFAULT_RESOURCE_FOLDER = @"./resource/";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterRepoRepositoryManager, DEFAULT_RESOURCE_FOLDER, NSString *)

inline NSString *OrgOssPdfreporterRepoRepositoryManager_get_DEFAULT_REPORT_FOLDER();
static NSString *OrgOssPdfreporterRepoRepositoryManager_DEFAULT_REPORT_FOLDER = @"./data/";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterRepoRepositoryManager, DEFAULT_REPORT_FOLDER, NSString *)

__attribute__((unused)) static void OrgOssPdfreporterRepoRepositoryManager_init(OrgOssPdfreporterRepoRepositoryManager *self);

__attribute__((unused)) static OrgOssPdfreporterRepoRepositoryManager *new_OrgOssPdfreporterRepoRepositoryManager_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgOssPdfreporterRepoRepositoryManager *create_OrgOssPdfreporterRepoRepositoryManager_init();

__attribute__((unused)) static void OrgOssPdfreporterRepoRepositoryManager_ensureDefaultFoldersSet(OrgOssPdfreporterRepoRepositoryManager *self);

J2OBJC_INITIALIZED_DEFN(OrgOssPdfreporterRepoRepositoryManager)

NSString *OrgOssPdfreporterRepoRepositoryManager_PATH_DELIMITER = @"/";

@implementation OrgOssPdfreporterRepoRepositoryManager

+ (NSString *)PATH_DELIMITER {
  return OrgOssPdfreporterRepoRepositoryManager_PATH_DELIMITER;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterRepoRepositoryManager_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (OrgOssPdfreporterRepoRepositoryManager *)getInstance {
  return OrgOssPdfreporterRepoRepositoryManager_getInstance();
}

- (id<JavaUtilList>)getRepositoryFolders {
  OrgOssPdfreporterRepoRepositoryManager_ensureDefaultFoldersSet(self);
  return repositoryFolders_;
}

- (void)setDefaultResourceFolderWithNSString:(NSString *)folder {
  (void) [((id<JavaUtilList>) nil_chk(repositoryFolders_)) setWithInt:0 withId:folder];
}

- (NSString *)getDefaultResourceFolder {
  return [((id<JavaUtilList>) nil_chk(repositoryFolders_)) getWithInt:0];
}

- (void)setDefaulReportFolderWithNSString:(NSString *)folder {
  (void) [((id<JavaUtilList>) nil_chk(repositoryFolders_)) setWithInt:1 withId:folder];
}

- (NSString *)getDefaulReportFolder {
  return [((id<JavaUtilList>) nil_chk(repositoryFolders_)) getWithInt:1];
}

- (void)addExtraReportFolderWithNSString:(NSString *)folder {
  if (folder != nil) {
    [((id<JavaUtilList>) nil_chk(repositoryFolders_)) addWithId:folder];
  }
}

- (void)reset {
  [((id<JavaUtilList>) nil_chk(repositoryFolders_)) clear];
  [repositoryFolders_ addWithId:nil];
  [repositoryFolders_ addWithId:nil];
}

- (void)ensureDefaultFoldersSet {
  OrgOssPdfreporterRepoRepositoryManager_ensureDefaultFoldersSet(self);
}

- (NSString *)description {
  return JreStrcat("$@C", @"Open Software SolutionsRepositoryManager [repositoryFolders=", repositoryFolders_, ']');
}

+ (void)initialize {
  if (self == [OrgOssPdfreporterRepoRepositoryManager class]) {
    OrgOssPdfreporterRepoRepositoryManager_logger = JavaUtilLoggingLogger_getLoggerWithNSString_([OrgOssPdfreporterRepoRepositoryManager_class_() getName]);
    OrgOssPdfreporterRepoRepositoryManager_INSTANCE = new_OrgOssPdfreporterRepoRepositoryManager_init();
    J2OBJC_SET_INITIALIZED(OrgOssPdfreporterRepoRepositoryManager)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "RepositoryManager", NULL, 0x2, NULL, NULL },
    { "getInstance", NULL, "Lorg.oss.pdfreporter.repo.RepositoryManager;", 0x9, NULL, NULL },
    { "getRepositoryFolders", NULL, "Ljava.util.List;", 0x1, NULL, "()Ljava/util/List<Ljava/lang/String;>;" },
    { "setDefaultResourceFolderWithNSString:", "setDefaultResourceFolder", "V", 0x1, NULL, NULL },
    { "getDefaultResourceFolder", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "setDefaulReportFolderWithNSString:", "setDefaulReportFolder", "V", 0x1, NULL, NULL },
    { "getDefaulReportFolder", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "addExtraReportFolderWithNSString:", "addExtraReportFolder", "V", 0x1, NULL, NULL },
    { "reset", NULL, "V", 0x1, NULL, NULL },
    { "ensureDefaultFoldersSet", NULL, "V", 0x2, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "logger", "logger", 0x1a, "Ljava.util.logging.Logger;", &OrgOssPdfreporterRepoRepositoryManager_logger, NULL, .constantValue.asLong = 0 },
    { "PATH_DELIMITER", "PATH_DELIMITER", 0x19, "Ljava.lang.String;", &OrgOssPdfreporterRepoRepositoryManager_PATH_DELIMITER, NULL, .constantValue.asLong = 0 },
    { "INSTANCE", "INSTANCE", 0x1a, "Lorg.oss.pdfreporter.repo.RepositoryManager;", &OrgOssPdfreporterRepoRepositoryManager_INSTANCE, NULL, .constantValue.asLong = 0 },
    { "DEFAULT_RESOURCE_FOLDER", "DEFAULT_RESOURCE_FOLDER", 0x1a, "Ljava.lang.String;", &OrgOssPdfreporterRepoRepositoryManager_DEFAULT_RESOURCE_FOLDER, NULL, .constantValue.asLong = 0 },
    { "DEFAULT_REPORT_FOLDER", "DEFAULT_REPORT_FOLDER", 0x1a, "Ljava.lang.String;", &OrgOssPdfreporterRepoRepositoryManager_DEFAULT_REPORT_FOLDER, NULL, .constantValue.asLong = 0 },
    { "repositoryFolders_", NULL, 0x12, "Ljava.util.List;", NULL, "Ljava/util/List<Ljava/lang/String;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterRepoRepositoryManager = { 2, "RepositoryManager", "org.oss.pdfreporter.repo", NULL, 0x1, 11, methods, 6, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterRepoRepositoryManager;
}

@end

void OrgOssPdfreporterRepoRepositoryManager_init(OrgOssPdfreporterRepoRepositoryManager *self) {
  NSObject_init(self);
  self->repositoryFolders_ = new_JavaUtilArrayList_init();
  [self reset];
}

OrgOssPdfreporterRepoRepositoryManager *new_OrgOssPdfreporterRepoRepositoryManager_init() {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterRepoRepositoryManager, init)
}

OrgOssPdfreporterRepoRepositoryManager *create_OrgOssPdfreporterRepoRepositoryManager_init() {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterRepoRepositoryManager, init)
}

OrgOssPdfreporterRepoRepositoryManager *OrgOssPdfreporterRepoRepositoryManager_getInstance() {
  OrgOssPdfreporterRepoRepositoryManager_initialize();
  return OrgOssPdfreporterRepoRepositoryManager_INSTANCE;
}

void OrgOssPdfreporterRepoRepositoryManager_ensureDefaultFoldersSet(OrgOssPdfreporterRepoRepositoryManager *self) {
  if ([self getDefaultResourceFolder] == nil) {
    [((JavaUtilLoggingLogger *) nil_chk(OrgOssPdfreporterRepoRepositoryManager_logger)) warningWithNSString:JreStrcat("$$$", @"Set Resourcefolder to '", OrgOssPdfreporterRepoRepositoryManager_DEFAULT_RESOURCE_FOLDER, @"', you should call setDefaultResourceFolder().")];
    [self setDefaultResourceFolderWithNSString:OrgOssPdfreporterRepoRepositoryManager_DEFAULT_RESOURCE_FOLDER];
  }
  if ([self getDefaulReportFolder] == nil) {
    [((JavaUtilLoggingLogger *) nil_chk(OrgOssPdfreporterRepoRepositoryManager_logger)) warningWithNSString:JreStrcat("$$$", @"Set Reportfolder to '", OrgOssPdfreporterRepoRepositoryManager_DEFAULT_REPORT_FOLDER, @"', you should call setDefaulReportFolder().")];
    [self setDefaulReportFolderWithNSString:OrgOssPdfreporterRepoRepositoryManager_DEFAULT_REPORT_FOLDER];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterRepoRepositoryManager)
