//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/repo/FileResourceLoader.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/io/File.h"
#include "java/io/FileNotFoundException.h"
#include "java/io/FilenameFilter.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/util/AbstractList.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "java/util/logging/Level.h"
#include "java/util/logging/Logger.h"
#include "org/oss/pdfreporter/net/FileUrl.h"
#include "org/oss/pdfreporter/net/IURL.h"
#include "org/oss/pdfreporter/net/MalformedURLException.h"
#include "org/oss/pdfreporter/net/factory/INetFactory.h"
#include "org/oss/pdfreporter/registry/IRegistry.h"
#include "org/oss/pdfreporter/repo/FileResourceLoader.h"
#include "org/oss/pdfreporter/repo/FileSystemResource.h"
#include "org/oss/pdfreporter/repo/RepositoryManager.h"

@interface OrgOssPdfreporterRepoFileResourceLoader ()

+ (id<JavaUtilList>)findFilesWithJavaUtilList:(id<JavaUtilList>)rootFolders
                     withJavaIoFilenameFilter:(id<JavaIoFilenameFilter>)filter
                                  withBoolean:(jboolean)onlyFirst;

+ (id<JavaUtilList>)findFilesWithJavaIoFile:(JavaIoFile *)folder
                   withJavaIoFilenameFilter:(id<JavaIoFilenameFilter>)filter
                                withBoolean:(jboolean)onlyFirst;

@end

inline JavaUtilLoggingLogger *OrgOssPdfreporterRepoFileResourceLoader_get_logger();
static JavaUtilLoggingLogger *OrgOssPdfreporterRepoFileResourceLoader_logger;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterRepoFileResourceLoader, logger, JavaUtilLoggingLogger *)

inline NSString *OrgOssPdfreporterRepoFileResourceLoader_get_URL_MATCH();
static NSString *OrgOssPdfreporterRepoFileResourceLoader_URL_MATCH = @"^[a-z]+://.*";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterRepoFileResourceLoader, URL_MATCH, NSString *)

__attribute__((unused)) static id<JavaUtilList> OrgOssPdfreporterRepoFileResourceLoader_findFilesWithJavaUtilList_withJavaIoFilenameFilter_withBoolean_(id<JavaUtilList> rootFolders, id<JavaIoFilenameFilter> filter, jboolean onlyFirst);

__attribute__((unused)) static id<JavaUtilList> OrgOssPdfreporterRepoFileResourceLoader_findFilesWithJavaIoFile_withJavaIoFilenameFilter_withBoolean_(JavaIoFile *folder, id<JavaIoFilenameFilter> filter, jboolean onlyFirst);

@interface OrgOssPdfreporterRepoFileResourceLoader_FileResourceFilter : NSObject < JavaIoFilenameFilter > {
 @public
  NSString *path_, *file_;
}

- (instancetype)initWithNSString:(NSString *)resource;

- (jboolean)acceptWithJavaIoFile:(JavaIoFile *)dir
                    withNSString:(NSString *)name;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgOssPdfreporterRepoFileResourceLoader_FileResourceFilter)

J2OBJC_FIELD_SETTER(OrgOssPdfreporterRepoFileResourceLoader_FileResourceFilter, path_, NSString *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterRepoFileResourceLoader_FileResourceFilter, file_, NSString *)

__attribute__((unused)) static void OrgOssPdfreporterRepoFileResourceLoader_FileResourceFilter_initWithNSString_(OrgOssPdfreporterRepoFileResourceLoader_FileResourceFilter *self, NSString *resource);

__attribute__((unused)) static OrgOssPdfreporterRepoFileResourceLoader_FileResourceFilter *new_OrgOssPdfreporterRepoFileResourceLoader_FileResourceFilter_initWithNSString_(NSString *resource) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgOssPdfreporterRepoFileResourceLoader_FileResourceFilter *create_OrgOssPdfreporterRepoFileResourceLoader_FileResourceFilter_initWithNSString_(NSString *resource);

J2OBJC_TYPE_LITERAL_HEADER(OrgOssPdfreporterRepoFileResourceLoader_FileResourceFilter)

@interface OrgOssPdfreporterRepoFileResourceLoader_AccepptAll : NSObject < JavaIoFilenameFilter >

- (jboolean)acceptWithJavaIoFile:(JavaIoFile *)dir
                    withNSString:(NSString *)name;

- (NSString *)description;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgOssPdfreporterRepoFileResourceLoader_AccepptAll)

__attribute__((unused)) static void OrgOssPdfreporterRepoFileResourceLoader_AccepptAll_init(OrgOssPdfreporterRepoFileResourceLoader_AccepptAll *self);

__attribute__((unused)) static OrgOssPdfreporterRepoFileResourceLoader_AccepptAll *new_OrgOssPdfreporterRepoFileResourceLoader_AccepptAll_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgOssPdfreporterRepoFileResourceLoader_AccepptAll *create_OrgOssPdfreporterRepoFileResourceLoader_AccepptAll_init();

J2OBJC_TYPE_LITERAL_HEADER(OrgOssPdfreporterRepoFileResourceLoader_AccepptAll)

@interface OrgOssPdfreporterRepoFileResourceLoader_DelegatingUrlList : JavaUtilAbstractList {
 @public
  id<JavaUtilList> delegate_;
}

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)delegate;

- (id<OrgOssPdfreporterNetIURL>)getWithInt:(jint)index;

- (jint)size;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgOssPdfreporterRepoFileResourceLoader_DelegatingUrlList)

J2OBJC_FIELD_SETTER(OrgOssPdfreporterRepoFileResourceLoader_DelegatingUrlList, delegate_, id<JavaUtilList>)

__attribute__((unused)) static void OrgOssPdfreporterRepoFileResourceLoader_DelegatingUrlList_initWithJavaUtilList_(OrgOssPdfreporterRepoFileResourceLoader_DelegatingUrlList *self, id<JavaUtilList> delegate);

__attribute__((unused)) static OrgOssPdfreporterRepoFileResourceLoader_DelegatingUrlList *new_OrgOssPdfreporterRepoFileResourceLoader_DelegatingUrlList_initWithJavaUtilList_(id<JavaUtilList> delegate) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgOssPdfreporterRepoFileResourceLoader_DelegatingUrlList *create_OrgOssPdfreporterRepoFileResourceLoader_DelegatingUrlList_initWithJavaUtilList_(id<JavaUtilList> delegate);

J2OBJC_TYPE_LITERAL_HEADER(OrgOssPdfreporterRepoFileResourceLoader_DelegatingUrlList)

@interface OrgOssPdfreporterRepoFileResourceLoader_DelegatingFileSystemResourceList : JavaUtilAbstractList {
 @public
  id<JavaUtilList> delegate_;
}

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)delegate;

- (OrgOssPdfreporterRepoFileSystemResource *)getWithInt:(jint)index;

- (jint)size;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgOssPdfreporterRepoFileResourceLoader_DelegatingFileSystemResourceList)

J2OBJC_FIELD_SETTER(OrgOssPdfreporterRepoFileResourceLoader_DelegatingFileSystemResourceList, delegate_, id<JavaUtilList>)

__attribute__((unused)) static void OrgOssPdfreporterRepoFileResourceLoader_DelegatingFileSystemResourceList_initWithJavaUtilList_(OrgOssPdfreporterRepoFileResourceLoader_DelegatingFileSystemResourceList *self, id<JavaUtilList> delegate);

__attribute__((unused)) static OrgOssPdfreporterRepoFileResourceLoader_DelegatingFileSystemResourceList *new_OrgOssPdfreporterRepoFileResourceLoader_DelegatingFileSystemResourceList_initWithJavaUtilList_(id<JavaUtilList> delegate) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgOssPdfreporterRepoFileResourceLoader_DelegatingFileSystemResourceList *create_OrgOssPdfreporterRepoFileResourceLoader_DelegatingFileSystemResourceList_initWithJavaUtilList_(id<JavaUtilList> delegate);

J2OBJC_TYPE_LITERAL_HEADER(OrgOssPdfreporterRepoFileResourceLoader_DelegatingFileSystemResourceList)

J2OBJC_INITIALIZED_DEFN(OrgOssPdfreporterRepoFileResourceLoader)

@implementation OrgOssPdfreporterRepoFileResourceLoader

+ (JavaIoInputStream *)getInputStreamWithNSString:(NSString *)resourceName {
  return OrgOssPdfreporterRepoFileResourceLoader_getInputStreamWithNSString_(resourceName);
}

+ (id<OrgOssPdfreporterNetIURL>)getURLWithNSString:(NSString *)resourceName {
  return OrgOssPdfreporterRepoFileResourceLoader_getURLWithNSString_(resourceName);
}

+ (id<JavaUtilList>)getConfiguredFileResources {
  return OrgOssPdfreporterRepoFileResourceLoader_getConfiguredFileResources();
}

+ (id<JavaUtilList>)findConfiguredFileResourcesWithNSString:(NSString *)resource {
  return OrgOssPdfreporterRepoFileResourceLoader_findConfiguredFileResourcesWithNSString_(resource);
}

+ (id<JavaUtilList>)findConfiguredFileSystemResourcesWithNSString:(NSString *)resource {
  return OrgOssPdfreporterRepoFileResourceLoader_findConfiguredFileSystemResourcesWithNSString_(resource);
}

+ (id<OrgOssPdfreporterNetIURL>)findFirstConfiguredFileResourceWithNSString:(NSString *)resource {
  return OrgOssPdfreporterRepoFileResourceLoader_findFirstConfiguredFileResourceWithNSString_(resource);
}

+ (id<JavaUtilList>)findFilesWithJavaUtilList:(id<JavaUtilList>)rootFolders
                     withJavaIoFilenameFilter:(id<JavaIoFilenameFilter>)filter
                                  withBoolean:(jboolean)onlyFirst {
  return OrgOssPdfreporterRepoFileResourceLoader_findFilesWithJavaUtilList_withJavaIoFilenameFilter_withBoolean_(rootFolders, filter, onlyFirst);
}

+ (id<JavaUtilList>)findFilesWithJavaIoFile:(JavaIoFile *)folder
                   withJavaIoFilenameFilter:(id<JavaIoFilenameFilter>)filter
                                withBoolean:(jboolean)onlyFirst {
  return OrgOssPdfreporterRepoFileResourceLoader_findFilesWithJavaIoFile_withJavaIoFilenameFilter_withBoolean_(folder, filter, onlyFirst);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterRepoFileResourceLoader_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)initialize {
  if (self == [OrgOssPdfreporterRepoFileResourceLoader class]) {
    OrgOssPdfreporterRepoFileResourceLoader_logger = JavaUtilLoggingLogger_getLoggerWithNSString_([OrgOssPdfreporterRepoFileResourceLoader_class_() getName]);
    J2OBJC_SET_INITIALIZED(OrgOssPdfreporterRepoFileResourceLoader)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getInputStreamWithNSString:", "getInputStream", "Ljava.io.InputStream;", 0x9, NULL, NULL },
    { "getURLWithNSString:", "getURL", "Lorg.oss.pdfreporter.net.IURL;", 0x9, NULL, NULL },
    { "getConfiguredFileResources", NULL, "Ljava.util.List;", 0x9, NULL, "()Ljava/util/List<Lorg/oss/pdfreporter/net/IURL;>;" },
    { "findConfiguredFileResourcesWithNSString:", "findConfiguredFileResources", "Ljava.util.List;", 0x9, NULL, "(Ljava/lang/String;)Ljava/util/List<Lorg/oss/pdfreporter/net/IURL;>;" },
    { "findConfiguredFileSystemResourcesWithNSString:", "findConfiguredFileSystemResources", "Ljava.util.List;", 0x9, NULL, "(Ljava/lang/String;)Ljava/util/List<Lorg/oss/pdfreporter/repo/FileSystemResource;>;" },
    { "findFirstConfiguredFileResourceWithNSString:", "findFirstConfiguredFileResource", "Lorg.oss.pdfreporter.net.IURL;", 0x9, NULL, NULL },
    { "findFilesWithJavaUtilList:withJavaIoFilenameFilter:withBoolean:", "findFiles", "Ljava.util.List;", 0xa, NULL, "(Ljava/util/List<Ljava/lang/String;>;Ljava/io/FilenameFilter;Z)Ljava/util/List<Ljava/io/File;>;" },
    { "findFilesWithJavaIoFile:withJavaIoFilenameFilter:withBoolean:", "findFiles", "Ljava.util.List;", 0xa, NULL, "(Ljava/io/File;Ljava/io/FilenameFilter;Z)Ljava/util/List<Ljava/io/File;>;" },
    { "init", "FileResourceLoader", NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "logger", "logger", 0x1a, "Ljava.util.logging.Logger;", &OrgOssPdfreporterRepoFileResourceLoader_logger, NULL, .constantValue.asLong = 0 },
    { "URL_MATCH", "URL_MATCH", 0x1a, "Ljava.lang.String;", &OrgOssPdfreporterRepoFileResourceLoader_URL_MATCH, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lorg.oss.pdfreporter.repo.FileResourceLoader$FileResourceFilter;", "Lorg.oss.pdfreporter.repo.FileResourceLoader$AccepptAll;", "Lorg.oss.pdfreporter.repo.FileResourceLoader$DelegatingUrlList;", "Lorg.oss.pdfreporter.repo.FileResourceLoader$DelegatingFileSystemResourceList;"};
  static const J2ObjcClassInfo _OrgOssPdfreporterRepoFileResourceLoader = { 2, "FileResourceLoader", "org.oss.pdfreporter.repo", NULL, 0x1, 9, methods, 2, fields, 0, NULL, 4, inner_classes, NULL, NULL };
  return &_OrgOssPdfreporterRepoFileResourceLoader;
}

@end

JavaIoInputStream *OrgOssPdfreporterRepoFileResourceLoader_getInputStreamWithNSString_(NSString *resourceName) {
  OrgOssPdfreporterRepoFileResourceLoader_initialize();
  @try {
    id<OrgOssPdfreporterNetIURL> url = OrgOssPdfreporterRepoFileResourceLoader_getURLWithNSString_(resourceName);
    return url == nil ? nil : [url openStream];
  }
  @catch (JavaIoFileNotFoundException *e) {
    [((JavaUtilLoggingLogger *) nil_chk(OrgOssPdfreporterRepoFileResourceLoader_logger)) logWithJavaUtilLoggingLevel:JreLoadStatic(JavaUtilLoggingLevel, SEVERE) withNSString:JreStrcat("$$", @"Error loading resource: ", resourceName) withNSException:e];
    return nil;
  }
  @catch (JavaIoIOException *e) {
    [((JavaUtilLoggingLogger *) nil_chk(OrgOssPdfreporterRepoFileResourceLoader_logger)) logWithJavaUtilLoggingLevel:JreLoadStatic(JavaUtilLoggingLevel, SEVERE) withNSString:JreStrcat("$$", @"Failed to open connection: ", resourceName) withNSException:e];
    return nil;
  }
}

id<OrgOssPdfreporterNetIURL> OrgOssPdfreporterRepoFileResourceLoader_getURLWithNSString_(NSString *resourceName) {
  OrgOssPdfreporterRepoFileResourceLoader_initialize();
  @try {
    if ([((NSString *) nil_chk(resourceName)) matches:OrgOssPdfreporterRepoFileResourceLoader_URL_MATCH]) {
      return [((id<OrgOssPdfreporterNetFactoryINetFactory>) nil_chk(OrgOssPdfreporterRegistryIRegistry_getINetFactory())) newURLWithNSString:resourceName];
    }
    id<OrgOssPdfreporterNetIURL> url = OrgOssPdfreporterRepoFileResourceLoader_findFirstConfiguredFileResourceWithNSString_(resourceName);
    return url == nil ? nil : url;
  }
  @catch (OrgOssPdfreporterNetMalformedURLException *e) {
    [((JavaUtilLoggingLogger *) nil_chk(OrgOssPdfreporterRepoFileResourceLoader_logger)) logWithJavaUtilLoggingLevel:JreLoadStatic(JavaUtilLoggingLevel, SEVERE) withNSString:JreStrcat("$$", @"Invalid URL: ", resourceName) withNSException:e];
    return nil;
  }
}

id<JavaUtilList> OrgOssPdfreporterRepoFileResourceLoader_getConfiguredFileResources() {
  OrgOssPdfreporterRepoFileResourceLoader_initialize();
  return new_OrgOssPdfreporterRepoFileResourceLoader_DelegatingUrlList_initWithJavaUtilList_(OrgOssPdfreporterRepoFileResourceLoader_findFilesWithJavaUtilList_withJavaIoFilenameFilter_withBoolean_([((OrgOssPdfreporterRepoRepositoryManager *) nil_chk(OrgOssPdfreporterRepoRepositoryManager_getInstance())) getRepositoryFolders], new_OrgOssPdfreporterRepoFileResourceLoader_AccepptAll_init(), false));
}

id<JavaUtilList> OrgOssPdfreporterRepoFileResourceLoader_findConfiguredFileResourcesWithNSString_(NSString *resource) {
  OrgOssPdfreporterRepoFileResourceLoader_initialize();
  return new_OrgOssPdfreporterRepoFileResourceLoader_DelegatingUrlList_initWithJavaUtilList_(OrgOssPdfreporterRepoFileResourceLoader_findFilesWithJavaUtilList_withJavaIoFilenameFilter_withBoolean_([((OrgOssPdfreporterRepoRepositoryManager *) nil_chk(OrgOssPdfreporterRepoRepositoryManager_getInstance())) getRepositoryFolders], new_OrgOssPdfreporterRepoFileResourceLoader_FileResourceFilter_initWithNSString_(resource), false));
}

id<JavaUtilList> OrgOssPdfreporterRepoFileResourceLoader_findConfiguredFileSystemResourcesWithNSString_(NSString *resource) {
  OrgOssPdfreporterRepoFileResourceLoader_initialize();
  return new_OrgOssPdfreporterRepoFileResourceLoader_DelegatingFileSystemResourceList_initWithJavaUtilList_(OrgOssPdfreporterRepoFileResourceLoader_findFilesWithJavaUtilList_withJavaIoFilenameFilter_withBoolean_([((OrgOssPdfreporterRepoRepositoryManager *) nil_chk(OrgOssPdfreporterRepoRepositoryManager_getInstance())) getRepositoryFolders], new_OrgOssPdfreporterRepoFileResourceLoader_FileResourceFilter_initWithNSString_(resource), false));
}

id<OrgOssPdfreporterNetIURL> OrgOssPdfreporterRepoFileResourceLoader_findFirstConfiguredFileResourceWithNSString_(NSString *resource) {
  OrgOssPdfreporterRepoFileResourceLoader_initialize();
  id<JavaUtilList> files = OrgOssPdfreporterRepoFileResourceLoader_findFilesWithJavaUtilList_withJavaIoFilenameFilter_withBoolean_([((OrgOssPdfreporterRepoRepositoryManager *) nil_chk(OrgOssPdfreporterRepoRepositoryManager_getInstance())) getRepositoryFolders], new_OrgOssPdfreporterRepoFileResourceLoader_FileResourceFilter_initWithNSString_(resource), true);
  return [((id<JavaUtilList>) nil_chk(files)) isEmpty] ? nil : new_OrgOssPdfreporterNetFileUrl_initWithJavaIoFile_([files getWithInt:0]);
}

id<JavaUtilList> OrgOssPdfreporterRepoFileResourceLoader_findFilesWithJavaUtilList_withJavaIoFilenameFilter_withBoolean_(id<JavaUtilList> rootFolders, id<JavaIoFilenameFilter> filter, jboolean onlyFirst) {
  OrgOssPdfreporterRepoFileResourceLoader_initialize();
  id<JavaUtilList> resultAll = new_JavaUtilArrayList_init();
  for (NSString * __strong folder in nil_chk(rootFolders)) {
    id<JavaUtilList> result = OrgOssPdfreporterRepoFileResourceLoader_findFilesWithJavaIoFile_withJavaIoFilenameFilter_withBoolean_(new_JavaIoFile_initWithNSString_(folder), filter, onlyFirst);
    if (![((id<JavaUtilList>) nil_chk(result)) isEmpty] && onlyFirst) {
      [resultAll addWithId:[result getWithInt:0]];
      break;
    }
    [resultAll addAllWithJavaUtilCollection:result];
  }
  [((JavaUtilLoggingLogger *) nil_chk(OrgOssPdfreporterRepoFileResourceLoader_logger)) finestWithNSString:JreStrcat("$@$$$$", @"find resource: ", filter, @" in ", [rootFolders description], @", found: ", [resultAll description])];
  return resultAll;
}

id<JavaUtilList> OrgOssPdfreporterRepoFileResourceLoader_findFilesWithJavaIoFile_withJavaIoFilenameFilter_withBoolean_(JavaIoFile *folder, id<JavaIoFilenameFilter> filter, jboolean onlyFirst) {
  OrgOssPdfreporterRepoFileResourceLoader_initialize();
  id<JavaUtilList> resources = new_JavaUtilArrayList_init();
  if ([((JavaIoFile *) nil_chk(folder)) exists]) {
    {
      IOSObjectArray *a__ = [folder listFiles];
      JavaIoFile * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
      JavaIoFile * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        JavaIoFile *f = *b__++;
        if ([((JavaIoFile *) nil_chk(f)) isFile]) {
          if ([((id<JavaIoFilenameFilter>) nil_chk(filter)) acceptWithJavaIoFile:folder withNSString:[f getName]]) {
            [resources addWithId:f];
          }
        }
        else {
          [resources addAllWithJavaUtilCollection:OrgOssPdfreporterRepoFileResourceLoader_findFilesWithJavaIoFile_withJavaIoFilenameFilter_withBoolean_(f, filter, onlyFirst)];
        }
        if (onlyFirst && ![resources isEmpty]) {
          break;
        }
      }
    }
  }
  else {
    [((JavaUtilLoggingLogger *) nil_chk(OrgOssPdfreporterRepoFileResourceLoader_logger)) warningWithNSString:JreStrcat("$$$", @"Resource folder: ", [folder getName], @" does not exist.")];
  }
  return resources;
}

void OrgOssPdfreporterRepoFileResourceLoader_init(OrgOssPdfreporterRepoFileResourceLoader *self) {
  NSObject_init(self);
}

OrgOssPdfreporterRepoFileResourceLoader *new_OrgOssPdfreporterRepoFileResourceLoader_init() {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterRepoFileResourceLoader, init)
}

OrgOssPdfreporterRepoFileResourceLoader *create_OrgOssPdfreporterRepoFileResourceLoader_init() {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterRepoFileResourceLoader, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterRepoFileResourceLoader)

@implementation OrgOssPdfreporterRepoFileResourceLoader_FileResourceFilter

- (instancetype)initWithNSString:(NSString *)resource {
  OrgOssPdfreporterRepoFileResourceLoader_FileResourceFilter_initWithNSString_(self, resource);
  return self;
}

- (jboolean)acceptWithJavaIoFile:(JavaIoFile *)dir
                    withNSString:(NSString *)name {
  return path_ == nil ? [((NSString *) nil_chk(name)) isEqual:file_] : [((NSString *) nil_chk([((JavaIoFile *) nil_chk(dir)) getPath])) hasSuffix:path_] && [((NSString *) nil_chk(name)) isEqual:file_];
}

- (NSString *)description {
  return (path_ == nil ? file_ : JreStrcat("$$$", path_, OrgOssPdfreporterRepoRepositoryManager_PATH_DELIMITER, file_));
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:", "FileResourceFilter", NULL, 0x1, NULL, NULL },
    { "acceptWithJavaIoFile:withNSString:", "accept", "Z", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "path_", NULL, 0x12, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "file_", NULL, 0x12, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterRepoFileResourceLoader_FileResourceFilter = { 2, "FileResourceFilter", "org.oss.pdfreporter.repo", "FileResourceLoader", 0xa, 3, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterRepoFileResourceLoader_FileResourceFilter;
}

@end

void OrgOssPdfreporterRepoFileResourceLoader_FileResourceFilter_initWithNSString_(OrgOssPdfreporterRepoFileResourceLoader_FileResourceFilter *self, NSString *resource) {
  NSObject_init(self);
  jint idx = [((NSString *) nil_chk(resource)) lastIndexOfString:OrgOssPdfreporterRepoRepositoryManager_PATH_DELIMITER];
  if (idx >= 0) {
    self->file_ = [resource substring:idx + 1];
    self->path_ = [resource substring:0 endIndex:idx];
  }
  else {
    self->file_ = resource;
    self->path_ = nil;
  }
}

OrgOssPdfreporterRepoFileResourceLoader_FileResourceFilter *new_OrgOssPdfreporterRepoFileResourceLoader_FileResourceFilter_initWithNSString_(NSString *resource) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterRepoFileResourceLoader_FileResourceFilter, initWithNSString_, resource)
}

OrgOssPdfreporterRepoFileResourceLoader_FileResourceFilter *create_OrgOssPdfreporterRepoFileResourceLoader_FileResourceFilter_initWithNSString_(NSString *resource) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterRepoFileResourceLoader_FileResourceFilter, initWithNSString_, resource)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterRepoFileResourceLoader_FileResourceFilter)

@implementation OrgOssPdfreporterRepoFileResourceLoader_AccepptAll

- (jboolean)acceptWithJavaIoFile:(JavaIoFile *)dir
                    withNSString:(NSString *)name {
  return true;
}

- (NSString *)description {
  return @"*.*";
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterRepoFileResourceLoader_AccepptAll_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "acceptWithJavaIoFile:withNSString:", "accept", "Z", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "init", "AccepptAll", NULL, 0x2, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterRepoFileResourceLoader_AccepptAll = { 2, "AccepptAll", "org.oss.pdfreporter.repo", "FileResourceLoader", 0xa, 3, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterRepoFileResourceLoader_AccepptAll;
}

@end

void OrgOssPdfreporterRepoFileResourceLoader_AccepptAll_init(OrgOssPdfreporterRepoFileResourceLoader_AccepptAll *self) {
  NSObject_init(self);
}

OrgOssPdfreporterRepoFileResourceLoader_AccepptAll *new_OrgOssPdfreporterRepoFileResourceLoader_AccepptAll_init() {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterRepoFileResourceLoader_AccepptAll, init)
}

OrgOssPdfreporterRepoFileResourceLoader_AccepptAll *create_OrgOssPdfreporterRepoFileResourceLoader_AccepptAll_init() {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterRepoFileResourceLoader_AccepptAll, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterRepoFileResourceLoader_AccepptAll)

@implementation OrgOssPdfreporterRepoFileResourceLoader_DelegatingUrlList

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)delegate {
  OrgOssPdfreporterRepoFileResourceLoader_DelegatingUrlList_initWithJavaUtilList_(self, delegate);
  return self;
}

- (id<OrgOssPdfreporterNetIURL>)getWithInt:(jint)index {
  return new_OrgOssPdfreporterNetFileUrl_initWithJavaIoFile_([((id<JavaUtilList>) nil_chk(delegate_)) getWithInt:index]);
}

- (jint)size {
  return [((id<JavaUtilList>) nil_chk(delegate_)) size];
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaUtilList:", "DelegatingUrlList", NULL, 0x1, NULL, "(Ljava/util/List<Ljava/io/File;>;)V" },
    { "getWithInt:", "get", "Lorg.oss.pdfreporter.net.IURL;", 0x1, NULL, "(I)Lorg/oss/pdfreporter/net/IURL;" },
    { "size", NULL, "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "delegate_", NULL, 0x12, "Ljava.util.List;", NULL, "Ljava/util/List<Ljava/io/File;>;", .constantValue.asLong = 0 },
  };
  static const char *superclass_type_args[] = {"Lorg.oss.pdfreporter.net.IURL;"};
  static const J2ObjcClassInfo _OrgOssPdfreporterRepoFileResourceLoader_DelegatingUrlList = { 2, "DelegatingUrlList", "org.oss.pdfreporter.repo", "FileResourceLoader", 0xa, 3, methods, 1, fields, 1, superclass_type_args, 0, NULL, NULL, "Ljava/util/AbstractList<Lorg/oss/pdfreporter/net/IURL;>;" };
  return &_OrgOssPdfreporterRepoFileResourceLoader_DelegatingUrlList;
}

@end

void OrgOssPdfreporterRepoFileResourceLoader_DelegatingUrlList_initWithJavaUtilList_(OrgOssPdfreporterRepoFileResourceLoader_DelegatingUrlList *self, id<JavaUtilList> delegate) {
  JavaUtilAbstractList_init(self);
  self->delegate_ = delegate;
}

OrgOssPdfreporterRepoFileResourceLoader_DelegatingUrlList *new_OrgOssPdfreporterRepoFileResourceLoader_DelegatingUrlList_initWithJavaUtilList_(id<JavaUtilList> delegate) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterRepoFileResourceLoader_DelegatingUrlList, initWithJavaUtilList_, delegate)
}

OrgOssPdfreporterRepoFileResourceLoader_DelegatingUrlList *create_OrgOssPdfreporterRepoFileResourceLoader_DelegatingUrlList_initWithJavaUtilList_(id<JavaUtilList> delegate) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterRepoFileResourceLoader_DelegatingUrlList, initWithJavaUtilList_, delegate)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterRepoFileResourceLoader_DelegatingUrlList)

@implementation OrgOssPdfreporterRepoFileResourceLoader_DelegatingFileSystemResourceList

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)delegate {
  OrgOssPdfreporterRepoFileResourceLoader_DelegatingFileSystemResourceList_initWithJavaUtilList_(self, delegate);
  return self;
}

- (OrgOssPdfreporterRepoFileSystemResource *)getWithInt:(jint)index {
  return new_OrgOssPdfreporterRepoFileSystemResource_initWithJavaIoFile_([((id<JavaUtilList>) nil_chk(delegate_)) getWithInt:index]);
}

- (jint)size {
  return [((id<JavaUtilList>) nil_chk(delegate_)) size];
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaUtilList:", "DelegatingFileSystemResourceList", NULL, 0x1, NULL, "(Ljava/util/List<Ljava/io/File;>;)V" },
    { "getWithInt:", "get", "Lorg.oss.pdfreporter.repo.FileSystemResource;", 0x1, NULL, "(I)Lorg/oss/pdfreporter/repo/FileSystemResource;" },
    { "size", NULL, "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "delegate_", NULL, 0x12, "Ljava.util.List;", NULL, "Ljava/util/List<Ljava/io/File;>;", .constantValue.asLong = 0 },
  };
  static const char *superclass_type_args[] = {"Lorg.oss.pdfreporter.repo.FileSystemResource;"};
  static const J2ObjcClassInfo _OrgOssPdfreporterRepoFileResourceLoader_DelegatingFileSystemResourceList = { 2, "DelegatingFileSystemResourceList", "org.oss.pdfreporter.repo", "FileResourceLoader", 0xa, 3, methods, 1, fields, 1, superclass_type_args, 0, NULL, NULL, "Ljava/util/AbstractList<Lorg/oss/pdfreporter/repo/FileSystemResource;>;" };
  return &_OrgOssPdfreporterRepoFileResourceLoader_DelegatingFileSystemResourceList;
}

@end

void OrgOssPdfreporterRepoFileResourceLoader_DelegatingFileSystemResourceList_initWithJavaUtilList_(OrgOssPdfreporterRepoFileResourceLoader_DelegatingFileSystemResourceList *self, id<JavaUtilList> delegate) {
  JavaUtilAbstractList_init(self);
  self->delegate_ = delegate;
}

OrgOssPdfreporterRepoFileResourceLoader_DelegatingFileSystemResourceList *new_OrgOssPdfreporterRepoFileResourceLoader_DelegatingFileSystemResourceList_initWithJavaUtilList_(id<JavaUtilList> delegate) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterRepoFileResourceLoader_DelegatingFileSystemResourceList, initWithJavaUtilList_, delegate)
}

OrgOssPdfreporterRepoFileResourceLoader_DelegatingFileSystemResourceList *create_OrgOssPdfreporterRepoFileResourceLoader_DelegatingFileSystemResourceList_initWithJavaUtilList_(id<JavaUtilList> delegate) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterRepoFileResourceLoader_DelegatingFileSystemResourceList, initWithJavaUtilList_, delegate)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterRepoFileResourceLoader_DelegatingFileSystemResourceList)
