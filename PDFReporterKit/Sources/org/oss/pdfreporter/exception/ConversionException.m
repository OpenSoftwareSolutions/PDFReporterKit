//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-extensions/src/org/oss/pdfreporter/exception/ConversionException.java
//

#include "J2ObjC_source.h"
#include "java/lang/RuntimeException.h"
#include "org/oss/pdfreporter/exception/ConversionException.h"

inline jlong OrgOssPdfreporterExceptionConversionException_get_serialVersionUID();
#define OrgOssPdfreporterExceptionConversionException_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgOssPdfreporterExceptionConversionException, serialVersionUID, jlong)

@implementation OrgOssPdfreporterExceptionConversionException

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterExceptionConversionException_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithNSString:(NSString *)message
                 withNSException:(NSException *)cause {
  OrgOssPdfreporterExceptionConversionException_initWithNSString_withNSException_(self, message, cause);
  return self;
}

- (instancetype)initWithNSString:(NSString *)message {
  OrgOssPdfreporterExceptionConversionException_initWithNSString_(self, message);
  return self;
}

- (instancetype)initWithNSException:(NSException *)cause {
  OrgOssPdfreporterExceptionConversionException_initWithNSException_(self, cause);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "ConversionException", NULL, 0x1, NULL, NULL },
    { "initWithNSString:withNSException:", "ConversionException", NULL, 0x1, NULL, NULL },
    { "initWithNSString:", "ConversionException", NULL, 0x1, NULL, NULL },
    { "initWithNSException:", "ConversionException", NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "serialVersionUID", 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgOssPdfreporterExceptionConversionException_serialVersionUID },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterExceptionConversionException = { 2, "ConversionException", "org.oss.pdfreporter.exception", NULL, 0x1, 4, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterExceptionConversionException;
}

@end

void OrgOssPdfreporterExceptionConversionException_init(OrgOssPdfreporterExceptionConversionException *self) {
  JavaLangRuntimeException_init(self);
}

OrgOssPdfreporterExceptionConversionException *new_OrgOssPdfreporterExceptionConversionException_init() {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterExceptionConversionException, init)
}

OrgOssPdfreporterExceptionConversionException *create_OrgOssPdfreporterExceptionConversionException_init() {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterExceptionConversionException, init)
}

void OrgOssPdfreporterExceptionConversionException_initWithNSString_withNSException_(OrgOssPdfreporterExceptionConversionException *self, NSString *message, NSException *cause) {
  JavaLangRuntimeException_initWithNSString_withNSException_(self, message, cause);
}

OrgOssPdfreporterExceptionConversionException *new_OrgOssPdfreporterExceptionConversionException_initWithNSString_withNSException_(NSString *message, NSException *cause) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterExceptionConversionException, initWithNSString_withNSException_, message, cause)
}

OrgOssPdfreporterExceptionConversionException *create_OrgOssPdfreporterExceptionConversionException_initWithNSString_withNSException_(NSString *message, NSException *cause) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterExceptionConversionException, initWithNSString_withNSException_, message, cause)
}

void OrgOssPdfreporterExceptionConversionException_initWithNSString_(OrgOssPdfreporterExceptionConversionException *self, NSString *message) {
  JavaLangRuntimeException_initWithNSString_(self, message);
}

OrgOssPdfreporterExceptionConversionException *new_OrgOssPdfreporterExceptionConversionException_initWithNSString_(NSString *message) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterExceptionConversionException, initWithNSString_, message)
}

OrgOssPdfreporterExceptionConversionException *create_OrgOssPdfreporterExceptionConversionException_initWithNSString_(NSString *message) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterExceptionConversionException, initWithNSString_, message)
}

void OrgOssPdfreporterExceptionConversionException_initWithNSException_(OrgOssPdfreporterExceptionConversionException *self, NSException *cause) {
  JavaLangRuntimeException_initWithNSException_(self, cause);
}

OrgOssPdfreporterExceptionConversionException *new_OrgOssPdfreporterExceptionConversionException_initWithNSException_(NSException *cause) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterExceptionConversionException, initWithNSException_, cause)
}

OrgOssPdfreporterExceptionConversionException *create_OrgOssPdfreporterExceptionConversionException_initWithNSException_(NSException *cause) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterExceptionConversionException, initWithNSException_, cause)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterExceptionConversionException)
