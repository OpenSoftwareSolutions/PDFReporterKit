//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/progress/ProgressManager.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgOssPdfreporterProgressProgressManager")
#ifdef RESTRICT_OrgOssPdfreporterProgressProgressManager
#define INCLUDE_ALL_OrgOssPdfreporterProgressProgressManager 0
#else
#define INCLUDE_ALL_OrgOssPdfreporterProgressProgressManager 1
#endif
#undef RESTRICT_OrgOssPdfreporterProgressProgressManager

#if !defined (OrgOssPdfreporterProgressProgressManager_) && (INCLUDE_ALL_OrgOssPdfreporterProgressProgressManager || defined(INCLUDE_OrgOssPdfreporterProgressProgressManager))
#define OrgOssPdfreporterProgressProgressManager_

@class OrgOssPdfreporterProgressIProgressHandler_ProgressState;

@interface OrgOssPdfreporterProgressProgressManager : NSObject

#pragma mark Public

- (instancetype)initWithOrgOssPdfreporterProgressIProgressHandler_ProgressState:(OrgOssPdfreporterProgressIProgressHandler_ProgressState *)state;

- (instancetype)initWithOrgOssPdfreporterProgressIProgressHandler_ProgressState:(OrgOssPdfreporterProgressIProgressHandler_ProgressState *)state
                                                                        withInt:(jint)maxRecords;

- (void)done;

- (void)progress;

- (void)progressWithInt:(jint)recordCount;

@end

J2OBJC_STATIC_INIT(OrgOssPdfreporterProgressProgressManager)

FOUNDATION_EXPORT void OrgOssPdfreporterProgressProgressManager_initWithOrgOssPdfreporterProgressIProgressHandler_ProgressState_withInt_(OrgOssPdfreporterProgressProgressManager *self, OrgOssPdfreporterProgressIProgressHandler_ProgressState *state, jint maxRecords);

FOUNDATION_EXPORT OrgOssPdfreporterProgressProgressManager *new_OrgOssPdfreporterProgressProgressManager_initWithOrgOssPdfreporterProgressIProgressHandler_ProgressState_withInt_(OrgOssPdfreporterProgressIProgressHandler_ProgressState *state, jint maxRecords) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgOssPdfreporterProgressProgressManager *create_OrgOssPdfreporterProgressProgressManager_initWithOrgOssPdfreporterProgressIProgressHandler_ProgressState_withInt_(OrgOssPdfreporterProgressIProgressHandler_ProgressState *state, jint maxRecords);

FOUNDATION_EXPORT void OrgOssPdfreporterProgressProgressManager_initWithOrgOssPdfreporterProgressIProgressHandler_ProgressState_(OrgOssPdfreporterProgressProgressManager *self, OrgOssPdfreporterProgressIProgressHandler_ProgressState *state);

FOUNDATION_EXPORT OrgOssPdfreporterProgressProgressManager *new_OrgOssPdfreporterProgressProgressManager_initWithOrgOssPdfreporterProgressIProgressHandler_ProgressState_(OrgOssPdfreporterProgressIProgressHandler_ProgressState *state) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgOssPdfreporterProgressProgressManager *create_OrgOssPdfreporterProgressProgressManager_initWithOrgOssPdfreporterProgressIProgressHandler_ProgressState_(OrgOssPdfreporterProgressIProgressHandler_ProgressState *state);

J2OBJC_TYPE_LITERAL_HEADER(OrgOssPdfreporterProgressProgressManager)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgOssPdfreporterProgressProgressManager")
