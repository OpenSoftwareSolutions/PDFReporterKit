//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-extensions/src/org/oss/pdfreporter/xml/parsers/AbstractXmlParser.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "org/oss/pdfreporter/xml/parsers/AbstractXmlParser.h"
#include "org/oss/pdfreporter/xml/parsers/IContentHandler.h"
#include "org/oss/pdfreporter/xml/parsers/IInputSource.h"
#include "org/oss/pdfreporter/xml/parsers/ParserConfigurationException.h"
#include "org/oss/pdfreporter/xml/parsers/XMLEntityResolver.h"
#include "org/oss/pdfreporter/xml/parsers/XMLErrorHandler.h"

#pragma clang diagnostic ignored "-Wprotocol"

@interface OrgOssPdfreporterXmlParsersAbstractXmlParser () {
 @public
  jboolean validating_;
  jboolean namespaceAware_;
  jboolean xincludeAware_;
  id<OrgOssPdfreporterXmlParsersIInputSource> input_;
  id<OrgOssPdfreporterXmlParsersIContentHandler> contentHandler_;
  id<OrgOssPdfreporterXmlParsersXMLErrorHandler> errorHandler_;
  id<OrgOssPdfreporterXmlParsersXMLEntityResolver> entityResolver_;
}

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterXmlParsersAbstractXmlParser, input_, id<OrgOssPdfreporterXmlParsersIInputSource>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterXmlParsersAbstractXmlParser, contentHandler_, id<OrgOssPdfreporterXmlParsersIContentHandler>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterXmlParsersAbstractXmlParser, errorHandler_, id<OrgOssPdfreporterXmlParsersXMLErrorHandler>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterXmlParsersAbstractXmlParser, entityResolver_, id<OrgOssPdfreporterXmlParsersXMLEntityResolver>)

@implementation OrgOssPdfreporterXmlParsersAbstractXmlParser

- (instancetype)initWithOrgOssPdfreporterXmlParsersIInputSource:(id<OrgOssPdfreporterXmlParsersIInputSource>)input
                 withOrgOssPdfreporterXmlParsersIContentHandler:(id<OrgOssPdfreporterXmlParsersIContentHandler>)handler
                                                    withBoolean:(jboolean)validating
                                                    withBoolean:(jboolean)namespaceAware
                                                    withBoolean:(jboolean)xincludeAware {
  OrgOssPdfreporterXmlParsersAbstractXmlParser_initWithOrgOssPdfreporterXmlParsersIInputSource_withOrgOssPdfreporterXmlParsersIContentHandler_withBoolean_withBoolean_withBoolean_(self, input, handler, validating, namespaceAware, xincludeAware);
  return self;
}

- (jboolean)isNamespaceAware {
  return namespaceAware_;
}

- (jboolean)isValidating {
  return validating_;
}

- (jboolean)isXIncludeAware {
  return xincludeAware_;
}

- (void)setEntityResolverWithOrgOssPdfreporterXmlParsersXMLEntityResolver:(id<OrgOssPdfreporterXmlParsersXMLEntityResolver>)entityResolver {
  self->entityResolver_ = entityResolver;
}

- (void)setErrorHandlerWithOrgOssPdfreporterXmlParsersXMLErrorHandler:(id<OrgOssPdfreporterXmlParsersXMLErrorHandler>)errorHandler {
  self->errorHandler_ = errorHandler;
}

- (void)setContentHandlerWithOrgOssPdfreporterXmlParsersIContentHandler:(id<OrgOssPdfreporterXmlParsersIContentHandler>)contentHandler {
  self->contentHandler_ = contentHandler;
}

- (id<OrgOssPdfreporterXmlParsersIInputSource>)getInput {
  return input_;
}

- (id<OrgOssPdfreporterXmlParsersIContentHandler>)getContentHandler {
  return contentHandler_;
}

- (id<OrgOssPdfreporterXmlParsersXMLErrorHandler>)getErrorHandler {
  return errorHandler_;
}

- (id<OrgOssPdfreporterXmlParsersXMLEntityResolver>)getEntityResolver {
  return entityResolver_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgOssPdfreporterXmlParsersIInputSource:withOrgOssPdfreporterXmlParsersIContentHandler:withBoolean:withBoolean:withBoolean:", "AbstractXmlParser", NULL, 0x1, "Lorg.oss.pdfreporter.xml.parsers.ParserConfigurationException;", NULL },
    { "isNamespaceAware", NULL, "Z", 0x1, NULL, NULL },
    { "isValidating", NULL, "Z", 0x1, NULL, NULL },
    { "isXIncludeAware", NULL, "Z", 0x1, NULL, NULL },
    { "setEntityResolverWithOrgOssPdfreporterXmlParsersXMLEntityResolver:", "setEntityResolver", "V", 0x1, NULL, NULL },
    { "setErrorHandlerWithOrgOssPdfreporterXmlParsersXMLErrorHandler:", "setErrorHandler", "V", 0x1, NULL, NULL },
    { "setContentHandlerWithOrgOssPdfreporterXmlParsersIContentHandler:", "setContentHandler", "V", 0x1, NULL, NULL },
    { "getInput", NULL, "Lorg.oss.pdfreporter.xml.parsers.IInputSource;", 0x4, NULL, NULL },
    { "getContentHandler", NULL, "Lorg.oss.pdfreporter.xml.parsers.IContentHandler;", 0x4, NULL, NULL },
    { "getErrorHandler", NULL, "Lorg.oss.pdfreporter.xml.parsers.XMLErrorHandler;", 0x4, NULL, NULL },
    { "getEntityResolver", NULL, "Lorg.oss.pdfreporter.xml.parsers.XMLEntityResolver;", 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "validating_", NULL, 0x12, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "namespaceAware_", NULL, 0x12, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "xincludeAware_", NULL, 0x12, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "input_", NULL, 0x12, "Lorg.oss.pdfreporter.xml.parsers.IInputSource;", NULL, NULL, .constantValue.asLong = 0 },
    { "contentHandler_", NULL, 0x2, "Lorg.oss.pdfreporter.xml.parsers.IContentHandler;", NULL, NULL, .constantValue.asLong = 0 },
    { "errorHandler_", NULL, 0x2, "Lorg.oss.pdfreporter.xml.parsers.XMLErrorHandler;", NULL, NULL, .constantValue.asLong = 0 },
    { "entityResolver_", NULL, 0x2, "Lorg.oss.pdfreporter.xml.parsers.XMLEntityResolver;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterXmlParsersAbstractXmlParser = { 2, "AbstractXmlParser", "org.oss.pdfreporter.xml.parsers", NULL, 0x401, 11, methods, 7, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterXmlParsersAbstractXmlParser;
}

@end

void OrgOssPdfreporterXmlParsersAbstractXmlParser_initWithOrgOssPdfreporterXmlParsersIInputSource_withOrgOssPdfreporterXmlParsersIContentHandler_withBoolean_withBoolean_withBoolean_(OrgOssPdfreporterXmlParsersAbstractXmlParser *self, id<OrgOssPdfreporterXmlParsersIInputSource> input, id<OrgOssPdfreporterXmlParsersIContentHandler> handler, jboolean validating, jboolean namespaceAware, jboolean xincludeAware) {
  NSObject_init(self);
  self->input_ = input;
  self->contentHandler_ = handler;
  self->validating_ = validating;
  self->namespaceAware_ = namespaceAware;
  self->xincludeAware_ = xincludeAware;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterXmlParsersAbstractXmlParser)
