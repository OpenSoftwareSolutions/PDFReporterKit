//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-extensions/src/org/oss/pdfreporter/xml/parsers/impl/DocumentBuilderFactory.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "org/oss/pdfreporter/exception/NotImplementedException.h"
#include "org/oss/pdfreporter/xml/parsers/IDocumentBuilder.h"
#include "org/oss/pdfreporter/xml/parsers/ParserConfigurationException.h"
#include "org/oss/pdfreporter/xml/parsers/impl/DocumentBuilder.h"
#include "org/oss/pdfreporter/xml/parsers/impl/DocumentBuilderFactory.h"

@interface OrgOssPdfreporterXmlParsersImplDocumentBuilderFactory () {
 @public
  jboolean namespaceAware_, validating_, xIncludeAware_;
}

@end

@implementation OrgOssPdfreporterXmlParsersImplDocumentBuilderFactory

- (id<OrgOssPdfreporterXmlParsersIDocumentBuilder>)newDocumentBuilder {
  return new_OrgOssPdfreporterXmlParsersImplDocumentBuilder_initWithBoolean_withBoolean_withBoolean_(namespaceAware_, validating_, xIncludeAware_);
}

- (void)setNamespaceAwareWithBoolean:(jboolean)awareness {
  self->namespaceAware_ = awareness;
}

- (void)setValidatingWithBoolean:(jboolean)validating {
  self->validating_ = validating;
}

- (void)setIgnoringElementContentWhitespaceWithBoolean:(jboolean)whitespace {
  @throw new_OrgOssPdfreporterExceptionNotImplementedException_init();
}

- (void)setExpandEntityReferencesWithBoolean:(jboolean)expandEntityRef {
  @throw new_OrgOssPdfreporterExceptionNotImplementedException_init();
}

- (void)setIgnoringCommentsWithBoolean:(jboolean)ignoreComments {
}

- (void)setCoalescingWithBoolean:(jboolean)coalescing {
  @throw new_OrgOssPdfreporterExceptionNotImplementedException_init();
}

- (jboolean)isNamespaceAware {
  return namespaceAware_;
}

- (jboolean)isValidating {
  return validating_;
}

- (jboolean)isIgnoringElementContentWhitespace {
  return false;
}

- (jboolean)isExpandEntityReferences {
  return false;
}

- (jboolean)isIgnoringComments {
  return true;
}

- (jboolean)isCoalescing {
  return false;
}

- (void)setAttributeWithNSString:(NSString *)name
                          withId:(id)value {
  @throw new_OrgOssPdfreporterExceptionNotImplementedException_init();
}

- (id)getAttributeWithNSString:(NSString *)name {
  @throw new_OrgOssPdfreporterExceptionNotImplementedException_init();
}

- (void)setFeatureWithNSString:(NSString *)name
                   withBoolean:(jboolean)value {
  @throw new_OrgOssPdfreporterExceptionNotImplementedException_init();
}

- (jboolean)getFeatureWithNSString:(NSString *)name {
  @throw new_OrgOssPdfreporterExceptionNotImplementedException_init();
}

- (void)setXIncludeAwareWithBoolean:(jboolean)state {
  xIncludeAware_ = state;
}

- (jboolean)isXIncludeAware {
  return xIncludeAware_;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterXmlParsersImplDocumentBuilderFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "newDocumentBuilder", NULL, "Lorg.oss.pdfreporter.xml.parsers.IDocumentBuilder;", 0x1, "Lorg.oss.pdfreporter.xml.parsers.ParserConfigurationException;", NULL },
    { "setNamespaceAwareWithBoolean:", "setNamespaceAware", "V", 0x1, NULL, NULL },
    { "setValidatingWithBoolean:", "setValidating", "V", 0x1, NULL, NULL },
    { "setIgnoringElementContentWhitespaceWithBoolean:", "setIgnoringElementContentWhitespace", "V", 0x1, NULL, NULL },
    { "setExpandEntityReferencesWithBoolean:", "setExpandEntityReferences", "V", 0x1, NULL, NULL },
    { "setIgnoringCommentsWithBoolean:", "setIgnoringComments", "V", 0x1, NULL, NULL },
    { "setCoalescingWithBoolean:", "setCoalescing", "V", 0x1, NULL, NULL },
    { "isNamespaceAware", NULL, "Z", 0x1, NULL, NULL },
    { "isValidating", NULL, "Z", 0x1, NULL, NULL },
    { "isIgnoringElementContentWhitespace", NULL, "Z", 0x1, NULL, NULL },
    { "isExpandEntityReferences", NULL, "Z", 0x1, NULL, NULL },
    { "isIgnoringComments", NULL, "Z", 0x1, NULL, NULL },
    { "isCoalescing", NULL, "Z", 0x1, NULL, NULL },
    { "setAttributeWithNSString:withId:", "setAttribute", "V", 0x1, "Ljava.lang.IllegalArgumentException;", NULL },
    { "getAttributeWithNSString:", "getAttribute", "Ljava.lang.Object;", 0x1, "Ljava.lang.IllegalArgumentException;", NULL },
    { "setFeatureWithNSString:withBoolean:", "setFeature", "V", 0x1, "Lorg.oss.pdfreporter.xml.parsers.ParserConfigurationException;", NULL },
    { "getFeatureWithNSString:", "getFeature", "Z", 0x1, "Lorg.oss.pdfreporter.xml.parsers.ParserConfigurationException;", NULL },
    { "setXIncludeAwareWithBoolean:", "setXIncludeAware", "V", 0x1, NULL, NULL },
    { "isXIncludeAware", NULL, "Z", 0x1, NULL, NULL },
    { "init", "DocumentBuilderFactory", NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "namespaceAware_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "validating_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "xIncludeAware_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterXmlParsersImplDocumentBuilderFactory = { 2, "DocumentBuilderFactory", "org.oss.pdfreporter.xml.parsers.impl", NULL, 0x1, 20, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterXmlParsersImplDocumentBuilderFactory;
}

@end

void OrgOssPdfreporterXmlParsersImplDocumentBuilderFactory_init(OrgOssPdfreporterXmlParsersImplDocumentBuilderFactory *self) {
  NSObject_init(self);
  self->namespaceAware_ = false;
  self->validating_ = false;
  self->xIncludeAware_ = false;
}

OrgOssPdfreporterXmlParsersImplDocumentBuilderFactory *new_OrgOssPdfreporterXmlParsersImplDocumentBuilderFactory_init() {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterXmlParsersImplDocumentBuilderFactory, init)
}

OrgOssPdfreporterXmlParsersImplDocumentBuilderFactory *create_OrgOssPdfreporterXmlParsersImplDocumentBuilderFactory_init() {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterXmlParsersImplDocumentBuilderFactory, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterXmlParsersImplDocumentBuilderFactory)
