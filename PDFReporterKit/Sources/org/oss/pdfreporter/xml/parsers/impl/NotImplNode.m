//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-extensions/src/org/oss/pdfreporter/xml/parsers/impl/NotImplNode.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "org/oss/pdfreporter/exception/NotImplementedException.h"
#include "org/oss/pdfreporter/uses/org/w3c/dom/DOMException.h"
#include "org/oss/pdfreporter/uses/org/w3c/dom/Document.h"
#include "org/oss/pdfreporter/uses/org/w3c/dom/NamedNodeMap.h"
#include "org/oss/pdfreporter/uses/org/w3c/dom/Node.h"
#include "org/oss/pdfreporter/uses/org/w3c/dom/NodeList.h"
#include "org/oss/pdfreporter/uses/org/w3c/dom/UserDataHandler.h"
#include "org/oss/pdfreporter/xml/parsers/impl/NotImplNode.h"

@implementation OrgOssPdfreporterXmlParsersImplNotImplNode

- (NSString *)getNodeName {
  @throw new_OrgOssPdfreporterExceptionNotImplementedException_init();
}

- (NSString *)getNodeValue {
  @throw new_OrgOssPdfreporterExceptionNotImplementedException_init();
}

- (void)setNodeValueWithNSString:(NSString *)nodeValue {
  @throw new_OrgOssPdfreporterExceptionNotImplementedException_init();
}

- (jshort)getNodeType {
  @throw new_OrgOssPdfreporterExceptionNotImplementedException_init();
}

- (id<OrgOssPdfreporterUsesOrgW3cDomNode>)getParentNode {
  @throw new_OrgOssPdfreporterExceptionNotImplementedException_init();
}

- (id<OrgOssPdfreporterUsesOrgW3cDomNodeList>)getChildNodes {
  @throw new_OrgOssPdfreporterExceptionNotImplementedException_init();
}

- (id<OrgOssPdfreporterUsesOrgW3cDomNode>)getFirstChild {
  @throw new_OrgOssPdfreporterExceptionNotImplementedException_init();
}

- (id<OrgOssPdfreporterUsesOrgW3cDomNode>)getLastChild {
  @throw new_OrgOssPdfreporterExceptionNotImplementedException_init();
}

- (id<OrgOssPdfreporterUsesOrgW3cDomNode>)getPreviousSibling {
  @throw new_OrgOssPdfreporterExceptionNotImplementedException_init();
}

- (id<OrgOssPdfreporterUsesOrgW3cDomNode>)getNextSibling {
  @throw new_OrgOssPdfreporterExceptionNotImplementedException_init();
}

- (id<OrgOssPdfreporterUsesOrgW3cDomNamedNodeMap>)getAttributes {
  @throw new_OrgOssPdfreporterExceptionNotImplementedException_init();
}

- (id<OrgOssPdfreporterUsesOrgW3cDomNode>)insertBeforeWithOrgOssPdfreporterUsesOrgW3cDomNode:(id<OrgOssPdfreporterUsesOrgW3cDomNode>)newChild
                                                      withOrgOssPdfreporterUsesOrgW3cDomNode:(id<OrgOssPdfreporterUsesOrgW3cDomNode>)refChild {
  @throw new_OrgOssPdfreporterExceptionNotImplementedException_init();
}

- (id<OrgOssPdfreporterUsesOrgW3cDomNode>)replaceChildWithOrgOssPdfreporterUsesOrgW3cDomNode:(id<OrgOssPdfreporterUsesOrgW3cDomNode>)newChild
                                                      withOrgOssPdfreporterUsesOrgW3cDomNode:(id<OrgOssPdfreporterUsesOrgW3cDomNode>)oldChild {
  @throw new_OrgOssPdfreporterExceptionNotImplementedException_init();
}

- (id<OrgOssPdfreporterUsesOrgW3cDomNode>)removeChildWithOrgOssPdfreporterUsesOrgW3cDomNode:(id<OrgOssPdfreporterUsesOrgW3cDomNode>)oldChild {
  @throw new_OrgOssPdfreporterExceptionNotImplementedException_init();
}

- (id<OrgOssPdfreporterUsesOrgW3cDomNode>)appendChildWithOrgOssPdfreporterUsesOrgW3cDomNode:(id<OrgOssPdfreporterUsesOrgW3cDomNode>)newChild {
  @throw new_OrgOssPdfreporterExceptionNotImplementedException_init();
}

- (jboolean)hasChildNodes {
  @throw new_OrgOssPdfreporterExceptionNotImplementedException_init();
}

- (id<OrgOssPdfreporterUsesOrgW3cDomNode>)cloneNodeWithBoolean:(jboolean)deep {
  @throw new_OrgOssPdfreporterExceptionNotImplementedException_init();
}

- (void)normalize {
  @throw new_OrgOssPdfreporterExceptionNotImplementedException_init();
}

- (jboolean)isSupportedWithNSString:(NSString *)feature
                       withNSString:(NSString *)version_ {
  @throw new_OrgOssPdfreporterExceptionNotImplementedException_init();
}

- (NSString *)getNamespaceURI {
  @throw new_OrgOssPdfreporterExceptionNotImplementedException_init();
}

- (NSString *)getPrefix {
  @throw new_OrgOssPdfreporterExceptionNotImplementedException_init();
}

- (void)setPrefixWithNSString:(NSString *)prefix {
  @throw new_OrgOssPdfreporterExceptionNotImplementedException_init();
}

- (NSString *)getLocalName {
  @throw new_OrgOssPdfreporterExceptionNotImplementedException_init();
}

- (jboolean)hasAttributes {
  @throw new_OrgOssPdfreporterExceptionNotImplementedException_init();
}

- (NSString *)getBaseURI {
  @throw new_OrgOssPdfreporterExceptionNotImplementedException_init();
}

- (jshort)compareDocumentPositionWithOrgOssPdfreporterUsesOrgW3cDomNode:(id<OrgOssPdfreporterUsesOrgW3cDomNode>)other {
  @throw new_OrgOssPdfreporterExceptionNotImplementedException_init();
}

- (NSString *)getTextContent {
  @throw new_OrgOssPdfreporterExceptionNotImplementedException_init();
}

- (void)setTextContentWithNSString:(NSString *)textContent {
  @throw new_OrgOssPdfreporterExceptionNotImplementedException_init();
}

- (jboolean)isSameNodeWithOrgOssPdfreporterUsesOrgW3cDomNode:(id<OrgOssPdfreporterUsesOrgW3cDomNode>)other {
  @throw new_OrgOssPdfreporterExceptionNotImplementedException_init();
}

- (NSString *)lookupPrefixWithNSString:(NSString *)namespaceURI {
  @throw new_OrgOssPdfreporterExceptionNotImplementedException_init();
}

- (jboolean)isDefaultNamespaceWithNSString:(NSString *)namespaceURI {
  @throw new_OrgOssPdfreporterExceptionNotImplementedException_init();
}

- (NSString *)lookupNamespaceURIWithNSString:(NSString *)prefix {
  @throw new_OrgOssPdfreporterExceptionNotImplementedException_init();
}

- (jboolean)isEqualNodeWithOrgOssPdfreporterUsesOrgW3cDomNode:(id<OrgOssPdfreporterUsesOrgW3cDomNode>)arg {
  @throw new_OrgOssPdfreporterExceptionNotImplementedException_init();
}

- (id)getFeatureWithNSString:(NSString *)feature
                withNSString:(NSString *)version_ {
  @throw new_OrgOssPdfreporterExceptionNotImplementedException_init();
}

- (id)setUserDataWithNSString:(NSString *)key
                       withId:(id)data
withOrgOssPdfreporterUsesOrgW3cDomUserDataHandler:(id<OrgOssPdfreporterUsesOrgW3cDomUserDataHandler>)handler {
  @throw new_OrgOssPdfreporterExceptionNotImplementedException_init();
}

- (id)getUserDataWithNSString:(NSString *)key {
  @throw new_OrgOssPdfreporterExceptionNotImplementedException_init();
}

- (id<OrgOssPdfreporterUsesOrgW3cDomDocument>)getOwnerDocument {
  @throw new_OrgOssPdfreporterExceptionNotImplementedException_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterXmlParsersImplNotImplNode_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getNodeName", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getNodeValue", NULL, "Ljava.lang.String;", 0x1, "Lorg.oss.pdfreporter.uses.org.w3c.dom.DOMException;", NULL },
    { "setNodeValueWithNSString:", "setNodeValue", "V", 0x1, "Lorg.oss.pdfreporter.uses.org.w3c.dom.DOMException;", NULL },
    { "getNodeType", NULL, "S", 0x1, NULL, NULL },
    { "getParentNode", NULL, "Lorg.oss.pdfreporter.uses.org.w3c.dom.Node;", 0x1, NULL, NULL },
    { "getChildNodes", NULL, "Lorg.oss.pdfreporter.uses.org.w3c.dom.NodeList;", 0x1, NULL, NULL },
    { "getFirstChild", NULL, "Lorg.oss.pdfreporter.uses.org.w3c.dom.Node;", 0x1, NULL, NULL },
    { "getLastChild", NULL, "Lorg.oss.pdfreporter.uses.org.w3c.dom.Node;", 0x1, NULL, NULL },
    { "getPreviousSibling", NULL, "Lorg.oss.pdfreporter.uses.org.w3c.dom.Node;", 0x1, NULL, NULL },
    { "getNextSibling", NULL, "Lorg.oss.pdfreporter.uses.org.w3c.dom.Node;", 0x1, NULL, NULL },
    { "getAttributes", NULL, "Lorg.oss.pdfreporter.uses.org.w3c.dom.NamedNodeMap;", 0x1, NULL, NULL },
    { "insertBeforeWithOrgOssPdfreporterUsesOrgW3cDomNode:withOrgOssPdfreporterUsesOrgW3cDomNode:", "insertBefore", "Lorg.oss.pdfreporter.uses.org.w3c.dom.Node;", 0x1, "Lorg.oss.pdfreporter.uses.org.w3c.dom.DOMException;", NULL },
    { "replaceChildWithOrgOssPdfreporterUsesOrgW3cDomNode:withOrgOssPdfreporterUsesOrgW3cDomNode:", "replaceChild", "Lorg.oss.pdfreporter.uses.org.w3c.dom.Node;", 0x1, "Lorg.oss.pdfreporter.uses.org.w3c.dom.DOMException;", NULL },
    { "removeChildWithOrgOssPdfreporterUsesOrgW3cDomNode:", "removeChild", "Lorg.oss.pdfreporter.uses.org.w3c.dom.Node;", 0x1, "Lorg.oss.pdfreporter.uses.org.w3c.dom.DOMException;", NULL },
    { "appendChildWithOrgOssPdfreporterUsesOrgW3cDomNode:", "appendChild", "Lorg.oss.pdfreporter.uses.org.w3c.dom.Node;", 0x1, "Lorg.oss.pdfreporter.uses.org.w3c.dom.DOMException;", NULL },
    { "hasChildNodes", NULL, "Z", 0x1, NULL, NULL },
    { "cloneNodeWithBoolean:", "cloneNode", "Lorg.oss.pdfreporter.uses.org.w3c.dom.Node;", 0x1, NULL, NULL },
    { "normalize", NULL, "V", 0x1, NULL, NULL },
    { "isSupportedWithNSString:withNSString:", "isSupported", "Z", 0x1, NULL, NULL },
    { "getNamespaceURI", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getPrefix", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "setPrefixWithNSString:", "setPrefix", "V", 0x1, "Lorg.oss.pdfreporter.uses.org.w3c.dom.DOMException;", NULL },
    { "getLocalName", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "hasAttributes", NULL, "Z", 0x1, NULL, NULL },
    { "getBaseURI", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "compareDocumentPositionWithOrgOssPdfreporterUsesOrgW3cDomNode:", "compareDocumentPosition", "S", 0x1, "Lorg.oss.pdfreporter.uses.org.w3c.dom.DOMException;", NULL },
    { "getTextContent", NULL, "Ljava.lang.String;", 0x1, "Lorg.oss.pdfreporter.uses.org.w3c.dom.DOMException;", NULL },
    { "setTextContentWithNSString:", "setTextContent", "V", 0x1, "Lorg.oss.pdfreporter.uses.org.w3c.dom.DOMException;", NULL },
    { "isSameNodeWithOrgOssPdfreporterUsesOrgW3cDomNode:", "isSameNode", "Z", 0x1, NULL, NULL },
    { "lookupPrefixWithNSString:", "lookupPrefix", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "isDefaultNamespaceWithNSString:", "isDefaultNamespace", "Z", 0x1, NULL, NULL },
    { "lookupNamespaceURIWithNSString:", "lookupNamespaceURI", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "isEqualNodeWithOrgOssPdfreporterUsesOrgW3cDomNode:", "isEqualNode", "Z", 0x1, NULL, NULL },
    { "getFeatureWithNSString:withNSString:", "getFeature", "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "setUserDataWithNSString:withId:withOrgOssPdfreporterUsesOrgW3cDomUserDataHandler:", "setUserData", "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "getUserDataWithNSString:", "getUserData", "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "getOwnerDocument", NULL, "Lorg.oss.pdfreporter.uses.org.w3c.dom.Document;", 0x1, NULL, NULL },
    { "init", "NotImplNode", NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterXmlParsersImplNotImplNode = { 2, "NotImplNode", "org.oss.pdfreporter.xml.parsers.impl", NULL, 0x1, 38, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterXmlParsersImplNotImplNode;
}

@end

void OrgOssPdfreporterXmlParsersImplNotImplNode_init(OrgOssPdfreporterXmlParsersImplNotImplNode *self) {
  NSObject_init(self);
}

OrgOssPdfreporterXmlParsersImplNotImplNode *new_OrgOssPdfreporterXmlParsersImplNotImplNode_init() {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterXmlParsersImplNotImplNode, init)
}

OrgOssPdfreporterXmlParsersImplNotImplNode *create_OrgOssPdfreporterXmlParsersImplNotImplNode_init() {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterXmlParsersImplNotImplNode, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterXmlParsersImplNotImplNode)
