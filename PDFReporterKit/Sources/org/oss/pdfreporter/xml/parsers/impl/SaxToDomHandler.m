//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-extensions/src/org/oss/pdfreporter/xml/parsers/impl/SaxToDomHandler.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/oss/pdfreporter/uses/org/w3c/dom/Document.h"
#include "org/oss/pdfreporter/uses/org/w3c/dom/Element.h"
#include "org/oss/pdfreporter/uses/org/w3c/dom/Node.h"
#include "org/oss/pdfreporter/uses/org/w3c/dom/Text.h"
#include "org/oss/pdfreporter/xml/parsers/IAttributes.h"
#include "org/oss/pdfreporter/xml/parsers/XMLParseException.h"
#include "org/oss/pdfreporter/xml/parsers/impl/SaxToDomHandler.h"

@interface OrgOssPdfreporterXmlParsersImplSaxToDomHandler () {
 @public
  id<OrgOssPdfreporterUsesOrgW3cDomDocument> document_;
  id<OrgOssPdfreporterUsesOrgW3cDomNode> currentNode_;
}

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterXmlParsersImplSaxToDomHandler, document_, id<OrgOssPdfreporterUsesOrgW3cDomDocument>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterXmlParsersImplSaxToDomHandler, currentNode_, id<OrgOssPdfreporterUsesOrgW3cDomNode>)

@implementation OrgOssPdfreporterXmlParsersImplSaxToDomHandler

- (instancetype)initWithOrgOssPdfreporterUsesOrgW3cDomDocument:(id<OrgOssPdfreporterUsesOrgW3cDomDocument>)document {
  OrgOssPdfreporterXmlParsersImplSaxToDomHandler_initWithOrgOssPdfreporterUsesOrgW3cDomDocument_(self, document);
  return self;
}

- (void)startElementWithNSString:(NSString *)uri
                    withNSString:(NSString *)localName
                    withNSString:(NSString *)qName
withOrgOssPdfreporterXmlParsersIAttributes:(id<OrgOssPdfreporterXmlParsersIAttributes>)attributes {
  id<OrgOssPdfreporterUsesOrgW3cDomElement> element = [((id<OrgOssPdfreporterUsesOrgW3cDomDocument>) nil_chk(document_)) createElementWithNSString:qName];
  for (jint i = 0; i < [((id<OrgOssPdfreporterXmlParsersIAttributes>) nil_chk(attributes)) getLength]; i++) {
    NSString *attrName = [attributes getLocalNameWithInt:i];
    if (attrName == nil || [@"" isEqual:attrName]) {
      attrName = [attributes getQNameWithInt:i];
    }
    if (attrName != nil || ![@"" isEqual:attrName]) {
      [((id<OrgOssPdfreporterUsesOrgW3cDomElement>) nil_chk(element)) setAttributeWithNSString:attrName withNSString:[attributes getValueWithInt:i]];
    }
  }
  (void) [((id<OrgOssPdfreporterUsesOrgW3cDomNode>) nil_chk(currentNode_)) appendChildWithOrgOssPdfreporterUsesOrgW3cDomNode:element];
  currentNode_ = element;
}

- (void)endElementWithNSString:(NSString *)uri
                  withNSString:(NSString *)localName
                  withNSString:(NSString *)qName {
  currentNode_ = [((id<OrgOssPdfreporterUsesOrgW3cDomNode>) nil_chk(currentNode_)) getParentNode];
}

- (void)charactersWithCharArray:(IOSCharArray *)ch
                        withInt:(jint)start
                        withInt:(jint)length {
  NSString *data = [NSString stringWithCharacters:ch offset:start length:length];
  id<OrgOssPdfreporterUsesOrgW3cDomText> text = [((id<OrgOssPdfreporterUsesOrgW3cDomDocument>) nil_chk(document_)) createTextNodeWithNSString:data];
  (void) [((id<OrgOssPdfreporterUsesOrgW3cDomNode>) nil_chk(currentNode_)) appendChildWithOrgOssPdfreporterUsesOrgW3cDomNode:text];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgOssPdfreporterUsesOrgW3cDomDocument:", "SaxToDomHandler", NULL, 0x0, NULL, NULL },
    { "startElementWithNSString:withNSString:withNSString:withOrgOssPdfreporterXmlParsersIAttributes:", "startElement", "V", 0x1, "Lorg.oss.pdfreporter.xml.parsers.XMLParseException;", NULL },
    { "endElementWithNSString:withNSString:withNSString:", "endElement", "V", 0x1, "Lorg.oss.pdfreporter.xml.parsers.XMLParseException;", NULL },
    { "charactersWithCharArray:withInt:withInt:", "characters", "V", 0x1, "Lorg.oss.pdfreporter.xml.parsers.XMLParseException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "document_", NULL, 0x12, "Lorg.oss.pdfreporter.uses.org.w3c.dom.Document;", NULL, NULL, .constantValue.asLong = 0 },
    { "currentNode_", NULL, 0x2, "Lorg.oss.pdfreporter.uses.org.w3c.dom.Node;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterXmlParsersImplSaxToDomHandler = { 2, "SaxToDomHandler", "org.oss.pdfreporter.xml.parsers.impl", NULL, 0x1, 4, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterXmlParsersImplSaxToDomHandler;
}

@end

void OrgOssPdfreporterXmlParsersImplSaxToDomHandler_initWithOrgOssPdfreporterUsesOrgW3cDomDocument_(OrgOssPdfreporterXmlParsersImplSaxToDomHandler *self, id<OrgOssPdfreporterUsesOrgW3cDomDocument> document) {
  NSObject_init(self);
  self->document_ = document;
  self->currentNode_ = document;
}

OrgOssPdfreporterXmlParsersImplSaxToDomHandler *new_OrgOssPdfreporterXmlParsersImplSaxToDomHandler_initWithOrgOssPdfreporterUsesOrgW3cDomDocument_(id<OrgOssPdfreporterUsesOrgW3cDomDocument> document) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterXmlParsersImplSaxToDomHandler, initWithOrgOssPdfreporterUsesOrgW3cDomDocument_, document)
}

OrgOssPdfreporterXmlParsersImplSaxToDomHandler *create_OrgOssPdfreporterXmlParsersImplSaxToDomHandler_initWithOrgOssPdfreporterUsesOrgW3cDomDocument_(id<OrgOssPdfreporterUsesOrgW3cDomDocument> document) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterXmlParsersImplSaxToDomHandler, initWithOrgOssPdfreporterUsesOrgW3cDomDocument_, document)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterXmlParsersImplSaxToDomHandler)
