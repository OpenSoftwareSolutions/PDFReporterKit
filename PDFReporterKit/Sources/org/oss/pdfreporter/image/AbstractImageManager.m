//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/image/AbstractImageManager.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/util/Collection.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"
#include "java/util/logging/Logger.h"
#include "org/oss/pdfreporter/image/AbstractImageManager.h"
#include "org/oss/pdfreporter/image/IImage.h"
#include "org/oss/pdfreporter/image/ImageProxy.h"
#include "org/oss/pdfreporter/registry/ISessionObject.h"

@interface OrgOssPdfreporterImageAbstractImageManager () {
 @public
  JavaUtilLoggingLogger *logger_;
  id<JavaUtilMap> imageCache_;
}

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterImageAbstractImageManager, logger_, JavaUtilLoggingLogger *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterImageAbstractImageManager, imageCache_, id<JavaUtilMap>)

@implementation OrgOssPdfreporterImageAbstractImageManager

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterImageAbstractImageManager_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<OrgOssPdfreporterImageIImage>)loadImageWithNSString:(NSString *)filePath {
  return [self loadImageWithNSString:filePath withFloat:0.0f withFloat:0.0f];
}

- (id<OrgOssPdfreporterImageIImage>)loadImageWithNSString:(NSString *)filePath
                                                withFloat:(jfloat)quality
                                                withFloat:(jfloat)scale_ {
  NSString *key = JreStrcat("$$F$F", filePath, @" quality:", quality, @" scale:", scale_);
  if (![((id<JavaUtilMap>) nil_chk(imageCache_)) containsKeyWithId:key]) {
    (void) [imageCache_ putWithId:key withId:new_OrgOssPdfreporterImageImageProxy_initWithOrgOssPdfreporterImageAbstractImageManager_withNSString_withFloat_withFloat_(self, filePath, quality, scale_)];
    [((JavaUtilLoggingLogger *) nil_chk(logger_)) finestWithNSString:JreStrcat("$$", @"Caching image: ", filePath)];
  }
  else {
    [((JavaUtilLoggingLogger *) nil_chk(logger_)) finestWithNSString:JreStrcat("$$", @"Load Image from cache: ", filePath)];
  }
  return [imageCache_ getWithId:key];
}

- (void)dispose {
  [((id<JavaUtilMap>) nil_chk(imageCache_)) clear];
  [self disposeInternal];
}

- (void)getWithNSString:(NSString *)key {
}

- (void)putWithNSString:(NSString *)key
withOrgOssPdfreporterRegistryISessionObject:(id<OrgOssPdfreporterRegistryISessionObject>)value {
}

- (void)removeWithNSString:(NSString *)key {
}

- (id<JavaUtilCollection>)getLoadedImages {
  return [((id<JavaUtilMap>) nil_chk(imageCache_)) values];
}

- (id<OrgOssPdfreporterImageIImage>)loadImageInternalWithNSString:(NSString *)filePath
                                                        withFloat:(jfloat)quality
                                                        withFloat:(jfloat)scale_ {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)disposeInternal {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "AbstractImageManager", NULL, 0x0, NULL, NULL },
    { "loadImageWithNSString:", "loadImage", "Lorg.oss.pdfreporter.image.IImage;", 0x1, "Ljava.io.IOException;", NULL },
    { "loadImageWithNSString:withFloat:withFloat:", "loadImage", "Lorg.oss.pdfreporter.image.IImage;", 0x1, "Ljava.io.IOException;", NULL },
    { "dispose", NULL, "V", 0x1, NULL, NULL },
    { "getWithNSString:", "get", "V", 0x1, NULL, NULL },
    { "putWithNSString:withOrgOssPdfreporterRegistryISessionObject:", "put", "V", 0x1, NULL, NULL },
    { "removeWithNSString:", "remove", "V", 0x1, NULL, NULL },
    { "getLoadedImages", NULL, "Ljava.util.Collection;", 0x1, NULL, "()Ljava/util/Collection<Lorg/oss/pdfreporter/image/IImage;>;" },
    { "loadImageInternalWithNSString:withFloat:withFloat:", "loadImageInternal", "Lorg.oss.pdfreporter.image.IImage;", 0x400, "Ljava.io.IOException;", NULL },
    { "disposeInternal", NULL, "V", 0x400, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "logger_", NULL, 0x12, "Ljava.util.logging.Logger;", NULL, NULL, .constantValue.asLong = 0 },
    { "imageCache_", NULL, 0x12, "Ljava.util.Map;", NULL, "Ljava/util/Map<Ljava/lang/String;Lorg/oss/pdfreporter/image/IImage;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterImageAbstractImageManager = { 2, "AbstractImageManager", "org.oss.pdfreporter.image", NULL, 0x401, 10, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterImageAbstractImageManager;
}

@end

void OrgOssPdfreporterImageAbstractImageManager_init(OrgOssPdfreporterImageAbstractImageManager *self) {
  NSObject_init(self);
  self->logger_ = JavaUtilLoggingLogger_getLoggerWithNSString_([OrgOssPdfreporterImageAbstractImageManager_class_() getName]);
  self->imageCache_ = new_JavaUtilHashMap_init();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterImageAbstractImageManager)
