//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/text/bundle/StringLocale.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/util/Locale.h"
#include "org/oss/pdfreporter/text/bundle/StringLocale.h"

@interface OrgOssPdfreporterTextBundleStringLocale () {
 @public
  NSString *language_;
  NSString *region_;
}

- (instancetype)initWithNSString:(NSString *)language
                    withNSString:(NSString *)region;

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterTextBundleStringLocale, language_, NSString *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterTextBundleStringLocale, region_, NSString *)

__attribute__((unused)) static void OrgOssPdfreporterTextBundleStringLocale_initWithNSString_withNSString_(OrgOssPdfreporterTextBundleStringLocale *self, NSString *language, NSString *region);

__attribute__((unused)) static OrgOssPdfreporterTextBundleStringLocale *new_OrgOssPdfreporterTextBundleStringLocale_initWithNSString_withNSString_(NSString *language, NSString *region) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgOssPdfreporterTextBundleStringLocale *create_OrgOssPdfreporterTextBundleStringLocale_initWithNSString_withNSString_(NSString *language, NSString *region);

J2OBJC_INITIALIZED_DEFN(OrgOssPdfreporterTextBundleStringLocale)

OrgOssPdfreporterTextBundleStringLocale *OrgOssPdfreporterTextBundleStringLocale_ENGLISH;
OrgOssPdfreporterTextBundleStringLocale *OrgOssPdfreporterTextBundleStringLocale_FRENCH;
OrgOssPdfreporterTextBundleStringLocale *OrgOssPdfreporterTextBundleStringLocale_GERMAN;
OrgOssPdfreporterTextBundleStringLocale *OrgOssPdfreporterTextBundleStringLocale_ITALIAN;
OrgOssPdfreporterTextBundleStringLocale *OrgOssPdfreporterTextBundleStringLocale_JAPANESE;
OrgOssPdfreporterTextBundleStringLocale *OrgOssPdfreporterTextBundleStringLocale_KOREAN;
OrgOssPdfreporterTextBundleStringLocale *OrgOssPdfreporterTextBundleStringLocale_CHINESE;
OrgOssPdfreporterTextBundleStringLocale *OrgOssPdfreporterTextBundleStringLocale_SIMPLIFIED_CHINESE;
OrgOssPdfreporterTextBundleStringLocale *OrgOssPdfreporterTextBundleStringLocale_TRADITIONAL_CHINESE;
OrgOssPdfreporterTextBundleStringLocale *OrgOssPdfreporterTextBundleStringLocale_FRANCE;
OrgOssPdfreporterTextBundleStringLocale *OrgOssPdfreporterTextBundleStringLocale_GERMANY;
OrgOssPdfreporterTextBundleStringLocale *OrgOssPdfreporterTextBundleStringLocale_ITALY;
OrgOssPdfreporterTextBundleStringLocale *OrgOssPdfreporterTextBundleStringLocale_JAPAN;
OrgOssPdfreporterTextBundleStringLocale *OrgOssPdfreporterTextBundleStringLocale_KOREA;
OrgOssPdfreporterTextBundleStringLocale *OrgOssPdfreporterTextBundleStringLocale_CHINA;
OrgOssPdfreporterTextBundleStringLocale *OrgOssPdfreporterTextBundleStringLocale_PRC;
OrgOssPdfreporterTextBundleStringLocale *OrgOssPdfreporterTextBundleStringLocale_TAIWAN;
OrgOssPdfreporterTextBundleStringLocale *OrgOssPdfreporterTextBundleStringLocale_UK;
OrgOssPdfreporterTextBundleStringLocale *OrgOssPdfreporterTextBundleStringLocale_US;
OrgOssPdfreporterTextBundleStringLocale *OrgOssPdfreporterTextBundleStringLocale_CANADA;
OrgOssPdfreporterTextBundleStringLocale *OrgOssPdfreporterTextBundleStringLocale_CANADA_FRENCH;

@implementation OrgOssPdfreporterTextBundleStringLocale

+ (OrgOssPdfreporterTextBundleStringLocale *)ENGLISH {
  return OrgOssPdfreporterTextBundleStringLocale_ENGLISH;
}

+ (OrgOssPdfreporterTextBundleStringLocale *)FRENCH {
  return OrgOssPdfreporterTextBundleStringLocale_FRENCH;
}

+ (OrgOssPdfreporterTextBundleStringLocale *)GERMAN {
  return OrgOssPdfreporterTextBundleStringLocale_GERMAN;
}

+ (OrgOssPdfreporterTextBundleStringLocale *)ITALIAN {
  return OrgOssPdfreporterTextBundleStringLocale_ITALIAN;
}

+ (OrgOssPdfreporterTextBundleStringLocale *)JAPANESE {
  return OrgOssPdfreporterTextBundleStringLocale_JAPANESE;
}

+ (OrgOssPdfreporterTextBundleStringLocale *)KOREAN {
  return OrgOssPdfreporterTextBundleStringLocale_KOREAN;
}

+ (OrgOssPdfreporterTextBundleStringLocale *)CHINESE {
  return OrgOssPdfreporterTextBundleStringLocale_CHINESE;
}

+ (OrgOssPdfreporterTextBundleStringLocale *)SIMPLIFIED_CHINESE {
  return OrgOssPdfreporterTextBundleStringLocale_SIMPLIFIED_CHINESE;
}

+ (OrgOssPdfreporterTextBundleStringLocale *)TRADITIONAL_CHINESE {
  return OrgOssPdfreporterTextBundleStringLocale_TRADITIONAL_CHINESE;
}

+ (OrgOssPdfreporterTextBundleStringLocale *)FRANCE {
  return OrgOssPdfreporterTextBundleStringLocale_FRANCE;
}

+ (OrgOssPdfreporterTextBundleStringLocale *)GERMANY {
  return OrgOssPdfreporterTextBundleStringLocale_GERMANY;
}

+ (OrgOssPdfreporterTextBundleStringLocale *)ITALY {
  return OrgOssPdfreporterTextBundleStringLocale_ITALY;
}

+ (OrgOssPdfreporterTextBundleStringLocale *)JAPAN {
  return OrgOssPdfreporterTextBundleStringLocale_JAPAN;
}

+ (OrgOssPdfreporterTextBundleStringLocale *)KOREA {
  return OrgOssPdfreporterTextBundleStringLocale_KOREA;
}

+ (OrgOssPdfreporterTextBundleStringLocale *)CHINA {
  return OrgOssPdfreporterTextBundleStringLocale_CHINA;
}

+ (OrgOssPdfreporterTextBundleStringLocale *)PRC {
  return OrgOssPdfreporterTextBundleStringLocale_PRC;
}

+ (OrgOssPdfreporterTextBundleStringLocale *)TAIWAN {
  return OrgOssPdfreporterTextBundleStringLocale_TAIWAN;
}

+ (OrgOssPdfreporterTextBundleStringLocale *)UK {
  return OrgOssPdfreporterTextBundleStringLocale_UK;
}

+ (OrgOssPdfreporterTextBundleStringLocale *)US {
  return OrgOssPdfreporterTextBundleStringLocale_US;
}

+ (OrgOssPdfreporterTextBundleStringLocale *)CANADA {
  return OrgOssPdfreporterTextBundleStringLocale_CANADA;
}

+ (OrgOssPdfreporterTextBundleStringLocale *)CANADA_FRENCH {
  return OrgOssPdfreporterTextBundleStringLocale_CANADA_FRENCH;
}

- (instancetype)initWithNSString:(NSString *)language
                    withNSString:(NSString *)region {
  OrgOssPdfreporterTextBundleStringLocale_initWithNSString_withNSString_(self, language, region);
  return self;
}

+ (OrgOssPdfreporterTextBundleStringLocale *)getInstanceWithNSString:(NSString *)language {
  return OrgOssPdfreporterTextBundleStringLocale_getInstanceWithNSString_(language);
}

+ (OrgOssPdfreporterTextBundleStringLocale *)getInstanceWithNSString:(NSString *)language
                                                        withNSString:(NSString *)region {
  return OrgOssPdfreporterTextBundleStringLocale_getInstanceWithNSString_withNSString_(language, region);
}

+ (OrgOssPdfreporterTextBundleStringLocale *)fromLocaleStringWithNSString:(NSString *)localeString {
  return OrgOssPdfreporterTextBundleStringLocale_fromLocaleStringWithNSString_(localeString);
}

+ (OrgOssPdfreporterTextBundleStringLocale *)getDefault {
  return OrgOssPdfreporterTextBundleStringLocale_getDefault();
}

- (NSString *)getLocaleString {
  return region_ == nil ? language_ : JreStrcat("$C$", language_, '_', region_);
}

- (NSString *)getLanguage {
  return language_;
}

- (NSString *)getRegion {
  return region_;
}

- (JavaUtilLocale *)toLocale {
  return [self getRegion] == nil ? new_JavaUtilLocale_initWithNSString_([self getLanguage]) : new_JavaUtilLocale_initWithNSString_withNSString_([self getLanguage], [self getRegion]);
}

- (NSUInteger)hash {
  jint prime = 31;
  jint result = 1;
  result = prime * result + ((language_ == nil) ? 0 : ((jint) [((NSString *) nil_chk(language_)) hash]));
  result = prime * result + ((region_ == nil) ? 0 : ((jint) [((NSString *) nil_chk(region_)) hash]));
  return result;
}

- (jboolean)isEqual:(id)obj {
  if (self == obj) return true;
  if (obj == nil) return false;
  if ([self getClass] != (id) [obj getClass]) return false;
  OrgOssPdfreporterTextBundleStringLocale *other = (OrgOssPdfreporterTextBundleStringLocale *) cast_chk(obj, [OrgOssPdfreporterTextBundleStringLocale class]);
  if (language_ == nil) {
    if (other->language_ != nil) return false;
  }
  else if (![language_ isEqual:other->language_]) return false;
  if (region_ == nil) {
    if (other->region_ != nil) return false;
  }
  else if (![region_ isEqual:other->region_]) return false;
  return true;
}

- (NSString *)description {
  return [self getLocaleString];
}

+ (void)initialize {
  if (self == [OrgOssPdfreporterTextBundleStringLocale class]) {
    OrgOssPdfreporterTextBundleStringLocale_ENGLISH = OrgOssPdfreporterTextBundleStringLocale_getInstanceWithNSString_withNSString_(@"en", @"");
    OrgOssPdfreporterTextBundleStringLocale_FRENCH = OrgOssPdfreporterTextBundleStringLocale_getInstanceWithNSString_withNSString_(@"fr", @"");
    OrgOssPdfreporterTextBundleStringLocale_GERMAN = OrgOssPdfreporterTextBundleStringLocale_getInstanceWithNSString_withNSString_(@"de", @"");
    OrgOssPdfreporterTextBundleStringLocale_ITALIAN = OrgOssPdfreporterTextBundleStringLocale_getInstanceWithNSString_withNSString_(@"it", @"");
    OrgOssPdfreporterTextBundleStringLocale_JAPANESE = OrgOssPdfreporterTextBundleStringLocale_getInstanceWithNSString_withNSString_(@"ja", @"");
    OrgOssPdfreporterTextBundleStringLocale_KOREAN = OrgOssPdfreporterTextBundleStringLocale_getInstanceWithNSString_withNSString_(@"ko", @"");
    OrgOssPdfreporterTextBundleStringLocale_CHINESE = OrgOssPdfreporterTextBundleStringLocale_getInstanceWithNSString_withNSString_(@"zh", @"");
    OrgOssPdfreporterTextBundleStringLocale_SIMPLIFIED_CHINESE = OrgOssPdfreporterTextBundleStringLocale_getInstanceWithNSString_withNSString_(@"zh", @"CN");
    OrgOssPdfreporterTextBundleStringLocale_TRADITIONAL_CHINESE = OrgOssPdfreporterTextBundleStringLocale_getInstanceWithNSString_withNSString_(@"zh", @"TW");
    OrgOssPdfreporterTextBundleStringLocale_FRANCE = OrgOssPdfreporterTextBundleStringLocale_getInstanceWithNSString_withNSString_(@"fr", @"FR");
    OrgOssPdfreporterTextBundleStringLocale_GERMANY = OrgOssPdfreporterTextBundleStringLocale_getInstanceWithNSString_withNSString_(@"de", @"DE");
    OrgOssPdfreporterTextBundleStringLocale_ITALY = OrgOssPdfreporterTextBundleStringLocale_getInstanceWithNSString_withNSString_(@"it", @"IT");
    OrgOssPdfreporterTextBundleStringLocale_JAPAN = OrgOssPdfreporterTextBundleStringLocale_getInstanceWithNSString_withNSString_(@"ja", @"JP");
    OrgOssPdfreporterTextBundleStringLocale_KOREA = OrgOssPdfreporterTextBundleStringLocale_getInstanceWithNSString_withNSString_(@"ko", @"KR");
    OrgOssPdfreporterTextBundleStringLocale_CHINA = OrgOssPdfreporterTextBundleStringLocale_SIMPLIFIED_CHINESE;
    OrgOssPdfreporterTextBundleStringLocale_PRC = OrgOssPdfreporterTextBundleStringLocale_SIMPLIFIED_CHINESE;
    OrgOssPdfreporterTextBundleStringLocale_TAIWAN = OrgOssPdfreporterTextBundleStringLocale_TRADITIONAL_CHINESE;
    OrgOssPdfreporterTextBundleStringLocale_UK = OrgOssPdfreporterTextBundleStringLocale_getInstanceWithNSString_withNSString_(@"en", @"GB");
    OrgOssPdfreporterTextBundleStringLocale_US = OrgOssPdfreporterTextBundleStringLocale_getInstanceWithNSString_withNSString_(@"en", @"US");
    OrgOssPdfreporterTextBundleStringLocale_CANADA = OrgOssPdfreporterTextBundleStringLocale_getInstanceWithNSString_withNSString_(@"en", @"CA");
    OrgOssPdfreporterTextBundleStringLocale_CANADA_FRENCH = OrgOssPdfreporterTextBundleStringLocale_getInstanceWithNSString_withNSString_(@"fr", @"CA");
    J2OBJC_SET_INITIALIZED(OrgOssPdfreporterTextBundleStringLocale)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withNSString:", "StringLocale", NULL, 0x2, NULL, NULL },
    { "getInstanceWithNSString:", "getInstance", "Lorg.oss.pdfreporter.text.bundle.StringLocale;", 0x9, NULL, NULL },
    { "getInstanceWithNSString:withNSString:", "getInstance", "Lorg.oss.pdfreporter.text.bundle.StringLocale;", 0x9, NULL, NULL },
    { "fromLocaleStringWithNSString:", "fromLocaleString", "Lorg.oss.pdfreporter.text.bundle.StringLocale;", 0x9, NULL, NULL },
    { "getDefault", NULL, "Lorg.oss.pdfreporter.text.bundle.StringLocale;", 0x9, NULL, NULL },
    { "getLocaleString", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getLanguage", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getRegion", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "toLocale", NULL, "Ljava.util.Locale;", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "ENGLISH", "ENGLISH", 0x19, "Lorg.oss.pdfreporter.text.bundle.StringLocale;", &OrgOssPdfreporterTextBundleStringLocale_ENGLISH, NULL, .constantValue.asLong = 0 },
    { "FRENCH", "FRENCH", 0x19, "Lorg.oss.pdfreporter.text.bundle.StringLocale;", &OrgOssPdfreporterTextBundleStringLocale_FRENCH, NULL, .constantValue.asLong = 0 },
    { "GERMAN", "GERMAN", 0x19, "Lorg.oss.pdfreporter.text.bundle.StringLocale;", &OrgOssPdfreporterTextBundleStringLocale_GERMAN, NULL, .constantValue.asLong = 0 },
    { "ITALIAN", "ITALIAN", 0x19, "Lorg.oss.pdfreporter.text.bundle.StringLocale;", &OrgOssPdfreporterTextBundleStringLocale_ITALIAN, NULL, .constantValue.asLong = 0 },
    { "JAPANESE", "JAPANESE", 0x19, "Lorg.oss.pdfreporter.text.bundle.StringLocale;", &OrgOssPdfreporterTextBundleStringLocale_JAPANESE, NULL, .constantValue.asLong = 0 },
    { "KOREAN", "KOREAN", 0x19, "Lorg.oss.pdfreporter.text.bundle.StringLocale;", &OrgOssPdfreporterTextBundleStringLocale_KOREAN, NULL, .constantValue.asLong = 0 },
    { "CHINESE", "CHINESE", 0x19, "Lorg.oss.pdfreporter.text.bundle.StringLocale;", &OrgOssPdfreporterTextBundleStringLocale_CHINESE, NULL, .constantValue.asLong = 0 },
    { "SIMPLIFIED_CHINESE", "SIMPLIFIED_CHINESE", 0x19, "Lorg.oss.pdfreporter.text.bundle.StringLocale;", &OrgOssPdfreporterTextBundleStringLocale_SIMPLIFIED_CHINESE, NULL, .constantValue.asLong = 0 },
    { "TRADITIONAL_CHINESE", "TRADITIONAL_CHINESE", 0x19, "Lorg.oss.pdfreporter.text.bundle.StringLocale;", &OrgOssPdfreporterTextBundleStringLocale_TRADITIONAL_CHINESE, NULL, .constantValue.asLong = 0 },
    { "FRANCE", "FRANCE", 0x19, "Lorg.oss.pdfreporter.text.bundle.StringLocale;", &OrgOssPdfreporterTextBundleStringLocale_FRANCE, NULL, .constantValue.asLong = 0 },
    { "GERMANY", "GERMANY", 0x19, "Lorg.oss.pdfreporter.text.bundle.StringLocale;", &OrgOssPdfreporterTextBundleStringLocale_GERMANY, NULL, .constantValue.asLong = 0 },
    { "ITALY", "ITALY", 0x19, "Lorg.oss.pdfreporter.text.bundle.StringLocale;", &OrgOssPdfreporterTextBundleStringLocale_ITALY, NULL, .constantValue.asLong = 0 },
    { "JAPAN", "JAPAN", 0x19, "Lorg.oss.pdfreporter.text.bundle.StringLocale;", &OrgOssPdfreporterTextBundleStringLocale_JAPAN, NULL, .constantValue.asLong = 0 },
    { "KOREA", "KOREA", 0x19, "Lorg.oss.pdfreporter.text.bundle.StringLocale;", &OrgOssPdfreporterTextBundleStringLocale_KOREA, NULL, .constantValue.asLong = 0 },
    { "CHINA", "CHINA", 0x19, "Lorg.oss.pdfreporter.text.bundle.StringLocale;", &OrgOssPdfreporterTextBundleStringLocale_CHINA, NULL, .constantValue.asLong = 0 },
    { "PRC", "PRC", 0x19, "Lorg.oss.pdfreporter.text.bundle.StringLocale;", &OrgOssPdfreporterTextBundleStringLocale_PRC, NULL, .constantValue.asLong = 0 },
    { "TAIWAN", "TAIWAN", 0x19, "Lorg.oss.pdfreporter.text.bundle.StringLocale;", &OrgOssPdfreporterTextBundleStringLocale_TAIWAN, NULL, .constantValue.asLong = 0 },
    { "UK", "UK", 0x19, "Lorg.oss.pdfreporter.text.bundle.StringLocale;", &OrgOssPdfreporterTextBundleStringLocale_UK, NULL, .constantValue.asLong = 0 },
    { "US", "US", 0x19, "Lorg.oss.pdfreporter.text.bundle.StringLocale;", &OrgOssPdfreporterTextBundleStringLocale_US, NULL, .constantValue.asLong = 0 },
    { "CANADA", "CANADA", 0x19, "Lorg.oss.pdfreporter.text.bundle.StringLocale;", &OrgOssPdfreporterTextBundleStringLocale_CANADA, NULL, .constantValue.asLong = 0 },
    { "CANADA_FRENCH", "CANADA_FRENCH", 0x19, "Lorg.oss.pdfreporter.text.bundle.StringLocale;", &OrgOssPdfreporterTextBundleStringLocale_CANADA_FRENCH, NULL, .constantValue.asLong = 0 },
    { "language_", NULL, 0x12, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "region_", NULL, 0x12, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterTextBundleStringLocale = { 2, "StringLocale", "org.oss.pdfreporter.text.bundle", NULL, 0x11, 12, methods, 23, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterTextBundleStringLocale;
}

@end

void OrgOssPdfreporterTextBundleStringLocale_initWithNSString_withNSString_(OrgOssPdfreporterTextBundleStringLocale *self, NSString *language, NSString *region) {
  NSObject_init(self);
  self->language_ = language;
  self->region_ = region != nil ? [region isEmpty] ? nil : region : nil;
}

OrgOssPdfreporterTextBundleStringLocale *new_OrgOssPdfreporterTextBundleStringLocale_initWithNSString_withNSString_(NSString *language, NSString *region) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterTextBundleStringLocale, initWithNSString_withNSString_, language, region)
}

OrgOssPdfreporterTextBundleStringLocale *create_OrgOssPdfreporterTextBundleStringLocale_initWithNSString_withNSString_(NSString *language, NSString *region) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterTextBundleStringLocale, initWithNSString_withNSString_, language, region)
}

OrgOssPdfreporterTextBundleStringLocale *OrgOssPdfreporterTextBundleStringLocale_getInstanceWithNSString_(NSString *language) {
  OrgOssPdfreporterTextBundleStringLocale_initialize();
  return new_OrgOssPdfreporterTextBundleStringLocale_initWithNSString_withNSString_(language, nil);
}

OrgOssPdfreporterTextBundleStringLocale *OrgOssPdfreporterTextBundleStringLocale_getInstanceWithNSString_withNSString_(NSString *language, NSString *region) {
  OrgOssPdfreporterTextBundleStringLocale_initialize();
  return new_OrgOssPdfreporterTextBundleStringLocale_initWithNSString_withNSString_(language, region);
}

OrgOssPdfreporterTextBundleStringLocale *OrgOssPdfreporterTextBundleStringLocale_fromLocaleStringWithNSString_(NSString *localeString) {
  OrgOssPdfreporterTextBundleStringLocale_initialize();
  jint index = [((NSString *) nil_chk(localeString)) indexOf:'_'];
  return index < 0 ? OrgOssPdfreporterTextBundleStringLocale_getInstanceWithNSString_(localeString) : OrgOssPdfreporterTextBundleStringLocale_getInstanceWithNSString_withNSString_([localeString substring:0 endIndex:index], [localeString substring:index + 1]);
}

OrgOssPdfreporterTextBundleStringLocale *OrgOssPdfreporterTextBundleStringLocale_getDefault() {
  OrgOssPdfreporterTextBundleStringLocale_initialize();
  return OrgOssPdfreporterTextBundleStringLocale_fromLocaleStringWithNSString_([((JavaUtilLocale *) nil_chk(JavaUtilLocale_getDefault())) description]);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterTextBundleStringLocale)
