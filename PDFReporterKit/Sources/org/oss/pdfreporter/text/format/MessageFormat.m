//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/oss/pdfreporter/text/format/MessageFormat.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/StringBuffer.h"
#include "java/text/MessageFormat.h"
#include "java/util/Locale.h"
#include "org/oss/pdfreporter/text/format/MessageFormat.h"

@interface OrgOssPdfreporterTextFormatMessageFormat () {
 @public
  JavaTextMessageFormat *format_;
}

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterTextFormatMessageFormat, format_, JavaTextMessageFormat *)

@implementation OrgOssPdfreporterTextFormatMessageFormat

- (instancetype)initWithNSString:(NSString *)pattern
              withJavaUtilLocale:(JavaUtilLocale *)locale {
  OrgOssPdfreporterTextFormatMessageFormat_initWithNSString_withJavaUtilLocale_(self, pattern, locale);
  return self;
}

- (NSString *)formatWithNSObjectArray:(IOSObjectArray *)arguments {
  JavaLangStringBuffer *sb = new_JavaLangStringBuffer_init();
  (void) [((JavaTextMessageFormat *) nil_chk(format_)) formatWithNSObjectArray:arguments withJavaLangStringBuffer:sb withJavaTextFieldPosition:nil];
  return [sb description];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withJavaUtilLocale:", "MessageFormat", NULL, 0x1, NULL, NULL },
    { "formatWithNSObjectArray:", "format", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "format_", NULL, 0x12, "Ljava.text.MessageFormat;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterTextFormatMessageFormat = { 2, "MessageFormat", "org.oss.pdfreporter.text.format", NULL, 0x1, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterTextFormatMessageFormat;
}

@end

void OrgOssPdfreporterTextFormatMessageFormat_initWithNSString_withJavaUtilLocale_(OrgOssPdfreporterTextFormatMessageFormat *self, NSString *pattern, JavaUtilLocale *locale) {
  NSObject_init(self);
  if (pattern != nil && locale != nil) {
    self->format_ = new_JavaTextMessageFormat_initWithNSString_withJavaUtilLocale_(pattern, locale);
  }
  else if (pattern != nil) {
    self->format_ = new_JavaTextMessageFormat_initWithNSString_(pattern);
  }
  else if (locale != nil) {
    self->format_ = new_JavaTextMessageFormat_initWithNSString_(@"");
    [self->format_ setLocaleWithJavaUtilLocale:locale];
  }
  else {
    self->format_ = new_JavaTextMessageFormat_initWithNSString_(@"");
  }
}

OrgOssPdfreporterTextFormatMessageFormat *new_OrgOssPdfreporterTextFormatMessageFormat_initWithNSString_withJavaUtilLocale_(NSString *pattern, JavaUtilLocale *locale) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterTextFormatMessageFormat, initWithNSString_withJavaUtilLocale_, pattern, locale)
}

OrgOssPdfreporterTextFormatMessageFormat *create_OrgOssPdfreporterTextFormatMessageFormat_initWithNSString_withJavaUtilLocale_(NSString *pattern, JavaUtilLocale *locale) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterTextFormatMessageFormat, initWithNSString_withJavaUtilLocale_, pattern, locale)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterTextFormatMessageFormat)
