//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-extensions/src/org/oss/pdfreporter/uses/java/awt/text/IAttributedCharacterIterator.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/io/InvalidObjectException.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"
#include "org/oss/pdfreporter/uses/java/awt/text/IAttributedCharacterIterator.h"

@interface OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator : NSObject

@end

@interface OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator_Attribute () {
 @public
  NSString *name_;
}

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator_Attribute, name_, NSString *)

inline id<JavaUtilMap> OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator_Attribute_get_instanceMap();
static id<JavaUtilMap> OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator_Attribute_instanceMap;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator_Attribute, instanceMap, id<JavaUtilMap>)

inline jlong OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator_Attribute_get_serialVersionUID();
#define OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator_Attribute_serialVersionUID -9142742483513960612LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator_Attribute, serialVersionUID, jlong)

@implementation OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator

- (id)copyWithZone:(NSZone *)zone {
  return [self clone];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getRunStart", NULL, "I", 0x401, NULL, NULL },
    { "getRunStartWithOrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator_Attribute:", "getRunStart", "I", 0x401, NULL, NULL },
    { "getRunStartWithJavaUtilSet:", "getRunStart", "I", 0x401, NULL, "(Ljava/util/Set<+Lorg/oss/pdfreporter/uses/java/awt/text/IAttributedCharacterIterator$Attribute;>;)I" },
    { "getRunLimit", NULL, "I", 0x401, NULL, NULL },
    { "getRunLimitWithOrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator_Attribute:", "getRunLimit", "I", 0x401, NULL, NULL },
    { "getRunLimitWithJavaUtilSet:", "getRunLimit", "I", 0x401, NULL, "(Ljava/util/Set<+Lorg/oss/pdfreporter/uses/java/awt/text/IAttributedCharacterIterator$Attribute;>;)I" },
    { "getAttributes", NULL, "Ljava.util.Map;", 0x401, NULL, "()Ljava/util/Map<Lorg/oss/pdfreporter/uses/java/awt/text/IAttributedCharacterIterator$Attribute;Ljava/lang/Object;>;" },
    { "getAttributeWithOrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator_Attribute:", "getAttribute", "Ljava.lang.Object;", 0x401, NULL, NULL },
    { "getAllAttributeKeys", NULL, "Ljava.util.Set;", 0x401, NULL, "()Ljava/util/Set<Lorg/oss/pdfreporter/uses/java/awt/text/IAttributedCharacterIterator$Attribute;>;" },
  };
  static const char *inner_classes[] = {"Lorg.oss.pdfreporter.uses.java.awt.text.IAttributedCharacterIterator$Attribute;"};
  static const J2ObjcClassInfo _OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator = { 2, "IAttributedCharacterIterator", "org.oss.pdfreporter.uses.java.awt.text", NULL, 0x609, 9, methods, 0, NULL, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator)

J2OBJC_INITIALIZED_DEFN(OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator_Attribute)

OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator_Attribute *OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator_Attribute_LANGUAGE;
OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator_Attribute *OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator_Attribute_READING;
OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator_Attribute *OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator_Attribute_INPUT_METHOD_SEGMENT;

@implementation OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator_Attribute

+ (OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator_Attribute *)LANGUAGE {
  return OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator_Attribute_LANGUAGE;
}

+ (OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator_Attribute *)READING {
  return OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator_Attribute_READING;
}

+ (OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator_Attribute *)INPUT_METHOD_SEGMENT {
  return OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator_Attribute_INPUT_METHOD_SEGMENT;
}

- (instancetype)initWithNSString:(NSString *)name {
  OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator_Attribute_initWithNSString_(self, name);
  return self;
}

- (jboolean)isEqual:(id)obj {
  return [super isEqual:obj];
}

- (NSUInteger)hash {
  return ((jint) [super hash]);
}

- (NSString *)description {
  return JreStrcat("$C$C", [[self getClass] getName], '(', name_, ')');
}

- (NSString *)getName {
  return name_;
}

- (id)readResolve {
  if ([self getClass] != (id) OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator_Attribute_class_()) {
    @throw new_JavaIoInvalidObjectException_initWithNSString_(@"subclass didn't correctly implement readResolve");
  }
  OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator_Attribute *instance = (OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator_Attribute *) cast_chk([((id<JavaUtilMap>) nil_chk(OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator_Attribute_instanceMap)) getWithId:[self getName]], [OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator_Attribute class]);
  if (instance != nil) {
    return instance;
  }
  else {
    @throw new_JavaIoInvalidObjectException_initWithNSString_(@"unknown attribute name");
  }
}

+ (void)initialize {
  if (self == [OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator_Attribute class]) {
    OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator_Attribute_instanceMap = new_JavaUtilHashMap_initWithInt_(7);
    OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator_Attribute_LANGUAGE = new_OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator_Attribute_initWithNSString_(@"language");
    OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator_Attribute_READING = new_OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator_Attribute_initWithNSString_(@"reading");
    OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator_Attribute_INPUT_METHOD_SEGMENT = new_OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator_Attribute_initWithNSString_(@"input_method_segment");
    J2OBJC_SET_INITIALIZED(OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator_Attribute)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:", "Attribute", NULL, 0x4, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x11, NULL, NULL },
    { "hash", "hashCode", "I", 0x11, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getName", NULL, "Ljava.lang.String;", 0x4, NULL, NULL },
    { "readResolve", NULL, "Ljava.lang.Object;", 0x4, "Ljava.io.InvalidObjectException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "name_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "instanceMap", "instanceMap", 0x1a, "Ljava.util.Map;", &OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator_Attribute_instanceMap, NULL, .constantValue.asLong = 0 },
    { "LANGUAGE", "LANGUAGE", 0x19, "Lorg.oss.pdfreporter.uses.java.awt.text.IAttributedCharacterIterator$Attribute;", &OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator_Attribute_LANGUAGE, NULL, .constantValue.asLong = 0 },
    { "READING", "READING", 0x19, "Lorg.oss.pdfreporter.uses.java.awt.text.IAttributedCharacterIterator$Attribute;", &OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator_Attribute_READING, NULL, .constantValue.asLong = 0 },
    { "INPUT_METHOD_SEGMENT", "INPUT_METHOD_SEGMENT", 0x19, "Lorg.oss.pdfreporter.uses.java.awt.text.IAttributedCharacterIterator$Attribute;", &OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator_Attribute_INPUT_METHOD_SEGMENT, NULL, .constantValue.asLong = 0 },
    { "serialVersionUID", "serialVersionUID", 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator_Attribute_serialVersionUID },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator_Attribute = { 2, "Attribute", "org.oss.pdfreporter.uses.java.awt.text", "IAttributedCharacterIterator", 0x9, 6, methods, 6, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator_Attribute;
}

@end

void OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator_Attribute_initWithNSString_(OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator_Attribute *self, NSString *name) {
  NSObject_init(self);
  self->name_ = name;
  if ([self getClass] == (id) OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator_Attribute_class_()) {
    (void) [((id<JavaUtilMap>) nil_chk(OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator_Attribute_instanceMap)) putWithId:name withId:self];
  }
}

OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator_Attribute *new_OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator_Attribute_initWithNSString_(NSString *name) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator_Attribute, initWithNSString_, name)
}

OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator_Attribute *create_OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator_Attribute_initWithNSString_(NSString *name) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator_Attribute, initWithNSString_, name)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterUsesJavaAwtTextIAttributedCharacterIterator_Attribute)
