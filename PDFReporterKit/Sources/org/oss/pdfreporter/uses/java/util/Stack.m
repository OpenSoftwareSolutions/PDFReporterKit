//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-extensions/src/org/oss/pdfreporter/uses/java/util/Stack.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/util/Collection.h"
#include "java/util/EmptyStackException.h"
#include "java/util/Enumeration.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/ListIterator.h"
#include "java/util/Vector.h"
#include "org/oss/pdfreporter/uses/java/util/Stack.h"

@interface OrgOssPdfreporterUsesJavaUtilStack () {
 @public
  JavaUtilVector *vector_;
}

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterUsesJavaUtilStack, vector_, JavaUtilVector *)

inline jlong OrgOssPdfreporterUsesJavaUtilStack_get_serialVersionUID();
#define OrgOssPdfreporterUsesJavaUtilStack_serialVersionUID 1224463164541339165LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgOssPdfreporterUsesJavaUtilStack, serialVersionUID, jlong)

@implementation OrgOssPdfreporterUsesJavaUtilStack

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterUsesJavaUtilStack_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithOrgOssPdfreporterUsesJavaUtilStack:(OrgOssPdfreporterUsesJavaUtilStack *)source {
  OrgOssPdfreporterUsesJavaUtilStack_initWithOrgOssPdfreporterUsesJavaUtilStack_(self, source);
  return self;
}

- (id)pushWithId:(id)item {
  [((JavaUtilVector *) nil_chk(vector_)) addElementWithId:item];
  return item;
}

- (id)pop {
  @synchronized(self) {
    id obj;
    jint len = [((JavaUtilVector *) nil_chk(vector_)) size];
    obj = [self peek];
    [vector_ removeElementAtWithInt:len - 1];
    return obj;
  }
}

- (id)peek {
  @synchronized(self) {
    jint len = [((JavaUtilVector *) nil_chk(vector_)) size];
    if (len == 0) @throw new_JavaUtilEmptyStackException_init();
    return [vector_ elementAtWithInt:len - 1];
  }
}

- (jboolean)empty {
  return [((JavaUtilVector *) nil_chk(vector_)) size] == 0;
}

- (jint)searchWithId:(id)o {
  @synchronized(self) {
    jint i = [((JavaUtilVector *) nil_chk(vector_)) lastIndexOfWithId:o];
    if (i >= 0) {
      return [vector_ size] - i;
    }
    return -1;
  }
}

- (OrgOssPdfreporterUsesJavaUtilStack *)clone {
  return new_OrgOssPdfreporterUsesJavaUtilStack_initWithOrgOssPdfreporterUsesJavaUtilStack_(self);
}

- (void)copyIntoWithNSObjectArray:(IOSObjectArray *)anArray {
  [((JavaUtilVector *) nil_chk(vector_)) copyIntoWithNSObjectArray:anArray];
}

- (void)trimToSize {
  [((JavaUtilVector *) nil_chk(vector_)) trimToSize];
}

- (void)ensureCapacityWithInt:(jint)minCapacity {
  [((JavaUtilVector *) nil_chk(vector_)) ensureCapacityWithInt:minCapacity];
}

- (id<JavaUtilIterator>)iterator {
  return [((JavaUtilVector *) nil_chk(vector_)) iterator];
}

- (void)setSizeWithInt:(jint)newSize {
  [((JavaUtilVector *) nil_chk(vector_)) setSizeWithInt:newSize];
}

- (id<JavaUtilListIterator>)listIterator {
  return [((JavaUtilVector *) nil_chk(vector_)) listIterator];
}

- (id<JavaUtilListIterator>)listIteratorWithInt:(jint)index {
  return [((JavaUtilVector *) nil_chk(vector_)) listIteratorWithInt:index];
}

- (jint)capacity {
  return [((JavaUtilVector *) nil_chk(vector_)) capacity];
}

- (jint)size {
  return [((JavaUtilVector *) nil_chk(vector_)) size];
}

- (jboolean)isEmpty {
  return [((JavaUtilVector *) nil_chk(vector_)) isEmpty];
}

- (id<JavaUtilEnumeration>)elements {
  return [((JavaUtilVector *) nil_chk(vector_)) elements];
}

- (jboolean)containsWithId:(id)o {
  return [((JavaUtilVector *) nil_chk(vector_)) containsWithId:o];
}

- (jint)indexOfWithId:(id)o {
  return [((JavaUtilVector *) nil_chk(vector_)) indexOfWithId:o];
}

- (jint)indexOfWithId:(id)o
              withInt:(jint)index {
  return [((JavaUtilVector *) nil_chk(vector_)) indexOfWithId:o withInt:index];
}

- (jint)lastIndexOfWithId:(id)o {
  return [((JavaUtilVector *) nil_chk(vector_)) lastIndexOfWithId:o];
}

- (jint)lastIndexOfWithId:(id)o
                  withInt:(jint)index {
  return [((JavaUtilVector *) nil_chk(vector_)) lastIndexOfWithId:o withInt:index];
}

- (id)elementAtWithInt:(jint)index {
  return [((JavaUtilVector *) nil_chk(vector_)) elementAtWithInt:index];
}

- (id)firstElement {
  return [((JavaUtilVector *) nil_chk(vector_)) firstElement];
}

- (id)lastElement {
  return [((JavaUtilVector *) nil_chk(vector_)) lastElement];
}

- (void)setElementAtWithId:(id)obj
                   withInt:(jint)index {
  [((JavaUtilVector *) nil_chk(vector_)) setElementAtWithId:obj withInt:index];
}

- (void)removeElementAtWithInt:(jint)index {
  [((JavaUtilVector *) nil_chk(vector_)) removeElementAtWithInt:index];
}

- (void)insertElementAtWithId:(id)obj
                      withInt:(jint)index {
  [((JavaUtilVector *) nil_chk(vector_)) insertElementAtWithId:obj withInt:index];
}

- (void)addElementWithId:(id)obj {
  [((JavaUtilVector *) nil_chk(vector_)) addElementWithId:obj];
}

- (jboolean)removeElementWithId:(id)obj {
  return [((JavaUtilVector *) nil_chk(vector_)) removeElementWithId:obj];
}

- (void)removeAllElements {
  [((JavaUtilVector *) nil_chk(vector_)) removeAllElements];
}

- (IOSObjectArray *)toArray {
  return [((JavaUtilVector *) nil_chk(vector_)) toArray];
}

- (IOSObjectArray *)toArrayWithNSObjectArray:(IOSObjectArray *)a {
  return [((JavaUtilVector *) nil_chk(vector_)) toArrayWithNSObjectArray:a];
}

- (id)getWithInt:(jint)index {
  return [((JavaUtilVector *) nil_chk(vector_)) getWithInt:index];
}

- (id)setWithInt:(jint)index
          withId:(id)element {
  return [((JavaUtilVector *) nil_chk(vector_)) setWithInt:index withId:element];
}

- (jboolean)addWithId:(id)e {
  return [((JavaUtilVector *) nil_chk(vector_)) addWithId:e];
}

- (jboolean)removeWithId:(id)o {
  return [((JavaUtilVector *) nil_chk(vector_)) removeWithId:o];
}

- (void)addWithInt:(jint)index
            withId:(id)element {
  [((JavaUtilVector *) nil_chk(vector_)) addWithInt:index withId:element];
}

- (id)removeWithInt:(jint)index {
  return [((JavaUtilVector *) nil_chk(vector_)) removeWithInt:index];
}

- (void)clear {
  [((JavaUtilVector *) nil_chk(vector_)) clear];
}

- (jboolean)containsAllWithJavaUtilCollection:(id<JavaUtilCollection>)c {
  return [((JavaUtilVector *) nil_chk(vector_)) containsAllWithJavaUtilCollection:c];
}

- (jboolean)addAllWithJavaUtilCollection:(id<JavaUtilCollection>)c {
  return [((JavaUtilVector *) nil_chk(vector_)) addAllWithJavaUtilCollection:c];
}

- (jboolean)removeAllWithJavaUtilCollection:(id<JavaUtilCollection>)c {
  return [((JavaUtilVector *) nil_chk(vector_)) removeAllWithJavaUtilCollection:c];
}

- (jboolean)retainAllWithJavaUtilCollection:(id<JavaUtilCollection>)c {
  return [((JavaUtilVector *) nil_chk(vector_)) retainAllWithJavaUtilCollection:c];
}

- (jboolean)addAllWithInt:(jint)index
   withJavaUtilCollection:(id<JavaUtilCollection>)c {
  return [((JavaUtilVector *) nil_chk(vector_)) addAllWithInt:index withJavaUtilCollection:c];
}

- (jboolean)isEqual:(id)o {
  return [((JavaUtilVector *) nil_chk(vector_)) isEqual:o];
}

- (NSUInteger)hash {
  return ((jint) [((JavaUtilVector *) nil_chk(vector_)) hash]);
}

- (NSString *)description {
  return [((JavaUtilVector *) nil_chk(vector_)) description];
}

- (id<JavaUtilList>)subListWithInt:(jint)fromIndex
                           withInt:(jint)toIndex {
  return [((JavaUtilVector *) nil_chk(vector_)) subListWithInt:fromIndex withInt:toIndex];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "Stack", NULL, 0x1, NULL, NULL },
    { "initWithOrgOssPdfreporterUsesJavaUtilStack:", "Stack", NULL, 0x1, NULL, "(Lorg/oss/pdfreporter/uses/java/util/Stack<TE;>;)V" },
    { "pushWithId:", "push", "TE;", 0x1, NULL, "(TE;)TE;" },
    { "pop", NULL, "TE;", 0x21, NULL, "()TE;" },
    { "peek", NULL, "TE;", 0x21, NULL, "()TE;" },
    { "empty", NULL, "Z", 0x1, NULL, NULL },
    { "searchWithId:", "search", "I", 0x21, NULL, NULL },
    { "clone", NULL, "Lorg.oss.pdfreporter.uses.java.util.Stack;", 0x1, NULL, "()Lorg/oss/pdfreporter/uses/java/util/Stack<TE;>;" },
    { "copyIntoWithNSObjectArray:", "copyInto", "V", 0x1, NULL, NULL },
    { "trimToSize", NULL, "V", 0x1, NULL, NULL },
    { "ensureCapacityWithInt:", "ensureCapacity", "V", 0x1, NULL, NULL },
    { "iterator", NULL, "Ljava.util.Iterator;", 0x1, NULL, "()Ljava/util/Iterator<TE;>;" },
    { "setSizeWithInt:", "setSize", "V", 0x1, NULL, NULL },
    { "listIterator", NULL, "Ljava.util.ListIterator;", 0x1, NULL, "()Ljava/util/ListIterator<TE;>;" },
    { "listIteratorWithInt:", "listIterator", "Ljava.util.ListIterator;", 0x1, NULL, "(I)Ljava/util/ListIterator<TE;>;" },
    { "capacity", NULL, "I", 0x1, NULL, NULL },
    { "size", NULL, "I", 0x1, NULL, NULL },
    { "isEmpty", NULL, "Z", 0x1, NULL, NULL },
    { "elements", NULL, "Ljava.util.Enumeration;", 0x1, NULL, "()Ljava/util/Enumeration<TE;>;" },
    { "containsWithId:", "contains", "Z", 0x1, NULL, NULL },
    { "indexOfWithId:", "indexOf", "I", 0x1, NULL, NULL },
    { "indexOfWithId:withInt:", "indexOf", "I", 0x1, NULL, NULL },
    { "lastIndexOfWithId:", "lastIndexOf", "I", 0x1, NULL, NULL },
    { "lastIndexOfWithId:withInt:", "lastIndexOf", "I", 0x1, NULL, NULL },
    { "elementAtWithInt:", "elementAt", "TE;", 0x1, NULL, "(I)TE;" },
    { "firstElement", NULL, "TE;", 0x1, NULL, "()TE;" },
    { "lastElement", NULL, "TE;", 0x1, NULL, "()TE;" },
    { "setElementAtWithId:withInt:", "setElementAt", "V", 0x1, NULL, "(TE;I)V" },
    { "removeElementAtWithInt:", "removeElementAt", "V", 0x1, NULL, NULL },
    { "insertElementAtWithId:withInt:", "insertElementAt", "V", 0x1, NULL, "(TE;I)V" },
    { "addElementWithId:", "addElement", "V", 0x1, NULL, "(TE;)V" },
    { "removeElementWithId:", "removeElement", "Z", 0x1, NULL, NULL },
    { "removeAllElements", NULL, "V", 0x1, NULL, NULL },
    { "toArray", NULL, "[Ljava.lang.Object;", 0x1, NULL, NULL },
    { "toArrayWithNSObjectArray:", "toArray", "[Ljava.lang.Object;", 0x1, NULL, "<T:Ljava/lang/Object;>([TT;)[TT;" },
    { "getWithInt:", "get", "TE;", 0x1, NULL, "(I)TE;" },
    { "setWithInt:withId:", "set", "TE;", 0x1, NULL, "(ITE;)TE;" },
    { "addWithId:", "add", "Z", 0x1, NULL, "(TE;)Z" },
    { "removeWithId:", "remove", "Z", 0x1, NULL, NULL },
    { "addWithInt:withId:", "add", "V", 0x1, NULL, "(ITE;)V" },
    { "removeWithInt:", "remove", "TE;", 0x1, NULL, "(I)TE;" },
    { "clear", NULL, "V", 0x1, NULL, NULL },
    { "containsAllWithJavaUtilCollection:", "containsAll", "Z", 0x1, NULL, "(Ljava/util/Collection<*>;)Z" },
    { "addAllWithJavaUtilCollection:", "addAll", "Z", 0x1, NULL, "(Ljava/util/Collection<+TE;>;)Z" },
    { "removeAllWithJavaUtilCollection:", "removeAll", "Z", 0x1, NULL, "(Ljava/util/Collection<*>;)Z" },
    { "retainAllWithJavaUtilCollection:", "retainAll", "Z", 0x1, NULL, "(Ljava/util/Collection<*>;)Z" },
    { "addAllWithInt:withJavaUtilCollection:", "addAll", "Z", 0x1, NULL, "(ILjava/util/Collection<+TE;>;)Z" },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "subListWithInt:withInt:", "subList", "Ljava.util.List;", 0x1, NULL, "(II)Ljava/util/List<TE;>;" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "vector_", NULL, 0x12, "Ljava.util.Vector;", NULL, "Ljava/util/Vector<TE;>;", .constantValue.asLong = 0 },
    { "serialVersionUID", "serialVersionUID", 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgOssPdfreporterUsesJavaUtilStack_serialVersionUID },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterUsesJavaUtilStack = { 2, "Stack", "org.oss.pdfreporter.uses.java.util", NULL, 0x1, 51, methods, 2, fields, 0, NULL, 0, NULL, NULL, "<E:Ljava/lang/Object;>Ljava/lang/Object;" };
  return &_OrgOssPdfreporterUsesJavaUtilStack;
}

@end

void OrgOssPdfreporterUsesJavaUtilStack_init(OrgOssPdfreporterUsesJavaUtilStack *self) {
  NSObject_init(self);
  self->vector_ = new_JavaUtilVector_init();
}

OrgOssPdfreporterUsesJavaUtilStack *new_OrgOssPdfreporterUsesJavaUtilStack_init() {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterUsesJavaUtilStack, init)
}

OrgOssPdfreporterUsesJavaUtilStack *create_OrgOssPdfreporterUsesJavaUtilStack_init() {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterUsesJavaUtilStack, init)
}

void OrgOssPdfreporterUsesJavaUtilStack_initWithOrgOssPdfreporterUsesJavaUtilStack_(OrgOssPdfreporterUsesJavaUtilStack *self, OrgOssPdfreporterUsesJavaUtilStack *source) {
  NSObject_init(self);
  self->vector_ = (JavaUtilVector *) cast_chk([((JavaUtilVector *) nil_chk(((OrgOssPdfreporterUsesJavaUtilStack *) nil_chk(source))->vector_)) clone], [JavaUtilVector class]);
}

OrgOssPdfreporterUsesJavaUtilStack *new_OrgOssPdfreporterUsesJavaUtilStack_initWithOrgOssPdfreporterUsesJavaUtilStack_(OrgOssPdfreporterUsesJavaUtilStack *source) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterUsesJavaUtilStack, initWithOrgOssPdfreporterUsesJavaUtilStack_, source)
}

OrgOssPdfreporterUsesJavaUtilStack *create_OrgOssPdfreporterUsesJavaUtilStack_initWithOrgOssPdfreporterUsesJavaUtilStack_(OrgOssPdfreporterUsesJavaUtilStack *source) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterUsesJavaUtilStack, initWithOrgOssPdfreporterUsesJavaUtilStack_, source)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterUsesJavaUtilStack)
