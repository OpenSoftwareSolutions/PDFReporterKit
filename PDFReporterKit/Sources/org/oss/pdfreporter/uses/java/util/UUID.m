//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-extensions/src/org/oss/pdfreporter/uses/java/util/UUID.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/io/ObjectInputStream.h"
#include "java/lang/ClassNotFoundException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Long.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/Random.h"
#include "org/oss/pdfreporter/uses/java/util/UUID.h"

@interface OrgOssPdfreporterUsesJavaUtilUUID () {
 @public
  jlong mostSigBits_;
  jlong leastSigBits_;
  jint version__;
  jint variant_;
  volatile_jlong timestamp_;
  jint sequence_;
  jlong node_;
  jint hashCode_;
}

- (instancetype)initWithByteArray:(IOSByteArray *)data;

+ (NSString *)digitsWithLong:(jlong)val
                     withInt:(jint)digits;

- (void)readObjectWithJavaIoObjectInputStream:(JavaIoObjectInputStream *)inArg;

@end

inline jlong OrgOssPdfreporterUsesJavaUtilUUID_get_serialVersionUID();
#define OrgOssPdfreporterUsesJavaUtilUUID_serialVersionUID -4856846361193249489LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgOssPdfreporterUsesJavaUtilUUID, serialVersionUID, jlong)

__attribute__((unused)) static void OrgOssPdfreporterUsesJavaUtilUUID_initWithByteArray_(OrgOssPdfreporterUsesJavaUtilUUID *self, IOSByteArray *data);

__attribute__((unused)) static OrgOssPdfreporterUsesJavaUtilUUID *new_OrgOssPdfreporterUsesJavaUtilUUID_initWithByteArray_(IOSByteArray *data) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgOssPdfreporterUsesJavaUtilUUID *create_OrgOssPdfreporterUsesJavaUtilUUID_initWithByteArray_(IOSByteArray *data);

__attribute__((unused)) static NSString *OrgOssPdfreporterUsesJavaUtilUUID_digitsWithLong_withInt_(jlong val, jint digits);

@interface OrgOssPdfreporterUsesJavaUtilUUID_Holder : NSObject

- (instancetype)init;

@end

J2OBJC_STATIC_INIT(OrgOssPdfreporterUsesJavaUtilUUID_Holder)

inline JavaUtilRandom *OrgOssPdfreporterUsesJavaUtilUUID_Holder_get_numberGenerator();
static JavaUtilRandom *OrgOssPdfreporterUsesJavaUtilUUID_Holder_numberGenerator;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterUsesJavaUtilUUID_Holder, numberGenerator, JavaUtilRandom *)

__attribute__((unused)) static void OrgOssPdfreporterUsesJavaUtilUUID_Holder_init(OrgOssPdfreporterUsesJavaUtilUUID_Holder *self);

__attribute__((unused)) static OrgOssPdfreporterUsesJavaUtilUUID_Holder *new_OrgOssPdfreporterUsesJavaUtilUUID_Holder_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgOssPdfreporterUsesJavaUtilUUID_Holder *create_OrgOssPdfreporterUsesJavaUtilUUID_Holder_init();

J2OBJC_TYPE_LITERAL_HEADER(OrgOssPdfreporterUsesJavaUtilUUID_Holder)

@implementation OrgOssPdfreporterUsesJavaUtilUUID

- (instancetype)initWithByteArray:(IOSByteArray *)data {
  OrgOssPdfreporterUsesJavaUtilUUID_initWithByteArray_(self, data);
  return self;
}

- (instancetype)initWithLong:(jlong)mostSigBits
                    withLong:(jlong)leastSigBits {
  OrgOssPdfreporterUsesJavaUtilUUID_initWithLong_withLong_(self, mostSigBits, leastSigBits);
  return self;
}

+ (OrgOssPdfreporterUsesJavaUtilUUID *)randomUUID {
  return OrgOssPdfreporterUsesJavaUtilUUID_randomUUID();
}

+ (OrgOssPdfreporterUsesJavaUtilUUID *)fromStringWithNSString:(NSString *)name {
  return OrgOssPdfreporterUsesJavaUtilUUID_fromStringWithNSString_(name);
}

- (jlong)getLeastSignificantBits {
  return leastSigBits_;
}

- (jlong)getMostSignificantBits {
  return mostSigBits_;
}

- (jint)version__ {
  if (version__ < 0) {
    version__ = (jint) ((JreRShift64(mostSigBits_, 12)) & (jint) 0x0f);
  }
  return version__;
}

- (jint)variant {
  if (variant_ < 0) {
    if ((JreURShift64(leastSigBits_, 63)) == 0) {
      variant_ = 0;
    }
    else if ((JreURShift64(leastSigBits_, 62)) == 2) {
      variant_ = 2;
    }
    else {
      variant_ = (jint) (JreURShift64(leastSigBits_, 61));
    }
  }
  return variant_;
}

- (jlong)timestamp {
  if ([self version__] != 1) {
    @throw new_JavaLangUnsupportedOperationException_initWithNSString_(@"Not a time-based UUID");
  }
  jlong result = JreLoadVolatileLong(&timestamp_);
  if (result < 0) {
    result = JreLShift64((mostSigBits_ & (jlong) 0x0000000000000FFFLL), 48);
    result |= JreLShift64(((JreRShift64(mostSigBits_, 16)) & (jlong) 0xFFFFLL), 32);
    result |= JreURShift64(mostSigBits_, 32);
    JreAssignVolatileLong(&timestamp_, result);
  }
  return result;
}

- (jint)clockSequence {
  if ([self version__] != 1) {
    @throw new_JavaLangUnsupportedOperationException_initWithNSString_(@"Not a time-based UUID");
  }
  if (sequence_ < 0) {
    sequence_ = (jint) (JreURShift64((leastSigBits_ & (jlong) 0x3FFF000000000000LL), 48));
  }
  return sequence_;
}

- (jlong)node {
  if ([self version__] != 1) {
    @throw new_JavaLangUnsupportedOperationException_initWithNSString_(@"Not a time-based UUID");
  }
  if (node_ < 0) {
    node_ = leastSigBits_ & (jlong) 0x0000FFFFFFFFFFFFLL;
  }
  return node_;
}

- (NSString *)description {
  return (JreStrcat("$C$C$C$C$", OrgOssPdfreporterUsesJavaUtilUUID_digitsWithLong_withInt_(JreRShift64(mostSigBits_, 32), 8), '-', OrgOssPdfreporterUsesJavaUtilUUID_digitsWithLong_withInt_(JreRShift64(mostSigBits_, 16), 4), '-', OrgOssPdfreporterUsesJavaUtilUUID_digitsWithLong_withInt_(mostSigBits_, 4), '-', OrgOssPdfreporterUsesJavaUtilUUID_digitsWithLong_withInt_(JreRShift64(leastSigBits_, 48), 4), '-', OrgOssPdfreporterUsesJavaUtilUUID_digitsWithLong_withInt_(leastSigBits_, 12)));
}

+ (NSString *)digitsWithLong:(jlong)val
                     withInt:(jint)digits {
  return OrgOssPdfreporterUsesJavaUtilUUID_digitsWithLong_withInt_(val, digits);
}

- (NSUInteger)hash {
  if (hashCode_ == -1) {
    hashCode_ = (jint) ((JreRShift64(mostSigBits_, 32)) ^ mostSigBits_ ^ (JreRShift64(leastSigBits_, 32)) ^ leastSigBits_);
  }
  return hashCode_;
}

- (jboolean)isEqual:(id)obj {
  if (!([obj isKindOfClass:[OrgOssPdfreporterUsesJavaUtilUUID class]])) return false;
  if ([((OrgOssPdfreporterUsesJavaUtilUUID *) nil_chk(((OrgOssPdfreporterUsesJavaUtilUUID *) cast_chk(obj, [OrgOssPdfreporterUsesJavaUtilUUID class])))) variant] != [self variant]) return false;
  OrgOssPdfreporterUsesJavaUtilUUID *id_ = (OrgOssPdfreporterUsesJavaUtilUUID *) cast_chk(obj, [OrgOssPdfreporterUsesJavaUtilUUID class]);
  return (mostSigBits_ == ((OrgOssPdfreporterUsesJavaUtilUUID *) nil_chk(id_))->mostSigBits_ && leastSigBits_ == id_->leastSigBits_);
}

- (jint)compareToWithId:(OrgOssPdfreporterUsesJavaUtilUUID *)val {
  (void) cast_chk(val, [OrgOssPdfreporterUsesJavaUtilUUID class]);
  return (self->mostSigBits_ < ((OrgOssPdfreporterUsesJavaUtilUUID *) nil_chk(val))->mostSigBits_ ? -1 : (self->mostSigBits_ > val->mostSigBits_ ? 1 : (self->leastSigBits_ < val->leastSigBits_ ? -1 : (self->leastSigBits_ > val->leastSigBits_ ? 1 : 0))));
}

- (void)readObjectWithJavaIoObjectInputStream:(JavaIoObjectInputStream *)inArg {
  [((JavaIoObjectInputStream *) nil_chk(inArg)) defaultReadObject];
  version__ = -1;
  variant_ = -1;
  JreAssignVolatileLong(&timestamp_, -1);
  sequence_ = -1;
  node_ = -1;
  hashCode_ = -1;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithByteArray:", "UUID", NULL, 0x2, NULL, NULL },
    { "initWithLong:withLong:", "UUID", NULL, 0x1, NULL, NULL },
    { "randomUUID", NULL, "Lorg.oss.pdfreporter.uses.java.util.UUID;", 0x9, NULL, NULL },
    { "fromStringWithNSString:", "fromString", "Lorg.oss.pdfreporter.uses.java.util.UUID;", 0x9, NULL, NULL },
    { "getLeastSignificantBits", NULL, "J", 0x1, NULL, NULL },
    { "getMostSignificantBits", NULL, "J", 0x1, NULL, NULL },
    { "version__", "version", "I", 0x1, NULL, NULL },
    { "variant", NULL, "I", 0x1, NULL, NULL },
    { "timestamp", NULL, "J", 0x1, NULL, NULL },
    { "clockSequence", NULL, "I", 0x1, NULL, NULL },
    { "node", NULL, "J", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "digitsWithLong:withInt:", "digits", "Ljava.lang.String;", 0xa, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "compareToWithId:", "compareTo", "I", 0x1, NULL, NULL },
    { "readObjectWithJavaIoObjectInputStream:", "readObject", "V", 0x2, "Ljava.io.IOException;Ljava.lang.ClassNotFoundException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "serialVersionUID", 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgOssPdfreporterUsesJavaUtilUUID_serialVersionUID },
    { "mostSigBits_", NULL, 0x12, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "leastSigBits_", NULL, 0x12, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "version__", "version", 0x82, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "variant_", NULL, 0x82, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "timestamp_", NULL, 0xc2, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "sequence_", NULL, 0x82, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "node_", NULL, 0x82, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "hashCode_", NULL, 0x82, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lorg.oss.pdfreporter.uses.java.util.UUID$Holder;"};
  static const J2ObjcClassInfo _OrgOssPdfreporterUsesJavaUtilUUID = { 2, "UUID", "org.oss.pdfreporter.uses.java.util", NULL, 0x11, 17, methods, 9, fields, 0, NULL, 1, inner_classes, NULL, "Ljava/lang/Object;Ljava/io/Serializable;Ljava/lang/Comparable<Lorg/oss/pdfreporter/uses/java/util/UUID;>;" };
  return &_OrgOssPdfreporterUsesJavaUtilUUID;
}

@end

void OrgOssPdfreporterUsesJavaUtilUUID_initWithByteArray_(OrgOssPdfreporterUsesJavaUtilUUID *self, IOSByteArray *data) {
  NSObject_init(self);
  self->version__ = -1;
  self->variant_ = -1;
  JreAssignVolatileLong(&self->timestamp_, -1);
  self->sequence_ = -1;
  self->node_ = -1;
  self->hashCode_ = -1;
  jlong msb = 0;
  jlong lsb = 0;
  JreAssert((((IOSByteArray *) nil_chk(data))->size_ == 16), (@"org/oss/pdfreporter/uses/java/util/UUID.java:123 condition failed: assert data.length == 16;"));
  for (jint i = 0; i < 8; i++) msb = (JreLShift64(msb, 8)) | (IOSByteArray_Get(data, i) & (jint) 0xff);
  for (jint i = 8; i < 16; i++) lsb = (JreLShift64(lsb, 8)) | (IOSByteArray_Get(data, i) & (jint) 0xff);
  self->mostSigBits_ = msb;
  self->leastSigBits_ = lsb;
}

OrgOssPdfreporterUsesJavaUtilUUID *new_OrgOssPdfreporterUsesJavaUtilUUID_initWithByteArray_(IOSByteArray *data) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterUsesJavaUtilUUID, initWithByteArray_, data)
}

OrgOssPdfreporterUsesJavaUtilUUID *create_OrgOssPdfreporterUsesJavaUtilUUID_initWithByteArray_(IOSByteArray *data) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterUsesJavaUtilUUID, initWithByteArray_, data)
}

void OrgOssPdfreporterUsesJavaUtilUUID_initWithLong_withLong_(OrgOssPdfreporterUsesJavaUtilUUID *self, jlong mostSigBits, jlong leastSigBits) {
  NSObject_init(self);
  self->version__ = -1;
  self->variant_ = -1;
  JreAssignVolatileLong(&self->timestamp_, -1);
  self->sequence_ = -1;
  self->node_ = -1;
  self->hashCode_ = -1;
  self->mostSigBits_ = mostSigBits;
  self->leastSigBits_ = leastSigBits;
}

OrgOssPdfreporterUsesJavaUtilUUID *new_OrgOssPdfreporterUsesJavaUtilUUID_initWithLong_withLong_(jlong mostSigBits, jlong leastSigBits) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterUsesJavaUtilUUID, initWithLong_withLong_, mostSigBits, leastSigBits)
}

OrgOssPdfreporterUsesJavaUtilUUID *create_OrgOssPdfreporterUsesJavaUtilUUID_initWithLong_withLong_(jlong mostSigBits, jlong leastSigBits) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterUsesJavaUtilUUID, initWithLong_withLong_, mostSigBits, leastSigBits)
}

OrgOssPdfreporterUsesJavaUtilUUID *OrgOssPdfreporterUsesJavaUtilUUID_randomUUID() {
  OrgOssPdfreporterUsesJavaUtilUUID_initialize();
  JavaUtilRandom *ng = JreLoadStatic(OrgOssPdfreporterUsesJavaUtilUUID_Holder, numberGenerator);
  IOSByteArray *randomBytes = [IOSByteArray newArrayWithLength:16];
  [((JavaUtilRandom *) nil_chk(ng)) nextBytesWithByteArray:randomBytes];
  *IOSByteArray_GetRef(randomBytes, 6) &= (jint) 0x0f;
  *IOSByteArray_GetRef(randomBytes, 6) |= (jint) 0x40;
  *IOSByteArray_GetRef(randomBytes, 8) &= (jint) 0x3f;
  *IOSByteArray_GetRef(randomBytes, 8) |= (jint) 0x80;
  return new_OrgOssPdfreporterUsesJavaUtilUUID_initWithByteArray_(randomBytes);
}

OrgOssPdfreporterUsesJavaUtilUUID *OrgOssPdfreporterUsesJavaUtilUUID_fromStringWithNSString_(NSString *name) {
  OrgOssPdfreporterUsesJavaUtilUUID_initialize();
  IOSObjectArray *components = [((NSString *) nil_chk(name)) split:@"-"];
  if (((IOSObjectArray *) nil_chk(components))->size_ != 5) @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"Invalid UUID string: ", name));
  for (jint i = 0; i < 5; i++) (void) IOSObjectArray_Set(components, i, JreStrcat("$$", @"0x", IOSObjectArray_Get(components, i)));
  jlong mostSigBits = [((JavaLangLong *) nil_chk(JavaLangLong_decodeWithNSString_(IOSObjectArray_Get(components, 0)))) longLongValue];
  JreLShiftAssignLong(&mostSigBits, 16);
  mostSigBits |= [((JavaLangLong *) nil_chk(JavaLangLong_decodeWithNSString_(IOSObjectArray_Get(components, 1)))) longLongValue];
  JreLShiftAssignLong(&mostSigBits, 16);
  mostSigBits |= [((JavaLangLong *) nil_chk(JavaLangLong_decodeWithNSString_(IOSObjectArray_Get(components, 2)))) longLongValue];
  jlong leastSigBits = [((JavaLangLong *) nil_chk(JavaLangLong_decodeWithNSString_(IOSObjectArray_Get(components, 3)))) longLongValue];
  JreLShiftAssignLong(&leastSigBits, 48);
  leastSigBits |= [((JavaLangLong *) nil_chk(JavaLangLong_decodeWithNSString_(IOSObjectArray_Get(components, 4)))) longLongValue];
  return new_OrgOssPdfreporterUsesJavaUtilUUID_initWithLong_withLong_(mostSigBits, leastSigBits);
}

NSString *OrgOssPdfreporterUsesJavaUtilUUID_digitsWithLong_withInt_(jlong val, jint digits) {
  OrgOssPdfreporterUsesJavaUtilUUID_initialize();
  jlong hi = JreLShift64(1LL, (digits * 4));
  return [((NSString *) nil_chk(JavaLangLong_toHexStringWithLong_(hi | (val & (hi - 1))))) substring:1];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterUsesJavaUtilUUID)

J2OBJC_INITIALIZED_DEFN(OrgOssPdfreporterUsesJavaUtilUUID_Holder)

@implementation OrgOssPdfreporterUsesJavaUtilUUID_Holder

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterUsesJavaUtilUUID_Holder_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)initialize {
  if (self == [OrgOssPdfreporterUsesJavaUtilUUID_Holder class]) {
    OrgOssPdfreporterUsesJavaUtilUUID_Holder_numberGenerator = new_JavaUtilRandom_init();
    J2OBJC_SET_INITIALIZED(OrgOssPdfreporterUsesJavaUtilUUID_Holder)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "Holder", NULL, 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "numberGenerator", "numberGenerator", 0x18, "Ljava.util.Random;", &OrgOssPdfreporterUsesJavaUtilUUID_Holder_numberGenerator, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterUsesJavaUtilUUID_Holder = { 2, "Holder", "org.oss.pdfreporter.uses.java.util", "UUID", 0xa, 1, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterUsesJavaUtilUUID_Holder;
}

@end

void OrgOssPdfreporterUsesJavaUtilUUID_Holder_init(OrgOssPdfreporterUsesJavaUtilUUID_Holder *self) {
  NSObject_init(self);
}

OrgOssPdfreporterUsesJavaUtilUUID_Holder *new_OrgOssPdfreporterUsesJavaUtilUUID_Holder_init() {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterUsesJavaUtilUUID_Holder, init)
}

OrgOssPdfreporterUsesJavaUtilUUID_Holder *create_OrgOssPdfreporterUsesJavaUtilUUID_Holder_init() {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterUsesJavaUtilUUID_Holder, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterUsesJavaUtilUUID_Holder)
