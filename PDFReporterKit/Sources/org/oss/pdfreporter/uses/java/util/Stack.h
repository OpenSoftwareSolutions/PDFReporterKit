//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-extensions/src/org/oss/pdfreporter/uses/java/util/Stack.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgOssPdfreporterUsesJavaUtilStack")
#ifdef RESTRICT_OrgOssPdfreporterUsesJavaUtilStack
#define INCLUDE_ALL_OrgOssPdfreporterUsesJavaUtilStack 0
#else
#define INCLUDE_ALL_OrgOssPdfreporterUsesJavaUtilStack 1
#endif
#undef RESTRICT_OrgOssPdfreporterUsesJavaUtilStack

#if !defined (OrgOssPdfreporterUsesJavaUtilStack_) && (INCLUDE_ALL_OrgOssPdfreporterUsesJavaUtilStack || defined(INCLUDE_OrgOssPdfreporterUsesJavaUtilStack))
#define OrgOssPdfreporterUsesJavaUtilStack_

@class IOSObjectArray;
@protocol JavaUtilCollection;
@protocol JavaUtilEnumeration;
@protocol JavaUtilIterator;
@protocol JavaUtilList;
@protocol JavaUtilListIterator;

@interface OrgOssPdfreporterUsesJavaUtilStack : NSObject

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithOrgOssPdfreporterUsesJavaUtilStack:(OrgOssPdfreporterUsesJavaUtilStack *)source;

- (jboolean)addWithId:(id)e;

- (void)addWithInt:(jint)index
            withId:(id)element;

- (jboolean)addAllWithJavaUtilCollection:(id<JavaUtilCollection>)c;

- (jboolean)addAllWithInt:(jint)index
   withJavaUtilCollection:(id<JavaUtilCollection>)c;

- (void)addElementWithId:(id)obj;

- (jint)capacity;

- (void)clear;

- (OrgOssPdfreporterUsesJavaUtilStack *)clone;

- (jboolean)containsWithId:(id)o;

- (jboolean)containsAllWithJavaUtilCollection:(id<JavaUtilCollection>)c;

- (void)copyIntoWithNSObjectArray:(IOSObjectArray *)anArray OBJC_METHOD_FAMILY_NONE;

- (id)elementAtWithInt:(jint)index;

- (id<JavaUtilEnumeration>)elements;

- (jboolean)empty;

- (void)ensureCapacityWithInt:(jint)minCapacity;

- (jboolean)isEqual:(id)o;

- (id)firstElement;

- (id)getWithInt:(jint)index;

- (NSUInteger)hash;

- (jint)indexOfWithId:(id)o;

- (jint)indexOfWithId:(id)o
              withInt:(jint)index;

- (void)insertElementAtWithId:(id)obj
                      withInt:(jint)index;

- (jboolean)isEmpty;

- (id<JavaUtilIterator>)iterator;

- (id)lastElement;

- (jint)lastIndexOfWithId:(id)o;

- (jint)lastIndexOfWithId:(id)o
                  withInt:(jint)index;

- (id<JavaUtilListIterator>)listIterator;

- (id<JavaUtilListIterator>)listIteratorWithInt:(jint)index;

- (id)peek;

- (id)pop;

- (id)pushWithId:(id)item;

- (id)removeWithInt:(jint)index;

- (jboolean)removeWithId:(id)o;

- (jboolean)removeAllWithJavaUtilCollection:(id<JavaUtilCollection>)c;

- (void)removeAllElements;

- (jboolean)removeElementWithId:(id)obj;

- (void)removeElementAtWithInt:(jint)index;

- (jboolean)retainAllWithJavaUtilCollection:(id<JavaUtilCollection>)c;

- (jint)searchWithId:(id)o;

- (id)setWithInt:(jint)index
          withId:(id)element;

- (void)setElementAtWithId:(id)obj
                   withInt:(jint)index;

- (void)setSizeWithInt:(jint)newSize;

- (jint)size;

- (id<JavaUtilList>)subListWithInt:(jint)fromIndex
                           withInt:(jint)toIndex;

- (IOSObjectArray *)toArray;

- (IOSObjectArray *)toArrayWithNSObjectArray:(IOSObjectArray *)a;

- (NSString *)description;

- (void)trimToSize;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgOssPdfreporterUsesJavaUtilStack)

FOUNDATION_EXPORT void OrgOssPdfreporterUsesJavaUtilStack_init(OrgOssPdfreporterUsesJavaUtilStack *self);

FOUNDATION_EXPORT OrgOssPdfreporterUsesJavaUtilStack *new_OrgOssPdfreporterUsesJavaUtilStack_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgOssPdfreporterUsesJavaUtilStack *create_OrgOssPdfreporterUsesJavaUtilStack_init();

FOUNDATION_EXPORT void OrgOssPdfreporterUsesJavaUtilStack_initWithOrgOssPdfreporterUsesJavaUtilStack_(OrgOssPdfreporterUsesJavaUtilStack *self, OrgOssPdfreporterUsesJavaUtilStack *source);

FOUNDATION_EXPORT OrgOssPdfreporterUsesJavaUtilStack *new_OrgOssPdfreporterUsesJavaUtilStack_initWithOrgOssPdfreporterUsesJavaUtilStack_(OrgOssPdfreporterUsesJavaUtilStack *source) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgOssPdfreporterUsesJavaUtilStack *create_OrgOssPdfreporterUsesJavaUtilStack_initWithOrgOssPdfreporterUsesJavaUtilStack_(OrgOssPdfreporterUsesJavaUtilStack *source);

J2OBJC_TYPE_LITERAL_HEADER(OrgOssPdfreporterUsesJavaUtilStack)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgOssPdfreporterUsesJavaUtilStack")
