//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-extensions/src/org/oss/pdfreporter/uses/org/apache/java/lang/Bytes.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgOssPdfreporterUsesOrgApacheJavaLangBytes")
#ifdef RESTRICT_OrgOssPdfreporterUsesOrgApacheJavaLangBytes
#define INCLUDE_ALL_OrgOssPdfreporterUsesOrgApacheJavaLangBytes 0
#else
#define INCLUDE_ALL_OrgOssPdfreporterUsesOrgApacheJavaLangBytes 1
#endif
#undef RESTRICT_OrgOssPdfreporterUsesOrgApacheJavaLangBytes

#if !defined (OrgOssPdfreporterUsesOrgApacheJavaLangBytes_) && (INCLUDE_ALL_OrgOssPdfreporterUsesOrgApacheJavaLangBytes || defined(INCLUDE_OrgOssPdfreporterUsesOrgApacheJavaLangBytes))
#define OrgOssPdfreporterUsesOrgApacheJavaLangBytes_

@class IOSByteArray;

@interface OrgOssPdfreporterUsesOrgApacheJavaLangBytes : NSObject

#pragma mark Public

- (instancetype)init;

+ (IOSByteArray *)appendWithByteArray:(IOSByteArray *)a
                        withByteArray:(IOSByteArray *)b;

+ (IOSByteArray *)appendWithByteArray:(IOSByteArray *)a
                        withByteArray:(IOSByteArray *)b
                        withByteArray:(IOSByteArray *)c;

+ (jboolean)areEqualWithByteArray:(IOSByteArray *)a
                    withByteArray:(IOSByteArray *)b;

+ (IOSByteArray *)copy__WithByteArray:(IOSByteArray *)b
                              withInt:(jint)pos OBJC_METHOD_FAMILY_NONE;

+ (IOSByteArray *)copy__WithByteArray:(IOSByteArray *)b
                              withInt:(jint)pos
                              withInt:(jint)length OBJC_METHOD_FAMILY_NONE;

+ (void)mergeWithByteArray:(IOSByteArray *)src
             withByteArray:(IOSByteArray *)dest;

+ (void)mergeWithByteArray:(IOSByteArray *)src
             withByteArray:(IOSByteArray *)dest
                   withInt:(jint)pos;

+ (void)mergeWithByteArray:(IOSByteArray *)src
             withByteArray:(IOSByteArray *)dest
                   withInt:(jint)pos
                   withInt:(jint)length;

+ (void)mergeWithByteArray:(IOSByteArray *)src
             withByteArray:(IOSByteArray *)dest
                   withInt:(jint)srcpos
                   withInt:(jint)destpos
                   withInt:(jint)length;

+ (IOSByteArray *)toBytesWithInt:(jint)n;

+ (IOSByteArray *)toBytesWithInt:(jint)n
                   withByteArray:(IOSByteArray *)b;

+ (IOSByteArray *)toBytesWithLong:(jlong)n;

+ (IOSByteArray *)toBytesWithLong:(jlong)n
                    withByteArray:(IOSByteArray *)b;

+ (jint)toIntWithByteArray:(IOSByteArray *)b;

+ (jlong)toLongWithByteArray:(IOSByteArray *)b;

+ (NSString *)toStringWithByteArray:(IOSByteArray *)b;

+ (NSString *)toStringWithByteArray:(IOSByteArray *)b
                            withInt:(jint)offset
                            withInt:(jint)length;

@end

J2OBJC_STATIC_INIT(OrgOssPdfreporterUsesOrgApacheJavaLangBytes)

FOUNDATION_EXPORT IOSByteArray *OrgOssPdfreporterUsesOrgApacheJavaLangBytes_appendWithByteArray_withByteArray_(IOSByteArray *a, IOSByteArray *b);

FOUNDATION_EXPORT IOSByteArray *OrgOssPdfreporterUsesOrgApacheJavaLangBytes_appendWithByteArray_withByteArray_withByteArray_(IOSByteArray *a, IOSByteArray *b, IOSByteArray *c);

FOUNDATION_EXPORT jboolean OrgOssPdfreporterUsesOrgApacheJavaLangBytes_areEqualWithByteArray_withByteArray_(IOSByteArray *a, IOSByteArray *b);

FOUNDATION_EXPORT IOSByteArray *OrgOssPdfreporterUsesOrgApacheJavaLangBytes_copy__WithByteArray_withInt_(IOSByteArray *b, jint pos);

FOUNDATION_EXPORT IOSByteArray *OrgOssPdfreporterUsesOrgApacheJavaLangBytes_copy__WithByteArray_withInt_withInt_(IOSByteArray *b, jint pos, jint length);

FOUNDATION_EXPORT void OrgOssPdfreporterUsesOrgApacheJavaLangBytes_mergeWithByteArray_withByteArray_(IOSByteArray *src, IOSByteArray *dest);

FOUNDATION_EXPORT void OrgOssPdfreporterUsesOrgApacheJavaLangBytes_mergeWithByteArray_withByteArray_withInt_(IOSByteArray *src, IOSByteArray *dest, jint pos);

FOUNDATION_EXPORT void OrgOssPdfreporterUsesOrgApacheJavaLangBytes_mergeWithByteArray_withByteArray_withInt_withInt_(IOSByteArray *src, IOSByteArray *dest, jint pos, jint length);

FOUNDATION_EXPORT void OrgOssPdfreporterUsesOrgApacheJavaLangBytes_mergeWithByteArray_withByteArray_withInt_withInt_withInt_(IOSByteArray *src, IOSByteArray *dest, jint srcpos, jint destpos, jint length);

FOUNDATION_EXPORT IOSByteArray *OrgOssPdfreporterUsesOrgApacheJavaLangBytes_toBytesWithInt_(jint n);

FOUNDATION_EXPORT IOSByteArray *OrgOssPdfreporterUsesOrgApacheJavaLangBytes_toBytesWithInt_withByteArray_(jint n, IOSByteArray *b);

FOUNDATION_EXPORT IOSByteArray *OrgOssPdfreporterUsesOrgApacheJavaLangBytes_toBytesWithLong_(jlong n);

FOUNDATION_EXPORT IOSByteArray *OrgOssPdfreporterUsesOrgApacheJavaLangBytes_toBytesWithLong_withByteArray_(jlong n, IOSByteArray *b);

FOUNDATION_EXPORT jint OrgOssPdfreporterUsesOrgApacheJavaLangBytes_toIntWithByteArray_(IOSByteArray *b);

FOUNDATION_EXPORT jlong OrgOssPdfreporterUsesOrgApacheJavaLangBytes_toLongWithByteArray_(IOSByteArray *b);

FOUNDATION_EXPORT NSString *OrgOssPdfreporterUsesOrgApacheJavaLangBytes_toStringWithByteArray_(IOSByteArray *b);

FOUNDATION_EXPORT NSString *OrgOssPdfreporterUsesOrgApacheJavaLangBytes_toStringWithByteArray_withInt_withInt_(IOSByteArray *b, jint offset, jint length);

FOUNDATION_EXPORT void OrgOssPdfreporterUsesOrgApacheJavaLangBytes_init(OrgOssPdfreporterUsesOrgApacheJavaLangBytes *self);

FOUNDATION_EXPORT OrgOssPdfreporterUsesOrgApacheJavaLangBytes *new_OrgOssPdfreporterUsesOrgApacheJavaLangBytes_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgOssPdfreporterUsesOrgApacheJavaLangBytes *create_OrgOssPdfreporterUsesOrgApacheJavaLangBytes_init();

J2OBJC_TYPE_LITERAL_HEADER(OrgOssPdfreporterUsesOrgApacheJavaLangBytes)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgOssPdfreporterUsesOrgApacheJavaLangBytes")
