//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-extensions/src/org/oss/pdfreporter/uses/org/apache/commons/collections/FastHashMap.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/Collection.h"
#include "java/util/ConcurrentModificationException.h"
#include "java/util/HashMap.h"
#include "java/util/Iterator.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "org/oss/pdfreporter/uses/org/apache/commons/collections/FastHashMap.h"

@interface OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView : NSObject < JavaUtilCollection > {
 @public
  OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap *this$0_;
}

- (instancetype)initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap:(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap *)outer$;

- (id<JavaUtilCollection>)getWithJavaUtilMap:(id<JavaUtilMap>)map;

- (id)iteratorNextWithJavaUtilMap_Entry:(id<JavaUtilMap_Entry>)entry_;

- (void)clear;

- (jboolean)removeWithId:(id)o;

- (jboolean)removeAllWithJavaUtilCollection:(id<JavaUtilCollection>)o;

- (jboolean)retainAllWithJavaUtilCollection:(id<JavaUtilCollection>)o;

- (jint)size;

- (jboolean)isEmpty;

- (jboolean)containsWithId:(id)o;

- (jboolean)containsAllWithJavaUtilCollection:(id<JavaUtilCollection>)o;

- (IOSObjectArray *)toArrayWithNSObjectArray:(IOSObjectArray *)o;

- (IOSObjectArray *)toArray;

- (jboolean)isEqual:(id)o;

- (NSUInteger)hash;

- (jboolean)addWithId:(id)o;

- (jboolean)addAllWithJavaUtilCollection:(id<JavaUtilCollection>)c;

- (id<JavaUtilIterator>)iterator;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView)

J2OBJC_FIELD_SETTER(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView, this$0_, OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap *)

__attribute__((unused)) static void OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView *self, OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap *outer$);

J2OBJC_TYPE_LITERAL_HEADER(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView)

@interface OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView_CollectionViewIterator : NSObject < JavaUtilIterator > {
 @public
  OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView *this$0_;
  id<JavaUtilMap> expected_;
  id<JavaUtilMap_Entry> lastReturned_;
  id<JavaUtilIterator> iterator_;
}

- (instancetype)initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView:(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView *)outer$;

- (jboolean)hasNext;

- (id)next;

- (void)remove;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView_CollectionViewIterator)

J2OBJC_FIELD_SETTER(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView_CollectionViewIterator, this$0_, OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView_CollectionViewIterator, expected_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView_CollectionViewIterator, lastReturned_, id<JavaUtilMap_Entry>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView_CollectionViewIterator, iterator_, id<JavaUtilIterator>)

__attribute__((unused)) static void OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView_CollectionViewIterator_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView_CollectionViewIterator *self, OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView *outer$);

__attribute__((unused)) static OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView_CollectionViewIterator *new_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView_CollectionViewIterator_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView_CollectionViewIterator *create_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView_CollectionViewIterator_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView *outer$);

J2OBJC_TYPE_LITERAL_HEADER(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView_CollectionViewIterator)

@interface OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_KeySet : OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView < JavaUtilSet >

- (id<JavaUtilCollection>)getWithJavaUtilMap:(id<JavaUtilMap>)map;

- (id)iteratorNextWithJavaUtilMap_Entry:(id<JavaUtilMap_Entry>)entry_;

- (instancetype)initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap:(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_KeySet)

__attribute__((unused)) static void OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_KeySet_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_KeySet *self, OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap *outer$);

__attribute__((unused)) static OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_KeySet *new_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_KeySet_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_KeySet *create_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_KeySet_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap *outer$);

J2OBJC_TYPE_LITERAL_HEADER(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_KeySet)

@interface OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_Values : OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView

- (id<JavaUtilCollection>)getWithJavaUtilMap:(id<JavaUtilMap>)map;

- (id)iteratorNextWithJavaUtilMap_Entry:(id<JavaUtilMap_Entry>)entry_;

- (instancetype)initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap:(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_Values)

__attribute__((unused)) static void OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_Values_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_Values *self, OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap *outer$);

__attribute__((unused)) static OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_Values *new_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_Values_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_Values *create_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_Values_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap *outer$);

J2OBJC_TYPE_LITERAL_HEADER(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_Values)

@interface OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_EntrySet : OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView < JavaUtilSet >

- (id<JavaUtilCollection>)getWithJavaUtilMap:(id<JavaUtilMap>)map;

- (id)iteratorNextWithJavaUtilMap_Entry:(id<JavaUtilMap_Entry>)entry_;

- (instancetype)initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap:(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_EntrySet)

__attribute__((unused)) static void OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_EntrySet_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_EntrySet *self, OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap *outer$);

__attribute__((unused)) static OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_EntrySet *new_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_EntrySet_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_EntrySet *create_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_EntrySet_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap *outer$);

J2OBJC_TYPE_LITERAL_HEADER(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_EntrySet)

@implementation OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithInt:(jint)capacity {
  OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_initWithInt_(self, capacity);
  return self;
}

- (instancetype)initWithInt:(jint)capacity
                  withFloat:(jfloat)factor {
  OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_initWithInt_withFloat_(self, capacity, factor);
  return self;
}

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)map {
  OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_initWithJavaUtilMap_(self, map);
  return self;
}

- (jboolean)getFast {
  return (self->fast_);
}

- (void)setFastWithBoolean:(jboolean)fast {
  self->fast_ = fast;
}

- (void)clear {
  if (fast_) {
    @synchronized(self) {
      JavaUtilHashMap *temp = (JavaUtilHashMap *) cast_chk([((JavaUtilHashMap *) nil_chk(map_)) clone], [JavaUtilHashMap class]);
      [((JavaUtilHashMap *) nil_chk(temp)) clear];
      map_ = temp;
    }
  }
  else {
    @synchronized(map_) {
      [((JavaUtilHashMap *) nil_chk(map_)) clear];
    }
  }
}

- (id)clone {
  OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap *results = nil;
  if (fast_) {
    results = new_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_initWithJavaUtilMap_(map_);
  }
  else {
    @synchronized(map_) {
      results = new_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_initWithJavaUtilMap_(map_);
    }
  }
  [results setFastWithBoolean:[self getFast]];
  return (results);
}

- (jboolean)containsKeyWithId:(id)key {
  if (fast_) {
    return ([((JavaUtilHashMap *) nil_chk(map_)) containsKeyWithId:key]);
  }
  else {
    @synchronized(map_) {
      return ([((JavaUtilHashMap *) nil_chk(map_)) containsKeyWithId:key]);
    }
  }
}

- (jboolean)containsValueWithId:(id)value {
  if (fast_) {
    return ([((JavaUtilHashMap *) nil_chk(map_)) containsValueWithId:value]);
  }
  else {
    @synchronized(map_) {
      return ([((JavaUtilHashMap *) nil_chk(map_)) containsValueWithId:value]);
    }
  }
}

- (id<JavaUtilSet>)entrySet {
  return new_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_EntrySet_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_(self);
}

- (jboolean)isEqual:(id)o {
  if (o == self) return true;
  else if (!([JavaUtilMap_class_() isInstance:o])) return false;
  id<JavaUtilMap> mo = (id<JavaUtilMap>) cast_check(o, JavaUtilMap_class_());
  if (fast_) {
    if ([((id<JavaUtilMap>) nil_chk(mo)) size] != [((JavaUtilHashMap *) nil_chk(map_)) size]) return false;
    id<JavaUtilIterator> i = [((id<JavaUtilSet>) nil_chk([((JavaUtilHashMap *) nil_chk(map_)) entrySet])) iterator];
    while ([((id<JavaUtilIterator>) nil_chk(i)) hasNext]) {
      id<JavaUtilMap_Entry> e = (id<JavaUtilMap_Entry>) cast_check([i next], JavaUtilMap_Entry_class_());
      id key = [((id<JavaUtilMap_Entry>) nil_chk(e)) getKey];
      id value = [e getValue];
      if (value == nil) {
        if (!([mo getWithId:key] == nil && [mo containsKeyWithId:key])) return false;
      }
      else {
        if (![value isEqual:[mo getWithId:key]]) return false;
      }
    }
    return true;
  }
  else {
    @synchronized(map_) {
      if ([((id<JavaUtilMap>) nil_chk(mo)) size] != [((JavaUtilHashMap *) nil_chk(map_)) size]) return false;
      id<JavaUtilIterator> i = [((id<JavaUtilSet>) nil_chk([((JavaUtilHashMap *) nil_chk(map_)) entrySet])) iterator];
      while ([((id<JavaUtilIterator>) nil_chk(i)) hasNext]) {
        id<JavaUtilMap_Entry> e = (id<JavaUtilMap_Entry>) cast_check([i next], JavaUtilMap_Entry_class_());
        id key = [((id<JavaUtilMap_Entry>) nil_chk(e)) getKey];
        id value = [e getValue];
        if (value == nil) {
          if (!([mo getWithId:key] == nil && [mo containsKeyWithId:key])) return false;
        }
        else {
          if (![value isEqual:[mo getWithId:key]]) return false;
        }
      }
      return true;
    }
  }
}

- (id)getWithId:(id)key {
  if (fast_) {
    return ([((JavaUtilHashMap *) nil_chk(map_)) getWithId:key]);
  }
  else {
    @synchronized(map_) {
      return ([((JavaUtilHashMap *) nil_chk(map_)) getWithId:key]);
    }
  }
}

- (NSUInteger)hash {
  if (fast_) {
    jint h = 0;
    id<JavaUtilIterator> i = [((id<JavaUtilSet>) nil_chk([((JavaUtilHashMap *) nil_chk(map_)) entrySet])) iterator];
    while ([((id<JavaUtilIterator>) nil_chk(i)) hasNext]) h += ((jint) [nil_chk([i next]) hash]);
    return (h);
  }
  else {
    @synchronized(map_) {
      jint h = 0;
      id<JavaUtilIterator> i = [((id<JavaUtilSet>) nil_chk([((JavaUtilHashMap *) nil_chk(map_)) entrySet])) iterator];
      while ([((id<JavaUtilIterator>) nil_chk(i)) hasNext]) h += ((jint) [nil_chk([i next]) hash]);
      return (h);
    }
  }
}

- (jboolean)isEmpty {
  if (fast_) {
    return ([((JavaUtilHashMap *) nil_chk(map_)) isEmpty]);
  }
  else {
    @synchronized(map_) {
      return ([((JavaUtilHashMap *) nil_chk(map_)) isEmpty]);
    }
  }
}

- (id<JavaUtilSet>)keySet {
  return new_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_KeySet_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_(self);
}

- (id)putWithId:(id)key
         withId:(id)value {
  if (fast_) {
    @synchronized(self) {
      JavaUtilHashMap *temp = (JavaUtilHashMap *) cast_chk([((JavaUtilHashMap *) nil_chk(map_)) clone], [JavaUtilHashMap class]);
      id result = [((JavaUtilHashMap *) nil_chk(temp)) putWithId:key withId:value];
      map_ = temp;
      return (result);
    }
  }
  else {
    @synchronized(map_) {
      return ([((JavaUtilHashMap *) nil_chk(map_)) putWithId:key withId:value]);
    }
  }
}

- (void)putAllWithJavaUtilMap:(id<JavaUtilMap>)inArg {
  if (fast_) {
    @synchronized(self) {
      JavaUtilHashMap *temp = (JavaUtilHashMap *) cast_chk([((JavaUtilHashMap *) nil_chk(map_)) clone], [JavaUtilHashMap class]);
      [((JavaUtilHashMap *) nil_chk(temp)) putAllWithJavaUtilMap:inArg];
      map_ = temp;
    }
  }
  else {
    @synchronized(map_) {
      [((JavaUtilHashMap *) nil_chk(map_)) putAllWithJavaUtilMap:inArg];
    }
  }
}

- (id)removeWithId:(id)key {
  if (fast_) {
    @synchronized(self) {
      JavaUtilHashMap *temp = (JavaUtilHashMap *) cast_chk([((JavaUtilHashMap *) nil_chk(map_)) clone], [JavaUtilHashMap class]);
      id result = [((JavaUtilHashMap *) nil_chk(temp)) removeWithId:key];
      map_ = temp;
      return (result);
    }
  }
  else {
    @synchronized(map_) {
      return ([((JavaUtilHashMap *) nil_chk(map_)) removeWithId:key]);
    }
  }
}

- (jint)size {
  if (fast_) {
    return ([((JavaUtilHashMap *) nil_chk(map_)) size]);
  }
  else {
    @synchronized(map_) {
      return ([((JavaUtilHashMap *) nil_chk(map_)) size]);
    }
  }
}

- (id<JavaUtilCollection>)values {
  return new_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_Values_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "FastHashMap", NULL, 0x1, NULL, NULL },
    { "initWithInt:", "FastHashMap", NULL, 0x1, NULL, NULL },
    { "initWithInt:withFloat:", "FastHashMap", NULL, 0x1, NULL, NULL },
    { "initWithJavaUtilMap:", "FastHashMap", NULL, 0x1, NULL, "(Ljava/util/Map;)V" },
    { "getFast", NULL, "Z", 0x1, NULL, NULL },
    { "setFastWithBoolean:", "setFast", "V", 0x1, NULL, NULL },
    { "clear", NULL, "V", 0x1, NULL, NULL },
    { "clone", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "containsKeyWithId:", "containsKey", "Z", 0x1, NULL, NULL },
    { "containsValueWithId:", "containsValue", "Z", 0x1, NULL, NULL },
    { "entrySet", NULL, "Ljava.util.Set;", 0x1, NULL, "()Ljava/util/Set;" },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "getWithId:", "get", "Ljava.lang.Object;", 0x1, NULL, "(Ljava/lang/Object;)Ljava/lang/Object;" },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
    { "isEmpty", NULL, "Z", 0x1, NULL, NULL },
    { "keySet", NULL, "Ljava.util.Set;", 0x1, NULL, "()Ljava/util/Set;" },
    { "putWithId:withId:", "put", "Ljava.lang.Object;", 0x1, NULL, "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" },
    { "putAllWithJavaUtilMap:", "putAll", "V", 0x1, NULL, "(Ljava/util/Map;)V" },
    { "removeWithId:", "remove", "Ljava.lang.Object;", 0x1, NULL, "(Ljava/lang/Object;)Ljava/lang/Object;" },
    { "size", NULL, "I", 0x1, NULL, NULL },
    { "values", NULL, "Ljava.util.Collection;", 0x1, NULL, "()Ljava/util/Collection;" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "map_", NULL, 0x4, "Ljava.util.HashMap;", NULL, NULL, .constantValue.asLong = 0 },
    { "fast_", NULL, 0x4, "Z", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lorg.oss.pdfreporter.uses.org.apache.commons.collections.FastHashMap$CollectionView;", "Lorg.oss.pdfreporter.uses.org.apache.commons.collections.FastHashMap$KeySet;", "Lorg.oss.pdfreporter.uses.org.apache.commons.collections.FastHashMap$Values;", "Lorg.oss.pdfreporter.uses.org.apache.commons.collections.FastHashMap$EntrySet;"};
  static const J2ObjcClassInfo _OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap = { 2, "FastHashMap", "org.oss.pdfreporter.uses.org.apache.commons.collections", NULL, 0x1, 21, methods, 2, fields, 0, NULL, 4, inner_classes, NULL, NULL };
  return &_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap;
}

@end

void OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_init(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap *self) {
  JavaUtilHashMap_init(self);
  self->map_ = nil;
  self->fast_ = false;
  self->map_ = new_JavaUtilHashMap_init();
}

OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap *new_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_init() {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap, init)
}

OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap *create_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_init() {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap, init)
}

void OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_initWithInt_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap *self, jint capacity) {
  JavaUtilHashMap_init(self);
  self->map_ = nil;
  self->fast_ = false;
  self->map_ = new_JavaUtilHashMap_initWithInt_(capacity);
}

OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap *new_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_initWithInt_(jint capacity) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap, initWithInt_, capacity)
}

OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap *create_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_initWithInt_(jint capacity) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap, initWithInt_, capacity)
}

void OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_initWithInt_withFloat_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap *self, jint capacity, jfloat factor) {
  JavaUtilHashMap_init(self);
  self->map_ = nil;
  self->fast_ = false;
  self->map_ = new_JavaUtilHashMap_initWithInt_withFloat_(capacity, factor);
}

OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap *new_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_initWithInt_withFloat_(jint capacity, jfloat factor) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap, initWithInt_withFloat_, capacity, factor)
}

OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap *create_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_initWithInt_withFloat_(jint capacity, jfloat factor) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap, initWithInt_withFloat_, capacity, factor)
}

void OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_initWithJavaUtilMap_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap *self, id<JavaUtilMap> map) {
  JavaUtilHashMap_init(self);
  self->map_ = nil;
  self->fast_ = false;
  self->map_ = new_JavaUtilHashMap_initWithJavaUtilMap_(map);
}

OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap *new_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_initWithJavaUtilMap_(id<JavaUtilMap> map) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap, initWithJavaUtilMap_, map)
}

OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap *create_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_initWithJavaUtilMap_(id<JavaUtilMap> map) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap, initWithJavaUtilMap_, map)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap)

@implementation OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView

- (instancetype)initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap:(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap *)outer$ {
  OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_(self, outer$);
  return self;
}

- (id<JavaUtilCollection>)getWithJavaUtilMap:(id<JavaUtilMap>)map {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id)iteratorNextWithJavaUtilMap_Entry:(id<JavaUtilMap_Entry>)entry_ {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)clear {
  if (this$0_->fast_) {
    @synchronized(this$0_) {
      JavaUtilHashMap *temp = (JavaUtilHashMap *) cast_chk([((JavaUtilHashMap *) nil_chk(this$0_->map_)) clone], [JavaUtilHashMap class]);
      [((id<JavaUtilCollection>) nil_chk([self getWithJavaUtilMap:temp])) clear];
      this$0_->map_ = temp;
    }
  }
  else {
    @synchronized(this$0_->map_) {
      [((id<JavaUtilCollection>) nil_chk([self getWithJavaUtilMap:this$0_->map_])) clear];
    }
  }
}

- (jboolean)removeWithId:(id)o {
  if (this$0_->fast_) {
    @synchronized(this$0_) {
      JavaUtilHashMap *temp = (JavaUtilHashMap *) cast_chk([((JavaUtilHashMap *) nil_chk(this$0_->map_)) clone], [JavaUtilHashMap class]);
      jboolean r = [((id<JavaUtilCollection>) nil_chk([self getWithJavaUtilMap:temp])) removeWithId:o];
      this$0_->map_ = temp;
      return r;
    }
  }
  else {
    @synchronized(this$0_->map_) {
      return [((id<JavaUtilCollection>) nil_chk([self getWithJavaUtilMap:this$0_->map_])) removeWithId:o];
    }
  }
}

- (jboolean)removeAllWithJavaUtilCollection:(id<JavaUtilCollection>)o {
  if (this$0_->fast_) {
    @synchronized(this$0_) {
      JavaUtilHashMap *temp = (JavaUtilHashMap *) cast_chk([((JavaUtilHashMap *) nil_chk(this$0_->map_)) clone], [JavaUtilHashMap class]);
      jboolean r = [((id<JavaUtilCollection>) nil_chk([self getWithJavaUtilMap:temp])) removeAllWithJavaUtilCollection:o];
      this$0_->map_ = temp;
      return r;
    }
  }
  else {
    @synchronized(this$0_->map_) {
      return [((id<JavaUtilCollection>) nil_chk([self getWithJavaUtilMap:this$0_->map_])) removeAllWithJavaUtilCollection:o];
    }
  }
}

- (jboolean)retainAllWithJavaUtilCollection:(id<JavaUtilCollection>)o {
  if (this$0_->fast_) {
    @synchronized(this$0_) {
      JavaUtilHashMap *temp = (JavaUtilHashMap *) cast_chk([((JavaUtilHashMap *) nil_chk(this$0_->map_)) clone], [JavaUtilHashMap class]);
      jboolean r = [((id<JavaUtilCollection>) nil_chk([self getWithJavaUtilMap:temp])) retainAllWithJavaUtilCollection:o];
      this$0_->map_ = temp;
      return r;
    }
  }
  else {
    @synchronized(this$0_->map_) {
      return [((id<JavaUtilCollection>) nil_chk([self getWithJavaUtilMap:this$0_->map_])) retainAllWithJavaUtilCollection:o];
    }
  }
}

- (jint)size {
  if (this$0_->fast_) {
    return [((id<JavaUtilCollection>) nil_chk([self getWithJavaUtilMap:this$0_->map_])) size];
  }
  else {
    @synchronized(this$0_->map_) {
      return [((id<JavaUtilCollection>) nil_chk([self getWithJavaUtilMap:this$0_->map_])) size];
    }
  }
}

- (jboolean)isEmpty {
  if (this$0_->fast_) {
    return [((id<JavaUtilCollection>) nil_chk([self getWithJavaUtilMap:this$0_->map_])) isEmpty];
  }
  else {
    @synchronized(this$0_->map_) {
      return [((id<JavaUtilCollection>) nil_chk([self getWithJavaUtilMap:this$0_->map_])) isEmpty];
    }
  }
}

- (jboolean)containsWithId:(id)o {
  if (this$0_->fast_) {
    return [((id<JavaUtilCollection>) nil_chk([self getWithJavaUtilMap:this$0_->map_])) containsWithId:o];
  }
  else {
    @synchronized(this$0_->map_) {
      return [((id<JavaUtilCollection>) nil_chk([self getWithJavaUtilMap:this$0_->map_])) containsWithId:o];
    }
  }
}

- (jboolean)containsAllWithJavaUtilCollection:(id<JavaUtilCollection>)o {
  if (this$0_->fast_) {
    return [((id<JavaUtilCollection>) nil_chk([self getWithJavaUtilMap:this$0_->map_])) containsAllWithJavaUtilCollection:o];
  }
  else {
    @synchronized(this$0_->map_) {
      return [((id<JavaUtilCollection>) nil_chk([self getWithJavaUtilMap:this$0_->map_])) containsAllWithJavaUtilCollection:o];
    }
  }
}

- (IOSObjectArray *)toArrayWithNSObjectArray:(IOSObjectArray *)o {
  if (this$0_->fast_) {
    return [((id<JavaUtilCollection>) nil_chk([self getWithJavaUtilMap:this$0_->map_])) toArrayWithNSObjectArray:o];
  }
  else {
    @synchronized(this$0_->map_) {
      return [((id<JavaUtilCollection>) nil_chk([self getWithJavaUtilMap:this$0_->map_])) toArrayWithNSObjectArray:o];
    }
  }
}

- (IOSObjectArray *)toArray {
  if (this$0_->fast_) {
    return [((id<JavaUtilCollection>) nil_chk([self getWithJavaUtilMap:this$0_->map_])) toArray];
  }
  else {
    @synchronized(this$0_->map_) {
      return [((id<JavaUtilCollection>) nil_chk([self getWithJavaUtilMap:this$0_->map_])) toArray];
    }
  }
}

- (jboolean)isEqual:(id)o {
  if (o == self) return true;
  if (this$0_->fast_) {
    return [((id<JavaUtilCollection>) nil_chk([self getWithJavaUtilMap:this$0_->map_])) isEqual:o];
  }
  else {
    @synchronized(this$0_->map_) {
      return [((id<JavaUtilCollection>) nil_chk([self getWithJavaUtilMap:this$0_->map_])) isEqual:o];
    }
  }
}

- (NSUInteger)hash {
  if (this$0_->fast_) {
    return ((jint) [((id<JavaUtilCollection>) nil_chk([self getWithJavaUtilMap:this$0_->map_])) hash]);
  }
  else {
    @synchronized(this$0_->map_) {
      return ((jint) [((id<JavaUtilCollection>) nil_chk([self getWithJavaUtilMap:this$0_->map_])) hash]);
    }
  }
}

- (jboolean)addWithId:(id)o {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (jboolean)addAllWithJavaUtilCollection:(id<JavaUtilCollection>)c {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (id<JavaUtilIterator>)iterator {
  return new_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView_CollectionViewIterator_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView_(self);
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap:", "CollectionView", NULL, 0x1, NULL, NULL },
    { "getWithJavaUtilMap:", "get", "Ljava.util.Collection;", 0x404, NULL, NULL },
    { "iteratorNextWithJavaUtilMap_Entry:", "iteratorNext", "Ljava.lang.Object;", 0x404, NULL, NULL },
    { "clear", NULL, "V", 0x1, NULL, NULL },
    { "removeWithId:", "remove", "Z", 0x1, NULL, NULL },
    { "removeAllWithJavaUtilCollection:", "removeAll", "Z", 0x1, NULL, NULL },
    { "retainAllWithJavaUtilCollection:", "retainAll", "Z", 0x1, NULL, NULL },
    { "size", NULL, "I", 0x1, NULL, NULL },
    { "isEmpty", NULL, "Z", 0x1, NULL, NULL },
    { "containsWithId:", "contains", "Z", 0x1, NULL, NULL },
    { "containsAllWithJavaUtilCollection:", "containsAll", "Z", 0x1, NULL, NULL },
    { "toArrayWithNSObjectArray:", "toArray", "[Ljava.lang.Object;", 0x1, NULL, NULL },
    { "toArray", NULL, "[Ljava.lang.Object;", 0x1, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
    { "addWithId:", "add", "Z", 0x1, NULL, NULL },
    { "addAllWithJavaUtilCollection:", "addAll", "Z", 0x1, NULL, NULL },
    { "iterator", NULL, "Ljava.util.Iterator;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.oss.pdfreporter.uses.org.apache.commons.collections.FastHashMap;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lorg.oss.pdfreporter.uses.org.apache.commons.collections.FastHashMap$CollectionView$CollectionViewIterator;"};
  static const J2ObjcClassInfo _OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView = { 2, "CollectionView", "org.oss.pdfreporter.uses.org.apache.commons.collections", "FastHashMap", 0x402, 18, methods, 1, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView;
}

@end

void OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView *self, OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView)

@implementation OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView_CollectionViewIterator

- (instancetype)initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView:(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView *)outer$ {
  OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView_CollectionViewIterator_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView_(self, outer$);
  return self;
}

- (jboolean)hasNext {
  if (expected_ != this$0_->this$0_->map_) {
    @throw new_JavaUtilConcurrentModificationException_init();
  }
  return [((id<JavaUtilIterator>) nil_chk(iterator_)) hasNext];
}

- (id)next {
  if (expected_ != this$0_->this$0_->map_) {
    @throw new_JavaUtilConcurrentModificationException_init();
  }
  lastReturned_ = (id<JavaUtilMap_Entry>) cast_check([((id<JavaUtilIterator>) nil_chk(iterator_)) next], JavaUtilMap_Entry_class_());
  return [this$0_ iteratorNextWithJavaUtilMap_Entry:lastReturned_];
}

- (void)remove {
  if (lastReturned_ == nil) {
    @throw new_JavaLangIllegalStateException_init();
  }
  if (this$0_->this$0_->fast_) {
    @synchronized(this$0_->this$0_) {
      if (expected_ != this$0_->this$0_->map_) {
        @throw new_JavaUtilConcurrentModificationException_init();
      }
      (void) [this$0_->this$0_ removeWithId:[lastReturned_ getKey]];
      lastReturned_ = nil;
      expected_ = this$0_->this$0_->map_;
    }
  }
  else {
    [((id<JavaUtilIterator>) nil_chk(iterator_)) remove];
    lastReturned_ = nil;
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView:", "CollectionViewIterator", NULL, 0x1, NULL, NULL },
    { "hasNext", NULL, "Z", 0x1, NULL, NULL },
    { "next", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "remove", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.oss.pdfreporter.uses.org.apache.commons.collections.FastHashMap$CollectionView;", NULL, NULL, .constantValue.asLong = 0 },
    { "expected_", NULL, 0x2, "Ljava.util.Map;", NULL, NULL, .constantValue.asLong = 0 },
    { "lastReturned_", NULL, 0x2, "Ljava.util.Map$Entry;", NULL, NULL, .constantValue.asLong = 0 },
    { "iterator_", NULL, 0x2, "Ljava.util.Iterator;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView_CollectionViewIterator = { 2, "CollectionViewIterator", "org.oss.pdfreporter.uses.org.apache.commons.collections", "FastHashMap$CollectionView", 0x2, 4, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView_CollectionViewIterator;
}

@end

void OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView_CollectionViewIterator_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView_CollectionViewIterator *self, OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
  self->lastReturned_ = nil;
  self->expected_ = outer$->this$0_->map_;
  self->iterator_ = [((id<JavaUtilSet>) nil_chk([((id<JavaUtilMap>) nil_chk(self->expected_)) entrySet])) iterator];
}

OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView_CollectionViewIterator *new_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView_CollectionViewIterator_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView *outer$) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView_CollectionViewIterator, initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView_, outer$)
}

OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView_CollectionViewIterator *create_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView_CollectionViewIterator_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView *outer$) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView_CollectionViewIterator, initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView_CollectionViewIterator)

@implementation OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_KeySet

- (id<JavaUtilCollection>)getWithJavaUtilMap:(id<JavaUtilMap>)map {
  return [((id<JavaUtilMap>) nil_chk(map)) keySet];
}

- (id)iteratorNextWithJavaUtilMap_Entry:(id<JavaUtilMap_Entry>)entry_ {
  return [((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey];
}

- (instancetype)initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap:(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap *)outer$ {
  OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_KeySet_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_(self, outer$);
  return self;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getWithJavaUtilMap:", "get", "Ljava.util.Collection;", 0x4, NULL, NULL },
    { "iteratorNextWithJavaUtilMap_Entry:", "iteratorNext", "Ljava.lang.Object;", 0x4, NULL, NULL },
    { "initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap:", "KeySet", NULL, 0x2, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_KeySet = { 2, "KeySet", "org.oss.pdfreporter.uses.org.apache.commons.collections", "FastHashMap", 0x2, 3, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_KeySet;
}

@end

void OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_KeySet_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_KeySet *self, OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap *outer$) {
  OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_(self, outer$);
}

OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_KeySet *new_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_KeySet_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap *outer$) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_KeySet, initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_, outer$)
}

OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_KeySet *create_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_KeySet_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap *outer$) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_KeySet, initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_KeySet)

@implementation OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_Values

- (id<JavaUtilCollection>)getWithJavaUtilMap:(id<JavaUtilMap>)map {
  return [((id<JavaUtilMap>) nil_chk(map)) values];
}

- (id)iteratorNextWithJavaUtilMap_Entry:(id<JavaUtilMap_Entry>)entry_ {
  return [((id<JavaUtilMap_Entry>) nil_chk(entry_)) getValue];
}

- (instancetype)initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap:(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap *)outer$ {
  OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_Values_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_(self, outer$);
  return self;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getWithJavaUtilMap:", "get", "Ljava.util.Collection;", 0x4, NULL, NULL },
    { "iteratorNextWithJavaUtilMap_Entry:", "iteratorNext", "Ljava.lang.Object;", 0x4, NULL, NULL },
    { "initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap:", "Values", NULL, 0x2, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_Values = { 2, "Values", "org.oss.pdfreporter.uses.org.apache.commons.collections", "FastHashMap", 0x2, 3, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_Values;
}

@end

void OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_Values_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_Values *self, OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap *outer$) {
  OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_(self, outer$);
}

OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_Values *new_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_Values_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap *outer$) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_Values, initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_, outer$)
}

OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_Values *create_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_Values_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap *outer$) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_Values, initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_Values)

@implementation OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_EntrySet

- (id<JavaUtilCollection>)getWithJavaUtilMap:(id<JavaUtilMap>)map {
  return [((id<JavaUtilMap>) nil_chk(map)) entrySet];
}

- (id)iteratorNextWithJavaUtilMap_Entry:(id<JavaUtilMap_Entry>)entry_ {
  return entry_;
}

- (instancetype)initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap:(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap *)outer$ {
  OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_EntrySet_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_(self, outer$);
  return self;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getWithJavaUtilMap:", "get", "Ljava.util.Collection;", 0x4, NULL, NULL },
    { "iteratorNextWithJavaUtilMap_Entry:", "iteratorNext", "Ljava.lang.Object;", 0x4, NULL, NULL },
    { "initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap:", "EntrySet", NULL, 0x2, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_EntrySet = { 2, "EntrySet", "org.oss.pdfreporter.uses.org.apache.commons.collections", "FastHashMap", 0x2, 3, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_EntrySet;
}

@end

void OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_EntrySet_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_EntrySet *self, OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap *outer$) {
  OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_CollectionView_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_(self, outer$);
}

OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_EntrySet *new_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_EntrySet_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap *outer$) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_EntrySet, initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_, outer$)
}

OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_EntrySet *create_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_EntrySet_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap *outer$) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_EntrySet, initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_EntrySet)
