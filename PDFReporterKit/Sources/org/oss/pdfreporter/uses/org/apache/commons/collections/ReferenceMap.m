//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-extensions/src/org/oss/pdfreporter/uses/org/apache/commons/collections/ReferenceMap.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/io/ObjectInputStream.h"
#include "java/io/ObjectOutputStream.h"
#include "java/lang/ClassNotFoundException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/NullPointerException.h"
#include "java/util/AbstractCollection.h"
#include "java/util/AbstractMap.h"
#include "java/util/AbstractSet.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/Collection.h"
#include "java/util/ConcurrentModificationException.h"
#include "java/util/Iterator.h"
#include "java/util/Map.h"
#include "java/util/NoSuchElementException.h"
#include "java/util/Set.h"
#include "org/oss/pdfreporter/uses/org/apache/commons/collections/DefaultMapEntry.h"
#include "org/oss/pdfreporter/uses/org/apache/commons/collections/ReferenceMap.h"

@class OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry;

@interface OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap () {
 @public
  jint keyType_;
  jint valueType_;
  jfloat loadFactor_;
  IOSObjectArray *table_;
  jint size_;
  jint threshold_;
  volatile_jint modCount_;
  id<JavaUtilSet> keySet_ReferenceMap_;
  id<JavaUtilSet> entrySet_;
  id<JavaUtilCollection> values_;
}

+ (void)verifyWithNSString:(NSString *)name
                   withInt:(jint)type;

- (void)writeObjectWithJavaIoObjectOutputStream:(JavaIoObjectOutputStream *)outArg;

- (void)readObjectWithJavaIoObjectInputStream:(JavaIoObjectInputStream *)inp;

- (OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry *)getEntryWithId:(id)key;

- (jint)indexForWithInt:(jint)hash_;

- (void)resize;

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap, table_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap, keySet_ReferenceMap_, id<JavaUtilSet>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap, entrySet_, id<JavaUtilSet>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap, values_, id<JavaUtilCollection>)

inline jlong OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_get_serialVersionUID();
#define OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_serialVersionUID -3370601314380922368LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap, serialVersionUID, jlong)

__attribute__((unused)) static void OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_verifyWithNSString_withInt_(NSString *name, jint type);

__attribute__((unused)) static OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry *OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_getEntryWithId_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *self, id key);

__attribute__((unused)) static jint OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_indexForWithInt_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *self, jint hash_);

__attribute__((unused)) static void OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_resize(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *self);

@interface OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry : NSObject < JavaUtilMap_Entry > {
 @public
  id key_;
  id value_;
  jint hash__;
  OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry *next_;
}

- (instancetype)initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap:(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *)outer$
                                                                              withId:(id)key
                                                                             withInt:(jint)hash_
                                                                              withId:(id)value
              withOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry:(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry *)next;

- (id)getKey;

- (id)getValue;

- (id)setValueWithId:(id)object;

- (jboolean)isEqual:(id)o;

- (NSUInteger)hash;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry)

J2OBJC_FIELD_SETTER(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry, key_, id)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry, value_, id)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry, next_, OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry *)

__attribute__((unused)) static void OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_withId_withInt_withId_withOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry *self, OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *outer$, id key, jint hash_, id value, OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry *next);

__attribute__((unused)) static OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry *new_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_withId_withInt_withId_withOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *outer$, id key, jint hash_, id value, OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry *next) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry *create_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_withId_withInt_withId_withOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *outer$, id key, jint hash_, id value, OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry *next);

J2OBJC_TYPE_LITERAL_HEADER(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry)

@interface OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_EntryIterator : NSObject < JavaUtilIterator > {
 @public
  OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *this$0_;
  jint index_;
  OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry *entry__;
  OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry *previous_;
  id nextKey_, nextValue_;
  id currentKey_, currentValue_;
  jint expectedModCount_;
}

- (instancetype)initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap:(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *)outer$;

- (jboolean)hasNext;

- (void)checkMod;

- (jboolean)nextNull;

- (OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry *)nextEntry;

- (id)next;

- (void)remove;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_EntryIterator)

J2OBJC_FIELD_SETTER(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_EntryIterator, this$0_, OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_EntryIterator, entry__, OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_EntryIterator, previous_, OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_EntryIterator, nextKey_, id)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_EntryIterator, nextValue_, id)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_EntryIterator, currentKey_, id)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_EntryIterator, currentValue_, id)

__attribute__((unused)) static void OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_EntryIterator_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_EntryIterator *self, OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *outer$);

__attribute__((unused)) static OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_EntryIterator *new_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_EntryIterator_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_EntryIterator *create_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_EntryIterator_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *outer$);

__attribute__((unused)) static void OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_EntryIterator_checkMod(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_EntryIterator *self);

__attribute__((unused)) static jboolean OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_EntryIterator_nextNull(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_EntryIterator *self);

J2OBJC_TYPE_LITERAL_HEADER(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_EntryIterator)

@interface OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_ValueIterator : OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_EntryIterator

- (id)next;

- (instancetype)initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap:(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_ValueIterator)

__attribute__((unused)) static void OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_ValueIterator_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_ValueIterator *self, OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *outer$);

__attribute__((unused)) static OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_ValueIterator *new_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_ValueIterator_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_ValueIterator *create_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_ValueIterator_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *outer$);

J2OBJC_TYPE_LITERAL_HEADER(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_ValueIterator)

@interface OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_KeyIterator : OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_EntryIterator

- (id)next;

- (instancetype)initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap:(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_KeyIterator)

__attribute__((unused)) static void OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_KeyIterator_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_KeyIterator *self, OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *outer$);

__attribute__((unused)) static OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_KeyIterator *new_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_KeyIterator_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_KeyIterator *create_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_KeyIterator_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *outer$);

J2OBJC_TYPE_LITERAL_HEADER(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_KeyIterator)

@interface OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$1 : JavaUtilAbstractSet {
 @public
  OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *this$0_;
}

- (jint)size;

- (void)clear;

- (jboolean)containsWithId:(id)o;

- (jboolean)removeWithId:(id)o;

- (id<JavaUtilIterator>)iterator;

- (IOSObjectArray *)toArray;

- (IOSObjectArray *)toArrayWithNSObjectArray:(IOSObjectArray *)arr;

- (instancetype)initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap:(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$1)

J2OBJC_FIELD_SETTER(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$1, this$0_, OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *)

__attribute__((unused)) static void OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$1_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$1 *self, OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *outer$);

__attribute__((unused)) static OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$1 *new_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$1_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$1 *create_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$1_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *outer$);

J2OBJC_TYPE_LITERAL_HEADER(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$1)

@interface OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$2 : JavaUtilAbstractSet {
 @public
  OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *this$0_;
}

- (jint)size;

- (id<JavaUtilIterator>)iterator;

- (jboolean)containsWithId:(id)o;

- (jboolean)removeWithId:(id)o;

- (void)clear;

- (instancetype)initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap:(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$2)

J2OBJC_FIELD_SETTER(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$2, this$0_, OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *)

__attribute__((unused)) static void OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$2_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$2 *self, OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *outer$);

__attribute__((unused)) static OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$2 *new_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$2_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$2 *create_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$2_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *outer$);

J2OBJC_TYPE_LITERAL_HEADER(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$2)

@interface OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$3 : JavaUtilAbstractCollection {
 @public
  OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *this$0_;
}

- (jint)size;

- (void)clear;

- (id<JavaUtilIterator>)iterator;

- (instancetype)initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap:(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$3)

J2OBJC_FIELD_SETTER(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$3, this$0_, OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *)

__attribute__((unused)) static void OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$3_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$3 *self, OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *outer$);

__attribute__((unused)) static OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$3 *new_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$3_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$3 *create_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$3_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *outer$);

J2OBJC_TYPE_LITERAL_HEADER(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$3)

@implementation OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap

+ (jint)HARD {
  return OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_HARD;
}

+ (jint)SOFT {
  return OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_SOFT;
}

+ (jint)WEAK {
  return OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_WEAK;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithInt:(jint)keyType
                    withInt:(jint)valueType {
  OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_initWithInt_withInt_(self, keyType, valueType);
  return self;
}

- (instancetype)initWithInt:(jint)keyType
                    withInt:(jint)valueType
                    withInt:(jint)capacity
                  withFloat:(jfloat)loadFactor {
  OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_initWithInt_withInt_withInt_withFloat_(self, keyType, valueType, capacity, loadFactor);
  return self;
}

+ (void)verifyWithNSString:(NSString *)name
                   withInt:(jint)type {
  OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_verifyWithNSString_withInt_(name, type);
}

- (void)writeObjectWithJavaIoObjectOutputStream:(JavaIoObjectOutputStream *)outArg {
  [((JavaIoObjectOutputStream *) nil_chk(outArg)) defaultWriteObject];
  [outArg writeIntWithInt:((IOSObjectArray *) nil_chk(table_))->size_];
  for (id<JavaUtilIterator> iter = [((id<JavaUtilSet>) nil_chk([self entrySet])) iterator]; [((id<JavaUtilIterator>) nil_chk(iter)) hasNext]; ) {
    id<JavaUtilMap_Entry> entry_ = (id<JavaUtilMap_Entry>) cast_check([iter next], JavaUtilMap_Entry_class_());
    [outArg writeObjectWithId:[((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey]];
    [outArg writeObjectWithId:[entry_ getValue]];
  }
  [outArg writeObjectWithId:nil];
}

- (void)readObjectWithJavaIoObjectInputStream:(JavaIoObjectInputStream *)inp {
  [((JavaIoObjectInputStream *) nil_chk(inp)) defaultReadObject];
  table_ = [IOSObjectArray newArrayWithLength:[inp readInt] type:OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry_class_()];
  threshold_ = JreFpToInt((table_->size_ * loadFactor_));
  id key = [inp readObject];
  while (key != nil) {
    id value = [inp readObject];
    (void) [self putWithId:key withId:value];
    key = [inp readObject];
  }
}

- (OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry *)getEntryWithId:(id)key {
  return OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_getEntryWithId_(self, key);
}

- (jint)indexForWithInt:(jint)hash_ {
  return OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_indexForWithInt_(self, hash_);
}

- (void)resize {
  OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_resize(self);
}

- (jint)size {
  return size_;
}

- (jboolean)isEmpty {
  return size_ == 0;
}

- (jboolean)containsKeyWithId:(id)key {
  OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry *entry_ = OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_getEntryWithId_(self, key);
  if (entry_ == nil) return false;
  return [entry_ getValue] != nil;
}

- (id)getWithId:(id)key {
  OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry *entry_ = OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_getEntryWithId_(self, key);
  if (entry_ == nil) return nil;
  return [entry_ getValue];
}

- (id)putWithId:(id)key
         withId:(id)value {
  if (key == nil) @throw new_JavaLangNullPointerException_initWithNSString_(@"null keys not allowed");
  if (value == nil) @throw new_JavaLangNullPointerException_initWithNSString_(@"null values not allowed");
  if (size_ + 1 > threshold_) OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_resize(self);
  jint hash_ = ((jint) [key hash]);
  jint index = OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_indexForWithInt_(self, hash_);
  OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry *entry_ = IOSObjectArray_Get(nil_chk(table_), index);
  while (entry_ != nil) {
    if ((hash_ == entry_->hash__) && [key isEqual:[entry_ getKey]]) {
      id result = [entry_ getValue];
      (void) [entry_ setValueWithId:value];
      return result;
    }
    entry_ = entry_->next_;
  }
  self->size_++;
  modCount_++;
  (void) IOSObjectArray_SetAndConsume(nil_chk(table_), index, new_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_withId_withInt_withId_withOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry_(self, key, hash_, value, IOSObjectArray_Get(table_, index)));
  return nil;
}

- (id)removeWithId:(id)key {
  if (key == nil) return nil;
  jint hash_ = ((jint) [key hash]);
  jint index = OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_indexForWithInt_(self, hash_);
  OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry *previous = nil;
  OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry *entry_ = IOSObjectArray_Get(nil_chk(table_), index);
  while (entry_ != nil) {
    if ((hash_ == entry_->hash__) && [key isEqual:[entry_ getKey]]) {
      if (previous == nil) (void) IOSObjectArray_Set(nil_chk(table_), index, entry_->next_);
      else previous->next_ = entry_->next_;
      self->size_--;
      modCount_++;
      return [entry_ getValue];
    }
    previous = entry_;
    entry_ = entry_->next_;
  }
  return nil;
}

- (void)clear {
  JavaUtilArrays_fillWithNSObjectArray_withId_(table_, nil);
  size_ = 0;
}

- (id<JavaUtilSet>)entrySet {
  if (entrySet_ != nil) return entrySet_;
  entrySet_ = new_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$1_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_(self);
  return entrySet_;
}

- (id<JavaUtilSet>)keySet {
  if (keySet_ReferenceMap_ != nil) return keySet_ReferenceMap_;
  keySet_ReferenceMap_ = new_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$2_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_(self);
  return keySet_ReferenceMap_;
}

- (id<JavaUtilCollection>)values {
  if (values_ != nil) return values_;
  values_ = new_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$3_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_(self);
  return values_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "ReferenceMap", NULL, 0x1, NULL, NULL },
    { "initWithInt:withInt:", "ReferenceMap", NULL, 0x1, NULL, NULL },
    { "initWithInt:withInt:withInt:withFloat:", "ReferenceMap", NULL, 0x1, NULL, NULL },
    { "verifyWithNSString:withInt:", "verify", "V", 0xa, NULL, NULL },
    { "writeObjectWithJavaIoObjectOutputStream:", "writeObject", "V", 0x2, "Ljava.io.IOException;", NULL },
    { "readObjectWithJavaIoObjectInputStream:", "readObject", "V", 0x2, "Ljava.io.IOException;Ljava.lang.ClassNotFoundException;", NULL },
    { "getEntryWithId:", "getEntry", "Lorg.oss.pdfreporter.uses.org.apache.commons.collections.ReferenceMap$Entry;", 0x2, NULL, NULL },
    { "indexForWithInt:", "indexFor", "I", 0x2, NULL, NULL },
    { "resize", NULL, "V", 0x2, NULL, NULL },
    { "size", NULL, "I", 0x1, NULL, NULL },
    { "isEmpty", NULL, "Z", 0x1, NULL, NULL },
    { "containsKeyWithId:", "containsKey", "Z", 0x1, NULL, NULL },
    { "getWithId:", "get", "Ljava.lang.Object;", 0x1, NULL, "(Ljava/lang/Object;)Ljava/lang/Object;" },
    { "putWithId:withId:", "put", "Ljava.lang.Object;", 0x1, NULL, "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" },
    { "removeWithId:", "remove", "Ljava.lang.Object;", 0x1, NULL, "(Ljava/lang/Object;)Ljava/lang/Object;" },
    { "clear", NULL, "V", 0x1, NULL, NULL },
    { "entrySet", NULL, "Ljava.util.Set;", 0x1, NULL, "()Ljava/util/Set;" },
    { "keySet", NULL, "Ljava.util.Set;", 0x1, NULL, "()Ljava/util/Set;" },
    { "values", NULL, "Ljava.util.Collection;", 0x1, NULL, "()Ljava/util/Collection;" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "serialVersionUID", 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_serialVersionUID },
    { "HARD", "HARD", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_HARD },
    { "SOFT", "SOFT", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_SOFT },
    { "WEAK", "WEAK", 0x19, "I", NULL, NULL, .constantValue.asInt = OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_WEAK },
    { "keyType_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "valueType_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "loadFactor_", NULL, 0x2, "F", NULL, NULL, .constantValue.asLong = 0 },
    { "table_", NULL, 0x82, "[Lorg.oss.pdfreporter.uses.org.apache.commons.collections.ReferenceMap$Entry;", NULL, NULL, .constantValue.asLong = 0 },
    { "size_", NULL, 0x82, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "threshold_", NULL, 0x82, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "modCount_", NULL, 0xc2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "keySet_ReferenceMap_", "keySet", 0x82, "Ljava.util.Set;", NULL, NULL, .constantValue.asLong = 0 },
    { "entrySet_", NULL, 0x82, "Ljava.util.Set;", NULL, NULL, .constantValue.asLong = 0 },
    { "values_", NULL, 0x82, "Ljava.util.Collection;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lorg.oss.pdfreporter.uses.org.apache.commons.collections.ReferenceMap$Entry;", "Lorg.oss.pdfreporter.uses.org.apache.commons.collections.ReferenceMap$EntryIterator;", "Lorg.oss.pdfreporter.uses.org.apache.commons.collections.ReferenceMap$ValueIterator;", "Lorg.oss.pdfreporter.uses.org.apache.commons.collections.ReferenceMap$KeyIterator;"};
  static const J2ObjcClassInfo _OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap = { 2, "ReferenceMap", "org.oss.pdfreporter.uses.org.apache.commons.collections", NULL, 0x1, 19, methods, 14, fields, 0, NULL, 4, inner_classes, NULL, NULL };
  return &_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap;
}

@end

void OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_init(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *self) {
  OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_initWithInt_withInt_(self, OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_HARD, OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_SOFT);
}

OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *new_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_init() {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap, init)
}

OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *create_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_init() {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap, init)
}

void OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_initWithInt_withInt_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *self, jint keyType, jint valueType) {
  OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_initWithInt_withInt_withInt_withFloat_(self, keyType, valueType, 16, 0.75f);
}

OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *new_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_initWithInt_withInt_(jint keyType, jint valueType) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap, initWithInt_withInt_, keyType, valueType)
}

OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *create_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_initWithInt_withInt_(jint keyType, jint valueType) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap, initWithInt_withInt_, keyType, valueType)
}

void OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_initWithInt_withInt_withInt_withFloat_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *self, jint keyType, jint valueType, jint capacity, jfloat loadFactor) {
  JavaUtilAbstractMap_init(self);
  OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_verifyWithNSString_withInt_(@"keyType", keyType);
  OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_verifyWithNSString_withInt_(@"valueType", valueType);
  if (capacity <= 0) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"capacity must be positive");
  }
  if ((loadFactor <= 0.0f) || (loadFactor >= 1.0f)) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Load factor must be greater than 0 and less than 1.");
  }
  self->keyType_ = keyType;
  self->valueType_ = valueType;
  jint v = 1;
  while (v < capacity) v *= 2;
  self->table_ = [IOSObjectArray newArrayWithLength:v type:OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry_class_()];
  self->loadFactor_ = loadFactor;
  self->threshold_ = JreFpToInt((v * loadFactor));
}

OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *new_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_initWithInt_withInt_withInt_withFloat_(jint keyType, jint valueType, jint capacity, jfloat loadFactor) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap, initWithInt_withInt_withInt_withFloat_, keyType, valueType, capacity, loadFactor)
}

OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *create_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_initWithInt_withInt_withInt_withFloat_(jint keyType, jint valueType, jint capacity, jfloat loadFactor) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap, initWithInt_withInt_withInt_withFloat_, keyType, valueType, capacity, loadFactor)
}

void OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_verifyWithNSString_withInt_(NSString *name, jint type) {
  OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_initialize();
  if ((type < OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_HARD) || (type > OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_WEAK)) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", name, @" must be HARD, SOFT, WEAK."));
  }
}

OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry *OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_getEntryWithId_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *self, id key) {
  if (key == nil) return nil;
  jint hash_ = ((jint) [key hash]);
  jint index = OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_indexForWithInt_(self, hash_);
  for (OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry *entry_ = IOSObjectArray_Get(nil_chk(self->table_), index); entry_ != nil; entry_ = entry_->next_) {
    if ((entry_->hash__ == hash_) && [key isEqual:[entry_ getKey]]) {
      return entry_;
    }
  }
  return nil;
}

jint OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_indexForWithInt_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *self, jint hash_) {
  hash_ += ~(JreLShift32(hash_, 15));
  hash_ ^= (JreURShift32(hash_, 10));
  hash_ += (JreLShift32(hash_, 3));
  hash_ ^= (JreURShift32(hash_, 6));
  hash_ += ~(JreLShift32(hash_, 11));
  hash_ ^= (JreURShift32(hash_, 16));
  return hash_ & (((IOSObjectArray *) nil_chk(self->table_))->size_ - 1);
}

void OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_resize(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *self) {
  IOSObjectArray *old = self->table_;
  self->table_ = [IOSObjectArray newArrayWithLength:((IOSObjectArray *) nil_chk(old))->size_ * 2 type:OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry_class_()];
  for (jint i = 0; i < old->size_; i++) {
    OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry *next = IOSObjectArray_Get(old, i);
    while (next != nil) {
      OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry *entry_ = next;
      next = next->next_;
      jint index = OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_indexForWithInt_(self, entry_->hash__);
      entry_->next_ = IOSObjectArray_Get(nil_chk(self->table_), index);
      (void) IOSObjectArray_Set(self->table_, index, entry_);
    }
    (void) IOSObjectArray_Set(old, i, nil);
  }
  self->threshold_ = JreFpToInt((self->table_->size_ * self->loadFactor_));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap)

@implementation OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry

- (instancetype)initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap:(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *)outer$
                                                                              withId:(id)key
                                                                             withInt:(jint)hash_
                                                                              withId:(id)value
              withOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry:(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry *)next {
  OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_withId_withInt_withId_withOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry_(self, outer$, key, hash_, value, next);
  return self;
}

- (id)getKey {
  return key_;
}

- (id)getValue {
  return value_;
}

- (id)setValueWithId:(id)object {
  id old = [self getValue];
  value_ = object;
  return old;
}

- (jboolean)isEqual:(id)o {
  if (o == nil) return false;
  if (o == self) return true;
  if (!([JavaUtilMap_Entry_class_() isInstance:o])) return false;
  id<JavaUtilMap_Entry> entry_ = (id<JavaUtilMap_Entry>) cast_check(o, JavaUtilMap_Entry_class_());
  id key = [entry_ getKey];
  id value = [entry_ getValue];
  if ((key == nil) || (value == nil)) return false;
  return [nil_chk(key) isEqual:[self getKey]] && [nil_chk(value) isEqual:[self getValue]];
}

- (NSUInteger)hash {
  id v = [self getValue];
  return hash__ ^ ((v == nil) ? 0 : ((jint) [nil_chk(v) hash]));
}

- (NSString *)description {
  return JreStrcat("@C@", [self getKey], '=', [self getValue]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap:withId:withInt:withId:withOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry:", "Entry", NULL, 0x1, NULL, NULL },
    { "getKey", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "getValue", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "setValueWithId:", "setValue", "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "key_", NULL, 0x0, "Ljava.lang.Object;", NULL, NULL, .constantValue.asLong = 0 },
    { "value_", NULL, 0x0, "Ljava.lang.Object;", NULL, NULL, .constantValue.asLong = 0 },
    { "hash__", "hash", 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "next_", NULL, 0x0, "Lorg.oss.pdfreporter.uses.org.apache.commons.collections.ReferenceMap$Entry;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry = { 2, "Entry", "org.oss.pdfreporter.uses.org.apache.commons.collections", "ReferenceMap", 0x2, 7, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry;
}

@end

void OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_withId_withInt_withId_withOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry *self, OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *outer$, id key, jint hash_, id value, OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry *next) {
  NSObject_init(self);
  self->key_ = key;
  self->hash__ = hash_;
  self->value_ = value;
  self->next_ = next;
}

OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry *new_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_withId_withInt_withId_withOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *outer$, id key, jint hash_, id value, OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry *next) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry, initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_withId_withInt_withId_withOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry_, outer$, key, hash_, value, next)
}

OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry *create_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_withId_withInt_withId_withOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *outer$, id key, jint hash_, id value, OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry *next) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry, initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_withId_withInt_withId_withOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry_, outer$, key, hash_, value, next)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry)

@implementation OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_EntryIterator

- (instancetype)initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap:(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *)outer$ {
  OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_EntryIterator_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_(self, outer$);
  return self;
}

- (jboolean)hasNext {
  OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_EntryIterator_checkMod(self);
  while (OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_EntryIterator_nextNull(self)) {
    OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry *e = entry__;
    jint i = index_;
    while ((e == nil) && (i > 0)) {
      i--;
      e = IOSObjectArray_Get(nil_chk(this$0_->table_), i);
    }
    entry__ = e;
    index_ = i;
    if (e == nil) {
      currentKey_ = nil;
      currentValue_ = nil;
      return false;
    }
    nextKey_ = [e getKey];
    nextValue_ = [e getValue];
    if (OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_EntryIterator_nextNull(self)) entry__ = ((OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry *) nil_chk(entry__))->next_;
  }
  return true;
}

- (void)checkMod {
  OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_EntryIterator_checkMod(self);
}

- (jboolean)nextNull {
  return OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_EntryIterator_nextNull(self);
}

- (OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry *)nextEntry {
  OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_EntryIterator_checkMod(self);
  if (OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_EntryIterator_nextNull(self) && ![self hasNext]) @throw new_JavaUtilNoSuchElementException_init();
  previous_ = entry__;
  entry__ = ((OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry *) nil_chk(entry__))->next_;
  currentKey_ = nextKey_;
  currentValue_ = nextValue_;
  nextKey_ = nil;
  nextValue_ = nil;
  return previous_;
}

- (id)next {
  return [self nextEntry];
}

- (void)remove {
  OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_EntryIterator_checkMod(self);
  if (previous_ == nil) @throw new_JavaLangIllegalStateException_init();
  (void) [this$0_ removeWithId:currentKey_];
  previous_ = nil;
  currentKey_ = nil;
  currentValue_ = nil;
  expectedModCount_ = JreLoadVolatileInt(&this$0_->modCount_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap:", "EntryIterator", NULL, 0x1, NULL, NULL },
    { "hasNext", NULL, "Z", 0x1, NULL, NULL },
    { "checkMod", NULL, "V", 0x2, NULL, NULL },
    { "nextNull", NULL, "Z", 0x2, NULL, NULL },
    { "nextEntry", NULL, "Lorg.oss.pdfreporter.uses.org.apache.commons.collections.ReferenceMap$Entry;", 0x4, NULL, NULL },
    { "next", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "remove", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.oss.pdfreporter.uses.org.apache.commons.collections.ReferenceMap;", NULL, NULL, .constantValue.asLong = 0 },
    { "index_", NULL, 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "entry__", "entry", 0x0, "Lorg.oss.pdfreporter.uses.org.apache.commons.collections.ReferenceMap$Entry;", NULL, NULL, .constantValue.asLong = 0 },
    { "previous_", NULL, 0x0, "Lorg.oss.pdfreporter.uses.org.apache.commons.collections.ReferenceMap$Entry;", NULL, NULL, .constantValue.asLong = 0 },
    { "nextKey_", NULL, 0x0, "Ljava.lang.Object;", NULL, NULL, .constantValue.asLong = 0 },
    { "nextValue_", NULL, 0x0, "Ljava.lang.Object;", NULL, NULL, .constantValue.asLong = 0 },
    { "currentKey_", NULL, 0x0, "Ljava.lang.Object;", NULL, NULL, .constantValue.asLong = 0 },
    { "currentValue_", NULL, 0x0, "Ljava.lang.Object;", NULL, NULL, .constantValue.asLong = 0 },
    { "expectedModCount_", NULL, 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_EntryIterator = { 2, "EntryIterator", "org.oss.pdfreporter.uses.org.apache.commons.collections", "ReferenceMap", 0x2, 7, methods, 9, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_EntryIterator;
}

@end

void OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_EntryIterator_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_EntryIterator *self, OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
  self->index_ = ([outer$ size] != 0 ? ((IOSObjectArray *) nil_chk(outer$->table_))->size_ : 0);
  self->expectedModCount_ = JreLoadVolatileInt(&outer$->modCount_);
}

OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_EntryIterator *new_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_EntryIterator_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *outer$) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_EntryIterator, initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_, outer$)
}

OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_EntryIterator *create_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_EntryIterator_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *outer$) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_EntryIterator, initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_, outer$)
}

void OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_EntryIterator_checkMod(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_EntryIterator *self) {
  if (JreLoadVolatileInt(&self->this$0_->modCount_) != self->expectedModCount_) {
    @throw new_JavaUtilConcurrentModificationException_init();
  }
}

jboolean OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_EntryIterator_nextNull(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_EntryIterator *self) {
  return (self->nextKey_ == nil) || (self->nextValue_ == nil);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_EntryIterator)

@implementation OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_ValueIterator

- (id)next {
  return [((OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry *) nil_chk([self nextEntry])) getValue];
}

- (instancetype)initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap:(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *)outer$ {
  OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_ValueIterator_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "next", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap:", "ValueIterator", NULL, 0x2, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_ValueIterator = { 2, "ValueIterator", "org.oss.pdfreporter.uses.org.apache.commons.collections", "ReferenceMap", 0x2, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_ValueIterator;
}

@end

void OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_ValueIterator_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_ValueIterator *self, OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *outer$) {
  OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_EntryIterator_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_(self, outer$);
}

OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_ValueIterator *new_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_ValueIterator_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *outer$) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_ValueIterator, initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_, outer$)
}

OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_ValueIterator *create_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_ValueIterator_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *outer$) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_ValueIterator, initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_ValueIterator)

@implementation OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_KeyIterator

- (id)next {
  return [((OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry *) nil_chk([self nextEntry])) getKey];
}

- (instancetype)initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap:(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *)outer$ {
  OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_KeyIterator_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "next", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap:", "KeyIterator", NULL, 0x2, NULL, NULL },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_KeyIterator = { 2, "KeyIterator", "org.oss.pdfreporter.uses.org.apache.commons.collections", "ReferenceMap", 0x2, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_KeyIterator;
}

@end

void OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_KeyIterator_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_KeyIterator *self, OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *outer$) {
  OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_EntryIterator_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_(self, outer$);
}

OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_KeyIterator *new_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_KeyIterator_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *outer$) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_KeyIterator, initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_, outer$)
}

OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_KeyIterator *create_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_KeyIterator_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *outer$) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_KeyIterator, initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_KeyIterator)

@implementation OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$1

- (jint)size {
  return [this$0_ size];
}

- (void)clear {
  [this$0_ clear];
}

- (jboolean)containsWithId:(id)o {
  if (o == nil) return false;
  if (!([JavaUtilMap_Entry_class_() isInstance:o])) return false;
  id<JavaUtilMap_Entry> e = (id<JavaUtilMap_Entry>) cast_check(o, JavaUtilMap_Entry_class_());
  OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry *e2 = OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_getEntryWithId_(this$0_, [e getKey]);
  return (e2 != nil) && [e isEqual:e2];
}

- (jboolean)removeWithId:(id)o {
  jboolean r = [self containsWithId:o];
  if (r) {
    id<JavaUtilMap_Entry> e = (id<JavaUtilMap_Entry>) cast_check(o, JavaUtilMap_Entry_class_());
    (void) [this$0_ removeWithId:[((id<JavaUtilMap_Entry>) nil_chk(e)) getKey]];
  }
  return r;
}

- (id<JavaUtilIterator>)iterator {
  return new_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_EntryIterator_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_(this$0_);
}

- (IOSObjectArray *)toArray {
  return [self toArrayWithNSObjectArray:[IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]];
}

- (IOSObjectArray *)toArrayWithNSObjectArray:(IOSObjectArray *)arr {
  JavaUtilArrayList *list = new_JavaUtilArrayList_init();
  id<JavaUtilIterator> iterator = [self iterator];
  while ([((id<JavaUtilIterator>) nil_chk(iterator)) hasNext]) {
    OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry *e = (OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry *) cast_chk([iterator next], [OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry class]);
    [list addWithId:new_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsDefaultMapEntry_initWithId_withId_([((OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_Entry *) nil_chk(e)) getKey], [e getValue])];
  }
  return [list toArrayWithNSObjectArray:arr];
}

- (instancetype)initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap:(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *)outer$ {
  OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$1_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_(self, outer$);
  return self;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "size", NULL, "I", 0x1, NULL, NULL },
    { "clear", NULL, "V", 0x1, NULL, NULL },
    { "containsWithId:", "contains", "Z", 0x1, NULL, NULL },
    { "removeWithId:", "remove", "Z", 0x1, NULL, NULL },
    { "iterator", NULL, "Ljava.util.Iterator;", 0x1, NULL, NULL },
    { "toArray", NULL, "[Ljava.lang.Object;", 0x1, NULL, NULL },
    { "toArrayWithNSObjectArray:", "toArray", "[Ljava.lang.Object;", 0x1, NULL, NULL },
    { "initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.oss.pdfreporter.uses.org.apache.commons.collections.ReferenceMap;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap", "entrySet" };
  static const J2ObjcClassInfo _OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$1 = { 2, "", "org.oss.pdfreporter.uses.org.apache.commons.collections", "ReferenceMap", 0x8008, 8, methods, 1, fields, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$1;
}

@end

void OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$1_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$1 *self, OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *outer$) {
  self->this$0_ = outer$;
  JavaUtilAbstractSet_init(self);
}

OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$1 *new_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$1_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *outer$) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$1, initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_, outer$)
}

OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$1 *create_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$1_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *outer$) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$1, initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$1)

@implementation OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$2

- (jint)size {
  return this$0_->size_;
}

- (id<JavaUtilIterator>)iterator {
  return new_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_KeyIterator_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_(this$0_);
}

- (jboolean)containsWithId:(id)o {
  return [this$0_ containsKeyWithId:o];
}

- (jboolean)removeWithId:(id)o {
  id r = [this$0_ removeWithId:o];
  return r != nil;
}

- (void)clear {
  [this$0_ clear];
}

- (instancetype)initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap:(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *)outer$ {
  OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$2_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_(self, outer$);
  return self;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "size", NULL, "I", 0x1, NULL, NULL },
    { "iterator", NULL, "Ljava.util.Iterator;", 0x1, NULL, NULL },
    { "containsWithId:", "contains", "Z", 0x1, NULL, NULL },
    { "removeWithId:", "remove", "Z", 0x1, NULL, NULL },
    { "clear", NULL, "V", 0x1, NULL, NULL },
    { "initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.oss.pdfreporter.uses.org.apache.commons.collections.ReferenceMap;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap", "keySet" };
  static const J2ObjcClassInfo _OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$2 = { 2, "", "org.oss.pdfreporter.uses.org.apache.commons.collections", "ReferenceMap", 0x8008, 6, methods, 1, fields, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$2;
}

@end

void OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$2_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$2 *self, OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *outer$) {
  self->this$0_ = outer$;
  JavaUtilAbstractSet_init(self);
}

OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$2 *new_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$2_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *outer$) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$2, initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_, outer$)
}

OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$2 *create_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$2_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *outer$) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$2, initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$2)

@implementation OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$3

- (jint)size {
  return this$0_->size_;
}

- (void)clear {
  [this$0_ clear];
}

- (id<JavaUtilIterator>)iterator {
  return new_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_ValueIterator_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_(this$0_);
}

- (instancetype)initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap:(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *)outer$ {
  OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$3_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_(self, outer$);
  return self;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "size", NULL, "I", 0x1, NULL, NULL },
    { "clear", NULL, "V", 0x1, NULL, NULL },
    { "iterator", NULL, "Ljava.util.Iterator;", 0x1, NULL, "()Ljava/util/Iterator;" },
    { "initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.oss.pdfreporter.uses.org.apache.commons.collections.ReferenceMap;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap", "values" };
  static const J2ObjcClassInfo _OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$3 = { 2, "", "org.oss.pdfreporter.uses.org.apache.commons.collections", "ReferenceMap", 0x8008, 4, methods, 1, fields, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$3;
}

@end

void OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$3_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$3 *self, OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *outer$) {
  self->this$0_ = outer$;
  JavaUtilAbstractCollection_init(self);
}

OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$3 *new_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$3_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *outer$) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$3, initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_, outer$)
}

OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$3 *create_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$3_initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap *outer$) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$3, initWithOrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsReferenceMap_$3)
