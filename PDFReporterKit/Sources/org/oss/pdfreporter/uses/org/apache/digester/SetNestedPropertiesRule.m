//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-extensions/src/org/oss/pdfreporter/uses/org/apache/digester/SetNestedPropertiesRule.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Exception.h"
#include "java/lang/NoSuchMethodException.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/StringBuffer.h"
#include "java/util/ArrayList.h"
#include "java/util/HashMap.h"
#include "java/util/LinkedList.h"
#include "java/util/List.h"
#include "org/oss/pdfreporter/commons/beans/IBeansUtils.h"
#include "org/oss/pdfreporter/commons/beans/factory/IBeansFactory.h"
#include "org/oss/pdfreporter/registry/IRegistry.h"
#include "org/oss/pdfreporter/uses/org/apache/digester/AbstractRule.h"
#include "org/oss/pdfreporter/uses/org/apache/digester/IDigester.h"
#include "org/oss/pdfreporter/uses/org/apache/digester/IRule.h"
#include "org/oss/pdfreporter/uses/org/apache/digester/IRules.h"
#include "org/oss/pdfreporter/uses/org/apache/digester/SetNestedPropertiesRule.h"
#include "org/oss/pdfreporter/xml/parsers/IAttributes.h"

@class OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRule;

@interface OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule () {
 @public
  jboolean trimData_;
  jboolean allowUnknownChildElements_;
  JavaUtilHashMap *elementNames_;
}

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule, elementNames_, JavaUtilHashMap *)

@interface OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRules : NSObject < OrgOssPdfreporterUsesOrgApacheDigesterIRules > {
 @public
  NSString *matchPrefix_;
  id<OrgOssPdfreporterUsesOrgApacheDigesterIRules> decoratedRules_;
  JavaUtilArrayList *rules_;
  OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRule *rule_;
}

- (instancetype)initWithOrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule:(OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule *)outer$
       withOrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRule:(OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRule *)rule;

- (id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>)getDigester;

- (void)setDigesterWithOrgOssPdfreporterUsesOrgApacheDigesterIDigester:(id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>)digester;

- (NSString *)getNamespaceURI;

- (void)setNamespaceURIWithNSString:(NSString *)namespaceURI;

- (void)addWithNSString:(NSString *)pattern
withOrgOssPdfreporterUsesOrgApacheDigesterIRule:(id<OrgOssPdfreporterUsesOrgApacheDigesterIRule>)rule;

- (void)clear;

- (id<JavaUtilList>)matchWithNSString:(NSString *)matchPath;

- (id<JavaUtilList>)matchWithNSString:(NSString *)namespaceURI
                         withNSString:(NSString *)matchPath;

- (id<JavaUtilList>)rules;

- (void)init__WithNSString:(NSString *)prefix
withOrgOssPdfreporterUsesOrgApacheDigesterIRules:(id<OrgOssPdfreporterUsesOrgApacheDigesterIRules>)rules OBJC_METHOD_FAMILY_NONE;

- (id<OrgOssPdfreporterUsesOrgApacheDigesterIRules>)getOldRules;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRules)

J2OBJC_FIELD_SETTER(OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRules, matchPrefix_, NSString *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRules, decoratedRules_, id<OrgOssPdfreporterUsesOrgApacheDigesterIRules>)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRules, rules_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRules, rule_, OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRule *)

__attribute__((unused)) static void OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRules_initWithOrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_withOrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRule_(OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRules *self, OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule *outer$, OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRule *rule);

__attribute__((unused)) static OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRules *new_OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRules_initWithOrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_withOrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRule_(OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule *outer$, OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRule *rule) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRules *create_OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRules_initWithOrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_withOrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRule_(OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule *outer$, OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRule *rule);

J2OBJC_TYPE_LITERAL_HEADER(OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRules)

@interface OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRule : OrgOssPdfreporterUsesOrgApacheDigesterAbstractRule {
 @public
  OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule *this$0_;
  NSString *currChildElementName_;
}

- (void)beginWithNSString:(NSString *)namespaceURI
             withNSString:(NSString *)name
withOrgOssPdfreporterXmlParsersIAttributes:(id<OrgOssPdfreporterXmlParsersIAttributes>)attributes;

- (void)bodyWithNSString:(NSString *)value;

- (void)endWithNSString:(NSString *)namespace_
           withNSString:(NSString *)name;

- (instancetype)initWithOrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule:(OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRule)

J2OBJC_FIELD_SETTER(OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRule, this$0_, OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRule, currChildElementName_, NSString *)

__attribute__((unused)) static void OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRule_initWithOrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_(OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRule *self, OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule *outer$);

__attribute__((unused)) static OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRule *new_OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRule_initWithOrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_(OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRule *create_OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRule_initWithOrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_(OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule *outer$);

J2OBJC_TYPE_LITERAL_HEADER(OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRule)

@implementation OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithNSString:(NSString *)elementName
                    withNSString:(NSString *)propertyName {
  OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_initWithNSString_withNSString_(self, elementName, propertyName);
  return self;
}

- (instancetype)initWithNSStringArray:(IOSObjectArray *)elementNames
                    withNSStringArray:(IOSObjectArray *)propertyNames {
  OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_initWithNSStringArray_withNSStringArray_(self, elementNames, propertyNames);
  return self;
}

- (void)setDigesterWithOrgOssPdfreporterUsesOrgApacheDigesterIDigester:(id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>)digester {
  [super setDigesterWithOrgOssPdfreporterUsesOrgApacheDigesterIDigester:digester];
}

- (void)setTrimDataWithBoolean:(jboolean)trimData {
  self->trimData_ = trimData;
}

- (jboolean)getTrimData {
  return trimData_;
}

- (void)setAllowUnknownChildElementsWithBoolean:(jboolean)allowUnknownChildElements {
  self->allowUnknownChildElements_ = allowUnknownChildElements;
}

- (jboolean)getAllowUnknownChildElements {
  return allowUnknownChildElements_;
}

- (void)beginWithNSString:(NSString *)namespace_
             withNSString:(NSString *)name
withOrgOssPdfreporterXmlParsersIAttributes:(id<OrgOssPdfreporterXmlParsersIAttributes>)attributes {
  id<OrgOssPdfreporterUsesOrgApacheDigesterIRules> oldRules = [((id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>) nil_chk(digester_)) getRules];
  OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRule *anyChildRule = new_OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRule_initWithOrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_(self);
  [anyChildRule setDigesterWithOrgOssPdfreporterUsesOrgApacheDigesterIDigester:digester_];
  OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRules *newRules = new_OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRules_initWithOrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_withOrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRule_(self, anyChildRule);
  [newRules init__WithNSString:JreStrcat("$C", [((id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>) nil_chk(digester_)) getMatch], '/') withOrgOssPdfreporterUsesOrgApacheDigesterIRules:oldRules];
  [((id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>) nil_chk(digester_)) setRulesWithOrgOssPdfreporterUsesOrgApacheDigesterIRules:newRules];
}

- (void)bodyWithNSString:(NSString *)bodyText {
  OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRules *newRules = (OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRules *) cast_chk([((id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>) nil_chk(digester_)) getRules], [OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRules class]);
  [((id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>) nil_chk(digester_)) setRulesWithOrgOssPdfreporterUsesOrgApacheDigesterIRules:[((OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRules *) nil_chk(newRules)) getOldRules]];
}

- (void)addAliasWithNSString:(NSString *)elementName
                withNSString:(NSString *)propertyName {
  (void) [((JavaUtilHashMap *) nil_chk(elementNames_)) putWithId:elementName withId:propertyName];
}

- (NSString *)description {
  JavaLangStringBuffer *sb = new_JavaLangStringBuffer_initWithNSString_(@"SetNestedPropertiesRule[");
  (void) [sb appendWithNSString:@"allowUnknownChildElements="];
  (void) [sb appendWithBoolean:allowUnknownChildElements_];
  (void) [sb appendWithNSString:@", trimData="];
  (void) [sb appendWithBoolean:trimData_];
  (void) [sb appendWithNSString:@", elementNames="];
  (void) [sb appendWithId:elementNames_];
  (void) [sb appendWithNSString:@"]"];
  return [sb description];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "SetNestedPropertiesRule", NULL, 0x1, NULL, NULL },
    { "initWithNSString:withNSString:", "SetNestedPropertiesRule", NULL, 0x1, NULL, NULL },
    { "initWithNSStringArray:withNSStringArray:", "SetNestedPropertiesRule", NULL, 0x1, NULL, NULL },
    { "setDigesterWithOrgOssPdfreporterUsesOrgApacheDigesterIDigester:", "setDigester", "V", 0x1, NULL, NULL },
    { "setTrimDataWithBoolean:", "setTrimData", "V", 0x1, NULL, NULL },
    { "getTrimData", NULL, "Z", 0x1, NULL, NULL },
    { "setAllowUnknownChildElementsWithBoolean:", "setAllowUnknownChildElements", "V", 0x1, NULL, NULL },
    { "getAllowUnknownChildElements", NULL, "Z", 0x1, NULL, NULL },
    { "beginWithNSString:withNSString:withOrgOssPdfreporterXmlParsersIAttributes:", "begin", "V", 0x1, "Ljava.lang.Exception;", NULL },
    { "bodyWithNSString:", "body", "V", 0x1, "Ljava.lang.Exception;", NULL },
    { "addAliasWithNSString:withNSString:", "addAlias", "V", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "trimData_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "allowUnknownChildElements_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "elementNames_", NULL, 0x2, "Ljava.util.HashMap;", NULL, "Ljava/util/HashMap<Ljava/lang/String;Ljava/lang/String;>;", .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lorg.oss.pdfreporter.uses.org.apache.digester.SetNestedPropertiesRule$AnyChildRules;", "Lorg.oss.pdfreporter.uses.org.apache.digester.SetNestedPropertiesRule$AnyChildRule;"};
  static const J2ObjcClassInfo _OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule = { 2, "SetNestedPropertiesRule", "org.oss.pdfreporter.uses.org.apache.digester", NULL, 0x1, 12, methods, 3, fields, 0, NULL, 2, inner_classes, NULL, NULL };
  return &_OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule;
}

@end

void OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_init(OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule *self) {
  OrgOssPdfreporterUsesOrgApacheDigesterAbstractRule_init(self);
  self->trimData_ = true;
  self->allowUnknownChildElements_ = false;
  self->elementNames_ = new_JavaUtilHashMap_init();
}

OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule *new_OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_init() {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule, init)
}

OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule *create_OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_init() {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule, init)
}

void OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_initWithNSString_withNSString_(OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule *self, NSString *elementName, NSString *propertyName) {
  OrgOssPdfreporterUsesOrgApacheDigesterAbstractRule_init(self);
  self->trimData_ = true;
  self->allowUnknownChildElements_ = false;
  self->elementNames_ = new_JavaUtilHashMap_init();
  (void) [self->elementNames_ putWithId:elementName withId:propertyName];
}

OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule *new_OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_initWithNSString_withNSString_(NSString *elementName, NSString *propertyName) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule, initWithNSString_withNSString_, elementName, propertyName)
}

OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule *create_OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_initWithNSString_withNSString_(NSString *elementName, NSString *propertyName) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule, initWithNSString_withNSString_, elementName, propertyName)
}

void OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_initWithNSStringArray_withNSStringArray_(OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule *self, IOSObjectArray *elementNames, IOSObjectArray *propertyNames) {
  OrgOssPdfreporterUsesOrgApacheDigesterAbstractRule_init(self);
  self->trimData_ = true;
  self->allowUnknownChildElements_ = false;
  self->elementNames_ = new_JavaUtilHashMap_init();
  for (jint i = 0, size = ((IOSObjectArray *) nil_chk(elementNames))->size_; i < size; i++) {
    NSString *propName = nil;
    if (i < ((IOSObjectArray *) nil_chk(propertyNames))->size_) {
      propName = IOSObjectArray_Get(propertyNames, i);
    }
    (void) [((JavaUtilHashMap *) nil_chk(self->elementNames_)) putWithId:IOSObjectArray_Get(elementNames, i) withId:propName];
  }
}

OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule *new_OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_initWithNSStringArray_withNSStringArray_(IOSObjectArray *elementNames, IOSObjectArray *propertyNames) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule, initWithNSStringArray_withNSStringArray_, elementNames, propertyNames)
}

OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule *create_OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_initWithNSStringArray_withNSStringArray_(IOSObjectArray *elementNames, IOSObjectArray *propertyNames) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule, initWithNSStringArray_withNSStringArray_, elementNames, propertyNames)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule)

@implementation OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRules

- (instancetype)initWithOrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule:(OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule *)outer$
       withOrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRule:(OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRule *)rule {
  OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRules_initWithOrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_withOrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRule_(self, outer$, rule);
  return self;
}

- (id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>)getDigester {
  return nil;
}

- (void)setDigesterWithOrgOssPdfreporterUsesOrgApacheDigesterIDigester:(id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>)digester {
}

- (NSString *)getNamespaceURI {
  return nil;
}

- (void)setNamespaceURIWithNSString:(NSString *)namespaceURI {
}

- (void)addWithNSString:(NSString *)pattern
withOrgOssPdfreporterUsesOrgApacheDigesterIRule:(id<OrgOssPdfreporterUsesOrgApacheDigesterIRule>)rule {
}

- (void)clear {
}

- (id<JavaUtilList>)matchWithNSString:(NSString *)matchPath {
  return [self matchWithNSString:nil withNSString:matchPath];
}

- (id<JavaUtilList>)matchWithNSString:(NSString *)namespaceURI
                         withNSString:(NSString *)matchPath {
  id<JavaUtilList> match = [((id<OrgOssPdfreporterUsesOrgApacheDigesterIRules>) nil_chk(decoratedRules_)) matchWithNSString:namespaceURI withNSString:matchPath];
  if (([((NSString *) nil_chk(matchPath)) hasPrefix:matchPrefix_]) && ([matchPath indexOf:'/' fromIndex:((jint) [((NSString *) nil_chk(matchPrefix_)) length])] == -1)) {
    if ((match == nil || [match size] == 0)) {
      return rules_;
    }
    else {
      JavaUtilLinkedList *newMatch = new_JavaUtilLinkedList_initWithJavaUtilCollection_(match);
      [newMatch addLastWithId:rule_];
      return newMatch;
    }
  }
  else {
    return match;
  }
}

- (id<JavaUtilList>)rules {
  return [((id<OrgOssPdfreporterUsesOrgApacheDigesterIRules>) nil_chk(decoratedRules_)) rules];
}

- (void)init__WithNSString:(NSString *)prefix
withOrgOssPdfreporterUsesOrgApacheDigesterIRules:(id<OrgOssPdfreporterUsesOrgApacheDigesterIRules>)rules {
  matchPrefix_ = prefix;
  decoratedRules_ = rules;
}

- (id<OrgOssPdfreporterUsesOrgApacheDigesterIRules>)getOldRules {
  return decoratedRules_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule:withOrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRule:", "AnyChildRules", NULL, 0x1, NULL, NULL },
    { "getDigester", NULL, "Lorg.oss.pdfreporter.uses.org.apache.digester.IDigester;", 0x1, NULL, NULL },
    { "setDigesterWithOrgOssPdfreporterUsesOrgApacheDigesterIDigester:", "setDigester", "V", 0x1, NULL, NULL },
    { "getNamespaceURI", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "setNamespaceURIWithNSString:", "setNamespaceURI", "V", 0x1, NULL, NULL },
    { "addWithNSString:withOrgOssPdfreporterUsesOrgApacheDigesterIRule:", "add", "V", 0x1, NULL, NULL },
    { "clear", NULL, "V", 0x1, NULL, NULL },
    { "matchWithNSString:", "match", "Ljava.util.List;", 0x1, NULL, "(Ljava/lang/String;)Ljava/util/List<Lorg/oss/pdfreporter/uses/org/apache/digester/IRule;>;" },
    { "matchWithNSString:withNSString:", "match", "Ljava.util.List;", 0x1, NULL, "(Ljava/lang/String;Ljava/lang/String;)Ljava/util/List<Lorg/oss/pdfreporter/uses/org/apache/digester/IRule;>;" },
    { "rules", NULL, "Ljava.util.List;", 0x1, NULL, "()Ljava/util/List<Lorg/oss/pdfreporter/uses/org/apache/digester/IRule;>;" },
    { "init__WithNSString:withOrgOssPdfreporterUsesOrgApacheDigesterIRules:", "init", "V", 0x1, NULL, NULL },
    { "getOldRules", NULL, "Lorg.oss.pdfreporter.uses.org.apache.digester.IRules;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "matchPrefix_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "decoratedRules_", NULL, 0x2, "Lorg.oss.pdfreporter.uses.org.apache.digester.IRules;", NULL, NULL, .constantValue.asLong = 0 },
    { "rules_", NULL, 0x2, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Lorg/oss/pdfreporter/uses/org/apache/digester/IRule;>;", .constantValue.asLong = 0 },
    { "rule_", NULL, 0x2, "Lorg.oss.pdfreporter.uses.org.apache.digester.SetNestedPropertiesRule$AnyChildRule;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRules = { 2, "AnyChildRules", "org.oss.pdfreporter.uses.org.apache.digester", "SetNestedPropertiesRule", 0x2, 12, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRules;
}

@end

void OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRules_initWithOrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_withOrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRule_(OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRules *self, OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule *outer$, OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRule *rule) {
  NSObject_init(self);
  self->matchPrefix_ = nil;
  self->decoratedRules_ = nil;
  self->rules_ = new_JavaUtilArrayList_initWithInt_(1);
  self->rule_ = rule;
  [self->rules_ addWithId:rule];
}

OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRules *new_OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRules_initWithOrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_withOrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRule_(OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule *outer$, OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRule *rule) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRules, initWithOrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_withOrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRule_, outer$, rule)
}

OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRules *create_OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRules_initWithOrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_withOrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRule_(OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule *outer$, OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRule *rule) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRules, initWithOrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_withOrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRule_, outer$, rule)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRules)

@implementation OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRule

- (void)beginWithNSString:(NSString *)namespaceURI
             withNSString:(NSString *)name
withOrgOssPdfreporterXmlParsersIAttributes:(id<OrgOssPdfreporterXmlParsersIAttributes>)attributes {
  currChildElementName_ = name;
}

- (void)bodyWithNSString:(NSString *)value {
  NSString *propName = currChildElementName_;
  if ([((JavaUtilHashMap *) nil_chk(this$0_->elementNames_)) containsKeyWithId:currChildElementName_]) {
    propName = [((JavaUtilHashMap *) nil_chk(this$0_->elementNames_)) getWithId:currChildElementName_];
    if (propName == nil) {
      return;
    }
  }
  id top = [((id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>) nil_chk(digester_)) peek];
  if (this$0_->trimData_) {
    value = [((NSString *) nil_chk(value)) trim];
  }
  if (!this$0_->allowUnknownChildElements_) {
    if (![((id<OrgOssPdfreporterCommonsBeansIBeansUtils>) nil_chk([((id<OrgOssPdfreporterCommonsBeansFactoryIBeansFactory>) nil_chk(OrgOssPdfreporterRegistryIRegistry_getIBeansFactory())) newBeansUtils])) hasPropertyWithId:top withNSString:propName]) {
      @throw new_JavaLangNoSuchMethodException_initWithNSString_(JreStrcat("$$", @"Bean has no property named ", propName));
    }
  }
  @try {
    [((id<OrgOssPdfreporterCommonsBeansIBeansUtils>) nil_chk([((id<OrgOssPdfreporterCommonsBeansFactoryIBeansFactory>) nil_chk(OrgOssPdfreporterRegistryIRegistry_getIBeansFactory())) newBeansUtils])) setPropertyWithId:top withNSString:propName withId:value];
  }
  @catch (JavaLangNullPointerException *e) {
    @throw e;
  }
}

- (void)endWithNSString:(NSString *)namespace_
           withNSString:(NSString *)name {
  currChildElementName_ = nil;
}

- (instancetype)initWithOrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule:(OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule *)outer$ {
  OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRule_initWithOrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "beginWithNSString:withNSString:withOrgOssPdfreporterXmlParsersIAttributes:", "begin", "V", 0x1, "Ljava.lang.Exception;", NULL },
    { "bodyWithNSString:", "body", "V", 0x1, "Ljava.lang.Exception;", NULL },
    { "endWithNSString:withNSString:", "end", "V", 0x1, "Ljava.lang.Exception;", NULL },
    { "initWithOrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule:", "AnyChildRule", NULL, 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lorg.oss.pdfreporter.uses.org.apache.digester.SetNestedPropertiesRule;", NULL, NULL, .constantValue.asLong = 0 },
    { "currChildElementName_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRule = { 2, "AnyChildRule", "org.oss.pdfreporter.uses.org.apache.digester", "SetNestedPropertiesRule", 0x2, 4, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRule;
}

@end

void OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRule_initWithOrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_(OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRule *self, OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule *outer$) {
  self->this$0_ = outer$;
  OrgOssPdfreporterUsesOrgApacheDigesterAbstractRule_init(self);
  self->currChildElementName_ = nil;
}

OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRule *new_OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRule_initWithOrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_(OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule *outer$) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRule, initWithOrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_, outer$)
}

OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRule *create_OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRule_initWithOrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_(OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule *outer$) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRule, initWithOrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterUsesOrgApacheDigesterSetNestedPropertiesRule_AnyChildRule)
