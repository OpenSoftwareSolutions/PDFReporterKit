//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-extensions/src/org/oss/pdfreporter/uses/org/apache/digester/impl/CallParamRule.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Exception.h"
#include "java/lang/StringBuffer.h"
#include "java/util/Stack.h"
#include "java/util/logging/Level.h"
#include "java/util/logging/Logger.h"
#include "org/oss/pdfreporter/uses/org/apache/digester/IDigester.h"
#include "org/oss/pdfreporter/uses/org/apache/digester/impl/CallParamRule.h"
#include "org/oss/pdfreporter/uses/org/apache/digester/impl/Rule.h"
#include "org/oss/pdfreporter/xml/parsers/IAttributes.h"

inline JavaUtilLoggingLogger *OrgOssPdfreporterUsesOrgApacheDigesterImplCallParamRule_get_logger();
static JavaUtilLoggingLogger *OrgOssPdfreporterUsesOrgApacheDigesterImplCallParamRule_logger;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterUsesOrgApacheDigesterImplCallParamRule, logger, JavaUtilLoggingLogger *)

J2OBJC_INITIALIZED_DEFN(OrgOssPdfreporterUsesOrgApacheDigesterImplCallParamRule)

@implementation OrgOssPdfreporterUsesOrgApacheDigesterImplCallParamRule

- (instancetype)initWithInt:(jint)paramIndex
               withNSString:(NSString *)attributeName {
  OrgOssPdfreporterUsesOrgApacheDigesterImplCallParamRule_initWithInt_withNSString_(self, paramIndex, attributeName);
  return self;
}

- (void)beginWithOrgOssPdfreporterXmlParsersIAttributes:(id<OrgOssPdfreporterXmlParsersIAttributes>)attributes {
  id param = nil;
  if (attributeName_ != nil) {
    param = [((id<OrgOssPdfreporterXmlParsersIAttributes>) nil_chk(attributes)) getValueWithNSString:attributeName_];
  }
  else if (fromStack_) {
    param = [((id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>) nil_chk(digester_)) peekWithInt:stackIndex_];
    if ([((JavaUtilLoggingLogger *) nil_chk(OrgOssPdfreporterUsesOrgApacheDigesterImplCallParamRule_logger)) isLoggableWithJavaUtilLoggingLevel:JreLoadStatic(JavaUtilLoggingLevel, FINEST)]) {
      JavaLangStringBuffer *sb = new_JavaLangStringBuffer_initWithNSString_(@"[CallParamRule]{");
      (void) [sb appendWithNSString:[((id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>) nil_chk(digester_)) getMatch]];
      (void) [((JavaLangStringBuffer *) nil_chk([sb appendWithNSString:@"} Save from stack; from stack?"])) appendWithBoolean:fromStack_];
      (void) [((JavaLangStringBuffer *) nil_chk([sb appendWithNSString:@"; object="])) appendWithId:param];
      [OrgOssPdfreporterUsesOrgApacheDigesterImplCallParamRule_logger finestWithNSString:[sb description]];
    }
  }
  if (param != nil) {
    IOSObjectArray *parameters = (IOSObjectArray *) cast_check([((id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>) nil_chk(digester_)) peekParams], IOSClass_arrayType(NSObject_class_(), 1));
    (void) IOSObjectArray_Set(nil_chk(parameters), paramIndex_, param);
  }
}

- (void)bodyWithNSString:(NSString *)bodyText {
  if (attributeName_ == nil && !fromStack_) {
    if (bodyTextStack_ == nil) {
      bodyTextStack_ = new_JavaUtilStack_init();
    }
    (void) [bodyTextStack_ pushWithId:[((NSString *) nil_chk(bodyText)) trim]];
  }
}

- (void)endWithNSString:(NSString *)namespace_
           withNSString:(NSString *)name {
  if (bodyTextStack_ != nil && ![bodyTextStack_ empty]) {
    IOSObjectArray *parameters = (IOSObjectArray *) cast_check([((id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>) nil_chk(digester_)) peekParams], IOSClass_arrayType(NSObject_class_(), 1));
    (void) IOSObjectArray_Set(nil_chk(parameters), paramIndex_, [((JavaUtilStack *) nil_chk(bodyTextStack_)) pop]);
  }
}

- (NSString *)description {
  JavaLangStringBuffer *sb = new_JavaLangStringBuffer_initWithNSString_(@"CallParamRule[");
  (void) [sb appendWithNSString:@"paramIndex="];
  (void) [sb appendWithInt:paramIndex_];
  (void) [sb appendWithNSString:@", attributeName="];
  (void) [sb appendWithNSString:attributeName_];
  (void) [sb appendWithNSString:@", from stack="];
  (void) [sb appendWithBoolean:fromStack_];
  (void) [sb appendWithNSString:@"]"];
  return ([sb description]);
}

+ (void)initialize {
  if (self == [OrgOssPdfreporterUsesOrgApacheDigesterImplCallParamRule class]) {
    OrgOssPdfreporterUsesOrgApacheDigesterImplCallParamRule_logger = JavaUtilLoggingLogger_getLoggerWithNSString_([OrgOssPdfreporterUsesOrgApacheDigesterImplCallParamRule_class_() getName]);
    J2OBJC_SET_INITIALIZED(OrgOssPdfreporterUsesOrgApacheDigesterImplCallParamRule)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithInt:withNSString:", "CallParamRule", NULL, 0x1, NULL, NULL },
    { "beginWithOrgOssPdfreporterXmlParsersIAttributes:", "begin", "V", 0x1, "Ljava.lang.Exception;", NULL },
    { "bodyWithNSString:", "body", "V", 0x1, "Ljava.lang.Exception;", NULL },
    { "endWithNSString:withNSString:", "end", "V", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "logger", "logger", 0x1a, "Ljava.util.logging.Logger;", &OrgOssPdfreporterUsesOrgApacheDigesterImplCallParamRule_logger, NULL, .constantValue.asLong = 0 },
    { "attributeName_", NULL, 0x4, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "paramIndex_", NULL, 0x4, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "fromStack_", NULL, 0x4, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "stackIndex_", NULL, 0x4, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "bodyTextStack_", NULL, 0x4, "Ljava.util.Stack;", NULL, "Ljava/util/Stack<Ljava/lang/String;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterUsesOrgApacheDigesterImplCallParamRule = { 2, "CallParamRule", "org.oss.pdfreporter.uses.org.apache.digester.impl", NULL, 0x1, 5, methods, 6, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterUsesOrgApacheDigesterImplCallParamRule;
}

@end

void OrgOssPdfreporterUsesOrgApacheDigesterImplCallParamRule_initWithInt_withNSString_(OrgOssPdfreporterUsesOrgApacheDigesterImplCallParamRule *self, jint paramIndex, NSString *attributeName) {
  OrgOssPdfreporterUsesOrgApacheDigesterImplRule_init(self);
  self->attributeName_ = nil;
  self->paramIndex_ = 0;
  self->fromStack_ = false;
  self->stackIndex_ = 0;
  self->paramIndex_ = paramIndex;
  self->attributeName_ = attributeName;
}

OrgOssPdfreporterUsesOrgApacheDigesterImplCallParamRule *new_OrgOssPdfreporterUsesOrgApacheDigesterImplCallParamRule_initWithInt_withNSString_(jint paramIndex, NSString *attributeName) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterUsesOrgApacheDigesterImplCallParamRule, initWithInt_withNSString_, paramIndex, attributeName)
}

OrgOssPdfreporterUsesOrgApacheDigesterImplCallParamRule *create_OrgOssPdfreporterUsesOrgApacheDigesterImplCallParamRule_initWithInt_withNSString_(jint paramIndex, NSString *attributeName) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterUsesOrgApacheDigesterImplCallParamRule, initWithInt_withNSString_, paramIndex, attributeName)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterUsesOrgApacheDigesterImplCallParamRule)
