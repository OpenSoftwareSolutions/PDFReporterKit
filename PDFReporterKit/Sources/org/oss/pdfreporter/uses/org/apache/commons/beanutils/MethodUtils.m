//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-extensions/src/org/oss/pdfreporter/uses/org/apache/commons/beanutils/MethodUtils.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Boolean.h"
#include "java/lang/Byte.h"
#include "java/lang/Character.h"
#include "java/lang/Double.h"
#include "java/lang/Float.h"
#include "java/lang/IllegalAccessException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/NoSuchMethodException.h"
#include "java/lang/SecurityException.h"
#include "java/lang/Short.h"
#include "java/lang/System.h"
#include "java/lang/reflect/InvocationTargetException.h"
#include "java/lang/reflect/Method.h"
#include "java/lang/reflect/Modifier.h"
#include "java/util/Arrays.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"
#include "org/oss/pdfreporter/uses/org/apache/commons/beanutils/MethodUtils.h"

@class OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_MethodDescriptor;

@interface OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils ()

+ (JavaLangReflectMethod *)getAccessibleMethodFromSuperclassWithIOSClass:(IOSClass *)clazz
                                                            withNSString:(NSString *)methodName
                                                       withIOSClassArray:(IOSObjectArray *)parameterTypes;

+ (JavaLangReflectMethod *)getAccessibleMethodFromInterfaceNestWithIOSClass:(IOSClass *)clazz
                                                               withNSString:(NSString *)methodName
                                                          withIOSClassArray:(IOSObjectArray *)parameterTypes;

+ (jboolean)methodMatchesOrStartsSameWithNSString:(NSString *)iOSMethodName
                                     withNSString:(NSString *)javaMethodName;

+ (void)setMethodAccessibleWithJavaLangReflectMethod:(JavaLangReflectMethod *)method;

+ (jfloat)getTotalTransformationCostWithIOSClassArray:(IOSObjectArray *)srcArgs
                                    withIOSClassArray:(IOSObjectArray *)destArgs;

+ (jfloat)getObjectTransformationCostWithIOSClass:(IOSClass *)srcClass
                                     withIOSClass:(IOSClass *)destClass;

+ (JavaLangReflectMethod *)getCachedMethodWithOrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_MethodDescriptor:(OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_MethodDescriptor *)md;

+ (void)cacheMethodWithOrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_MethodDescriptor:(OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_MethodDescriptor *)md
                                                                        withJavaLangReflectMethod:(JavaLangReflectMethod *)method;

@end

inline jboolean OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_get_loggedAccessibleWarning();
inline jboolean OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_set_loggedAccessibleWarning(jboolean value);
inline jboolean *OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_getRef_loggedAccessibleWarning();
static jboolean OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_loggedAccessibleWarning = false;
J2OBJC_STATIC_FIELD_PRIMITIVE(OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils, loggedAccessibleWarning, jboolean)

inline jboolean OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_get_CACHE_METHODS();
inline jboolean OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_set_CACHE_METHODS(jboolean value);
inline jboolean *OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_getRef_CACHE_METHODS();
static jboolean OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_CACHE_METHODS = true;
J2OBJC_STATIC_FIELD_PRIMITIVE(OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils, CACHE_METHODS, jboolean)

inline IOSObjectArray *OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_get_EMPTY_CLASS_PARAMETERS();
static IOSObjectArray *OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_EMPTY_CLASS_PARAMETERS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils, EMPTY_CLASS_PARAMETERS, IOSObjectArray *)

inline IOSObjectArray *OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_get_EMPTY_OBJECT_ARRAY();
static IOSObjectArray *OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_EMPTY_OBJECT_ARRAY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils, EMPTY_OBJECT_ARRAY, IOSObjectArray *)

inline id<JavaUtilMap> OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_get_cache();
static id<JavaUtilMap> OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_cache;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils, cache, id<JavaUtilMap>)

__attribute__((unused)) static JavaLangReflectMethod *OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_getAccessibleMethodFromSuperclassWithIOSClass_withNSString_withIOSClassArray_(IOSClass *clazz, NSString *methodName, IOSObjectArray *parameterTypes);

__attribute__((unused)) static JavaLangReflectMethod *OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_getAccessibleMethodFromInterfaceNestWithIOSClass_withNSString_withIOSClassArray_(IOSClass *clazz, NSString *methodName, IOSObjectArray *parameterTypes);

__attribute__((unused)) static jboolean OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_methodMatchesOrStartsSameWithNSString_withNSString_(NSString *iOSMethodName, NSString *javaMethodName);

__attribute__((unused)) static void OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_setMethodAccessibleWithJavaLangReflectMethod_(JavaLangReflectMethod *method);

__attribute__((unused)) static jfloat OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_getTotalTransformationCostWithIOSClassArray_withIOSClassArray_(IOSObjectArray *srcArgs, IOSObjectArray *destArgs);

__attribute__((unused)) static jfloat OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_getObjectTransformationCostWithIOSClass_withIOSClass_(IOSClass *srcClass, IOSClass *destClass);

__attribute__((unused)) static JavaLangReflectMethod *OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_getCachedMethodWithOrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_MethodDescriptor_(OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_MethodDescriptor *md);

__attribute__((unused)) static void OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_cacheMethodWithOrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_MethodDescriptor_withJavaLangReflectMethod_(OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_MethodDescriptor *md, JavaLangReflectMethod *method);

@interface OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_MethodDescriptor : NSObject {
 @public
  IOSClass *cls_;
  NSString *methodName_;
  IOSObjectArray *paramTypes_;
  jboolean exact_;
  jint hashCode_;
}

- (instancetype)initWithIOSClass:(IOSClass *)cls
                    withNSString:(NSString *)methodName
               withIOSClassArray:(IOSObjectArray *)paramTypes
                     withBoolean:(jboolean)exact;

- (jboolean)isEqual:(id)obj;

- (NSUInteger)hash;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_MethodDescriptor)

J2OBJC_FIELD_SETTER(OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_MethodDescriptor, cls_, IOSClass *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_MethodDescriptor, methodName_, NSString *)
J2OBJC_FIELD_SETTER(OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_MethodDescriptor, paramTypes_, IOSObjectArray *)

__attribute__((unused)) static void OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_MethodDescriptor_initWithIOSClass_withNSString_withIOSClassArray_withBoolean_(OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_MethodDescriptor *self, IOSClass *cls, NSString *methodName, IOSObjectArray *paramTypes, jboolean exact);

__attribute__((unused)) static OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_MethodDescriptor *new_OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_MethodDescriptor_initWithIOSClass_withNSString_withIOSClassArray_withBoolean_(IOSClass *cls, NSString *methodName, IOSObjectArray *paramTypes, jboolean exact) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_MethodDescriptor *create_OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_MethodDescriptor_initWithIOSClass_withNSString_withIOSClassArray_withBoolean_(IOSClass *cls, NSString *methodName, IOSObjectArray *paramTypes, jboolean exact);

J2OBJC_TYPE_LITERAL_HEADER(OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_MethodDescriptor)

J2OBJC_INITIALIZED_DEFN(OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils)

@implementation OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils

+ (void)setCacheMethodsWithBoolean:(jboolean)cacheMethods {
  OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_setCacheMethodsWithBoolean_(cacheMethods);
}

+ (jint)clearCache {
  return OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_clearCache();
}

+ (id)invokeMethodWithId:(id)object
            withNSString:(NSString *)methodName
                  withId:(id)arg {
  return OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_invokeMethodWithId_withNSString_withId_(object, methodName, arg);
}

+ (id)invokeMethodWithId:(id)object
            withNSString:(NSString *)methodName
       withNSObjectArray:(IOSObjectArray *)args {
  return OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_invokeMethodWithId_withNSString_withNSObjectArray_(object, methodName, args);
}

+ (id)invokeMethodWithId:(id)object
            withNSString:(NSString *)methodName
       withNSObjectArray:(IOSObjectArray *)args
       withIOSClassArray:(IOSObjectArray *)parameterTypes {
  return OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_invokeMethodWithId_withNSString_withNSObjectArray_withIOSClassArray_(object, methodName, args, parameterTypes);
}

+ (id)invokeExactMethodWithId:(id)object
                 withNSString:(NSString *)methodName
                       withId:(id)arg {
  return OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_invokeExactMethodWithId_withNSString_withId_(object, methodName, arg);
}

+ (id)invokeExactMethodWithId:(id)object
                 withNSString:(NSString *)methodName
            withNSObjectArray:(IOSObjectArray *)args {
  return OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_invokeExactMethodWithId_withNSString_withNSObjectArray_(object, methodName, args);
}

+ (id)invokeExactMethodWithId:(id)object
                 withNSString:(NSString *)methodName
            withNSObjectArray:(IOSObjectArray *)args
            withIOSClassArray:(IOSObjectArray *)parameterTypes {
  return OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_invokeExactMethodWithId_withNSString_withNSObjectArray_withIOSClassArray_(object, methodName, args, parameterTypes);
}

+ (id)invokeExactStaticMethodWithIOSClass:(IOSClass *)objectClass
                             withNSString:(NSString *)methodName
                        withNSObjectArray:(IOSObjectArray *)args
                        withIOSClassArray:(IOSObjectArray *)parameterTypes {
  return OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_invokeExactStaticMethodWithIOSClass_withNSString_withNSObjectArray_withIOSClassArray_(objectClass, methodName, args, parameterTypes);
}

+ (id)invokeStaticMethodWithIOSClass:(IOSClass *)objectClass
                        withNSString:(NSString *)methodName
                              withId:(id)arg {
  return OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_invokeStaticMethodWithIOSClass_withNSString_withId_(objectClass, methodName, arg);
}

+ (id)invokeStaticMethodWithIOSClass:(IOSClass *)objectClass
                        withNSString:(NSString *)methodName
                   withNSObjectArray:(IOSObjectArray *)args {
  return OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_invokeStaticMethodWithIOSClass_withNSString_withNSObjectArray_(objectClass, methodName, args);
}

+ (id)invokeStaticMethodWithIOSClass:(IOSClass *)objectClass
                        withNSString:(NSString *)methodName
                   withNSObjectArray:(IOSObjectArray *)args
                   withIOSClassArray:(IOSObjectArray *)parameterTypes {
  return OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_invokeStaticMethodWithIOSClass_withNSString_withNSObjectArray_withIOSClassArray_(objectClass, methodName, args, parameterTypes);
}

+ (id)invokeExactStaticMethodWithIOSClass:(IOSClass *)objectClass
                             withNSString:(NSString *)methodName
                                   withId:(id)arg {
  return OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_invokeExactStaticMethodWithIOSClass_withNSString_withId_(objectClass, methodName, arg);
}

+ (id)invokeExactStaticMethodWithIOSClass:(IOSClass *)objectClass
                             withNSString:(NSString *)methodName
                        withNSObjectArray:(IOSObjectArray *)args {
  return OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_invokeExactStaticMethodWithIOSClass_withNSString_withNSObjectArray_(objectClass, methodName, args);
}

+ (JavaLangReflectMethod *)getAccessibleMethodWithIOSClass:(IOSClass *)clazz
                                              withNSString:(NSString *)methodName
                                              withIOSClass:(IOSClass *)parameterType {
  return OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_getAccessibleMethodWithIOSClass_withNSString_withIOSClass_(clazz, methodName, parameterType);
}

+ (JavaLangReflectMethod *)getAccessibleMethodWithIOSClass:(IOSClass *)clazz
                                              withNSString:(NSString *)methodName
                                         withIOSClassArray:(IOSObjectArray *)parameterTypes {
  return OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_getAccessibleMethodWithIOSClass_withNSString_withIOSClassArray_(clazz, methodName, parameterTypes);
}

+ (JavaLangReflectMethod *)getAccessibleMethodWithJavaLangReflectMethod:(JavaLangReflectMethod *)method {
  return OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_getAccessibleMethodWithJavaLangReflectMethod_(method);
}

+ (JavaLangReflectMethod *)getAccessibleMethodWithIOSClass:(IOSClass *)clazz
                                 withJavaLangReflectMethod:(JavaLangReflectMethod *)method {
  return OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_getAccessibleMethodWithIOSClass_withJavaLangReflectMethod_(clazz, method);
}

+ (JavaLangReflectMethod *)getAccessibleMethodFromSuperclassWithIOSClass:(IOSClass *)clazz
                                                            withNSString:(NSString *)methodName
                                                       withIOSClassArray:(IOSObjectArray *)parameterTypes {
  return OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_getAccessibleMethodFromSuperclassWithIOSClass_withNSString_withIOSClassArray_(clazz, methodName, parameterTypes);
}

+ (JavaLangReflectMethod *)getAccessibleMethodFromInterfaceNestWithIOSClass:(IOSClass *)clazz
                                                               withNSString:(NSString *)methodName
                                                          withIOSClassArray:(IOSObjectArray *)parameterTypes {
  return OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_getAccessibleMethodFromInterfaceNestWithIOSClass_withNSString_withIOSClassArray_(clazz, methodName, parameterTypes);
}

+ (JavaLangReflectMethod *)getMatchingAccessibleMethodWithIOSClass:(IOSClass *)clazz
                                                      withNSString:(NSString *)methodName
                                                 withIOSClassArray:(IOSObjectArray *)parameterTypes {
  return OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_getMatchingAccessibleMethodWithIOSClass_withNSString_withIOSClassArray_(clazz, methodName, parameterTypes);
}

+ (jboolean)methodMatchesOrStartsSameWithNSString:(NSString *)iOSMethodName
                                     withNSString:(NSString *)javaMethodName {
  return OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_methodMatchesOrStartsSameWithNSString_withNSString_(iOSMethodName, javaMethodName);
}

+ (void)setMethodAccessibleWithJavaLangReflectMethod:(JavaLangReflectMethod *)method {
  OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_setMethodAccessibleWithJavaLangReflectMethod_(method);
}

+ (jfloat)getTotalTransformationCostWithIOSClassArray:(IOSObjectArray *)srcArgs
                                    withIOSClassArray:(IOSObjectArray *)destArgs {
  return OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_getTotalTransformationCostWithIOSClassArray_withIOSClassArray_(srcArgs, destArgs);
}

+ (jfloat)getObjectTransformationCostWithIOSClass:(IOSClass *)srcClass
                                     withIOSClass:(IOSClass *)destClass {
  return OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_getObjectTransformationCostWithIOSClass_withIOSClass_(srcClass, destClass);
}

+ (jboolean)isAssignmentCompatibleWithIOSClass:(IOSClass *)parameterType
                                  withIOSClass:(IOSClass *)parameterization {
  return OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_isAssignmentCompatibleWithIOSClass_withIOSClass_(parameterType, parameterization);
}

+ (IOSClass *)getPrimitiveWrapperWithIOSClass:(IOSClass *)primitiveType {
  return OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_getPrimitiveWrapperWithIOSClass_(primitiveType);
}

+ (IOSClass *)getPrimitiveTypeWithIOSClass:(IOSClass *)wrapperType {
  return OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_getPrimitiveTypeWithIOSClass_(wrapperType);
}

+ (IOSClass *)toNonPrimitiveClassWithIOSClass:(IOSClass *)clazz {
  return OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_toNonPrimitiveClassWithIOSClass_(clazz);
}

+ (JavaLangReflectMethod *)getCachedMethodWithOrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_MethodDescriptor:(OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_MethodDescriptor *)md {
  return OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_getCachedMethodWithOrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_MethodDescriptor_(md);
}

+ (void)cacheMethodWithOrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_MethodDescriptor:(OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_MethodDescriptor *)md
                                                                        withJavaLangReflectMethod:(JavaLangReflectMethod *)method {
  OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_cacheMethodWithOrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_MethodDescriptor_withJavaLangReflectMethod_(md, method);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)initialize {
  if (self == [OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils class]) {
    OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_EMPTY_CLASS_PARAMETERS = [IOSObjectArray newArrayWithLength:0 type:IOSClass_class_()];
    OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_EMPTY_OBJECT_ARRAY = [IOSObjectArray newArrayWithLength:0 type:NSObject_class_()];
    OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_cache = new_JavaUtilHashMap_init();
    J2OBJC_SET_INITIALIZED(OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "setCacheMethodsWithBoolean:", "setCacheMethods", "V", 0x29, NULL, NULL },
    { "clearCache", NULL, "I", 0x9, NULL, NULL },
    { "invokeMethodWithId:withNSString:withId:", "invokeMethod", "Ljava.lang.Object;", 0x9, "Ljava.lang.NoSuchMethodException;Ljava.lang.IllegalAccessException;Ljava.lang.reflect.InvocationTargetException;", NULL },
    { "invokeMethodWithId:withNSString:withNSObjectArray:", "invokeMethod", "Ljava.lang.Object;", 0x9, "Ljava.lang.NoSuchMethodException;Ljava.lang.IllegalAccessException;Ljava.lang.reflect.InvocationTargetException;", NULL },
    { "invokeMethodWithId:withNSString:withNSObjectArray:withIOSClassArray:", "invokeMethod", "Ljava.lang.Object;", 0x9, "Ljava.lang.NoSuchMethodException;Ljava.lang.IllegalAccessException;Ljava.lang.reflect.InvocationTargetException;", NULL },
    { "invokeExactMethodWithId:withNSString:withId:", "invokeExactMethod", "Ljava.lang.Object;", 0x9, "Ljava.lang.NoSuchMethodException;Ljava.lang.IllegalAccessException;Ljava.lang.reflect.InvocationTargetException;", NULL },
    { "invokeExactMethodWithId:withNSString:withNSObjectArray:", "invokeExactMethod", "Ljava.lang.Object;", 0x9, "Ljava.lang.NoSuchMethodException;Ljava.lang.IllegalAccessException;Ljava.lang.reflect.InvocationTargetException;", NULL },
    { "invokeExactMethodWithId:withNSString:withNSObjectArray:withIOSClassArray:", "invokeExactMethod", "Ljava.lang.Object;", 0x9, "Ljava.lang.NoSuchMethodException;Ljava.lang.IllegalAccessException;Ljava.lang.reflect.InvocationTargetException;", NULL },
    { "invokeExactStaticMethodWithIOSClass:withNSString:withNSObjectArray:withIOSClassArray:", "invokeExactStaticMethod", "Ljava.lang.Object;", 0x9, "Ljava.lang.NoSuchMethodException;Ljava.lang.IllegalAccessException;Ljava.lang.reflect.InvocationTargetException;", NULL },
    { "invokeStaticMethodWithIOSClass:withNSString:withId:", "invokeStaticMethod", "Ljava.lang.Object;", 0x9, "Ljava.lang.NoSuchMethodException;Ljava.lang.IllegalAccessException;Ljava.lang.reflect.InvocationTargetException;", NULL },
    { "invokeStaticMethodWithIOSClass:withNSString:withNSObjectArray:", "invokeStaticMethod", "Ljava.lang.Object;", 0x9, "Ljava.lang.NoSuchMethodException;Ljava.lang.IllegalAccessException;Ljava.lang.reflect.InvocationTargetException;", NULL },
    { "invokeStaticMethodWithIOSClass:withNSString:withNSObjectArray:withIOSClassArray:", "invokeStaticMethod", "Ljava.lang.Object;", 0x9, "Ljava.lang.NoSuchMethodException;Ljava.lang.IllegalAccessException;Ljava.lang.reflect.InvocationTargetException;", NULL },
    { "invokeExactStaticMethodWithIOSClass:withNSString:withId:", "invokeExactStaticMethod", "Ljava.lang.Object;", 0x9, "Ljava.lang.NoSuchMethodException;Ljava.lang.IllegalAccessException;Ljava.lang.reflect.InvocationTargetException;", NULL },
    { "invokeExactStaticMethodWithIOSClass:withNSString:withNSObjectArray:", "invokeExactStaticMethod", "Ljava.lang.Object;", 0x9, "Ljava.lang.NoSuchMethodException;Ljava.lang.IllegalAccessException;Ljava.lang.reflect.InvocationTargetException;", NULL },
    { "getAccessibleMethodWithIOSClass:withNSString:withIOSClass:", "getAccessibleMethod", "Ljava.lang.reflect.Method;", 0x9, NULL, NULL },
    { "getAccessibleMethodWithIOSClass:withNSString:withIOSClassArray:", "getAccessibleMethod", "Ljava.lang.reflect.Method;", 0x9, NULL, NULL },
    { "getAccessibleMethodWithJavaLangReflectMethod:", "getAccessibleMethod", "Ljava.lang.reflect.Method;", 0x9, NULL, NULL },
    { "getAccessibleMethodWithIOSClass:withJavaLangReflectMethod:", "getAccessibleMethod", "Ljava.lang.reflect.Method;", 0x9, NULL, NULL },
    { "getAccessibleMethodFromSuperclassWithIOSClass:withNSString:withIOSClassArray:", "getAccessibleMethodFromSuperclass", "Ljava.lang.reflect.Method;", 0xa, NULL, NULL },
    { "getAccessibleMethodFromInterfaceNestWithIOSClass:withNSString:withIOSClassArray:", "getAccessibleMethodFromInterfaceNest", "Ljava.lang.reflect.Method;", 0xa, NULL, NULL },
    { "getMatchingAccessibleMethodWithIOSClass:withNSString:withIOSClassArray:", "getMatchingAccessibleMethod", "Ljava.lang.reflect.Method;", 0x9, NULL, NULL },
    { "methodMatchesOrStartsSameWithNSString:withNSString:", "methodMatchesOrStartsSame", "Z", 0xa, NULL, NULL },
    { "setMethodAccessibleWithJavaLangReflectMethod:", "setMethodAccessible", "V", 0xa, NULL, NULL },
    { "getTotalTransformationCostWithIOSClassArray:withIOSClassArray:", "getTotalTransformationCost", "F", 0xa, NULL, NULL },
    { "getObjectTransformationCostWithIOSClass:withIOSClass:", "getObjectTransformationCost", "F", 0xa, NULL, NULL },
    { "isAssignmentCompatibleWithIOSClass:withIOSClass:", "isAssignmentCompatible", "Z", 0x19, NULL, NULL },
    { "getPrimitiveWrapperWithIOSClass:", "getPrimitiveWrapper", "Ljava.lang.Class;", 0x9, NULL, NULL },
    { "getPrimitiveTypeWithIOSClass:", "getPrimitiveType", "Ljava.lang.Class;", 0x9, NULL, NULL },
    { "toNonPrimitiveClassWithIOSClass:", "toNonPrimitiveClass", "Ljava.lang.Class;", 0x9, NULL, NULL },
    { "getCachedMethodWithOrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_MethodDescriptor:", "getCachedMethod", "Ljava.lang.reflect.Method;", 0xa, NULL, NULL },
    { "cacheMethodWithOrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_MethodDescriptor:withJavaLangReflectMethod:", "cacheMethod", "V", 0xa, NULL, NULL },
    { "init", "MethodUtils", NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "loggedAccessibleWarning", "loggedAccessibleWarning", 0xa, "Z", &OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_loggedAccessibleWarning, NULL, .constantValue.asLong = 0 },
    { "CACHE_METHODS", "CACHE_METHODS", 0xa, "Z", &OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_CACHE_METHODS, NULL, .constantValue.asLong = 0 },
    { "EMPTY_CLASS_PARAMETERS", "EMPTY_CLASS_PARAMETERS", 0x1a, "[Ljava.lang.Class;", &OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_EMPTY_CLASS_PARAMETERS, NULL, .constantValue.asLong = 0 },
    { "EMPTY_OBJECT_ARRAY", "EMPTY_OBJECT_ARRAY", 0x1a, "[Ljava.lang.Object;", &OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_EMPTY_OBJECT_ARRAY, NULL, .constantValue.asLong = 0 },
    { "cache", "cache", 0x1a, "Ljava.util.Map;", &OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_cache, "Ljava/util/Map<Lorg/oss/pdfreporter/uses/org/apache/commons/beanutils/MethodUtils$MethodDescriptor;Ljava/lang/reflect/Method;>;", .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lorg.oss.pdfreporter.uses.org.apache.commons.beanutils.MethodUtils$MethodDescriptor;"};
  static const J2ObjcClassInfo _OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils = { 2, "MethodUtils", "org.oss.pdfreporter.uses.org.apache.commons.beanutils", NULL, 0x1, 32, methods, 5, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils;
}

@end

void OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_setCacheMethodsWithBoolean_(jboolean cacheMethods) {
  OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_initialize();
  @synchronized(OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_class_()) {
    OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_CACHE_METHODS = cacheMethods;
    if (!OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_CACHE_METHODS) {
      OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_clearCache();
    }
  }
}

jint OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_clearCache() {
  OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_initialize();
  jint size = [((id<JavaUtilMap>) nil_chk(OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_cache)) size];
  [OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_cache clear];
  return size;
}

id OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_invokeMethodWithId_withNSString_withId_(id object, NSString *methodName, id arg) {
  OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_initialize();
  IOSObjectArray *args = [IOSObjectArray newArrayWithObjects:(id[]){ arg } count:1 type:NSObject_class_()];
  return OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_invokeMethodWithId_withNSString_withNSObjectArray_(object, methodName, args);
}

id OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_invokeMethodWithId_withNSString_withNSObjectArray_(id object, NSString *methodName, IOSObjectArray *args) {
  OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_initialize();
  if (args == nil) {
    args = OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_EMPTY_OBJECT_ARRAY;
  }
  jint arguments = ((IOSObjectArray *) nil_chk(args))->size_;
  IOSObjectArray *parameterTypes = [IOSObjectArray newArrayWithLength:arguments type:IOSClass_class_()];
  for (jint i = 0; i < arguments; i++) {
    (void) IOSObjectArray_Set(parameterTypes, i, [nil_chk(IOSObjectArray_Get(args, i)) getClass]);
  }
  return OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_invokeMethodWithId_withNSString_withNSObjectArray_withIOSClassArray_(object, methodName, args, parameterTypes);
}

id OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_invokeMethodWithId_withNSString_withNSObjectArray_withIOSClassArray_(id object, NSString *methodName, IOSObjectArray *args, IOSObjectArray *parameterTypes) {
  OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_initialize();
  if (parameterTypes == nil) {
    parameterTypes = OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_EMPTY_CLASS_PARAMETERS;
  }
  if (args == nil) {
    args = OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_EMPTY_OBJECT_ARRAY;
  }
  JavaLangReflectMethod *method = OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_getMatchingAccessibleMethodWithIOSClass_withNSString_withIOSClassArray_([nil_chk(object) getClass], methodName, parameterTypes);
  if (method == nil) {
    @throw new_JavaLangNoSuchMethodException_initWithNSString_(JreStrcat("$$$$", @"No such accessible method: ", methodName, @"() on object: ", [[object getClass] getName]));
  }
  return [method invokeWithId:object withNSObjectArray:args];
}

id OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_invokeExactMethodWithId_withNSString_withId_(id object, NSString *methodName, id arg) {
  OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_initialize();
  IOSObjectArray *args = [IOSObjectArray newArrayWithObjects:(id[]){ arg } count:1 type:NSObject_class_()];
  return OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_invokeExactMethodWithId_withNSString_withNSObjectArray_(object, methodName, args);
}

id OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_invokeExactMethodWithId_withNSString_withNSObjectArray_(id object, NSString *methodName, IOSObjectArray *args) {
  OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_initialize();
  if (args == nil) {
    args = OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_EMPTY_OBJECT_ARRAY;
  }
  jint arguments = ((IOSObjectArray *) nil_chk(args))->size_;
  IOSObjectArray *parameterTypes = [IOSObjectArray newArrayWithLength:arguments type:IOSClass_class_()];
  for (jint i = 0; i < arguments; i++) {
    (void) IOSObjectArray_Set(parameterTypes, i, [nil_chk(IOSObjectArray_Get(args, i)) getClass]);
  }
  return OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_invokeExactMethodWithId_withNSString_withNSObjectArray_withIOSClassArray_(object, methodName, args, parameterTypes);
}

id OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_invokeExactMethodWithId_withNSString_withNSObjectArray_withIOSClassArray_(id object, NSString *methodName, IOSObjectArray *args, IOSObjectArray *parameterTypes) {
  OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_initialize();
  if (args == nil) {
    args = OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_EMPTY_OBJECT_ARRAY;
  }
  if (parameterTypes == nil) {
    parameterTypes = OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_EMPTY_CLASS_PARAMETERS;
  }
  JavaLangReflectMethod *method = OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_getAccessibleMethodWithIOSClass_withNSString_withIOSClassArray_([nil_chk(object) getClass], methodName, parameterTypes);
  if (method == nil) {
    @throw new_JavaLangNoSuchMethodException_initWithNSString_(JreStrcat("$$$$", @"No such accessible method: ", methodName, @"() on object: ", [[object getClass] getName]));
  }
  return [method invokeWithId:object withNSObjectArray:args];
}

id OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_invokeExactStaticMethodWithIOSClass_withNSString_withNSObjectArray_withIOSClassArray_(IOSClass *objectClass, NSString *methodName, IOSObjectArray *args, IOSObjectArray *parameterTypes) {
  OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_initialize();
  if (args == nil) {
    args = OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_EMPTY_OBJECT_ARRAY;
  }
  if (parameterTypes == nil) {
    parameterTypes = OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_EMPTY_CLASS_PARAMETERS;
  }
  JavaLangReflectMethod *method = OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_getAccessibleMethodWithIOSClass_withNSString_withIOSClassArray_(objectClass, methodName, parameterTypes);
  if (method == nil) {
    @throw new_JavaLangNoSuchMethodException_initWithNSString_(JreStrcat("$$$$", @"No such accessible method: ", methodName, @"() on class: ", [((IOSClass *) nil_chk(objectClass)) getName]));
  }
  return [method invokeWithId:nil withNSObjectArray:args];
}

id OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_invokeStaticMethodWithIOSClass_withNSString_withId_(IOSClass *objectClass, NSString *methodName, id arg) {
  OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_initialize();
  IOSObjectArray *args = [IOSObjectArray newArrayWithObjects:(id[]){ arg } count:1 type:NSObject_class_()];
  return OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_invokeStaticMethodWithIOSClass_withNSString_withNSObjectArray_(objectClass, methodName, args);
}

id OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_invokeStaticMethodWithIOSClass_withNSString_withNSObjectArray_(IOSClass *objectClass, NSString *methodName, IOSObjectArray *args) {
  OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_initialize();
  if (args == nil) {
    args = OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_EMPTY_OBJECT_ARRAY;
  }
  jint arguments = ((IOSObjectArray *) nil_chk(args))->size_;
  IOSObjectArray *parameterTypes = [IOSObjectArray newArrayWithLength:arguments type:IOSClass_class_()];
  for (jint i = 0; i < arguments; i++) {
    (void) IOSObjectArray_Set(parameterTypes, i, [nil_chk(IOSObjectArray_Get(args, i)) getClass]);
  }
  return OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_invokeStaticMethodWithIOSClass_withNSString_withNSObjectArray_withIOSClassArray_(objectClass, methodName, args, parameterTypes);
}

id OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_invokeStaticMethodWithIOSClass_withNSString_withNSObjectArray_withIOSClassArray_(IOSClass *objectClass, NSString *methodName, IOSObjectArray *args, IOSObjectArray *parameterTypes) {
  OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_initialize();
  if (parameterTypes == nil) {
    parameterTypes = OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_EMPTY_CLASS_PARAMETERS;
  }
  if (args == nil) {
    args = OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_EMPTY_OBJECT_ARRAY;
  }
  JavaLangReflectMethod *method = OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_getMatchingAccessibleMethodWithIOSClass_withNSString_withIOSClassArray_(objectClass, methodName, parameterTypes);
  if (method == nil) {
    @throw new_JavaLangNoSuchMethodException_initWithNSString_(JreStrcat("$$$$", @"No such accessible method: ", methodName, @"() on class: ", [((IOSClass *) nil_chk(objectClass)) getName]));
  }
  return [method invokeWithId:nil withNSObjectArray:args];
}

id OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_invokeExactStaticMethodWithIOSClass_withNSString_withId_(IOSClass *objectClass, NSString *methodName, id arg) {
  OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_initialize();
  IOSObjectArray *args = [IOSObjectArray newArrayWithObjects:(id[]){ arg } count:1 type:NSObject_class_()];
  return OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_invokeExactStaticMethodWithIOSClass_withNSString_withNSObjectArray_(objectClass, methodName, args);
}

id OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_invokeExactStaticMethodWithIOSClass_withNSString_withNSObjectArray_(IOSClass *objectClass, NSString *methodName, IOSObjectArray *args) {
  OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_initialize();
  if (args == nil) {
    args = OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_EMPTY_OBJECT_ARRAY;
  }
  jint arguments = ((IOSObjectArray *) nil_chk(args))->size_;
  IOSObjectArray *parameterTypes = [IOSObjectArray newArrayWithLength:arguments type:IOSClass_class_()];
  for (jint i = 0; i < arguments; i++) {
    (void) IOSObjectArray_Set(parameterTypes, i, [nil_chk(IOSObjectArray_Get(args, i)) getClass]);
  }
  return OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_invokeExactStaticMethodWithIOSClass_withNSString_withNSObjectArray_withIOSClassArray_(objectClass, methodName, args, parameterTypes);
}

JavaLangReflectMethod *OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_getAccessibleMethodWithIOSClass_withNSString_withIOSClass_(IOSClass *clazz, NSString *methodName, IOSClass *parameterType) {
  OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_initialize();
  IOSObjectArray *parameterTypes = [IOSObjectArray newArrayWithObjects:(id[]){ parameterType } count:1 type:IOSClass_class_()];
  return OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_getAccessibleMethodWithIOSClass_withNSString_withIOSClassArray_(clazz, methodName, parameterTypes);
}

JavaLangReflectMethod *OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_getAccessibleMethodWithIOSClass_withNSString_withIOSClassArray_(IOSClass *clazz, NSString *methodName, IOSObjectArray *parameterTypes) {
  OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_initialize();
  @try {
    OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_MethodDescriptor *md = new_OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_MethodDescriptor_initWithIOSClass_withNSString_withIOSClassArray_withBoolean_(clazz, methodName, parameterTypes, true);
    JavaLangReflectMethod *method = OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_getCachedMethodWithOrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_MethodDescriptor_(md);
    if (method != nil) {
      return method;
    }
    method = OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_getAccessibleMethodWithIOSClass_withJavaLangReflectMethod_(clazz, [((IOSClass *) nil_chk(clazz)) getMethod:methodName parameterTypes:parameterTypes]);
    OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_cacheMethodWithOrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_MethodDescriptor_withJavaLangReflectMethod_(md, method);
    return method;
  }
  @catch (JavaLangNoSuchMethodException *e) {
    return (nil);
  }
}

JavaLangReflectMethod *OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_getAccessibleMethodWithJavaLangReflectMethod_(JavaLangReflectMethod *method) {
  OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_initialize();
  if (method == nil) {
    return (nil);
  }
  return OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_getAccessibleMethodWithIOSClass_withJavaLangReflectMethod_([method getDeclaringClass], method);
}

JavaLangReflectMethod *OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_getAccessibleMethodWithIOSClass_withJavaLangReflectMethod_(IOSClass *clazz, JavaLangReflectMethod *method) {
  OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_initialize();
  if (method == nil) {
    return (nil);
  }
  if (!JavaLangReflectModifier_isPublicWithInt_([method getModifiers])) {
    return (nil);
  }
  jboolean sameClass = true;
  if (clazz == nil) {
    clazz = [method getDeclaringClass];
  }
  else {
    sameClass = [clazz isEqual:[method getDeclaringClass]];
    if (![((IOSClass *) nil_chk([method getDeclaringClass])) isAssignableFrom:clazz]) {
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$$", [clazz getName], @" is not assignable from ", [((IOSClass *) nil_chk([method getDeclaringClass])) getName]));
    }
  }
  if (JavaLangReflectModifier_isPublicWithInt_([((IOSClass *) nil_chk(clazz)) getModifiers])) {
    if (!sameClass && !JavaLangReflectModifier_isPublicWithInt_([((IOSClass *) nil_chk([method getDeclaringClass])) getModifiers])) {
      OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_setMethodAccessibleWithJavaLangReflectMethod_(method);
    }
    return (method);
  }
  NSString *methodName = [method getName];
  IOSObjectArray *parameterTypes = [method getParameterTypes];
  method = OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_getAccessibleMethodFromInterfaceNestWithIOSClass_withNSString_withIOSClassArray_(clazz, methodName, parameterTypes);
  if (method == nil) {
    method = OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_getAccessibleMethodFromSuperclassWithIOSClass_withNSString_withIOSClassArray_(clazz, methodName, parameterTypes);
  }
  return (method);
}

JavaLangReflectMethod *OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_getAccessibleMethodFromSuperclassWithIOSClass_withNSString_withIOSClassArray_(IOSClass *clazz, NSString *methodName, IOSObjectArray *parameterTypes) {
  OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_initialize();
  IOSClass *parentClazz = [((IOSClass *) nil_chk(clazz)) getSuperclass];
  while (parentClazz != nil) {
    if (JavaLangReflectModifier_isPublicWithInt_([parentClazz getModifiers])) {
      @try {
        return [parentClazz getMethod:methodName parameterTypes:parameterTypes];
      }
      @catch (JavaLangNoSuchMethodException *e) {
        return nil;
      }
    }
    parentClazz = [parentClazz getSuperclass];
  }
  return nil;
}

JavaLangReflectMethod *OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_getAccessibleMethodFromInterfaceNestWithIOSClass_withNSString_withIOSClassArray_(IOSClass *clazz, NSString *methodName, IOSObjectArray *parameterTypes) {
  OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_initialize();
  JavaLangReflectMethod *method = nil;
  for (; clazz != nil; clazz = [clazz getSuperclass]) {
    IOSObjectArray *interfaces = [clazz getInterfaces];
    for (jint i = 0; i < ((IOSObjectArray *) nil_chk(interfaces))->size_; i++) {
      if (!JavaLangReflectModifier_isPublicWithInt_([((IOSClass *) nil_chk(IOSObjectArray_Get(interfaces, i))) getModifiers])) {
        continue;
      }
      @try {
        method = [((IOSClass *) nil_chk(IOSObjectArray_Get(interfaces, i))) getDeclaredMethod:methodName parameterTypes:parameterTypes];
      }
      @catch (JavaLangNoSuchMethodException *e) {
      }
      if (method != nil) {
        return method;
      }
      method = OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_getAccessibleMethodFromInterfaceNestWithIOSClass_withNSString_withIOSClassArray_(IOSObjectArray_Get(interfaces, i), methodName, parameterTypes);
      if (method != nil) {
        return method;
      }
    }
  }
  if (method != nil) {
    return (method);
  }
  return (nil);
}

JavaLangReflectMethod *OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_getMatchingAccessibleMethodWithIOSClass_withNSString_withIOSClassArray_(IOSClass *clazz, NSString *methodName, IOSObjectArray *parameterTypes) {
  OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_initialize();
  OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_MethodDescriptor *md = new_OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_MethodDescriptor_initWithIOSClass_withNSString_withIOSClassArray_withBoolean_(clazz, methodName, parameterTypes, false);
  @try {
    JavaLangReflectMethod *method = OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_getCachedMethodWithOrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_MethodDescriptor_(md);
    if (method != nil) {
      return method;
    }
    method = [((IOSClass *) nil_chk(clazz)) getMethod:methodName parameterTypes:parameterTypes];
    if (method != nil) {
      OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_setMethodAccessibleWithJavaLangReflectMethod_(method);
      OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_cacheMethodWithOrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_MethodDescriptor_withJavaLangReflectMethod_(md, method);
      return method;
    }
  }
  @catch (JavaLangNoSuchMethodException *e) {
  }
  jint paramSize = ((IOSObjectArray *) nil_chk(parameterTypes))->size_;
  JavaLangReflectMethod *bestMatch = nil;
  IOSObjectArray *methods = [((IOSClass *) nil_chk(clazz)) getMethods];
  jfloat bestMatchCost = JavaLangFloat_MAX_VALUE;
  jfloat myCost = JavaLangFloat_MAX_VALUE;
  for (jint i = 0, size = ((IOSObjectArray *) nil_chk(methods))->size_; i < size; i++) {
    if (OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_methodMatchesOrStartsSameWithNSString_withNSString_([((JavaLangReflectMethod *) nil_chk(IOSObjectArray_Get(methods, i))) getName], methodName)) {
      IOSObjectArray *methodsParams = [((JavaLangReflectMethod *) nil_chk(IOSObjectArray_Get(methods, i))) getParameterTypes];
      jint methodParamSize = ((IOSObjectArray *) nil_chk(methodsParams))->size_;
      if (methodParamSize == paramSize) {
        jboolean match = true;
        for (jint n = 0; n < methodParamSize; n++) {
          if (!OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_isAssignmentCompatibleWithIOSClass_withIOSClass_(IOSObjectArray_Get(methodsParams, n), IOSObjectArray_Get(parameterTypes, n))) {
            match = false;
            break;
          }
        }
        if (match) {
          JavaLangReflectMethod *method = OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_getAccessibleMethodWithIOSClass_withJavaLangReflectMethod_(clazz, IOSObjectArray_Get(methods, i));
          if (method != nil) {
            OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_setMethodAccessibleWithJavaLangReflectMethod_(method);
            myCost = OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_getTotalTransformationCostWithIOSClassArray_withIOSClassArray_(parameterTypes, [method getParameterTypes]);
            if (myCost < bestMatchCost) {
              bestMatch = method;
              bestMatchCost = myCost;
            }
          }
        }
      }
    }
  }
  if (bestMatch != nil) {
    OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_cacheMethodWithOrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_MethodDescriptor_withJavaLangReflectMethod_(md, bestMatch);
  }
  return bestMatch;
}

jboolean OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_methodMatchesOrStartsSameWithNSString_withNSString_(NSString *iOSMethodName, NSString *javaMethodName) {
  OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_initialize();
  if (iOSMethodName == nil || javaMethodName == nil) {
    return false;
  }
  if (((jint) [iOSMethodName length]) >= ((jint) [javaMethodName length]) && [iOSMethodName hasPrefix:javaMethodName]) {
    if ([((NSString *) nil_chk([iOSMethodName substring:((jint) [javaMethodName length]) endIndex:((jint) [iOSMethodName length])])) hasPrefix:@"With"] || ((jint) [iOSMethodName length]) == ((jint) [javaMethodName length])) {
      return true;
    }
  }
  return false;
}

void OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_setMethodAccessibleWithJavaLangReflectMethod_(JavaLangReflectMethod *method) {
  OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_initialize();
  @try {
    [((JavaLangReflectMethod *) nil_chk(method)) setAccessibleWithBoolean:true];
  }
  @catch (JavaLangSecurityException *se) {
    if (!OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_loggedAccessibleWarning) {
      jboolean vulnerableJVM = false;
      @try {
        NSString *specVersion = JavaLangSystem_getPropertyWithNSString_(@"java.specification.version");
        if ([((NSString *) nil_chk(specVersion)) charAtWithInt:0] == '1' && ([specVersion charAtWithInt:2] == '0' || [specVersion charAtWithInt:2] == '1' || [specVersion charAtWithInt:2] == '2' || [specVersion charAtWithInt:2] == '3')) {
          vulnerableJVM = true;
        }
      }
      @catch (JavaLangSecurityException *e) {
        vulnerableJVM = true;
      }
      OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_loggedAccessibleWarning = true;
    }
  }
}

jfloat OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_getTotalTransformationCostWithIOSClassArray_withIOSClassArray_(IOSObjectArray *srcArgs, IOSObjectArray *destArgs) {
  OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_initialize();
  jfloat totalCost = 0.0f;
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(srcArgs))->size_; i++) {
    IOSClass *srcClass, *destClass;
    srcClass = IOSObjectArray_Get(srcArgs, i);
    destClass = IOSObjectArray_Get(nil_chk(destArgs), i);
    JrePlusAssignFloatF(&totalCost, OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_getObjectTransformationCostWithIOSClass_withIOSClass_(srcClass, destClass));
  }
  return totalCost;
}

jfloat OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_getObjectTransformationCostWithIOSClass_withIOSClass_(IOSClass *srcClass, IOSClass *destClass) {
  OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_initialize();
  jfloat cost = 0.0f;
  while (destClass != nil && ![destClass isEqual:srcClass]) {
    if ([destClass isInterface] && OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_isAssignmentCompatibleWithIOSClass_withIOSClass_(destClass, srcClass)) {
      JrePlusAssignFloatF(&cost, 0.25f);
      break;
    }
    cost++;
    destClass = [destClass getSuperclass];
  }
  if (destClass == nil) {
    JrePlusAssignFloatF(&cost, 1.5f);
  }
  return cost;
}

jboolean OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_isAssignmentCompatibleWithIOSClass_withIOSClass_(IOSClass *parameterType, IOSClass *parameterization) {
  OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_initialize();
  if ([((IOSClass *) nil_chk(parameterType)) isAssignableFrom:parameterization]) {
    return true;
  }
  if ([parameterType isPrimitive]) {
    IOSClass *parameterWrapperClazz = OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_getPrimitiveWrapperWithIOSClass_(parameterType);
    if (parameterWrapperClazz != nil) {
      return [parameterWrapperClazz isEqual:parameterization];
    }
  }
  return false;
}

IOSClass *OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_getPrimitiveWrapperWithIOSClass_(IOSClass *primitiveType) {
  OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_initialize();
  if ([[IOSClass booleanClass] isEqual:primitiveType]) {
    return JavaLangBoolean_class_();
  }
  else if ([[IOSClass floatClass] isEqual:primitiveType]) {
    return JavaLangFloat_class_();
  }
  else if ([[IOSClass longClass] isEqual:primitiveType]) {
    return JavaLangLong_class_();
  }
  else if ([[IOSClass intClass] isEqual:primitiveType]) {
    return JavaLangInteger_class_();
  }
  else if ([[IOSClass shortClass] isEqual:primitiveType]) {
    return JavaLangShort_class_();
  }
  else if ([[IOSClass byteClass] isEqual:primitiveType]) {
    return JavaLangByte_class_();
  }
  else if ([[IOSClass doubleClass] isEqual:primitiveType]) {
    return JavaLangDouble_class_();
  }
  else if ([[IOSClass charClass] isEqual:primitiveType]) {
    return JavaLangCharacter_class_();
  }
  else {
    return nil;
  }
}

IOSClass *OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_getPrimitiveTypeWithIOSClass_(IOSClass *wrapperType) {
  OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_initialize();
  if ([JavaLangBoolean_class_() isEqual:wrapperType]) {
    return [IOSClass booleanClass];
  }
  else if ([JavaLangFloat_class_() isEqual:wrapperType]) {
    return [IOSClass floatClass];
  }
  else if ([JavaLangLong_class_() isEqual:wrapperType]) {
    return [IOSClass longClass];
  }
  else if ([JavaLangInteger_class_() isEqual:wrapperType]) {
    return [IOSClass intClass];
  }
  else if ([JavaLangShort_class_() isEqual:wrapperType]) {
    return [IOSClass shortClass];
  }
  else if ([JavaLangByte_class_() isEqual:wrapperType]) {
    return [IOSClass byteClass];
  }
  else if ([JavaLangDouble_class_() isEqual:wrapperType]) {
    return [IOSClass doubleClass];
  }
  else if ([JavaLangCharacter_class_() isEqual:wrapperType]) {
    return [IOSClass charClass];
  }
  else {
    return nil;
  }
}

IOSClass *OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_toNonPrimitiveClassWithIOSClass_(IOSClass *clazz) {
  OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_initialize();
  if ([((IOSClass *) nil_chk(clazz)) isPrimitive]) {
    IOSClass *primitiveClazz = OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_getPrimitiveWrapperWithIOSClass_(clazz);
    if (primitiveClazz != nil) {
      return primitiveClazz;
    }
    else {
      return clazz;
    }
  }
  else {
    return clazz;
  }
}

JavaLangReflectMethod *OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_getCachedMethodWithOrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_MethodDescriptor_(OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_MethodDescriptor *md) {
  OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_initialize();
  if (OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_CACHE_METHODS) {
    return [((id<JavaUtilMap>) nil_chk(OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_cache)) getWithId:md];
  }
  return nil;
}

void OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_cacheMethodWithOrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_MethodDescriptor_withJavaLangReflectMethod_(OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_MethodDescriptor *md, JavaLangReflectMethod *method) {
  OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_initialize();
  if (OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_CACHE_METHODS) {
    if (method != nil) {
      (void) [((id<JavaUtilMap>) nil_chk(OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_cache)) putWithId:md withId:method];
    }
  }
}

void OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_init(OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils *self) {
  NSObject_init(self);
}

OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils *new_OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_init() {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils, init)
}

OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils *create_OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_init() {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils)

@implementation OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_MethodDescriptor

- (instancetype)initWithIOSClass:(IOSClass *)cls
                    withNSString:(NSString *)methodName
               withIOSClassArray:(IOSObjectArray *)paramTypes
                     withBoolean:(jboolean)exact {
  OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_MethodDescriptor_initWithIOSClass_withNSString_withIOSClassArray_withBoolean_(self, cls, methodName, paramTypes, exact);
  return self;
}

- (jboolean)isEqual:(id)obj {
  if (!([obj isKindOfClass:[OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_MethodDescriptor class]])) {
    return false;
  }
  OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_MethodDescriptor *md = (OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_MethodDescriptor *) cast_chk(obj, [OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_MethodDescriptor class]);
  return (exact_ == ((OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_MethodDescriptor *) nil_chk(md))->exact_ && [((NSString *) nil_chk(methodName_)) isEqual:md->methodName_] && [((IOSClass *) nil_chk(cls_)) isEqual:md->cls_] && JavaUtilArrays_equalsWithNSObjectArray_withNSObjectArray_(paramTypes_, md->paramTypes_));
}

- (NSUInteger)hash {
  return hashCode_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithIOSClass:withNSString:withIOSClassArray:withBoolean:", "MethodDescriptor", NULL, 0x1, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "cls_", NULL, 0x2, "Ljava.lang.Class;", NULL, NULL, .constantValue.asLong = 0 },
    { "methodName_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "paramTypes_", NULL, 0x2, "[Ljava.lang.Class;", NULL, NULL, .constantValue.asLong = 0 },
    { "exact_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "hashCode_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_MethodDescriptor = { 2, "MethodDescriptor", "org.oss.pdfreporter.uses.org.apache.commons.beanutils", "MethodUtils", 0xa, 3, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_MethodDescriptor;
}

@end

void OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_MethodDescriptor_initWithIOSClass_withNSString_withIOSClassArray_withBoolean_(OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_MethodDescriptor *self, IOSClass *cls, NSString *methodName, IOSObjectArray *paramTypes, jboolean exact) {
  NSObject_init(self);
  if (cls == nil) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Class cannot be null");
  }
  if (methodName == nil) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Method Name cannot be null");
  }
  if (paramTypes == nil) {
    paramTypes = JreLoadStatic(OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils, EMPTY_CLASS_PARAMETERS);
  }
  self->cls_ = cls;
  self->methodName_ = methodName;
  self->paramTypes_ = paramTypes;
  self->exact_ = exact;
  self->hashCode_ = ((jint) [methodName length]);
}

OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_MethodDescriptor *new_OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_MethodDescriptor_initWithIOSClass_withNSString_withIOSClassArray_withBoolean_(IOSClass *cls, NSString *methodName, IOSObjectArray *paramTypes, jboolean exact) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_MethodDescriptor, initWithIOSClass_withNSString_withIOSClassArray_withBoolean_, cls, methodName, paramTypes, exact)
}

OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_MethodDescriptor *create_OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_MethodDescriptor_initWithIOSClass_withNSString_withIOSClassArray_withBoolean_(IOSClass *cls, NSString *methodName, IOSObjectArray *paramTypes, jboolean exact) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_MethodDescriptor, initWithIOSClass_withNSString_withIOSClassArray_withBoolean_, cls, methodName, paramTypes, exact)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_MethodDescriptor)
