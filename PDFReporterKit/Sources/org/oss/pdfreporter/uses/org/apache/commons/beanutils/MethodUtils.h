//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-extensions/src/org/oss/pdfreporter/uses/org/apache/commons/beanutils/MethodUtils.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils")
#ifdef RESTRICT_OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils
#define INCLUDE_ALL_OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils 0
#else
#define INCLUDE_ALL_OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils 1
#endif
#undef RESTRICT_OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils

#if !defined (OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_) && (INCLUDE_ALL_OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils || defined(INCLUDE_OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils))
#define OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_

@class IOSClass;
@class IOSObjectArray;
@class JavaLangReflectMethod;

@interface OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils : NSObject

#pragma mark Public

- (instancetype)init;

+ (jint)clearCache;

+ (JavaLangReflectMethod *)getAccessibleMethodWithIOSClass:(IOSClass *)clazz
                                 withJavaLangReflectMethod:(JavaLangReflectMethod *)method;

+ (JavaLangReflectMethod *)getAccessibleMethodWithIOSClass:(IOSClass *)clazz
                                              withNSString:(NSString *)methodName
                                              withIOSClass:(IOSClass *)parameterType;

+ (JavaLangReflectMethod *)getAccessibleMethodWithIOSClass:(IOSClass *)clazz
                                              withNSString:(NSString *)methodName
                                         withIOSClassArray:(IOSObjectArray *)parameterTypes;

+ (JavaLangReflectMethod *)getAccessibleMethodWithJavaLangReflectMethod:(JavaLangReflectMethod *)method;

+ (JavaLangReflectMethod *)getMatchingAccessibleMethodWithIOSClass:(IOSClass *)clazz
                                                      withNSString:(NSString *)methodName
                                                 withIOSClassArray:(IOSObjectArray *)parameterTypes;

+ (IOSClass *)getPrimitiveTypeWithIOSClass:(IOSClass *)wrapperType;

+ (IOSClass *)getPrimitiveWrapperWithIOSClass:(IOSClass *)primitiveType;

+ (id)invokeExactMethodWithId:(id)object
                 withNSString:(NSString *)methodName
                       withId:(id)arg;

+ (id)invokeExactMethodWithId:(id)object
                 withNSString:(NSString *)methodName
            withNSObjectArray:(IOSObjectArray *)args;

+ (id)invokeExactMethodWithId:(id)object
                 withNSString:(NSString *)methodName
            withNSObjectArray:(IOSObjectArray *)args
            withIOSClassArray:(IOSObjectArray *)parameterTypes;

+ (id)invokeExactStaticMethodWithIOSClass:(IOSClass *)objectClass
                             withNSString:(NSString *)methodName
                                   withId:(id)arg;

+ (id)invokeExactStaticMethodWithIOSClass:(IOSClass *)objectClass
                             withNSString:(NSString *)methodName
                        withNSObjectArray:(IOSObjectArray *)args;

+ (id)invokeExactStaticMethodWithIOSClass:(IOSClass *)objectClass
                             withNSString:(NSString *)methodName
                        withNSObjectArray:(IOSObjectArray *)args
                        withIOSClassArray:(IOSObjectArray *)parameterTypes;

+ (id)invokeMethodWithId:(id)object
            withNSString:(NSString *)methodName
                  withId:(id)arg;

+ (id)invokeMethodWithId:(id)object
            withNSString:(NSString *)methodName
       withNSObjectArray:(IOSObjectArray *)args;

+ (id)invokeMethodWithId:(id)object
            withNSString:(NSString *)methodName
       withNSObjectArray:(IOSObjectArray *)args
       withIOSClassArray:(IOSObjectArray *)parameterTypes;

+ (id)invokeStaticMethodWithIOSClass:(IOSClass *)objectClass
                        withNSString:(NSString *)methodName
                              withId:(id)arg;

+ (id)invokeStaticMethodWithIOSClass:(IOSClass *)objectClass
                        withNSString:(NSString *)methodName
                   withNSObjectArray:(IOSObjectArray *)args;

+ (id)invokeStaticMethodWithIOSClass:(IOSClass *)objectClass
                        withNSString:(NSString *)methodName
                   withNSObjectArray:(IOSObjectArray *)args
                   withIOSClassArray:(IOSObjectArray *)parameterTypes;

+ (jboolean)isAssignmentCompatibleWithIOSClass:(IOSClass *)parameterType
                                  withIOSClass:(IOSClass *)parameterization;

+ (void)setCacheMethodsWithBoolean:(jboolean)cacheMethods;

+ (IOSClass *)toNonPrimitiveClassWithIOSClass:(IOSClass *)clazz;

@end

J2OBJC_STATIC_INIT(OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils)

FOUNDATION_EXPORT void OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_setCacheMethodsWithBoolean_(jboolean cacheMethods);

FOUNDATION_EXPORT jint OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_clearCache();

FOUNDATION_EXPORT id OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_invokeMethodWithId_withNSString_withId_(id object, NSString *methodName, id arg);

FOUNDATION_EXPORT id OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_invokeMethodWithId_withNSString_withNSObjectArray_(id object, NSString *methodName, IOSObjectArray *args);

FOUNDATION_EXPORT id OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_invokeMethodWithId_withNSString_withNSObjectArray_withIOSClassArray_(id object, NSString *methodName, IOSObjectArray *args, IOSObjectArray *parameterTypes);

FOUNDATION_EXPORT id OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_invokeExactMethodWithId_withNSString_withId_(id object, NSString *methodName, id arg);

FOUNDATION_EXPORT id OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_invokeExactMethodWithId_withNSString_withNSObjectArray_(id object, NSString *methodName, IOSObjectArray *args);

FOUNDATION_EXPORT id OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_invokeExactMethodWithId_withNSString_withNSObjectArray_withIOSClassArray_(id object, NSString *methodName, IOSObjectArray *args, IOSObjectArray *parameterTypes);

FOUNDATION_EXPORT id OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_invokeExactStaticMethodWithIOSClass_withNSString_withNSObjectArray_withIOSClassArray_(IOSClass *objectClass, NSString *methodName, IOSObjectArray *args, IOSObjectArray *parameterTypes);

FOUNDATION_EXPORT id OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_invokeStaticMethodWithIOSClass_withNSString_withId_(IOSClass *objectClass, NSString *methodName, id arg);

FOUNDATION_EXPORT id OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_invokeStaticMethodWithIOSClass_withNSString_withNSObjectArray_(IOSClass *objectClass, NSString *methodName, IOSObjectArray *args);

FOUNDATION_EXPORT id OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_invokeStaticMethodWithIOSClass_withNSString_withNSObjectArray_withIOSClassArray_(IOSClass *objectClass, NSString *methodName, IOSObjectArray *args, IOSObjectArray *parameterTypes);

FOUNDATION_EXPORT id OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_invokeExactStaticMethodWithIOSClass_withNSString_withId_(IOSClass *objectClass, NSString *methodName, id arg);

FOUNDATION_EXPORT id OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_invokeExactStaticMethodWithIOSClass_withNSString_withNSObjectArray_(IOSClass *objectClass, NSString *methodName, IOSObjectArray *args);

FOUNDATION_EXPORT JavaLangReflectMethod *OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_getAccessibleMethodWithIOSClass_withNSString_withIOSClass_(IOSClass *clazz, NSString *methodName, IOSClass *parameterType);

FOUNDATION_EXPORT JavaLangReflectMethod *OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_getAccessibleMethodWithIOSClass_withNSString_withIOSClassArray_(IOSClass *clazz, NSString *methodName, IOSObjectArray *parameterTypes);

FOUNDATION_EXPORT JavaLangReflectMethod *OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_getAccessibleMethodWithJavaLangReflectMethod_(JavaLangReflectMethod *method);

FOUNDATION_EXPORT JavaLangReflectMethod *OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_getAccessibleMethodWithIOSClass_withJavaLangReflectMethod_(IOSClass *clazz, JavaLangReflectMethod *method);

FOUNDATION_EXPORT JavaLangReflectMethod *OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_getMatchingAccessibleMethodWithIOSClass_withNSString_withIOSClassArray_(IOSClass *clazz, NSString *methodName, IOSObjectArray *parameterTypes);

FOUNDATION_EXPORT jboolean OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_isAssignmentCompatibleWithIOSClass_withIOSClass_(IOSClass *parameterType, IOSClass *parameterization);

FOUNDATION_EXPORT IOSClass *OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_getPrimitiveWrapperWithIOSClass_(IOSClass *primitiveType);

FOUNDATION_EXPORT IOSClass *OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_getPrimitiveTypeWithIOSClass_(IOSClass *wrapperType);

FOUNDATION_EXPORT IOSClass *OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_toNonPrimitiveClassWithIOSClass_(IOSClass *clazz);

FOUNDATION_EXPORT void OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_init(OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils *self);

FOUNDATION_EXPORT OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils *new_OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils *create_OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_init();

J2OBJC_TYPE_LITERAL_HEADER(OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils")
