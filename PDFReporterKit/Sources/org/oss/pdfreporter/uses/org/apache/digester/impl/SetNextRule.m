//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-extensions/src/org/oss/pdfreporter/uses/org/apache/digester/impl/SetNextRule.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Exception.h"
#include "java/lang/StringBuffer.h"
#include "java/util/logging/Level.h"
#include "java/util/logging/Logger.h"
#include "org/oss/pdfreporter/uses/org/apache/commons/beanutils/MethodUtils.h"
#include "org/oss/pdfreporter/uses/org/apache/digester/IDigester.h"
#include "org/oss/pdfreporter/uses/org/apache/digester/impl/Rule.h"
#include "org/oss/pdfreporter/uses/org/apache/digester/impl/SetNextRule.h"

inline JavaUtilLoggingLogger *OrgOssPdfreporterUsesOrgApacheDigesterImplSetNextRule_get_logger();
static JavaUtilLoggingLogger *OrgOssPdfreporterUsesOrgApacheDigesterImplSetNextRule_logger;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterUsesOrgApacheDigesterImplSetNextRule, logger, JavaUtilLoggingLogger *)

J2OBJC_INITIALIZED_DEFN(OrgOssPdfreporterUsesOrgApacheDigesterImplSetNextRule)

@implementation OrgOssPdfreporterUsesOrgApacheDigesterImplSetNextRule

- (instancetype)initWithNSString:(NSString *)methodName {
  OrgOssPdfreporterUsesOrgApacheDigesterImplSetNextRule_initWithNSString_(self, methodName);
  return self;
}

- (instancetype)initWithNSString:(NSString *)methodName
                    withNSString:(NSString *)paramType {
  OrgOssPdfreporterUsesOrgApacheDigesterImplSetNextRule_initWithNSString_withNSString_(self, methodName, paramType);
  return self;
}

- (void)end {
  id child = [((id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>) nil_chk(digester_)) peekWithInt:0];
  id parent = [((id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>) nil_chk(digester_)) peekWithInt:1];
  if ([((JavaUtilLoggingLogger *) nil_chk(OrgOssPdfreporterUsesOrgApacheDigesterImplSetNextRule_logger)) isLoggableWithJavaUtilLoggingLevel:JreLoadStatic(JavaUtilLoggingLevel, FINEST)]) {
    if (parent == nil) {
      [OrgOssPdfreporterUsesOrgApacheDigesterImplSetNextRule_logger finestWithNSString:JreStrcat("$$$$C@C", @"[SetNextRule]{", [((id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>) nil_chk(digester_)) getMatch], @"} Call [NULL PARENT].", methodName_, '(', child, ')')];
    }
    else {
      [OrgOssPdfreporterUsesOrgApacheDigesterImplSetNextRule_logger finestWithNSString:JreStrcat("$$$$C$C@C", @"[SetNextRule]{", [((id<OrgOssPdfreporterUsesOrgApacheDigesterIDigester>) nil_chk(digester_)) getMatch], @"} Call ", [[parent getClass] getName], '.', methodName_, '(', child, ')')];
    }
  }
  IOSObjectArray *paramTypes = [IOSObjectArray newArrayWithLength:1 type:IOSClass_class_()];
  if (paramType_ != nil) {
    (void) IOSObjectArray_Set(paramTypes, 0, IOSClass_forName_(paramType_));
  }
  else {
    (void) IOSObjectArray_Set(paramTypes, 0, [nil_chk(child) getClass]);
  }
  if (useExactMatch_) {
    (void) OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_invokeExactMethodWithId_withNSString_withNSObjectArray_withIOSClassArray_(parent, methodName_, [IOSObjectArray newArrayWithObjects:(id[]){ child } count:1 type:NSObject_class_()], paramTypes);
  }
  else {
    (void) OrgOssPdfreporterUsesOrgApacheCommonsBeanutilsMethodUtils_invokeMethodWithId_withNSString_withNSObjectArray_withIOSClassArray_(parent, methodName_, [IOSObjectArray newArrayWithObjects:(id[]){ child } count:1 type:NSObject_class_()], paramTypes);
  }
}

- (NSString *)description {
  JavaLangStringBuffer *sb = new_JavaLangStringBuffer_initWithNSString_(@"SetNextRule[");
  (void) [sb appendWithNSString:@"methodName="];
  (void) [sb appendWithNSString:methodName_];
  (void) [sb appendWithNSString:@", paramType="];
  (void) [sb appendWithNSString:paramType_];
  (void) [sb appendWithNSString:@"]"];
  return ([sb description]);
}

+ (void)initialize {
  if (self == [OrgOssPdfreporterUsesOrgApacheDigesterImplSetNextRule class]) {
    OrgOssPdfreporterUsesOrgApacheDigesterImplSetNextRule_logger = JavaUtilLoggingLogger_getLoggerWithNSString_([OrgOssPdfreporterUsesOrgApacheDigesterImplSetNextRule_class_() getName]);
    J2OBJC_SET_INITIALIZED(OrgOssPdfreporterUsesOrgApacheDigesterImplSetNextRule)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:", "SetNextRule", NULL, 0x1, NULL, NULL },
    { "initWithNSString:withNSString:", "SetNextRule", NULL, 0x1, NULL, NULL },
    { "end", NULL, "V", 0x1, "Ljava.lang.Exception;", NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "logger", "logger", 0x1a, "Ljava.util.logging.Logger;", &OrgOssPdfreporterUsesOrgApacheDigesterImplSetNextRule_logger, NULL, .constantValue.asLong = 0 },
    { "methodName_", NULL, 0x4, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "paramType_", NULL, 0x4, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "useExactMatch_", NULL, 0x4, "Z", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterUsesOrgApacheDigesterImplSetNextRule = { 2, "SetNextRule", "org.oss.pdfreporter.uses.org.apache.digester.impl", NULL, 0x1, 4, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterUsesOrgApacheDigesterImplSetNextRule;
}

@end

void OrgOssPdfreporterUsesOrgApacheDigesterImplSetNextRule_initWithNSString_(OrgOssPdfreporterUsesOrgApacheDigesterImplSetNextRule *self, NSString *methodName) {
  OrgOssPdfreporterUsesOrgApacheDigesterImplSetNextRule_initWithNSString_withNSString_(self, methodName, nil);
}

OrgOssPdfreporterUsesOrgApacheDigesterImplSetNextRule *new_OrgOssPdfreporterUsesOrgApacheDigesterImplSetNextRule_initWithNSString_(NSString *methodName) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterUsesOrgApacheDigesterImplSetNextRule, initWithNSString_, methodName)
}

OrgOssPdfreporterUsesOrgApacheDigesterImplSetNextRule *create_OrgOssPdfreporterUsesOrgApacheDigesterImplSetNextRule_initWithNSString_(NSString *methodName) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterUsesOrgApacheDigesterImplSetNextRule, initWithNSString_, methodName)
}

void OrgOssPdfreporterUsesOrgApacheDigesterImplSetNextRule_initWithNSString_withNSString_(OrgOssPdfreporterUsesOrgApacheDigesterImplSetNextRule *self, NSString *methodName, NSString *paramType) {
  OrgOssPdfreporterUsesOrgApacheDigesterImplRule_init(self);
  self->methodName_ = nil;
  self->paramType_ = nil;
  self->useExactMatch_ = false;
  self->methodName_ = methodName;
  self->paramType_ = paramType;
}

OrgOssPdfreporterUsesOrgApacheDigesterImplSetNextRule *new_OrgOssPdfreporterUsesOrgApacheDigesterImplSetNextRule_initWithNSString_withNSString_(NSString *methodName, NSString *paramType) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterUsesOrgApacheDigesterImplSetNextRule, initWithNSString_withNSString_, methodName, paramType)
}

OrgOssPdfreporterUsesOrgApacheDigesterImplSetNextRule *create_OrgOssPdfreporterUsesOrgApacheDigesterImplSetNextRule_initWithNSString_withNSString_(NSString *methodName, NSString *paramType) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterUsesOrgApacheDigesterImplSetNextRule, initWithNSString_withNSString_, methodName, paramType)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterUsesOrgApacheDigesterImplSetNextRule)
