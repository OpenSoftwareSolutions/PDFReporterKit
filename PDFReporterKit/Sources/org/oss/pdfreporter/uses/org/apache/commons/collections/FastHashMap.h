//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-extensions/src/org/oss/pdfreporter/uses/org/apache/commons/collections/FastHashMap.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap")
#ifdef RESTRICT_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap
#define INCLUDE_ALL_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap 0
#else
#define INCLUDE_ALL_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap 1
#endif
#undef RESTRICT_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap

#if !defined (OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_) && (INCLUDE_ALL_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap || defined(INCLUDE_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap))
#define OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_

#define RESTRICT_JavaUtilHashMap 1
#define INCLUDE_JavaUtilHashMap 1
#include "java/util/HashMap.h"

@protocol JavaUtilCollection;
@protocol JavaUtilMap;
@protocol JavaUtilSet;

@interface OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap : JavaUtilHashMap {
 @public
  JavaUtilHashMap *map_;
  jboolean fast_;
}

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithInt:(jint)capacity;

- (instancetype)initWithInt:(jint)capacity
                  withFloat:(jfloat)factor;

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)map;

- (void)clear;

- (id)clone;

- (jboolean)containsKeyWithId:(id)key;

- (jboolean)containsValueWithId:(id)value;

- (id<JavaUtilSet>)entrySet;

- (jboolean)isEqual:(id)o;

- (id)getWithId:(id)key;

- (jboolean)getFast;

- (NSUInteger)hash;

- (jboolean)isEmpty;

- (id<JavaUtilSet>)keySet;

- (id)putWithId:(id)key
         withId:(id)value;

- (void)putAllWithJavaUtilMap:(id<JavaUtilMap>)inArg;

- (id)removeWithId:(id)key;

- (void)setFastWithBoolean:(jboolean)fast;

- (jint)size;

- (id<JavaUtilCollection>)values;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap)

J2OBJC_FIELD_SETTER(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap, map_, JavaUtilHashMap *)

FOUNDATION_EXPORT void OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_init(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap *self);

FOUNDATION_EXPORT OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap *new_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap *create_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_init();

FOUNDATION_EXPORT void OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_initWithInt_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap *self, jint capacity);

FOUNDATION_EXPORT OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap *new_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_initWithInt_(jint capacity) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap *create_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_initWithInt_(jint capacity);

FOUNDATION_EXPORT void OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_initWithInt_withFloat_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap *self, jint capacity, jfloat factor);

FOUNDATION_EXPORT OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap *new_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_initWithInt_withFloat_(jint capacity, jfloat factor) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap *create_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_initWithInt_withFloat_(jint capacity, jfloat factor);

FOUNDATION_EXPORT void OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_initWithJavaUtilMap_(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap *self, id<JavaUtilMap> map);

FOUNDATION_EXPORT OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap *new_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_initWithJavaUtilMap_(id<JavaUtilMap> map) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap *create_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap_initWithJavaUtilMap_(id<JavaUtilMap> map);

J2OBJC_TYPE_LITERAL_HEADER(OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgOssPdfreporterUsesOrgApacheCommonsCollectionsFastHashMap")
