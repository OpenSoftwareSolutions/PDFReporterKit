//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-extensions/src/org/oss/pdfreporter/uses/org/oss/jshuntingyard/lexer/ExpressionToken.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgOssPdfreporterUsesOrgOssJshuntingyardLexerExpressionToken")
#ifdef RESTRICT_OrgOssPdfreporterUsesOrgOssJshuntingyardLexerExpressionToken
#define INCLUDE_ALL_OrgOssPdfreporterUsesOrgOssJshuntingyardLexerExpressionToken 0
#else
#define INCLUDE_ALL_OrgOssPdfreporterUsesOrgOssJshuntingyardLexerExpressionToken 1
#endif
#undef RESTRICT_OrgOssPdfreporterUsesOrgOssJshuntingyardLexerExpressionToken

#if !defined (OrgOssPdfreporterUsesOrgOssJshuntingyardLexerExpressionToken_) && (INCLUDE_ALL_OrgOssPdfreporterUsesOrgOssJshuntingyardLexerExpressionToken || defined(INCLUDE_OrgOssPdfreporterUsesOrgOssJshuntingyardLexerExpressionToken))
#define OrgOssPdfreporterUsesOrgOssJshuntingyardLexerExpressionToken_

@class OrgOssPdfreporterUsesOrgOssJshuntingyardLexerTokenType;

@interface OrgOssPdfreporterUsesOrgOssJshuntingyardLexerExpressionToken : NSObject

#pragma mark Public

- (instancetype)initWithOrgOssPdfreporterUsesOrgOssJshuntingyardLexerTokenType:(OrgOssPdfreporterUsesOrgOssJshuntingyardLexerTokenType *)type
                                                                       withInt:(jint)startPos
                                                                       withInt:(jint)endPos
                                                                  withNSString:(NSString *)source;

- (NSString *)getToken;

- (OrgOssPdfreporterUsesOrgOssJshuntingyardLexerTokenType *)getType;

- (jboolean)isAtExpressionBegin;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgOssPdfreporterUsesOrgOssJshuntingyardLexerExpressionToken)

FOUNDATION_EXPORT void OrgOssPdfreporterUsesOrgOssJshuntingyardLexerExpressionToken_initWithOrgOssPdfreporterUsesOrgOssJshuntingyardLexerTokenType_withInt_withInt_withNSString_(OrgOssPdfreporterUsesOrgOssJshuntingyardLexerExpressionToken *self, OrgOssPdfreporterUsesOrgOssJshuntingyardLexerTokenType *type, jint startPos, jint endPos, NSString *source);

FOUNDATION_EXPORT OrgOssPdfreporterUsesOrgOssJshuntingyardLexerExpressionToken *new_OrgOssPdfreporterUsesOrgOssJshuntingyardLexerExpressionToken_initWithOrgOssPdfreporterUsesOrgOssJshuntingyardLexerTokenType_withInt_withInt_withNSString_(OrgOssPdfreporterUsesOrgOssJshuntingyardLexerTokenType *type, jint startPos, jint endPos, NSString *source) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgOssPdfreporterUsesOrgOssJshuntingyardLexerExpressionToken *create_OrgOssPdfreporterUsesOrgOssJshuntingyardLexerExpressionToken_initWithOrgOssPdfreporterUsesOrgOssJshuntingyardLexerTokenType_withInt_withInt_withNSString_(OrgOssPdfreporterUsesOrgOssJshuntingyardLexerTokenType *type, jint startPos, jint endPos, NSString *source);

J2OBJC_TYPE_LITERAL_HEADER(OrgOssPdfreporterUsesOrgOssJshuntingyardLexerExpressionToken)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgOssPdfreporterUsesOrgOssJshuntingyardLexerExpressionToken")
