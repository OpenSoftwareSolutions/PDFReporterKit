//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-extensions/src/org/oss/pdfreporter/uses/org/oss/jshuntingyard/lexer/ExpressionTokenizer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgOssPdfreporterUsesOrgOssJshuntingyardLexerExpressionTokenizer")
#ifdef RESTRICT_OrgOssPdfreporterUsesOrgOssJshuntingyardLexerExpressionTokenizer
#define INCLUDE_ALL_OrgOssPdfreporterUsesOrgOssJshuntingyardLexerExpressionTokenizer 0
#else
#define INCLUDE_ALL_OrgOssPdfreporterUsesOrgOssJshuntingyardLexerExpressionTokenizer 1
#endif
#undef RESTRICT_OrgOssPdfreporterUsesOrgOssJshuntingyardLexerExpressionTokenizer

#if !defined (OrgOssPdfreporterUsesOrgOssJshuntingyardLexerExpressionTokenizer_) && (INCLUDE_ALL_OrgOssPdfreporterUsesOrgOssJshuntingyardLexerExpressionTokenizer || defined(INCLUDE_OrgOssPdfreporterUsesOrgOssJshuntingyardLexerExpressionTokenizer))
#define OrgOssPdfreporterUsesOrgOssJshuntingyardLexerExpressionTokenizer_

@protocol JavaUtilList;

@interface OrgOssPdfreporterUsesOrgOssJshuntingyardLexerExpressionTokenizer : NSObject

#pragma mark Public

+ (id<JavaUtilList>)tokenizeWithNSString:(NSString *)source;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgOssPdfreporterUsesOrgOssJshuntingyardLexerExpressionTokenizer)

FOUNDATION_EXPORT id<JavaUtilList> OrgOssPdfreporterUsesOrgOssJshuntingyardLexerExpressionTokenizer_tokenizeWithNSString_(NSString *source);

J2OBJC_TYPE_LITERAL_HEADER(OrgOssPdfreporterUsesOrgOssJshuntingyardLexerExpressionTokenizer)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgOssPdfreporterUsesOrgOssJshuntingyardLexerExpressionTokenizer")
