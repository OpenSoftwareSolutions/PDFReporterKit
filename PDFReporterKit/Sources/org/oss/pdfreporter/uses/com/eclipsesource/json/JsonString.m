//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-extensions/src/org/oss/pdfreporter/uses/com/eclipsesource/json/JsonString.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/NullPointerException.h"
#include "org/oss/pdfreporter/uses/com/eclipsesource/json/JsonString.h"
#include "org/oss/pdfreporter/uses/com/eclipsesource/json/JsonValue.h"
#include "org/oss/pdfreporter/uses/com/eclipsesource/json/JsonWriter.h"

@interface OrgOssPdfreporterUsesComEclipsesourceJsonJsonString () {
 @public
  NSString *string_;
}

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterUsesComEclipsesourceJsonJsonString, string_, NSString *)

@implementation OrgOssPdfreporterUsesComEclipsesourceJsonJsonString

- (instancetype)initWithNSString:(NSString *)string {
  OrgOssPdfreporterUsesComEclipsesourceJsonJsonString_initWithNSString_(self, string);
  return self;
}

- (void)writeWithOrgOssPdfreporterUsesComEclipsesourceJsonJsonWriter:(OrgOssPdfreporterUsesComEclipsesourceJsonJsonWriter *)writer {
  [((OrgOssPdfreporterUsesComEclipsesourceJsonJsonWriter *) nil_chk(writer)) writeStringWithNSString:string_];
}

- (jboolean)isString {
  return true;
}

- (NSString *)asString {
  return string_;
}

- (NSUInteger)hash {
  return ((jint) [((NSString *) nil_chk(string_)) hash]);
}

- (jboolean)isEqual:(id)object {
  if (self == object) {
    return true;
  }
  if (object == nil) {
    return false;
  }
  if ([self getClass] != (id) [object getClass]) {
    return false;
  }
  OrgOssPdfreporterUsesComEclipsesourceJsonJsonString *other = (OrgOssPdfreporterUsesComEclipsesourceJsonJsonString *) cast_chk(object, [OrgOssPdfreporterUsesComEclipsesourceJsonJsonString class]);
  return [((NSString *) nil_chk(string_)) isEqual:other->string_];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:", "JsonString", NULL, 0x0, NULL, NULL },
    { "writeWithOrgOssPdfreporterUsesComEclipsesourceJsonJsonWriter:", "write", "V", 0x0, "Ljava.io.IOException;", NULL },
    { "isString", NULL, "Z", 0x1, NULL, NULL },
    { "asString", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "string_", NULL, 0x12, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterUsesComEclipsesourceJsonJsonString = { 2, "JsonString", "org.oss.pdfreporter.uses.com.eclipsesource.json", NULL, 0x0, 6, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterUsesComEclipsesourceJsonJsonString;
}

@end

void OrgOssPdfreporterUsesComEclipsesourceJsonJsonString_initWithNSString_(OrgOssPdfreporterUsesComEclipsesourceJsonJsonString *self, NSString *string) {
  OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue_init(self);
  if (string == nil) {
    @throw new_JavaLangNullPointerException_initWithNSString_(@"string is null");
  }
  self->string_ = string;
}

OrgOssPdfreporterUsesComEclipsesourceJsonJsonString *new_OrgOssPdfreporterUsesComEclipsesourceJsonJsonString_initWithNSString_(NSString *string) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterUsesComEclipsesourceJsonJsonString, initWithNSString_, string)
}

OrgOssPdfreporterUsesComEclipsesourceJsonJsonString *create_OrgOssPdfreporterUsesComEclipsesourceJsonJsonString_initWithNSString_(NSString *string) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterUsesComEclipsesourceJsonJsonString, initWithNSString_, string)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterUsesComEclipsesourceJsonJsonString)
