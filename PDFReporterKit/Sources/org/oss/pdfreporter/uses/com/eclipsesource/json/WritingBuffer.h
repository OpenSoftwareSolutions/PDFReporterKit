//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-extensions/src/org/oss/pdfreporter/uses/com/eclipsesource/json/WritingBuffer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgOssPdfreporterUsesComEclipsesourceJsonWritingBuffer")
#ifdef RESTRICT_OrgOssPdfreporterUsesComEclipsesourceJsonWritingBuffer
#define INCLUDE_ALL_OrgOssPdfreporterUsesComEclipsesourceJsonWritingBuffer 0
#else
#define INCLUDE_ALL_OrgOssPdfreporterUsesComEclipsesourceJsonWritingBuffer 1
#endif
#undef RESTRICT_OrgOssPdfreporterUsesComEclipsesourceJsonWritingBuffer

#if !defined (OrgOssPdfreporterUsesComEclipsesourceJsonWritingBuffer_) && (INCLUDE_ALL_OrgOssPdfreporterUsesComEclipsesourceJsonWritingBuffer || defined(INCLUDE_OrgOssPdfreporterUsesComEclipsesourceJsonWritingBuffer))
#define OrgOssPdfreporterUsesComEclipsesourceJsonWritingBuffer_

#define RESTRICT_JavaIoWriter 1
#define INCLUDE_JavaIoWriter 1
#include "java/io/Writer.h"

@class IOSCharArray;

@interface OrgOssPdfreporterUsesComEclipsesourceJsonWritingBuffer : JavaIoWriter

#pragma mark Public

- (void)close;

- (void)flush;

- (void)writeWithCharArray:(IOSCharArray *)cbuf
                   withInt:(jint)off
                   withInt:(jint)len;

- (void)writeWithInt:(jint)c;

- (void)writeWithNSString:(NSString *)str
                  withInt:(jint)off
                  withInt:(jint)len;

#pragma mark Package-Private

- (instancetype)initWithJavaIoWriter:(JavaIoWriter *)writer;

- (instancetype)initWithJavaIoWriter:(JavaIoWriter *)writer
                             withInt:(jint)bufferSize;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgOssPdfreporterUsesComEclipsesourceJsonWritingBuffer)

FOUNDATION_EXPORT void OrgOssPdfreporterUsesComEclipsesourceJsonWritingBuffer_initWithJavaIoWriter_(OrgOssPdfreporterUsesComEclipsesourceJsonWritingBuffer *self, JavaIoWriter *writer);

FOUNDATION_EXPORT OrgOssPdfreporterUsesComEclipsesourceJsonWritingBuffer *new_OrgOssPdfreporterUsesComEclipsesourceJsonWritingBuffer_initWithJavaIoWriter_(JavaIoWriter *writer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgOssPdfreporterUsesComEclipsesourceJsonWritingBuffer *create_OrgOssPdfreporterUsesComEclipsesourceJsonWritingBuffer_initWithJavaIoWriter_(JavaIoWriter *writer);

FOUNDATION_EXPORT void OrgOssPdfreporterUsesComEclipsesourceJsonWritingBuffer_initWithJavaIoWriter_withInt_(OrgOssPdfreporterUsesComEclipsesourceJsonWritingBuffer *self, JavaIoWriter *writer, jint bufferSize);

FOUNDATION_EXPORT OrgOssPdfreporterUsesComEclipsesourceJsonWritingBuffer *new_OrgOssPdfreporterUsesComEclipsesourceJsonWritingBuffer_initWithJavaIoWriter_withInt_(JavaIoWriter *writer, jint bufferSize) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgOssPdfreporterUsesComEclipsesourceJsonWritingBuffer *create_OrgOssPdfreporterUsesComEclipsesourceJsonWritingBuffer_initWithJavaIoWriter_withInt_(JavaIoWriter *writer, jint bufferSize);

J2OBJC_TYPE_LITERAL_HEADER(OrgOssPdfreporterUsesComEclipsesourceJsonWritingBuffer)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgOssPdfreporterUsesComEclipsesourceJsonWritingBuffer")
