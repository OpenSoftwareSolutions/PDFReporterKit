//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-extensions/src/org/oss/pdfreporter/uses/com/eclipsesource/json/JsonNumber.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/Double.h"
#include "java/lang/Float.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/NullPointerException.h"
#include "org/oss/pdfreporter/uses/com/eclipsesource/json/JsonNumber.h"
#include "org/oss/pdfreporter/uses/com/eclipsesource/json/JsonValue.h"
#include "org/oss/pdfreporter/uses/com/eclipsesource/json/JsonWriter.h"

@interface OrgOssPdfreporterUsesComEclipsesourceJsonJsonNumber () {
 @public
  NSString *string_;
}

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterUsesComEclipsesourceJsonJsonNumber, string_, NSString *)

@implementation OrgOssPdfreporterUsesComEclipsesourceJsonJsonNumber

- (instancetype)initWithNSString:(NSString *)string {
  OrgOssPdfreporterUsesComEclipsesourceJsonJsonNumber_initWithNSString_(self, string);
  return self;
}

- (NSString *)description {
  return string_;
}

- (void)writeWithOrgOssPdfreporterUsesComEclipsesourceJsonJsonWriter:(OrgOssPdfreporterUsesComEclipsesourceJsonJsonWriter *)writer {
  [((OrgOssPdfreporterUsesComEclipsesourceJsonJsonWriter *) nil_chk(writer)) writeNumberWithNSString:string_];
}

- (jboolean)isNumber {
  return true;
}

- (jint)asInt {
  return JavaLangInteger_parseIntWithNSString_withInt_(string_, 10);
}

- (jlong)asLong {
  return JavaLangLong_parseLongWithNSString_withInt_(string_, 10);
}

- (jfloat)asFloat {
  return JavaLangFloat_parseFloatWithNSString_(string_);
}

- (jdouble)asDouble {
  return JavaLangDouble_parseDoubleWithNSString_(string_);
}

- (NSUInteger)hash {
  return ((jint) [((NSString *) nil_chk(string_)) hash]);
}

- (jboolean)isEqual:(id)object {
  if (self == object) {
    return true;
  }
  if (object == nil) {
    return false;
  }
  if ([self getClass] != (id) [object getClass]) {
    return false;
  }
  OrgOssPdfreporterUsesComEclipsesourceJsonJsonNumber *other = (OrgOssPdfreporterUsesComEclipsesourceJsonJsonNumber *) cast_chk(object, [OrgOssPdfreporterUsesComEclipsesourceJsonJsonNumber class]);
  return [((NSString *) nil_chk(string_)) isEqual:other->string_];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:", "JsonNumber", NULL, 0x0, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "writeWithOrgOssPdfreporterUsesComEclipsesourceJsonJsonWriter:", "write", "V", 0x0, "Ljava.io.IOException;", NULL },
    { "isNumber", NULL, "Z", 0x1, NULL, NULL },
    { "asInt", NULL, "I", 0x1, NULL, NULL },
    { "asLong", NULL, "J", 0x1, NULL, NULL },
    { "asFloat", NULL, "F", 0x1, NULL, NULL },
    { "asDouble", NULL, "D", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "string_", NULL, 0x12, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterUsesComEclipsesourceJsonJsonNumber = { 2, "JsonNumber", "org.oss.pdfreporter.uses.com.eclipsesource.json", NULL, 0x0, 10, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterUsesComEclipsesourceJsonJsonNumber;
}

@end

void OrgOssPdfreporterUsesComEclipsesourceJsonJsonNumber_initWithNSString_(OrgOssPdfreporterUsesComEclipsesourceJsonJsonNumber *self, NSString *string) {
  OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue_init(self);
  if (string == nil) {
    @throw new_JavaLangNullPointerException_initWithNSString_(@"string is null");
  }
  self->string_ = string;
}

OrgOssPdfreporterUsesComEclipsesourceJsonJsonNumber *new_OrgOssPdfreporterUsesComEclipsesourceJsonJsonNumber_initWithNSString_(NSString *string) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterUsesComEclipsesourceJsonJsonNumber, initWithNSString_, string)
}

OrgOssPdfreporterUsesComEclipsesourceJsonJsonNumber *create_OrgOssPdfreporterUsesComEclipsesourceJsonJsonNumber_initWithNSString_(NSString *string) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterUsesComEclipsesourceJsonJsonNumber, initWithNSString_, string)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterUsesComEclipsesourceJsonJsonNumber)
