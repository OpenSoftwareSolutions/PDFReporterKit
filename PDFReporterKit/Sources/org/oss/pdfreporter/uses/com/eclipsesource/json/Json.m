//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-extensions/src/org/oss/pdfreporter/uses/com/eclipsesource/json/Json.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/io/Reader.h"
#include "java/lang/Double.h"
#include "java/lang/Float.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/NullPointerException.h"
#include "org/oss/pdfreporter/uses/com/eclipsesource/json/Json.h"
#include "org/oss/pdfreporter/uses/com/eclipsesource/json/JsonArray.h"
#include "org/oss/pdfreporter/uses/com/eclipsesource/json/JsonHandler.h"
#include "org/oss/pdfreporter/uses/com/eclipsesource/json/JsonLiteral.h"
#include "org/oss/pdfreporter/uses/com/eclipsesource/json/JsonNumber.h"
#include "org/oss/pdfreporter/uses/com/eclipsesource/json/JsonObject.h"
#include "org/oss/pdfreporter/uses/com/eclipsesource/json/JsonParser.h"
#include "org/oss/pdfreporter/uses/com/eclipsesource/json/JsonString.h"
#include "org/oss/pdfreporter/uses/com/eclipsesource/json/JsonValue.h"

@interface OrgOssPdfreporterUsesComEclipsesourceJsonJson ()

- (instancetype)init;

+ (NSString *)cutOffPointZeroWithNSString:(NSString *)string;

@end

__attribute__((unused)) static void OrgOssPdfreporterUsesComEclipsesourceJsonJson_init(OrgOssPdfreporterUsesComEclipsesourceJsonJson *self);

__attribute__((unused)) static OrgOssPdfreporterUsesComEclipsesourceJsonJson *new_OrgOssPdfreporterUsesComEclipsesourceJsonJson_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgOssPdfreporterUsesComEclipsesourceJsonJson *create_OrgOssPdfreporterUsesComEclipsesourceJsonJson_init();

__attribute__((unused)) static NSString *OrgOssPdfreporterUsesComEclipsesourceJsonJson_cutOffPointZeroWithNSString_(NSString *string);

J2OBJC_INITIALIZED_DEFN(OrgOssPdfreporterUsesComEclipsesourceJsonJson)

OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue *OrgOssPdfreporterUsesComEclipsesourceJsonJson_NULL;
OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue *OrgOssPdfreporterUsesComEclipsesourceJsonJson_TRUE;
OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue *OrgOssPdfreporterUsesComEclipsesourceJsonJson_FALSE;

@implementation OrgOssPdfreporterUsesComEclipsesourceJsonJson

+ (OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue *)NULL_ {
  return OrgOssPdfreporterUsesComEclipsesourceJsonJson_NULL;
}

+ (OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue *)TRUE_ {
  return OrgOssPdfreporterUsesComEclipsesourceJsonJson_TRUE;
}

+ (OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue *)FALSE_ {
  return OrgOssPdfreporterUsesComEclipsesourceJsonJson_FALSE;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterUsesComEclipsesourceJsonJson_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue *)valueWithInt:(jint)value {
  return OrgOssPdfreporterUsesComEclipsesourceJsonJson_valueWithInt_(value);
}

+ (OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue *)valueWithLong:(jlong)value {
  return OrgOssPdfreporterUsesComEclipsesourceJsonJson_valueWithLong_(value);
}

+ (OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue *)valueWithFloat:(jfloat)value {
  return OrgOssPdfreporterUsesComEclipsesourceJsonJson_valueWithFloat_(value);
}

+ (OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue *)valueWithDouble:(jdouble)value {
  return OrgOssPdfreporterUsesComEclipsesourceJsonJson_valueWithDouble_(value);
}

+ (OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue *)valueWithNSString:(NSString *)string {
  return OrgOssPdfreporterUsesComEclipsesourceJsonJson_valueWithNSString_(string);
}

+ (OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue *)valueWithBoolean:(jboolean)value {
  return OrgOssPdfreporterUsesComEclipsesourceJsonJson_valueWithBoolean_(value);
}

+ (OrgOssPdfreporterUsesComEclipsesourceJsonJsonArray *)array {
  return OrgOssPdfreporterUsesComEclipsesourceJsonJson_array();
}

+ (OrgOssPdfreporterUsesComEclipsesourceJsonJsonArray *)arrayWithIntArray:(IOSIntArray *)values {
  return OrgOssPdfreporterUsesComEclipsesourceJsonJson_arrayWithIntArray_(values);
}

+ (OrgOssPdfreporterUsesComEclipsesourceJsonJsonArray *)arrayWithLongArray:(IOSLongArray *)values {
  return OrgOssPdfreporterUsesComEclipsesourceJsonJson_arrayWithLongArray_(values);
}

+ (OrgOssPdfreporterUsesComEclipsesourceJsonJsonArray *)arrayWithFloatArray:(IOSFloatArray *)values {
  return OrgOssPdfreporterUsesComEclipsesourceJsonJson_arrayWithFloatArray_(values);
}

+ (OrgOssPdfreporterUsesComEclipsesourceJsonJsonArray *)arrayWithDoubleArray:(IOSDoubleArray *)values {
  return OrgOssPdfreporterUsesComEclipsesourceJsonJson_arrayWithDoubleArray_(values);
}

+ (OrgOssPdfreporterUsesComEclipsesourceJsonJsonArray *)arrayWithBooleanArray:(IOSBooleanArray *)values {
  return OrgOssPdfreporterUsesComEclipsesourceJsonJson_arrayWithBooleanArray_(values);
}

+ (OrgOssPdfreporterUsesComEclipsesourceJsonJsonArray *)arrayWithNSStringArray:(IOSObjectArray *)strings {
  return OrgOssPdfreporterUsesComEclipsesourceJsonJson_arrayWithNSStringArray_(strings);
}

+ (OrgOssPdfreporterUsesComEclipsesourceJsonJsonObject *)object {
  return OrgOssPdfreporterUsesComEclipsesourceJsonJson_object();
}

+ (OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue *)parseWithNSString:(NSString *)string {
  return OrgOssPdfreporterUsesComEclipsesourceJsonJson_parseWithNSString_(string);
}

+ (OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue *)parseWithJavaIoReader:(JavaIoReader *)reader {
  return OrgOssPdfreporterUsesComEclipsesourceJsonJson_parseWithJavaIoReader_(reader);
}

+ (NSString *)cutOffPointZeroWithNSString:(NSString *)string {
  return OrgOssPdfreporterUsesComEclipsesourceJsonJson_cutOffPointZeroWithNSString_(string);
}

+ (void)initialize {
  if (self == [OrgOssPdfreporterUsesComEclipsesourceJsonJson class]) {
    OrgOssPdfreporterUsesComEclipsesourceJsonJson_NULL = new_OrgOssPdfreporterUsesComEclipsesourceJsonJsonLiteral_initWithNSString_(@"null");
    OrgOssPdfreporterUsesComEclipsesourceJsonJson_TRUE = new_OrgOssPdfreporterUsesComEclipsesourceJsonJsonLiteral_initWithNSString_(@"true");
    OrgOssPdfreporterUsesComEclipsesourceJsonJson_FALSE = new_OrgOssPdfreporterUsesComEclipsesourceJsonJsonLiteral_initWithNSString_(@"false");
    J2OBJC_SET_INITIALIZED(OrgOssPdfreporterUsesComEclipsesourceJsonJson)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "Json", NULL, 0x2, NULL, NULL },
    { "valueWithInt:", "value", "Lorg.oss.pdfreporter.uses.com.eclipsesource.json.JsonValue;", 0x9, NULL, NULL },
    { "valueWithLong:", "value", "Lorg.oss.pdfreporter.uses.com.eclipsesource.json.JsonValue;", 0x9, NULL, NULL },
    { "valueWithFloat:", "value", "Lorg.oss.pdfreporter.uses.com.eclipsesource.json.JsonValue;", 0x9, NULL, NULL },
    { "valueWithDouble:", "value", "Lorg.oss.pdfreporter.uses.com.eclipsesource.json.JsonValue;", 0x9, NULL, NULL },
    { "valueWithNSString:", "value", "Lorg.oss.pdfreporter.uses.com.eclipsesource.json.JsonValue;", 0x9, NULL, NULL },
    { "valueWithBoolean:", "value", "Lorg.oss.pdfreporter.uses.com.eclipsesource.json.JsonValue;", 0x9, NULL, NULL },
    { "array", NULL, "Lorg.oss.pdfreporter.uses.com.eclipsesource.json.JsonArray;", 0x9, NULL, NULL },
    { "arrayWithIntArray:", "array", "Lorg.oss.pdfreporter.uses.com.eclipsesource.json.JsonArray;", 0x89, NULL, NULL },
    { "arrayWithLongArray:", "array", "Lorg.oss.pdfreporter.uses.com.eclipsesource.json.JsonArray;", 0x89, NULL, NULL },
    { "arrayWithFloatArray:", "array", "Lorg.oss.pdfreporter.uses.com.eclipsesource.json.JsonArray;", 0x89, NULL, NULL },
    { "arrayWithDoubleArray:", "array", "Lorg.oss.pdfreporter.uses.com.eclipsesource.json.JsonArray;", 0x89, NULL, NULL },
    { "arrayWithBooleanArray:", "array", "Lorg.oss.pdfreporter.uses.com.eclipsesource.json.JsonArray;", 0x89, NULL, NULL },
    { "arrayWithNSStringArray:", "array", "Lorg.oss.pdfreporter.uses.com.eclipsesource.json.JsonArray;", 0x89, NULL, NULL },
    { "object", NULL, "Lorg.oss.pdfreporter.uses.com.eclipsesource.json.JsonObject;", 0x9, NULL, NULL },
    { "parseWithNSString:", "parse", "Lorg.oss.pdfreporter.uses.com.eclipsesource.json.JsonValue;", 0x9, NULL, NULL },
    { "parseWithJavaIoReader:", "parse", "Lorg.oss.pdfreporter.uses.com.eclipsesource.json.JsonValue;", 0x9, "Ljava.io.IOException;", NULL },
    { "cutOffPointZeroWithNSString:", "cutOffPointZero", "Ljava.lang.String;", 0xa, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "NULL", "NULL", 0x19, "Lorg.oss.pdfreporter.uses.com.eclipsesource.json.JsonValue;", &OrgOssPdfreporterUsesComEclipsesourceJsonJson_NULL, NULL, .constantValue.asLong = 0 },
    { "TRUE", "TRUE", 0x19, "Lorg.oss.pdfreporter.uses.com.eclipsesource.json.JsonValue;", &OrgOssPdfreporterUsesComEclipsesourceJsonJson_TRUE, NULL, .constantValue.asLong = 0 },
    { "FALSE", "FALSE", 0x19, "Lorg.oss.pdfreporter.uses.com.eclipsesource.json.JsonValue;", &OrgOssPdfreporterUsesComEclipsesourceJsonJson_FALSE, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lorg.oss.pdfreporter.uses.com.eclipsesource.json.Json$DefaultHandler;"};
  static const J2ObjcClassInfo _OrgOssPdfreporterUsesComEclipsesourceJsonJson = { 2, "Json", "org.oss.pdfreporter.uses.com.eclipsesource.json", NULL, 0x11, 18, methods, 3, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_OrgOssPdfreporterUsesComEclipsesourceJsonJson;
}

@end

void OrgOssPdfreporterUsesComEclipsesourceJsonJson_init(OrgOssPdfreporterUsesComEclipsesourceJsonJson *self) {
  NSObject_init(self);
}

OrgOssPdfreporterUsesComEclipsesourceJsonJson *new_OrgOssPdfreporterUsesComEclipsesourceJsonJson_init() {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterUsesComEclipsesourceJsonJson, init)
}

OrgOssPdfreporterUsesComEclipsesourceJsonJson *create_OrgOssPdfreporterUsesComEclipsesourceJsonJson_init() {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterUsesComEclipsesourceJsonJson, init)
}

OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue *OrgOssPdfreporterUsesComEclipsesourceJsonJson_valueWithInt_(jint value) {
  OrgOssPdfreporterUsesComEclipsesourceJsonJson_initialize();
  return new_OrgOssPdfreporterUsesComEclipsesourceJsonJsonNumber_initWithNSString_(JavaLangInteger_toStringWithInt_withInt_(value, 10));
}

OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue *OrgOssPdfreporterUsesComEclipsesourceJsonJson_valueWithLong_(jlong value) {
  OrgOssPdfreporterUsesComEclipsesourceJsonJson_initialize();
  return new_OrgOssPdfreporterUsesComEclipsesourceJsonJsonNumber_initWithNSString_(JavaLangLong_toStringWithLong_withInt_(value, 10));
}

OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue *OrgOssPdfreporterUsesComEclipsesourceJsonJson_valueWithFloat_(jfloat value) {
  OrgOssPdfreporterUsesComEclipsesourceJsonJson_initialize();
  if (JavaLangFloat_isInfiniteWithFloat_(value) || JavaLangFloat_isNaNWithFloat_(value)) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Infinite and NaN values not permitted in JSON");
  }
  return new_OrgOssPdfreporterUsesComEclipsesourceJsonJsonNumber_initWithNSString_(OrgOssPdfreporterUsesComEclipsesourceJsonJson_cutOffPointZeroWithNSString_(JavaLangFloat_toStringWithFloat_(value)));
}

OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue *OrgOssPdfreporterUsesComEclipsesourceJsonJson_valueWithDouble_(jdouble value) {
  OrgOssPdfreporterUsesComEclipsesourceJsonJson_initialize();
  if (JavaLangDouble_isInfiniteWithDouble_(value) || JavaLangDouble_isNaNWithDouble_(value)) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Infinite and NaN values not permitted in JSON");
  }
  return new_OrgOssPdfreporterUsesComEclipsesourceJsonJsonNumber_initWithNSString_(OrgOssPdfreporterUsesComEclipsesourceJsonJson_cutOffPointZeroWithNSString_(JavaLangDouble_toStringWithDouble_(value)));
}

OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue *OrgOssPdfreporterUsesComEclipsesourceJsonJson_valueWithNSString_(NSString *string) {
  OrgOssPdfreporterUsesComEclipsesourceJsonJson_initialize();
  return string == nil ? OrgOssPdfreporterUsesComEclipsesourceJsonJson_NULL : new_OrgOssPdfreporterUsesComEclipsesourceJsonJsonString_initWithNSString_(string);
}

OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue *OrgOssPdfreporterUsesComEclipsesourceJsonJson_valueWithBoolean_(jboolean value) {
  OrgOssPdfreporterUsesComEclipsesourceJsonJson_initialize();
  return value ? OrgOssPdfreporterUsesComEclipsesourceJsonJson_TRUE : OrgOssPdfreporterUsesComEclipsesourceJsonJson_FALSE;
}

OrgOssPdfreporterUsesComEclipsesourceJsonJsonArray *OrgOssPdfreporterUsesComEclipsesourceJsonJson_array() {
  OrgOssPdfreporterUsesComEclipsesourceJsonJson_initialize();
  return new_OrgOssPdfreporterUsesComEclipsesourceJsonJsonArray_init();
}

OrgOssPdfreporterUsesComEclipsesourceJsonJsonArray *OrgOssPdfreporterUsesComEclipsesourceJsonJson_arrayWithIntArray_(IOSIntArray *values) {
  OrgOssPdfreporterUsesComEclipsesourceJsonJson_initialize();
  if (values == nil) {
    @throw new_JavaLangNullPointerException_initWithNSString_(@"values is null");
  }
  OrgOssPdfreporterUsesComEclipsesourceJsonJsonArray *array = new_OrgOssPdfreporterUsesComEclipsesourceJsonJsonArray_init();
  {
    IOSIntArray *a__ = values;
    jint const *b__ = a__->buffer_;
    jint const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jint value = *b__++;
      (void) [array addWithInt:value];
    }
  }
  return array;
}

OrgOssPdfreporterUsesComEclipsesourceJsonJsonArray *OrgOssPdfreporterUsesComEclipsesourceJsonJson_arrayWithLongArray_(IOSLongArray *values) {
  OrgOssPdfreporterUsesComEclipsesourceJsonJson_initialize();
  if (values == nil) {
    @throw new_JavaLangNullPointerException_initWithNSString_(@"values is null");
  }
  OrgOssPdfreporterUsesComEclipsesourceJsonJsonArray *array = new_OrgOssPdfreporterUsesComEclipsesourceJsonJsonArray_init();
  {
    IOSLongArray *a__ = values;
    jlong const *b__ = a__->buffer_;
    jlong const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jlong value = *b__++;
      (void) [array addWithLong:value];
    }
  }
  return array;
}

OrgOssPdfreporterUsesComEclipsesourceJsonJsonArray *OrgOssPdfreporterUsesComEclipsesourceJsonJson_arrayWithFloatArray_(IOSFloatArray *values) {
  OrgOssPdfreporterUsesComEclipsesourceJsonJson_initialize();
  if (values == nil) {
    @throw new_JavaLangNullPointerException_initWithNSString_(@"values is null");
  }
  OrgOssPdfreporterUsesComEclipsesourceJsonJsonArray *array = new_OrgOssPdfreporterUsesComEclipsesourceJsonJsonArray_init();
  {
    IOSFloatArray *a__ = values;
    jfloat const *b__ = a__->buffer_;
    jfloat const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jfloat value = *b__++;
      (void) [array addWithFloat:value];
    }
  }
  return array;
}

OrgOssPdfreporterUsesComEclipsesourceJsonJsonArray *OrgOssPdfreporterUsesComEclipsesourceJsonJson_arrayWithDoubleArray_(IOSDoubleArray *values) {
  OrgOssPdfreporterUsesComEclipsesourceJsonJson_initialize();
  if (values == nil) {
    @throw new_JavaLangNullPointerException_initWithNSString_(@"values is null");
  }
  OrgOssPdfreporterUsesComEclipsesourceJsonJsonArray *array = new_OrgOssPdfreporterUsesComEclipsesourceJsonJsonArray_init();
  {
    IOSDoubleArray *a__ = values;
    jdouble const *b__ = a__->buffer_;
    jdouble const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jdouble value = *b__++;
      (void) [array addWithDouble:value];
    }
  }
  return array;
}

OrgOssPdfreporterUsesComEclipsesourceJsonJsonArray *OrgOssPdfreporterUsesComEclipsesourceJsonJson_arrayWithBooleanArray_(IOSBooleanArray *values) {
  OrgOssPdfreporterUsesComEclipsesourceJsonJson_initialize();
  if (values == nil) {
    @throw new_JavaLangNullPointerException_initWithNSString_(@"values is null");
  }
  OrgOssPdfreporterUsesComEclipsesourceJsonJsonArray *array = new_OrgOssPdfreporterUsesComEclipsesourceJsonJsonArray_init();
  {
    IOSBooleanArray *a__ = values;
    jboolean const *b__ = a__->buffer_;
    jboolean const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jboolean value = *b__++;
      (void) [array addWithBoolean:value];
    }
  }
  return array;
}

OrgOssPdfreporterUsesComEclipsesourceJsonJsonArray *OrgOssPdfreporterUsesComEclipsesourceJsonJson_arrayWithNSStringArray_(IOSObjectArray *strings) {
  OrgOssPdfreporterUsesComEclipsesourceJsonJson_initialize();
  if (strings == nil) {
    @throw new_JavaLangNullPointerException_initWithNSString_(@"values is null");
  }
  OrgOssPdfreporterUsesComEclipsesourceJsonJsonArray *array = new_OrgOssPdfreporterUsesComEclipsesourceJsonJsonArray_init();
  {
    IOSObjectArray *a__ = strings;
    NSString * const *b__ = a__->buffer_;
    NSString * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      NSString *value = *b__++;
      (void) [array addWithNSString:value];
    }
  }
  return array;
}

OrgOssPdfreporterUsesComEclipsesourceJsonJsonObject *OrgOssPdfreporterUsesComEclipsesourceJsonJson_object() {
  OrgOssPdfreporterUsesComEclipsesourceJsonJson_initialize();
  return new_OrgOssPdfreporterUsesComEclipsesourceJsonJsonObject_init();
}

OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue *OrgOssPdfreporterUsesComEclipsesourceJsonJson_parseWithNSString_(NSString *string) {
  OrgOssPdfreporterUsesComEclipsesourceJsonJson_initialize();
  if (string == nil) {
    @throw new_JavaLangNullPointerException_initWithNSString_(@"string is null");
  }
  OrgOssPdfreporterUsesComEclipsesourceJsonJson_DefaultHandler *handler = new_OrgOssPdfreporterUsesComEclipsesourceJsonJson_DefaultHandler_init();
  [new_OrgOssPdfreporterUsesComEclipsesourceJsonJsonParser_initWithOrgOssPdfreporterUsesComEclipsesourceJsonJsonHandler_(handler) parseWithNSString:string];
  return [handler getValue];
}

OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue *OrgOssPdfreporterUsesComEclipsesourceJsonJson_parseWithJavaIoReader_(JavaIoReader *reader) {
  OrgOssPdfreporterUsesComEclipsesourceJsonJson_initialize();
  if (reader == nil) {
    @throw new_JavaLangNullPointerException_initWithNSString_(@"reader is null");
  }
  OrgOssPdfreporterUsesComEclipsesourceJsonJson_DefaultHandler *handler = new_OrgOssPdfreporterUsesComEclipsesourceJsonJson_DefaultHandler_init();
  [new_OrgOssPdfreporterUsesComEclipsesourceJsonJsonParser_initWithOrgOssPdfreporterUsesComEclipsesourceJsonJsonHandler_(handler) parseWithJavaIoReader:reader];
  return [handler getValue];
}

NSString *OrgOssPdfreporterUsesComEclipsesourceJsonJson_cutOffPointZeroWithNSString_(NSString *string) {
  OrgOssPdfreporterUsesComEclipsesourceJsonJson_initialize();
  if ([((NSString *) nil_chk(string)) hasSuffix:@".0"]) {
    return [string substring:0 endIndex:((jint) [string length]) - 2];
  }
  return string;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterUsesComEclipsesourceJsonJson)

@implementation OrgOssPdfreporterUsesComEclipsesourceJsonJson_DefaultHandler

- (OrgOssPdfreporterUsesComEclipsesourceJsonJsonArray *)startArray {
  return new_OrgOssPdfreporterUsesComEclipsesourceJsonJsonArray_init();
}

- (OrgOssPdfreporterUsesComEclipsesourceJsonJsonObject *)startObject {
  return new_OrgOssPdfreporterUsesComEclipsesourceJsonJsonObject_init();
}

- (void)endNull {
  value_ = JreLoadStatic(OrgOssPdfreporterUsesComEclipsesourceJsonJson, NULL);
}

- (void)endBooleanWithBoolean:(jboolean)bool_ {
  value_ = bool_ ? JreLoadStatic(OrgOssPdfreporterUsesComEclipsesourceJsonJson, TRUE) : JreLoadStatic(OrgOssPdfreporterUsesComEclipsesourceJsonJson, FALSE);
}

- (void)endStringWithNSString:(NSString *)string {
  value_ = new_OrgOssPdfreporterUsesComEclipsesourceJsonJsonString_initWithNSString_(string);
}

- (void)endNumberWithNSString:(NSString *)string {
  value_ = new_OrgOssPdfreporterUsesComEclipsesourceJsonJsonNumber_initWithNSString_(string);
}

- (void)endArrayWithId:(OrgOssPdfreporterUsesComEclipsesourceJsonJsonArray *)array {
  value_ = array;
}

- (void)endObjectWithId:(OrgOssPdfreporterUsesComEclipsesourceJsonJsonObject *)object {
  value_ = object;
}

- (void)endArrayValueWithId:(OrgOssPdfreporterUsesComEclipsesourceJsonJsonArray *)array {
  (void) [((OrgOssPdfreporterUsesComEclipsesourceJsonJsonArray *) nil_chk(array)) addWithOrgOssPdfreporterUsesComEclipsesourceJsonJsonValue:value_];
}

- (void)endObjectValueWithId:(OrgOssPdfreporterUsesComEclipsesourceJsonJsonObject *)object
                withNSString:(NSString *)name {
  (void) [((OrgOssPdfreporterUsesComEclipsesourceJsonJsonObject *) nil_chk(object)) addWithNSString:name withOrgOssPdfreporterUsesComEclipsesourceJsonJsonValue:value_];
}

- (OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue *)getValue {
  return value_;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterUsesComEclipsesourceJsonJson_DefaultHandler_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "startArray", NULL, "Lorg.oss.pdfreporter.uses.com.eclipsesource.json.JsonArray;", 0x1, NULL, "()Lorg/oss/pdfreporter/uses/com/eclipsesource/json/JsonArray;" },
    { "startObject", NULL, "Lorg.oss.pdfreporter.uses.com.eclipsesource.json.JsonObject;", 0x1, NULL, "()Lorg/oss/pdfreporter/uses/com/eclipsesource/json/JsonObject;" },
    { "endNull", NULL, "V", 0x1, NULL, NULL },
    { "endBooleanWithBoolean:", "endBoolean", "V", 0x1, NULL, NULL },
    { "endStringWithNSString:", "endString", "V", 0x1, NULL, NULL },
    { "endNumberWithNSString:", "endNumber", "V", 0x1, NULL, NULL },
    { "endArrayWithId:", "endArray", "V", 0x1, NULL, "(Lorg/oss/pdfreporter/uses/com/eclipsesource/json/JsonArray;)V" },
    { "endObjectWithId:", "endObject", "V", 0x1, NULL, "(Lorg/oss/pdfreporter/uses/com/eclipsesource/json/JsonObject;)V" },
    { "endArrayValueWithId:", "endArrayValue", "V", 0x1, NULL, "(Lorg/oss/pdfreporter/uses/com/eclipsesource/json/JsonArray;)V" },
    { "endObjectValueWithId:withNSString:", "endObjectValue", "V", 0x1, NULL, "(Lorg/oss/pdfreporter/uses/com/eclipsesource/json/JsonObject;Ljava/lang/String;)V" },
    { "getValue", NULL, "Lorg.oss.pdfreporter.uses.com.eclipsesource.json.JsonValue;", 0x0, NULL, NULL },
    { "init", "DefaultHandler", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "value_", NULL, 0x4, "Lorg.oss.pdfreporter.uses.com.eclipsesource.json.JsonValue;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *superclass_type_args[] = {"Lorg.oss.pdfreporter.uses.com.eclipsesource.json.JsonArray;", "Lorg.oss.pdfreporter.uses.com.eclipsesource.json.JsonObject;"};
  static const J2ObjcClassInfo _OrgOssPdfreporterUsesComEclipsesourceJsonJson_DefaultHandler = { 2, "DefaultHandler", "org.oss.pdfreporter.uses.com.eclipsesource.json", "Json", 0x8, 12, methods, 1, fields, 2, superclass_type_args, 0, NULL, NULL, "Lorg/oss/pdfreporter/uses/com/eclipsesource/json/JsonHandler<Lorg/oss/pdfreporter/uses/com/eclipsesource/json/JsonArray;Lorg/oss/pdfreporter/uses/com/eclipsesource/json/JsonObject;>;" };
  return &_OrgOssPdfreporterUsesComEclipsesourceJsonJson_DefaultHandler;
}

@end

void OrgOssPdfreporterUsesComEclipsesourceJsonJson_DefaultHandler_init(OrgOssPdfreporterUsesComEclipsesourceJsonJson_DefaultHandler *self) {
  OrgOssPdfreporterUsesComEclipsesourceJsonJsonHandler_init(self);
}

OrgOssPdfreporterUsesComEclipsesourceJsonJson_DefaultHandler *new_OrgOssPdfreporterUsesComEclipsesourceJsonJson_DefaultHandler_init() {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterUsesComEclipsesourceJsonJson_DefaultHandler, init)
}

OrgOssPdfreporterUsesComEclipsesourceJsonJson_DefaultHandler *create_OrgOssPdfreporterUsesComEclipsesourceJsonJson_DefaultHandler_init() {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterUsesComEclipsesourceJsonJson_DefaultHandler, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterUsesComEclipsesourceJsonJson_DefaultHandler)
