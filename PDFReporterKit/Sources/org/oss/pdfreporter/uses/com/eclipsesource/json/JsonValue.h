//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-extensions/src/org/oss/pdfreporter/uses/com/eclipsesource/json/JsonValue.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue")
#ifdef RESTRICT_OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue
#define INCLUDE_ALL_OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue 0
#else
#define INCLUDE_ALL_OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue 1
#endif
#undef RESTRICT_OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue

#if !defined (OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue_) && (INCLUDE_ALL_OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue || defined(INCLUDE_OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue))
#define OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue_

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class IOSObjectArray;
@class JavaIoReader;
@class JavaIoWriter;
@class OrgOssPdfreporterUsesComEclipsesourceJsonJsonArray;
@class OrgOssPdfreporterUsesComEclipsesourceJsonJsonObject;
@class OrgOssPdfreporterUsesComEclipsesourceJsonJsonWriter;
@class OrgOssPdfreporterUsesComEclipsesourceJsonWriterConfig;

@interface OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue : NSObject < JavaIoSerializable >

+ (OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue *)TRUE_;

+ (OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue *)FALSE_;

+ (OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue *)NULL_;

#pragma mark Public

- (OrgOssPdfreporterUsesComEclipsesourceJsonJsonArray *)asArray;

- (jboolean)asBoolean;

- (jdouble)asDouble;

- (jfloat)asFloat;

- (jint)asInt;

- (jlong)asLong;

- (OrgOssPdfreporterUsesComEclipsesourceJsonJsonObject *)asObject;

- (NSString *)asString;

- (jboolean)isEqual:(id)object;

- (NSUInteger)hash;

- (jboolean)isArray;

- (jboolean)isBoolean;

- (jboolean)isFalse;

- (jboolean)isNull;

- (jboolean)isNumber;

- (jboolean)isObject;

- (jboolean)isString;

- (jboolean)isTrue;

+ (OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue *)readFromWithJavaIoReader:(JavaIoReader *)reader;

+ (OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue *)readFromWithNSString:(NSString *)text;

- (NSString *)description;

- (NSString *)toStringWithOrgOssPdfreporterUsesComEclipsesourceJsonWriterConfig:(OrgOssPdfreporterUsesComEclipsesourceJsonWriterConfig *)config;

+ (OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue *)valueOfWithBoolean:(jboolean)value;

+ (OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue *)valueOfWithDouble:(jdouble)value;

+ (OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue *)valueOfWithFloat:(jfloat)value;

+ (OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue *)valueOfWithInt:(jint)value;

+ (OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue *)valueOfWithLong:(jlong)value;

+ (OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue *)valueOfWithNSString:(NSString *)string;

- (void)writeToWithJavaIoWriter:(JavaIoWriter *)writer;

- (void)writeToWithJavaIoWriter:(JavaIoWriter *)writer
withOrgOssPdfreporterUsesComEclipsesourceJsonWriterConfig:(OrgOssPdfreporterUsesComEclipsesourceJsonWriterConfig *)config;

#pragma mark Package-Private

- (instancetype)init;

- (void)writeWithOrgOssPdfreporterUsesComEclipsesourceJsonJsonWriter:(OrgOssPdfreporterUsesComEclipsesourceJsonJsonWriter *)writer;

@end

J2OBJC_STATIC_INIT(OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue)

inline OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue *OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue_get_TRUE();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue *OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue_TRUE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue, TRUE, OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue *)

inline OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue *OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue_get_FALSE();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue *OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue_FALSE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue, FALSE, OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue *)

inline OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue *OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue_get_NULL();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue *OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue_NULL;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue, NULL, OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue *)

FOUNDATION_EXPORT void OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue_init(OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue *self);

FOUNDATION_EXPORT OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue *OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue_readFromWithJavaIoReader_(JavaIoReader *reader);

FOUNDATION_EXPORT OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue *OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue_readFromWithNSString_(NSString *text);

FOUNDATION_EXPORT OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue *OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue_valueOfWithInt_(jint value);

FOUNDATION_EXPORT OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue *OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue_valueOfWithLong_(jlong value);

FOUNDATION_EXPORT OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue *OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue_valueOfWithFloat_(jfloat value);

FOUNDATION_EXPORT OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue *OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue_valueOfWithDouble_(jdouble value);

FOUNDATION_EXPORT OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue *OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue_valueOfWithNSString_(NSString *string);

FOUNDATION_EXPORT OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue *OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue_valueOfWithBoolean_(jboolean value);

J2OBJC_TYPE_LITERAL_HEADER(OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue")
