//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-extensions/src/org/oss/pdfreporter/uses/com/eclipsesource/json/JsonLiteral.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "org/oss/pdfreporter/uses/com/eclipsesource/json/JsonLiteral.h"
#include "org/oss/pdfreporter/uses/com/eclipsesource/json/JsonValue.h"
#include "org/oss/pdfreporter/uses/com/eclipsesource/json/JsonWriter.h"

@interface OrgOssPdfreporterUsesComEclipsesourceJsonJsonLiteral () {
 @public
  NSString *value_;
  jboolean isNull_;
  jboolean isTrue_;
  jboolean isFalse_;
}

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterUsesComEclipsesourceJsonJsonLiteral, value_, NSString *)

@implementation OrgOssPdfreporterUsesComEclipsesourceJsonJsonLiteral

- (instancetype)initWithNSString:(NSString *)value {
  OrgOssPdfreporterUsesComEclipsesourceJsonJsonLiteral_initWithNSString_(self, value);
  return self;
}

- (void)writeWithOrgOssPdfreporterUsesComEclipsesourceJsonJsonWriter:(OrgOssPdfreporterUsesComEclipsesourceJsonJsonWriter *)writer {
  [((OrgOssPdfreporterUsesComEclipsesourceJsonJsonWriter *) nil_chk(writer)) writeLiteralWithNSString:value_];
}

- (NSString *)description {
  return value_;
}

- (NSUInteger)hash {
  return ((jint) [((NSString *) nil_chk(value_)) hash]);
}

- (jboolean)isNull {
  return isNull_;
}

- (jboolean)isTrue {
  return isTrue_;
}

- (jboolean)isFalse {
  return isFalse_;
}

- (jboolean)isBoolean {
  return isTrue_ || isFalse_;
}

- (jboolean)asBoolean {
  return isNull_ ? [super asBoolean] : isTrue_;
}

- (jboolean)isEqual:(id)object {
  if (self == object) {
    return true;
  }
  if (object == nil) {
    return false;
  }
  if ([self getClass] != (id) [object getClass]) {
    return false;
  }
  OrgOssPdfreporterUsesComEclipsesourceJsonJsonLiteral *other = (OrgOssPdfreporterUsesComEclipsesourceJsonJsonLiteral *) cast_chk(object, [OrgOssPdfreporterUsesComEclipsesourceJsonJsonLiteral class]);
  return [((NSString *) nil_chk(value_)) isEqual:other->value_];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:", "JsonLiteral", NULL, 0x0, NULL, NULL },
    { "writeWithOrgOssPdfreporterUsesComEclipsesourceJsonJsonWriter:", "write", "V", 0x0, "Ljava.io.IOException;", NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
    { "isNull", NULL, "Z", 0x1, NULL, NULL },
    { "isTrue", NULL, "Z", 0x1, NULL, NULL },
    { "isFalse", NULL, "Z", 0x1, NULL, NULL },
    { "isBoolean", NULL, "Z", 0x1, NULL, NULL },
    { "asBoolean", NULL, "Z", 0x1, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "value_", NULL, 0x12, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "isNull_", NULL, 0x12, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "isTrue_", NULL, 0x12, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "isFalse_", NULL, 0x12, "Z", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterUsesComEclipsesourceJsonJsonLiteral = { 2, "JsonLiteral", "org.oss.pdfreporter.uses.com.eclipsesource.json", NULL, 0x0, 10, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterUsesComEclipsesourceJsonJsonLiteral;
}

@end

void OrgOssPdfreporterUsesComEclipsesourceJsonJsonLiteral_initWithNSString_(OrgOssPdfreporterUsesComEclipsesourceJsonJsonLiteral *self, NSString *value) {
  OrgOssPdfreporterUsesComEclipsesourceJsonJsonValue_init(self);
  self->value_ = value;
  self->isNull_ = [@"null" isEqual:value];
  self->isTrue_ = [@"true" isEqual:value];
  self->isFalse_ = [@"false" isEqual:value];
}

OrgOssPdfreporterUsesComEclipsesourceJsonJsonLiteral *new_OrgOssPdfreporterUsesComEclipsesourceJsonJsonLiteral_initWithNSString_(NSString *value) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterUsesComEclipsesourceJsonJsonLiteral, initWithNSString_, value)
}

OrgOssPdfreporterUsesComEclipsesourceJsonJsonLiteral *create_OrgOssPdfreporterUsesComEclipsesourceJsonJsonLiteral_initWithNSString_(NSString *value) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterUsesComEclipsesourceJsonJsonLiteral, initWithNSString_, value)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterUsesComEclipsesourceJsonJsonLiteral)
