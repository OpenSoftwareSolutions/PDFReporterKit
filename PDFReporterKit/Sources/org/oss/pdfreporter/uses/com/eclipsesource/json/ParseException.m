//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-extensions/src/org/oss/pdfreporter/uses/com/eclipsesource/json/ParseException.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Deprecated.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/annotation/Annotation.h"
#include "org/oss/pdfreporter/uses/com/eclipsesource/json/Location.h"
#include "org/oss/pdfreporter/uses/com/eclipsesource/json/ParseException.h"

@interface OrgOssPdfreporterUsesComEclipsesourceJsonParseException () {
 @public
  OrgOssPdfreporterUsesComEclipsesourceJsonLocation *location_;
}

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterUsesComEclipsesourceJsonParseException, location_, OrgOssPdfreporterUsesComEclipsesourceJsonLocation *)

@implementation OrgOssPdfreporterUsesComEclipsesourceJsonParseException

- (instancetype)initWithNSString:(NSString *)message
withOrgOssPdfreporterUsesComEclipsesourceJsonLocation:(OrgOssPdfreporterUsesComEclipsesourceJsonLocation *)location {
  OrgOssPdfreporterUsesComEclipsesourceJsonParseException_initWithNSString_withOrgOssPdfreporterUsesComEclipsesourceJsonLocation_(self, message, location);
  return self;
}

- (OrgOssPdfreporterUsesComEclipsesourceJsonLocation *)getLocation {
  return location_;
}

- (jint)getOffset {
  return ((OrgOssPdfreporterUsesComEclipsesourceJsonLocation *) nil_chk(location_))->offset_;
}

- (jint)getLine {
  return ((OrgOssPdfreporterUsesComEclipsesourceJsonLocation *) nil_chk(location_))->line_;
}

- (jint)getColumn {
  return ((OrgOssPdfreporterUsesComEclipsesourceJsonLocation *) nil_chk(location_))->column_;
}

+ (IOSObjectArray *)__annotations_getOffset {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_getLine {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_getColumn {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withOrgOssPdfreporterUsesComEclipsesourceJsonLocation:", "ParseException", NULL, 0x0, NULL, NULL },
    { "getLocation", NULL, "Lorg.oss.pdfreporter.uses.com.eclipsesource.json.Location;", 0x1, NULL, NULL },
    { "getOffset", NULL, "I", 0x1, NULL, NULL },
    { "getLine", NULL, "I", 0x1, NULL, NULL },
    { "getColumn", NULL, "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "location_", NULL, 0x12, "Lorg.oss.pdfreporter.uses.com.eclipsesource.json.Location;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterUsesComEclipsesourceJsonParseException = { 2, "ParseException", "org.oss.pdfreporter.uses.com.eclipsesource.json", NULL, 0x1, 5, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterUsesComEclipsesourceJsonParseException;
}

@end

void OrgOssPdfreporterUsesComEclipsesourceJsonParseException_initWithNSString_withOrgOssPdfreporterUsesComEclipsesourceJsonLocation_(OrgOssPdfreporterUsesComEclipsesourceJsonParseException *self, NSString *message, OrgOssPdfreporterUsesComEclipsesourceJsonLocation *location) {
  JavaLangRuntimeException_initWithNSString_(self, JreStrcat("$$@", message, @" at ", location));
  self->location_ = location;
}

OrgOssPdfreporterUsesComEclipsesourceJsonParseException *new_OrgOssPdfreporterUsesComEclipsesourceJsonParseException_initWithNSString_withOrgOssPdfreporterUsesComEclipsesourceJsonLocation_(NSString *message, OrgOssPdfreporterUsesComEclipsesourceJsonLocation *location) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterUsesComEclipsesourceJsonParseException, initWithNSString_withOrgOssPdfreporterUsesComEclipsesourceJsonLocation_, message, location)
}

OrgOssPdfreporterUsesComEclipsesourceJsonParseException *create_OrgOssPdfreporterUsesComEclipsesourceJsonParseException_initWithNSString_withOrgOssPdfreporterUsesComEclipsesourceJsonLocation_(NSString *message, OrgOssPdfreporterUsesComEclipsesourceJsonLocation *location) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterUsesComEclipsesourceJsonParseException, initWithNSString_withOrgOssPdfreporterUsesComEclipsesourceJsonLocation_, message, location)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterUsesComEclipsesourceJsonParseException)
