//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-extensions/src/org/oss/pdfreporter/uses/net/sourceforge/jeval/function/FunctionException.java
//

#include "J2ObjC_source.h"
#include "java/lang/Exception.h"
#include "org/oss/pdfreporter/uses/net/sourceforge/jeval/function/FunctionException.h"

inline jlong OrgOssPdfreporterUsesNetSourceforgeJevalFunctionFunctionException_get_serialVersionUID();
#define OrgOssPdfreporterUsesNetSourceforgeJevalFunctionFunctionException_serialVersionUID 4767250768467137620LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgOssPdfreporterUsesNetSourceforgeJevalFunctionFunctionException, serialVersionUID, jlong)

@implementation OrgOssPdfreporterUsesNetSourceforgeJevalFunctionFunctionException

- (instancetype)initWithNSString:(NSString *)message {
  OrgOssPdfreporterUsesNetSourceforgeJevalFunctionFunctionException_initWithNSString_(self, message);
  return self;
}

- (instancetype)initWithJavaLangException:(JavaLangException *)exception {
  OrgOssPdfreporterUsesNetSourceforgeJevalFunctionFunctionException_initWithJavaLangException_(self, exception);
  return self;
}

- (instancetype)initWithNSString:(NSString *)message
           withJavaLangException:(JavaLangException *)exception {
  OrgOssPdfreporterUsesNetSourceforgeJevalFunctionFunctionException_initWithNSString_withJavaLangException_(self, message, exception);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:", "FunctionException", NULL, 0x1, NULL, NULL },
    { "initWithJavaLangException:", "FunctionException", NULL, 0x1, NULL, NULL },
    { "initWithNSString:withJavaLangException:", "FunctionException", NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "serialVersionUID", 0x1a, "J", NULL, NULL, .constantValue.asLong = OrgOssPdfreporterUsesNetSourceforgeJevalFunctionFunctionException_serialVersionUID },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterUsesNetSourceforgeJevalFunctionFunctionException = { 2, "FunctionException", "org.oss.pdfreporter.uses.net.sourceforge.jeval.function", NULL, 0x1, 3, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterUsesNetSourceforgeJevalFunctionFunctionException;
}

@end

void OrgOssPdfreporterUsesNetSourceforgeJevalFunctionFunctionException_initWithNSString_(OrgOssPdfreporterUsesNetSourceforgeJevalFunctionFunctionException *self, NSString *message) {
  JavaLangException_initWithNSString_(self, message);
}

OrgOssPdfreporterUsesNetSourceforgeJevalFunctionFunctionException *new_OrgOssPdfreporterUsesNetSourceforgeJevalFunctionFunctionException_initWithNSString_(NSString *message) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterUsesNetSourceforgeJevalFunctionFunctionException, initWithNSString_, message)
}

OrgOssPdfreporterUsesNetSourceforgeJevalFunctionFunctionException *create_OrgOssPdfreporterUsesNetSourceforgeJevalFunctionFunctionException_initWithNSString_(NSString *message) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterUsesNetSourceforgeJevalFunctionFunctionException, initWithNSString_, message)
}

void OrgOssPdfreporterUsesNetSourceforgeJevalFunctionFunctionException_initWithJavaLangException_(OrgOssPdfreporterUsesNetSourceforgeJevalFunctionFunctionException *self, JavaLangException *exception) {
  JavaLangException_initWithNSException_(self, exception);
}

OrgOssPdfreporterUsesNetSourceforgeJevalFunctionFunctionException *new_OrgOssPdfreporterUsesNetSourceforgeJevalFunctionFunctionException_initWithJavaLangException_(JavaLangException *exception) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterUsesNetSourceforgeJevalFunctionFunctionException, initWithJavaLangException_, exception)
}

OrgOssPdfreporterUsesNetSourceforgeJevalFunctionFunctionException *create_OrgOssPdfreporterUsesNetSourceforgeJevalFunctionFunctionException_initWithJavaLangException_(JavaLangException *exception) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterUsesNetSourceforgeJevalFunctionFunctionException, initWithJavaLangException_, exception)
}

void OrgOssPdfreporterUsesNetSourceforgeJevalFunctionFunctionException_initWithNSString_withJavaLangException_(OrgOssPdfreporterUsesNetSourceforgeJevalFunctionFunctionException *self, NSString *message, JavaLangException *exception) {
  JavaLangException_initWithNSString_withNSException_(self, message, exception);
}

OrgOssPdfreporterUsesNetSourceforgeJevalFunctionFunctionException *new_OrgOssPdfreporterUsesNetSourceforgeJevalFunctionFunctionException_initWithNSString_withJavaLangException_(NSString *message, JavaLangException *exception) {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterUsesNetSourceforgeJevalFunctionFunctionException, initWithNSString_withJavaLangException_, message, exception)
}

OrgOssPdfreporterUsesNetSourceforgeJevalFunctionFunctionException *create_OrgOssPdfreporterUsesNetSourceforgeJevalFunctionFunctionException_initWithNSString_withJavaLangException_(NSString *message, JavaLangException *exception) {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterUsesNetSourceforgeJevalFunctionFunctionException, initWithNSString_withJavaLangException_, message, exception)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterUsesNetSourceforgeJevalFunctionFunctionException)
