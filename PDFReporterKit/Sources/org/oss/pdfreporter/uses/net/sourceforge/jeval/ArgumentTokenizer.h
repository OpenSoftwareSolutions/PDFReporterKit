//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-extensions/src/org/oss/pdfreporter/uses/net/sourceforge/jeval/ArgumentTokenizer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgOssPdfreporterUsesNetSourceforgeJevalArgumentTokenizer")
#ifdef RESTRICT_OrgOssPdfreporterUsesNetSourceforgeJevalArgumentTokenizer
#define INCLUDE_ALL_OrgOssPdfreporterUsesNetSourceforgeJevalArgumentTokenizer 0
#else
#define INCLUDE_ALL_OrgOssPdfreporterUsesNetSourceforgeJevalArgumentTokenizer 1
#endif
#undef RESTRICT_OrgOssPdfreporterUsesNetSourceforgeJevalArgumentTokenizer

#if !defined (OrgOssPdfreporterUsesNetSourceforgeJevalArgumentTokenizer_) && (INCLUDE_ALL_OrgOssPdfreporterUsesNetSourceforgeJevalArgumentTokenizer || defined(INCLUDE_OrgOssPdfreporterUsesNetSourceforgeJevalArgumentTokenizer))
#define OrgOssPdfreporterUsesNetSourceforgeJevalArgumentTokenizer_

#define RESTRICT_JavaUtilEnumeration 1
#define INCLUDE_JavaUtilEnumeration 1
#include "java/util/Enumeration.h"

@interface OrgOssPdfreporterUsesNetSourceforgeJevalArgumentTokenizer : NSObject < JavaUtilEnumeration >

+ (jchar)defaultDelimiter;

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)arguments
                        withChar:(jchar)delimiter;

- (jboolean)hasMoreElements;

- (jboolean)hasMoreTokens;

- (id)nextElement;

- (NSString *)nextToken;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgOssPdfreporterUsesNetSourceforgeJevalArgumentTokenizer)

inline jchar OrgOssPdfreporterUsesNetSourceforgeJevalArgumentTokenizer_get_defaultDelimiter();
#define OrgOssPdfreporterUsesNetSourceforgeJevalArgumentTokenizer_defaultDelimiter ','
J2OBJC_STATIC_FIELD_CONSTANT(OrgOssPdfreporterUsesNetSourceforgeJevalArgumentTokenizer, defaultDelimiter, jchar)

FOUNDATION_EXPORT void OrgOssPdfreporterUsesNetSourceforgeJevalArgumentTokenizer_initWithNSString_withChar_(OrgOssPdfreporterUsesNetSourceforgeJevalArgumentTokenizer *self, NSString *arguments, jchar delimiter);

FOUNDATION_EXPORT OrgOssPdfreporterUsesNetSourceforgeJevalArgumentTokenizer *new_OrgOssPdfreporterUsesNetSourceforgeJevalArgumentTokenizer_initWithNSString_withChar_(NSString *arguments, jchar delimiter) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgOssPdfreporterUsesNetSourceforgeJevalArgumentTokenizer *create_OrgOssPdfreporterUsesNetSourceforgeJevalArgumentTokenizer_initWithNSString_withChar_(NSString *arguments, jchar delimiter);

J2OBJC_TYPE_LITERAL_HEADER(OrgOssPdfreporterUsesNetSourceforgeJevalArgumentTokenizer)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgOssPdfreporterUsesNetSourceforgeJevalArgumentTokenizer")
