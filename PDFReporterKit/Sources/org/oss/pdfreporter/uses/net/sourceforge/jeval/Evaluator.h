//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-extensions/src/org/oss/pdfreporter/uses/net/sourceforge/jeval/Evaluator.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgOssPdfreporterUsesNetSourceforgeJevalEvaluator")
#ifdef RESTRICT_OrgOssPdfreporterUsesNetSourceforgeJevalEvaluator
#define INCLUDE_ALL_OrgOssPdfreporterUsesNetSourceforgeJevalEvaluator 0
#else
#define INCLUDE_ALL_OrgOssPdfreporterUsesNetSourceforgeJevalEvaluator 1
#endif
#undef RESTRICT_OrgOssPdfreporterUsesNetSourceforgeJevalEvaluator

#if !defined (OrgOssPdfreporterUsesNetSourceforgeJevalEvaluator_) && (INCLUDE_ALL_OrgOssPdfreporterUsesNetSourceforgeJevalEvaluator || defined(INCLUDE_OrgOssPdfreporterUsesNetSourceforgeJevalEvaluator))
#define OrgOssPdfreporterUsesNetSourceforgeJevalEvaluator_

@protocol JavaUtilMap;
@protocol OrgOssPdfreporterUsesNetSourceforgeJevalFunctionFunction;
@protocol OrgOssPdfreporterUsesNetSourceforgeJevalVariableResolver;

@interface OrgOssPdfreporterUsesNetSourceforgeJevalEvaluator : NSObject

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithChar:(jchar)quoteCharacter
                 withBoolean:(jboolean)loadMathVariables
                 withBoolean:(jboolean)loadMathFunctions
                 withBoolean:(jboolean)loadStringFunctions
                 withBoolean:(jboolean)processNestedFunctions;

- (void)clearFunctions;

- (void)clearVariables;

- (NSString *)evaluate;

- (NSString *)evaluateWithBoolean:(jboolean)keepQuotes
                      withBoolean:(jboolean)wrapStringFunctionResults;

- (NSString *)evaluateWithNSString:(NSString *)expression;

- (NSString *)evaluateWithNSString:(NSString *)expression
                       withBoolean:(jboolean)keepQuotes
                       withBoolean:(jboolean)wrapStringFunctionResults;

- (jboolean)getBooleanResultWithNSString:(NSString *)expression;

- (id<OrgOssPdfreporterUsesNetSourceforgeJevalFunctionFunction>)getFunctionWithNSString:(NSString *)functionName;

- (id<JavaUtilMap>)getFunctions;

- (jboolean)getLoadMathFunctions;

- (jboolean)getLoadStringFunctions;

- (jdouble)getNumberResultWithNSString:(NSString *)expression;

- (jboolean)getProcessNestedFunctions;

- (jchar)getQuoteCharacter;

- (id<OrgOssPdfreporterUsesNetSourceforgeJevalVariableResolver>)getVariableResolver;

- (id<JavaUtilMap>)getVariables;

- (NSString *)getVariableValueWithNSString:(NSString *)variableName;

- (jboolean)isLoadMathVariables;

- (void)isValidNameWithNSString:(NSString *)name;

- (void)parseWithNSString:(NSString *)expression;

- (void)putFunctionWithOrgOssPdfreporterUsesNetSourceforgeJevalFunctionFunction:(id<OrgOssPdfreporterUsesNetSourceforgeJevalFunctionFunction>)function;

- (void)putVariableWithNSString:(NSString *)variableName
                   withNSString:(NSString *)variableValue;

- (void)removeFunctionWithNSString:(NSString *)functionName;

- (void)removeVaraibleWithNSString:(NSString *)variableName;

- (NSString *)replaceVariablesWithNSString:(NSString *)expression;

- (void)setFunctionsWithJavaUtilMap:(id<JavaUtilMap>)functions;

- (void)setQuoteCharacterWithChar:(jchar)quoteCharacter;

- (void)setVariableResolverWithOrgOssPdfreporterUsesNetSourceforgeJevalVariableResolver:(id<OrgOssPdfreporterUsesNetSourceforgeJevalVariableResolver>)variableResolver;

- (void)setVariablesWithJavaUtilMap:(id<JavaUtilMap>)variables;

#pragma mark Protected

- (jboolean)isExpressionStringWithNSString:(NSString *)expressionString;

- (NSString *)processNestedFunctionsWithNSString:(NSString *)arguments;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgOssPdfreporterUsesNetSourceforgeJevalEvaluator)

FOUNDATION_EXPORT void OrgOssPdfreporterUsesNetSourceforgeJevalEvaluator_init(OrgOssPdfreporterUsesNetSourceforgeJevalEvaluator *self);

FOUNDATION_EXPORT OrgOssPdfreporterUsesNetSourceforgeJevalEvaluator *new_OrgOssPdfreporterUsesNetSourceforgeJevalEvaluator_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgOssPdfreporterUsesNetSourceforgeJevalEvaluator *create_OrgOssPdfreporterUsesNetSourceforgeJevalEvaluator_init();

FOUNDATION_EXPORT void OrgOssPdfreporterUsesNetSourceforgeJevalEvaluator_initWithChar_withBoolean_withBoolean_withBoolean_withBoolean_(OrgOssPdfreporterUsesNetSourceforgeJevalEvaluator *self, jchar quoteCharacter, jboolean loadMathVariables, jboolean loadMathFunctions, jboolean loadStringFunctions, jboolean processNestedFunctions);

FOUNDATION_EXPORT OrgOssPdfreporterUsesNetSourceforgeJevalEvaluator *new_OrgOssPdfreporterUsesNetSourceforgeJevalEvaluator_initWithChar_withBoolean_withBoolean_withBoolean_withBoolean_(jchar quoteCharacter, jboolean loadMathVariables, jboolean loadMathFunctions, jboolean loadStringFunctions, jboolean processNestedFunctions) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgOssPdfreporterUsesNetSourceforgeJevalEvaluator *create_OrgOssPdfreporterUsesNetSourceforgeJevalEvaluator_initWithChar_withBoolean_withBoolean_withBoolean_withBoolean_(jchar quoteCharacter, jboolean loadMathVariables, jboolean loadMathFunctions, jboolean loadStringFunctions, jboolean processNestedFunctions);

J2OBJC_TYPE_LITERAL_HEADER(OrgOssPdfreporterUsesNetSourceforgeJevalEvaluator)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgOssPdfreporterUsesNetSourceforgeJevalEvaluator")
