//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-extensions/src/org/oss/pdfreporter/uses/net/sourceforge/jeval/function/math/MathFunctions.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/util/ArrayList.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "org/oss/pdfreporter/uses/net/sourceforge/jeval/Evaluator.h"
#include "org/oss/pdfreporter/uses/net/sourceforge/jeval/function/Function.h"
#include "org/oss/pdfreporter/uses/net/sourceforge/jeval/function/math/Abs.h"
#include "org/oss/pdfreporter/uses/net/sourceforge/jeval/function/math/Acos.h"
#include "org/oss/pdfreporter/uses/net/sourceforge/jeval/function/math/Asin.h"
#include "org/oss/pdfreporter/uses/net/sourceforge/jeval/function/math/Atan.h"
#include "org/oss/pdfreporter/uses/net/sourceforge/jeval/function/math/Atan2.h"
#include "org/oss/pdfreporter/uses/net/sourceforge/jeval/function/math/Ceil.h"
#include "org/oss/pdfreporter/uses/net/sourceforge/jeval/function/math/Cos.h"
#include "org/oss/pdfreporter/uses/net/sourceforge/jeval/function/math/Exp.h"
#include "org/oss/pdfreporter/uses/net/sourceforge/jeval/function/math/Floor.h"
#include "org/oss/pdfreporter/uses/net/sourceforge/jeval/function/math/IEEEremainder.h"
#include "org/oss/pdfreporter/uses/net/sourceforge/jeval/function/math/Log.h"
#include "org/oss/pdfreporter/uses/net/sourceforge/jeval/function/math/MathFunctions.h"
#include "org/oss/pdfreporter/uses/net/sourceforge/jeval/function/math/Max.h"
#include "org/oss/pdfreporter/uses/net/sourceforge/jeval/function/math/Min.h"
#include "org/oss/pdfreporter/uses/net/sourceforge/jeval/function/math/Pow.h"
#include "org/oss/pdfreporter/uses/net/sourceforge/jeval/function/math/Random.h"
#include "org/oss/pdfreporter/uses/net/sourceforge/jeval/function/math/Rint.h"
#include "org/oss/pdfreporter/uses/net/sourceforge/jeval/function/math/Round.h"
#include "org/oss/pdfreporter/uses/net/sourceforge/jeval/function/math/Sin.h"
#include "org/oss/pdfreporter/uses/net/sourceforge/jeval/function/math/Sqrt.h"
#include "org/oss/pdfreporter/uses/net/sourceforge/jeval/function/math/Tan.h"
#include "org/oss/pdfreporter/uses/net/sourceforge/jeval/function/math/ToDegrees.h"
#include "org/oss/pdfreporter/uses/net/sourceforge/jeval/function/math/ToRadians.h"

@interface OrgOssPdfreporterUsesNetSourceforgeJevalFunctionMathMathFunctions () {
 @public
  id<JavaUtilList> functions_;
}

@end

J2OBJC_FIELD_SETTER(OrgOssPdfreporterUsesNetSourceforgeJevalFunctionMathMathFunctions, functions_, id<JavaUtilList>)

@implementation OrgOssPdfreporterUsesNetSourceforgeJevalFunctionMathMathFunctions

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgOssPdfreporterUsesNetSourceforgeJevalFunctionMathMathFunctions_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)getName {
  return @"numberFunctions";
}

- (id<JavaUtilList>)getFunctions {
  return functions_;
}

- (void)load__WithOrgOssPdfreporterUsesNetSourceforgeJevalEvaluator:(OrgOssPdfreporterUsesNetSourceforgeJevalEvaluator *)evaluator {
  id<JavaUtilIterator> functionIterator = [((id<JavaUtilList>) nil_chk(functions_)) iterator];
  while ([((id<JavaUtilIterator>) nil_chk(functionIterator)) hasNext]) {
    [((OrgOssPdfreporterUsesNetSourceforgeJevalEvaluator *) nil_chk(evaluator)) putFunctionWithOrgOssPdfreporterUsesNetSourceforgeJevalFunctionFunction:(id<OrgOssPdfreporterUsesNetSourceforgeJevalFunctionFunction>) cast_check([functionIterator next], OrgOssPdfreporterUsesNetSourceforgeJevalFunctionFunction_class_())];
  }
}

- (void)unloadWithOrgOssPdfreporterUsesNetSourceforgeJevalEvaluator:(OrgOssPdfreporterUsesNetSourceforgeJevalEvaluator *)evaluator {
  id<JavaUtilIterator> functionIterator = [((id<JavaUtilList>) nil_chk(functions_)) iterator];
  while ([((id<JavaUtilIterator>) nil_chk(functionIterator)) hasNext]) {
    [((OrgOssPdfreporterUsesNetSourceforgeJevalEvaluator *) nil_chk(evaluator)) removeFunctionWithNSString:[((id<OrgOssPdfreporterUsesNetSourceforgeJevalFunctionFunction>) nil_chk(((id<OrgOssPdfreporterUsesNetSourceforgeJevalFunctionFunction>) cast_check([functionIterator next], OrgOssPdfreporterUsesNetSourceforgeJevalFunctionFunction_class_())))) getName]];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "MathFunctions", NULL, 0x1, NULL, NULL },
    { "getName", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getFunctions", NULL, "Ljava.util.List;", 0x1, NULL, NULL },
    { "load__WithOrgOssPdfreporterUsesNetSourceforgeJevalEvaluator:", "load", "V", 0x1, NULL, NULL },
    { "unloadWithOrgOssPdfreporterUsesNetSourceforgeJevalEvaluator:", "unload", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "functions_", NULL, 0x2, "Ljava.util.List;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgOssPdfreporterUsesNetSourceforgeJevalFunctionMathMathFunctions = { 2, "MathFunctions", "org.oss.pdfreporter.uses.net.sourceforge.jeval.function.math", NULL, 0x1, 5, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgOssPdfreporterUsesNetSourceforgeJevalFunctionMathMathFunctions;
}

@end

void OrgOssPdfreporterUsesNetSourceforgeJevalFunctionMathMathFunctions_init(OrgOssPdfreporterUsesNetSourceforgeJevalFunctionMathMathFunctions *self) {
  NSObject_init(self);
  self->functions_ = new_JavaUtilArrayList_init();
  [self->functions_ addWithId:new_OrgOssPdfreporterUsesNetSourceforgeJevalFunctionMathAbs_init()];
  [((id<JavaUtilList>) nil_chk(self->functions_)) addWithId:new_OrgOssPdfreporterUsesNetSourceforgeJevalFunctionMathAcos_init()];
  [((id<JavaUtilList>) nil_chk(self->functions_)) addWithId:new_OrgOssPdfreporterUsesNetSourceforgeJevalFunctionMathAsin_init()];
  [((id<JavaUtilList>) nil_chk(self->functions_)) addWithId:new_OrgOssPdfreporterUsesNetSourceforgeJevalFunctionMathAtan_init()];
  [((id<JavaUtilList>) nil_chk(self->functions_)) addWithId:new_OrgOssPdfreporterUsesNetSourceforgeJevalFunctionMathAtan2_init()];
  [((id<JavaUtilList>) nil_chk(self->functions_)) addWithId:new_OrgOssPdfreporterUsesNetSourceforgeJevalFunctionMathCeil_init()];
  [((id<JavaUtilList>) nil_chk(self->functions_)) addWithId:new_OrgOssPdfreporterUsesNetSourceforgeJevalFunctionMathCos_init()];
  [((id<JavaUtilList>) nil_chk(self->functions_)) addWithId:new_OrgOssPdfreporterUsesNetSourceforgeJevalFunctionMathExp_init()];
  [((id<JavaUtilList>) nil_chk(self->functions_)) addWithId:new_OrgOssPdfreporterUsesNetSourceforgeJevalFunctionMathFloor_init()];
  [((id<JavaUtilList>) nil_chk(self->functions_)) addWithId:new_OrgOssPdfreporterUsesNetSourceforgeJevalFunctionMathIEEEremainder_init()];
  [((id<JavaUtilList>) nil_chk(self->functions_)) addWithId:new_OrgOssPdfreporterUsesNetSourceforgeJevalFunctionMathLog_init()];
  [((id<JavaUtilList>) nil_chk(self->functions_)) addWithId:new_OrgOssPdfreporterUsesNetSourceforgeJevalFunctionMathMax_init()];
  [((id<JavaUtilList>) nil_chk(self->functions_)) addWithId:new_OrgOssPdfreporterUsesNetSourceforgeJevalFunctionMathMin_init()];
  [((id<JavaUtilList>) nil_chk(self->functions_)) addWithId:new_OrgOssPdfreporterUsesNetSourceforgeJevalFunctionMathPow_init()];
  [((id<JavaUtilList>) nil_chk(self->functions_)) addWithId:new_OrgOssPdfreporterUsesNetSourceforgeJevalFunctionMathRandom_init()];
  [((id<JavaUtilList>) nil_chk(self->functions_)) addWithId:new_OrgOssPdfreporterUsesNetSourceforgeJevalFunctionMathRint_init()];
  [((id<JavaUtilList>) nil_chk(self->functions_)) addWithId:new_OrgOssPdfreporterUsesNetSourceforgeJevalFunctionMathRound_init()];
  [((id<JavaUtilList>) nil_chk(self->functions_)) addWithId:new_OrgOssPdfreporterUsesNetSourceforgeJevalFunctionMathSin_init()];
  [((id<JavaUtilList>) nil_chk(self->functions_)) addWithId:new_OrgOssPdfreporterUsesNetSourceforgeJevalFunctionMathSqrt_init()];
  [((id<JavaUtilList>) nil_chk(self->functions_)) addWithId:new_OrgOssPdfreporterUsesNetSourceforgeJevalFunctionMathTan_init()];
  [((id<JavaUtilList>) nil_chk(self->functions_)) addWithId:new_OrgOssPdfreporterUsesNetSourceforgeJevalFunctionMathToDegrees_init()];
  [((id<JavaUtilList>) nil_chk(self->functions_)) addWithId:new_OrgOssPdfreporterUsesNetSourceforgeJevalFunctionMathToRadians_init()];
}

OrgOssPdfreporterUsesNetSourceforgeJevalFunctionMathMathFunctions *new_OrgOssPdfreporterUsesNetSourceforgeJevalFunctionMathMathFunctions_init() {
  J2OBJC_NEW_IMPL(OrgOssPdfreporterUsesNetSourceforgeJevalFunctionMathMathFunctions, init)
}

OrgOssPdfreporterUsesNetSourceforgeJevalFunctionMathMathFunctions *create_OrgOssPdfreporterUsesNetSourceforgeJevalFunctionMathMathFunctions_init() {
  J2OBJC_CREATE_IMPL(OrgOssPdfreporterUsesNetSourceforgeJevalFunctionMathMathFunctions, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgOssPdfreporterUsesNetSourceforgeJevalFunctionMathMathFunctions)
