//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../pdfreporter-core/src/org/w3c/tools/codec/Base64Encoder.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/ByteArrayInputStream.h"
#include "java/io/ByteArrayOutputStream.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/io/OutputStream.h"
#include "java/io/UnsupportedEncodingException.h"
#include "java/lang/RuntimeException.h"
#include "org/w3c/tools/codec/Base64Encoder.h"

@interface OrgW3cToolsCodecBase64Encoder ()

- (jint)get1WithByteArray:(IOSByteArray *)buf
                  withInt:(jint)off;

- (jint)get2WithByteArray:(IOSByteArray *)buf
                  withInt:(jint)off;

- (jint)get3WithByteArray:(IOSByteArray *)buf
                  withInt:(jint)off;

+ (jint)get4WithByteArray:(IOSByteArray *)buf
                  withInt:(jint)off;

@end

inline jint OrgW3cToolsCodecBase64Encoder_get_BUFFER_SIZE();
#define OrgW3cToolsCodecBase64Encoder_BUFFER_SIZE 1024
J2OBJC_STATIC_FIELD_CONSTANT(OrgW3cToolsCodecBase64Encoder, BUFFER_SIZE, jint)

inline IOSByteArray *OrgW3cToolsCodecBase64Encoder_get_encoding();
inline IOSByteArray *OrgW3cToolsCodecBase64Encoder_set_encoding(IOSByteArray *value);
static IOSByteArray *OrgW3cToolsCodecBase64Encoder_encoding;
J2OBJC_STATIC_FIELD_OBJ(OrgW3cToolsCodecBase64Encoder, encoding, IOSByteArray *)

__attribute__((unused)) static jint OrgW3cToolsCodecBase64Encoder_get1WithByteArray_withInt_(OrgW3cToolsCodecBase64Encoder *self, IOSByteArray *buf, jint off);

__attribute__((unused)) static jint OrgW3cToolsCodecBase64Encoder_get2WithByteArray_withInt_(OrgW3cToolsCodecBase64Encoder *self, IOSByteArray *buf, jint off);

__attribute__((unused)) static jint OrgW3cToolsCodecBase64Encoder_get3WithByteArray_withInt_(OrgW3cToolsCodecBase64Encoder *self, IOSByteArray *buf, jint off);

__attribute__((unused)) static jint OrgW3cToolsCodecBase64Encoder_get4WithByteArray_withInt_(IOSByteArray *buf, jint off);

J2OBJC_INITIALIZED_DEFN(OrgW3cToolsCodecBase64Encoder)

@implementation OrgW3cToolsCodecBase64Encoder

- (jint)get1WithByteArray:(IOSByteArray *)buf
                  withInt:(jint)off {
  return OrgW3cToolsCodecBase64Encoder_get1WithByteArray_withInt_(self, buf, off);
}

- (jint)get2WithByteArray:(IOSByteArray *)buf
                  withInt:(jint)off {
  return OrgW3cToolsCodecBase64Encoder_get2WithByteArray_withInt_(self, buf, off);
}

- (jint)get3WithByteArray:(IOSByteArray *)buf
                  withInt:(jint)off {
  return OrgW3cToolsCodecBase64Encoder_get3WithByteArray_withInt_(self, buf, off);
}

+ (jint)get4WithByteArray:(IOSByteArray *)buf
                  withInt:(jint)off {
  return OrgW3cToolsCodecBase64Encoder_get4WithByteArray_withInt_(buf, off);
}

- (void)process {
  IOSByteArray *buffer = [IOSByteArray newArrayWithLength:OrgW3cToolsCodecBase64Encoder_BUFFER_SIZE];
  jint got = -1;
  jint off = 0;
  jint count = 0;
  while ((got = [((JavaIoInputStream *) nil_chk(in_)) readWithByteArray:buffer withInt:off withInt:OrgW3cToolsCodecBase64Encoder_BUFFER_SIZE - off]) > 0) {
    if (got >= 3) {
      got += off;
      off = 0;
      while (off + 3 <= got) {
        jint c1 = OrgW3cToolsCodecBase64Encoder_get1WithByteArray_withInt_(self, buffer, off);
        jint c2 = OrgW3cToolsCodecBase64Encoder_get2WithByteArray_withInt_(self, buffer, off);
        jint c3 = OrgW3cToolsCodecBase64Encoder_get3WithByteArray_withInt_(self, buffer, off);
        jint c4 = OrgW3cToolsCodecBase64Encoder_get4WithByteArray_withInt_(buffer, off);
        switch (count) {
          case 73:
          [((JavaIoOutputStream *) nil_chk(out_)) writeWithInt:IOSByteArray_Get(nil_chk(OrgW3cToolsCodecBase64Encoder_encoding), c1)];
          [((JavaIoOutputStream *) nil_chk(out_)) writeWithInt:IOSByteArray_Get(nil_chk(OrgW3cToolsCodecBase64Encoder_encoding), c2)];
          [((JavaIoOutputStream *) nil_chk(out_)) writeWithInt:IOSByteArray_Get(nil_chk(OrgW3cToolsCodecBase64Encoder_encoding), c3)];
          [((JavaIoOutputStream *) nil_chk(out_)) writeWithInt:0x000a];
          [((JavaIoOutputStream *) nil_chk(out_)) writeWithInt:IOSByteArray_Get(nil_chk(OrgW3cToolsCodecBase64Encoder_encoding), c4)];
          count = 1;
          break;
          case 74:
          [((JavaIoOutputStream *) nil_chk(out_)) writeWithInt:IOSByteArray_Get(nil_chk(OrgW3cToolsCodecBase64Encoder_encoding), c1)];
          [((JavaIoOutputStream *) nil_chk(out_)) writeWithInt:IOSByteArray_Get(nil_chk(OrgW3cToolsCodecBase64Encoder_encoding), c2)];
          [((JavaIoOutputStream *) nil_chk(out_)) writeWithInt:0x000a];
          [((JavaIoOutputStream *) nil_chk(out_)) writeWithInt:IOSByteArray_Get(nil_chk(OrgW3cToolsCodecBase64Encoder_encoding), c3)];
          [((JavaIoOutputStream *) nil_chk(out_)) writeWithInt:IOSByteArray_Get(nil_chk(OrgW3cToolsCodecBase64Encoder_encoding), c4)];
          count = 2;
          break;
          case 75:
          [((JavaIoOutputStream *) nil_chk(out_)) writeWithInt:IOSByteArray_Get(nil_chk(OrgW3cToolsCodecBase64Encoder_encoding), c1)];
          [((JavaIoOutputStream *) nil_chk(out_)) writeWithInt:0x000a];
          [((JavaIoOutputStream *) nil_chk(out_)) writeWithInt:IOSByteArray_Get(nil_chk(OrgW3cToolsCodecBase64Encoder_encoding), c2)];
          [((JavaIoOutputStream *) nil_chk(out_)) writeWithInt:IOSByteArray_Get(nil_chk(OrgW3cToolsCodecBase64Encoder_encoding), c3)];
          [((JavaIoOutputStream *) nil_chk(out_)) writeWithInt:IOSByteArray_Get(nil_chk(OrgW3cToolsCodecBase64Encoder_encoding), c4)];
          count = 3;
          break;
          case 76:
          [((JavaIoOutputStream *) nil_chk(out_)) writeWithInt:0x000a];
          [((JavaIoOutputStream *) nil_chk(out_)) writeWithInt:IOSByteArray_Get(nil_chk(OrgW3cToolsCodecBase64Encoder_encoding), c1)];
          [((JavaIoOutputStream *) nil_chk(out_)) writeWithInt:IOSByteArray_Get(nil_chk(OrgW3cToolsCodecBase64Encoder_encoding), c2)];
          [((JavaIoOutputStream *) nil_chk(out_)) writeWithInt:IOSByteArray_Get(nil_chk(OrgW3cToolsCodecBase64Encoder_encoding), c3)];
          [((JavaIoOutputStream *) nil_chk(out_)) writeWithInt:IOSByteArray_Get(nil_chk(OrgW3cToolsCodecBase64Encoder_encoding), c4)];
          count = 4;
          break;
          default:
          [((JavaIoOutputStream *) nil_chk(out_)) writeWithInt:IOSByteArray_Get(nil_chk(OrgW3cToolsCodecBase64Encoder_encoding), c1)];
          [((JavaIoOutputStream *) nil_chk(out_)) writeWithInt:IOSByteArray_Get(nil_chk(OrgW3cToolsCodecBase64Encoder_encoding), c2)];
          [((JavaIoOutputStream *) nil_chk(out_)) writeWithInt:IOSByteArray_Get(nil_chk(OrgW3cToolsCodecBase64Encoder_encoding), c3)];
          [((JavaIoOutputStream *) nil_chk(out_)) writeWithInt:IOSByteArray_Get(nil_chk(OrgW3cToolsCodecBase64Encoder_encoding), c4)];
          count += 4;
          break;
        }
        off += 3;
      }
      for (jint i = 0; i < 3; i++) {
        *IOSByteArray_GetRef(buffer, i) = (i < got - off) ? IOSByteArray_Get(buffer, off + i) : ((jbyte) 0);
      }
      off = got - off;
    }
    else {
      off += got;
    }
  }
  switch (off) {
    case 1:
    [((JavaIoOutputStream *) nil_chk(out_)) writeWithInt:IOSByteArray_Get(nil_chk(OrgW3cToolsCodecBase64Encoder_encoding), OrgW3cToolsCodecBase64Encoder_get1WithByteArray_withInt_(self, buffer, 0))];
    [((JavaIoOutputStream *) nil_chk(out_)) writeWithInt:IOSByteArray_Get(nil_chk(OrgW3cToolsCodecBase64Encoder_encoding), OrgW3cToolsCodecBase64Encoder_get2WithByteArray_withInt_(self, buffer, 0))];
    [((JavaIoOutputStream *) nil_chk(out_)) writeWithInt:'='];
    [((JavaIoOutputStream *) nil_chk(out_)) writeWithInt:'='];
    break;
    case 2:
    [((JavaIoOutputStream *) nil_chk(out_)) writeWithInt:IOSByteArray_Get(nil_chk(OrgW3cToolsCodecBase64Encoder_encoding), OrgW3cToolsCodecBase64Encoder_get1WithByteArray_withInt_(self, buffer, 0))];
    [((JavaIoOutputStream *) nil_chk(out_)) writeWithInt:IOSByteArray_Get(nil_chk(OrgW3cToolsCodecBase64Encoder_encoding), OrgW3cToolsCodecBase64Encoder_get2WithByteArray_withInt_(self, buffer, 0))];
    [((JavaIoOutputStream *) nil_chk(out_)) writeWithInt:IOSByteArray_Get(nil_chk(OrgW3cToolsCodecBase64Encoder_encoding), OrgW3cToolsCodecBase64Encoder_get3WithByteArray_withInt_(self, buffer, 0))];
    [((JavaIoOutputStream *) nil_chk(out_)) writeWithInt:'='];
  }
  return;
}

- (NSString *)processString {
  if (!stringp_) {
    @throw new_JavaLangRuntimeException_initWithNSString_(JreStrcat("$$", [[self getClass] getName], @"[processString]invalid call (not a String)"));
  }
  @try {
    [self process];
  }
  @catch (JavaIoIOException *e) {
  }
  return [((JavaIoByteArrayOutputStream *) nil_chk(((JavaIoByteArrayOutputStream *) cast_chk(out_, [JavaIoByteArrayOutputStream class])))) description];
}

- (instancetype)initWithNSString:(NSString *)input {
  OrgW3cToolsCodecBase64Encoder_initWithNSString_(self, input);
  return self;
}

- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)inArg
                   withJavaIoOutputStream:(JavaIoOutputStream *)outArg {
  OrgW3cToolsCodecBase64Encoder_initWithJavaIoInputStream_withJavaIoOutputStream_(self, inArg, outArg);
  return self;
}

+ (void)initialize {
  if (self == [OrgW3cToolsCodecBase64Encoder class]) {
    OrgW3cToolsCodecBase64Encoder_encoding = [IOSByteArray newArrayWithBytes:(jbyte[]){ (jbyte) 'A', (jbyte) 'B', (jbyte) 'C', (jbyte) 'D', (jbyte) 'E', (jbyte) 'F', (jbyte) 'G', (jbyte) 'H', (jbyte) 'I', (jbyte) 'J', (jbyte) 'K', (jbyte) 'L', (jbyte) 'M', (jbyte) 'N', (jbyte) 'O', (jbyte) 'P', (jbyte) 'Q', (jbyte) 'R', (jbyte) 'S', (jbyte) 'T', (jbyte) 'U', (jbyte) 'V', (jbyte) 'W', (jbyte) 'X', (jbyte) 'Y', (jbyte) 'Z', (jbyte) 'a', (jbyte) 'b', (jbyte) 'c', (jbyte) 'd', (jbyte) 'e', (jbyte) 'f', (jbyte) 'g', (jbyte) 'h', (jbyte) 'i', (jbyte) 'j', (jbyte) 'k', (jbyte) 'l', (jbyte) 'm', (jbyte) 'n', (jbyte) 'o', (jbyte) 'p', (jbyte) 'q', (jbyte) 'r', (jbyte) 's', (jbyte) 't', (jbyte) 'u', (jbyte) 'v', (jbyte) 'w', (jbyte) 'x', (jbyte) 'y', (jbyte) 'z', (jbyte) '0', (jbyte) '1', (jbyte) '2', (jbyte) '3', (jbyte) '4', (jbyte) '5', (jbyte) '6', (jbyte) '7', (jbyte) '8', (jbyte) '9', (jbyte) '+', (jbyte) '/', (jbyte) '=' } count:65];
    J2OBJC_SET_INITIALIZED(OrgW3cToolsCodecBase64Encoder)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "get1WithByteArray:withInt:", "get1", "I", 0x12, NULL, NULL },
    { "get2WithByteArray:withInt:", "get2", "I", 0x12, NULL, NULL },
    { "get3WithByteArray:withInt:", "get3", "I", 0x12, NULL, NULL },
    { "get4WithByteArray:withInt:", "get4", "I", 0x1a, NULL, NULL },
    { "process", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
    { "processString", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "initWithNSString:", "Base64Encoder", NULL, 0x1, NULL, NULL },
    { "initWithJavaIoInputStream:withJavaIoOutputStream:", "Base64Encoder", NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "BUFFER_SIZE", "BUFFER_SIZE", 0x1a, "I", NULL, NULL, .constantValue.asInt = OrgW3cToolsCodecBase64Encoder_BUFFER_SIZE },
    { "encoding", "encoding", 0xa, "[B", &OrgW3cToolsCodecBase64Encoder_encoding, NULL, .constantValue.asLong = 0 },
    { "in_", NULL, 0x0, "Ljava.io.InputStream;", NULL, NULL, .constantValue.asLong = 0 },
    { "out_", NULL, 0x0, "Ljava.io.OutputStream;", NULL, NULL, .constantValue.asLong = 0 },
    { "stringp_", NULL, 0x0, "Z", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _OrgW3cToolsCodecBase64Encoder = { 2, "Base64Encoder", "org.w3c.tools.codec", NULL, 0x1, 8, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_OrgW3cToolsCodecBase64Encoder;
}

@end

jint OrgW3cToolsCodecBase64Encoder_get1WithByteArray_withInt_(OrgW3cToolsCodecBase64Encoder *self, IOSByteArray *buf, jint off) {
  return JreRShift32((IOSByteArray_Get(nil_chk(buf), off) & (jint) 0xfc), 2);
}

jint OrgW3cToolsCodecBase64Encoder_get2WithByteArray_withInt_(OrgW3cToolsCodecBase64Encoder *self, IOSByteArray *buf, jint off) {
  return (JreLShift32((IOSByteArray_Get(nil_chk(buf), off) & (jint) 0x3), 4)) | (JreURShift32((IOSByteArray_Get(buf, off + 1) & (jint) 0xf0), 4));
}

jint OrgW3cToolsCodecBase64Encoder_get3WithByteArray_withInt_(OrgW3cToolsCodecBase64Encoder *self, IOSByteArray *buf, jint off) {
  return (JreLShift32((IOSByteArray_Get(nil_chk(buf), off + 1) & (jint) 0x0f), 2)) | (JreURShift32((IOSByteArray_Get(buf, off + 2) & (jint) 0xc0), 6));
}

jint OrgW3cToolsCodecBase64Encoder_get4WithByteArray_withInt_(IOSByteArray *buf, jint off) {
  OrgW3cToolsCodecBase64Encoder_initialize();
  return IOSByteArray_Get(nil_chk(buf), off + 2) & (jint) 0x3f;
}

void OrgW3cToolsCodecBase64Encoder_initWithNSString_(OrgW3cToolsCodecBase64Encoder *self, NSString *input) {
  NSObject_init(self);
  self->in_ = nil;
  self->out_ = nil;
  self->stringp_ = false;
  IOSByteArray *bytes;
  @try {
    bytes = [((NSString *) nil_chk(input)) getBytesWithCharsetName:@"ISO-8859-1"];
  }
  @catch (JavaIoUnsupportedEncodingException *ex) {
    @throw new_JavaLangRuntimeException_initWithNSString_(JreStrcat("$$", [[self getClass] getName], @"[Constructor] Unable to convertproperly char to bytes"));
  }
  self->stringp_ = true;
  self->in_ = new_JavaIoByteArrayInputStream_initWithByteArray_(bytes);
  self->out_ = new_JavaIoByteArrayOutputStream_init();
}

OrgW3cToolsCodecBase64Encoder *new_OrgW3cToolsCodecBase64Encoder_initWithNSString_(NSString *input) {
  J2OBJC_NEW_IMPL(OrgW3cToolsCodecBase64Encoder, initWithNSString_, input)
}

OrgW3cToolsCodecBase64Encoder *create_OrgW3cToolsCodecBase64Encoder_initWithNSString_(NSString *input) {
  J2OBJC_CREATE_IMPL(OrgW3cToolsCodecBase64Encoder, initWithNSString_, input)
}

void OrgW3cToolsCodecBase64Encoder_initWithJavaIoInputStream_withJavaIoOutputStream_(OrgW3cToolsCodecBase64Encoder *self, JavaIoInputStream *inArg, JavaIoOutputStream *outArg) {
  NSObject_init(self);
  self->in_ = nil;
  self->out_ = nil;
  self->stringp_ = false;
  self->in_ = inArg;
  self->out_ = outArg;
  self->stringp_ = false;
}

OrgW3cToolsCodecBase64Encoder *new_OrgW3cToolsCodecBase64Encoder_initWithJavaIoInputStream_withJavaIoOutputStream_(JavaIoInputStream *inArg, JavaIoOutputStream *outArg) {
  J2OBJC_NEW_IMPL(OrgW3cToolsCodecBase64Encoder, initWithJavaIoInputStream_withJavaIoOutputStream_, inArg, outArg)
}

OrgW3cToolsCodecBase64Encoder *create_OrgW3cToolsCodecBase64Encoder_initWithJavaIoInputStream_withJavaIoOutputStream_(JavaIoInputStream *inArg, JavaIoOutputStream *outArg) {
  J2OBJC_CREATE_IMPL(OrgW3cToolsCodecBase64Encoder, initWithJavaIoInputStream_withJavaIoOutputStream_, inArg, outArg)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgW3cToolsCodecBase64Encoder)
